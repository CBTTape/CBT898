/*--------------------------ooo00 REXX 00ooo--------------------------*/
/* $GETSSID: Get all the requested subsystem names.                   */
/*                                                                    */
/* Get all DB2/MQ subsystems on system from the subsystem table in    */
/* memory and return them to the caller                               */
/*                                                                    */
/* Parameters: (positional)                                           */
/*    sstype - May be 'DB2' or 'MQ' depending on the subsytem names   */
/*             rewired.                                               */
/*    actind - Active indicator. Any non-blank character will only    */
/*             return active subsystems.  (Only valid for DB2 at this */
/*             stage.                                                 */
/*                                                                    */
/* Return:                                                            */
/*    rc=8   - Active SS list requested for 'MQ'.                     */
/*    rc=12  - Invalid "sstype" request.                              */
/*    list   - List of all tyhe susbsystems (or active DB2 SS) found. */
/*                                                                    */
/*--------------------------------------------------------------------*/
Arg ss_type,active
    If Wordpos(ss_type,'DB2 MQ')=0 Then Return 12
    db2ssid='DSN3EPX'                  /* DB2 init program identifier */
    mqssid='CSQ3EPX'                   /* DB2 init program identifier */
    If active/='' & ss_type='MQ' Then Return 8
    If ss_type='MQ' Then target_ssid=mqssid
                                           ;Else target_ssid=db2ssid
    Numeric digits 10
    cvt  =Storage('10',4)
    jesct=Storage(d2x(c2d(cvt)+x2d('128')),4)
    ssct =Storage(d2x(c2d(jesct)+x2d('18')),4)
    ssct =c2d(ssct)
    Parse Value '0' With ss# sslist
    adr@=Address();Address TSO
    #m=Msg('Off')

    Do Forever
        ssu=c2d(Storage(d2x(ssct+20),4))
        ssi=Storage(d2x(ssu+84),20)
        If Word(ssi,1)=target_ssid Then Do
            ssname=Storage(d2x(ssct+8),4)
            If active/='' Then Do
/*--------------------------------------------------------------------*/
/*          Test if DB2 sub-system active                             */
/*--------------------------------------------------------------------*/
                "NEWSTACK";Queue 'END';'DSN SYSTEM('ssname')'
                If rc/=0 Then "DELSTACK"
                Else Do;ss#=ss#+1;ss.ss#=ssname; sslist=sslist ssname;End
            End
            Else Do;ss#=ss#+1;ss.ss#=ssname; sslist=sslist ssname;End
        End
        ssct=c2d(Storage(d2x(ssct+4),4))
        If ssct=0 Then Leave
    End
    Call Off Error
    #m=Msg(#m);Address(adr@)
/*--------------------------------------------------------------------*/

    Return sslist
