/* REXX */
$helpme_ver='1.05'
   Address ISPEXEC "CONTROL ERRORS RETURN"
   "ISREDIT MACRO (parm#)"
   If rc=0 Then ima_macro=1;Else ima_macro=0

n_st = mark(2)                              /* Mark next line         */
/*

   `TOD. `CNAME. on `TODAY. (at `TIME.).

   Help_me template copybook....

   You may change the documentation using either user entered or
   system generated values.

   Mechanism used to generate dynamic documentation.
   Variable names:
    'chgchar' - Is the character that will identify a line that is
                eligible for variable substitution processing. The
                first character in each line will be compared with
                this value.
                This character MUST be the in column 1 to indicate
                that variable substitution is to be performed on that
                line.

   Once a line is identified by the chgchar indicator (which will be
   repaced with a space) variable substitution, if applicable, will
   be made for all occurances delimited by a '&' and '.' combination.
   You must have a trailing '.' which will be removed so double up
   if required.
   You may substring your variable by placing brackets between he var
   name and the '.'.
   Note, if you don't follow this syntax, you may get
   the right results by accident rather than design. Eg.
     1.     &TODAY. is todays date.
         -> `TODAY. is todays date.
     2.     &FRED. is undefined variable.
         -> `FRED. is undefined variable.
     3.     &CNAME. &SNAME. is you (with surname not mixed chars)
         -> `CNAME. `SNAME. is you (with surname not mixed chars)
            &CNAME(10). &SNAME(10). padded to 10 characters
         -> `CNAME(10). `SNAME(10). padded to 10 characters
            &CNAME(1)..&SNAME(1).. are your initials
         -> `CNAME(1)..`SNAME(1).. are your initials

*/
n_en = mark(-2)                             /* Mark prev 2 line       */

    If \ima_macro Then Arg parm#
    Parse Upper VAR parm# parm1 1 p12 +2 .
    If Wordpos(parm1,'? /? HELP BR-??')>0 | p12='/H' Then Do
        If ima_macro Then Signal Help_me
        If parm1/='BR-??' | Sysvar(SYSISPF)/='ACTIVE' Then Do
            Parse SOURCE . . xcmd .
            Address TSO "%BR" xcmd "BR-??"
            Exit
        End
        Signal Help_me
    End

No_Help_Requested:
    If ima_macro Then Do
        Address ISREDIT;"(caps)=CAPS";"CAPS=OFF"
        "(dl1,dl2)=DISPLAY_LINES";If dl1>1 Then dl1=dl1+1
    End
    x=nl_h('******************************')
    x=nl_h('****                      ****')
    x=nl_h('**** Processing goes here ****')
    x=nl_h('****                      ****')
    x=nl_h('******************************')
    Exit

Help_me:
    #tr=Trace('o')
    Parse Value Time() With hh ':' 1 time +5
    Select
        When hh<6 Then tod='Hello night-owl'
        When hh<12 Then tod='Good morning'
        When hh<18 Then tod='Good afternoon'
        Otherwise tod='Good evening'
    End
    chgchar='`';cname='there';today=Date('e')
    Signal on Syntax Name error_off_$WHOAMI
    Parse Value $Whoami() With cname sname .
error_off_$WHOAMI: Signal Off Syntax

    If ima_macro Then Do
        Address ISREDIT;"(caps)=CAPS";"CAPS=OFF";a_d=
        "(dl1,dl2)=DISPLAY_LINES";If rc/=0 Then dl1=0
        If \Datatype(dl1,'w') Then "(dl1)=LINE .ZFIRST"
        If dl1=0 Then Do;dl1='.ZFIRST';"LINE_AFTER" dl1"=' '";End
        Else If dl1>1 Then dl1=dl1+1
    End
    Else a_d='*'
    x=nl_h('*'Centre('ooo000OOOO000ooo',70,'-')'*')
    Do i=n_st To n_en
        line=Sourceline(i)
        Do While Index(line,chgchar)>0
            Interpret "Parse VAR line p1 '"chgchar"' var '.' p2"
            If Index(var,'(')>0 Then Do
                Parse VAR var var '(' vl ')'
                If Â¬Datatype(vl,'W') Then vl=Length(var)
                Interpret 'line=p1||Substr('var',1,vl)||p2'
            End
            Else Interpret 'line=p1||'var'||p2'
        End
        x=nl_h(a_d||Substr(line,1,70)||a_d)
    End
    x=nl_h('*'Copies('-',70)'*')
    If ima_macro Then Do
        If dl1='.ZFIRST' Then "DELETE .ZFIRST .ZFIRST";"CAPS=(caps)";Address
    End
    Exit

nl_h:Parse Arg n#
    If ima_macro Then "LINE_BEFORE" dl1"=NOTELINE (n#)";Else Say n#;Return 0
Mark: Arg diff;If Datatype(diff)/='NUM' Then diff=1;Return sigl+diff
