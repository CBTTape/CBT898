/*--------------------------ooo00 REXX 00ooo--------------------------*/
/* $JCLDD: Returns the full DD value of JCL from the line number      */
/*         passed.  Will parse both backwards and forwards to build   */
/*         the full value of the DD encompasing the line number.      */
/*         Any "//*" comments will be ignored as will line comments   */*/
/*         be.                                                        */
/*                                                                    */
/* Parameter(s):                                                      */
/*  nnn - Line number.                                                */
/* Returns:                                                           */
/*   //ddname DD ddqualifiers aggragate_comments                      */
/*   8  - Line number or previous ' DD ' not found.                   */
/*  12  - Not an edit session.                                        */
/* Usage:                                                             */
/*   1.   line=$JCLDD(56)                                             */
/*        Parse VAR line '//' dd . jcldef comment                     */
/*                                                                    */
/*   2.   Address ISREDIT "$JCLDD 56"                                 */
/*        If rc=0 Then Do                                             */
/*            Address ISPEXEC "VGET ($jcldd) SHARED"                  */
/*            Parse VAR $jcldd '//' dd . jcldef comment               */
/*        End                                                         */
/*        Else ....                                                   */
/*--------------------------------------------------------------------*/
$JCLDD:$Jcldd_ver='1.01'
    ARG parm#;Address ISPEXEC;"CONTROL ERRORS RETURN"
    If parm#/='' Then Signal byp1
    "ISREDIT MACRO (parm#) NOPROCESS";If rc/=0 Then Signal exit12
byp1:
    Address ISREDIT
    lin#=parm#;If lin#='' Then "(lin#)=LINENUM .ZCSR"
    "(line)=LINE" lin#;If rc/=0 Then Signal exit8
    Do While Word(line,2)/='DD'
        lin#=lin#-1;"(line)=LINE" lin#;If rc/=0 Then Signal exit8
    End
    Parse VAR line line +72
    Parse VAR line w1 w2 w3 cc;linex=w1 w2 w3;linec=cc
    Do While Substr(linex,Length(linex),1)=','
        lin#=lin#+1;"(line)=LINE" lin#;If rc/=0 Then Leave
        Parse VAR line line +72;Parse VAR line w1 w2 cc
        If w1='//*' Then Iterate;If w1='/*' Then Leave
        linex=linex||w2;linec=linec cc
    End
    $jcldd=Space(linex linec)
Exit:Parse source . env .
    If env='FUNCTION' Then Return $jcldd
    Else Address ISPEXEC "VPUT ($jcldd) SHARED"
    Exit
Exit8:$jcldd=8;Signal exit
Exit12:$jcldd=12;Signal exit
