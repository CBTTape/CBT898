/*--------------------------ooo00 REXX 00ooo--------------------------*/
t_st=mark(1) /* Mark Start

   $KMTMAIL: List of all the email recipients that can be contacted
             when building a CICS region (or whatever).

   In the table display you will have the following extra fields
   at the start of those described in the table below:
   Columns are:
    1. Seletion. Valid entries are,
         T - Flag as a receipient (To). Multiple selections are
             permitted. (You can even mark the sender as a recipient.)
         F - Mark as the sender (From). Only the first sender processed
             will be used.
        -F - Unflag as a sender.
        -T - Unflag as a recipient.
    2. Activity indicator.  Will have an F or T (or both) to indicate
       what email action is performed for that addressee.
         F - Indicates he is a sender.
         T - Indicates he is one of the recipients.
   You can make as many selections/unselections as you like. The
   distribution list will be built in the JCL after you hit the [END]
   key/command.

   You can enter CANcel on the command line to bypass JCL generation.

   Parameters (arguments):
    1. List of to addressee (space seperated).
    2. Primary from addressee. Default is value of 'us'.
    3. Description of the process (used in the table display header as a
       reference to who to select).
    4. '/T' to turn trace on.

   The table comprises of 3 columns (note the ' : ' seperation required
   for parsing).  Columns are:
    1. Addresse (try to keep word 1 unique or suggest '_' seperator).
    2. Location. CSC will take preference over others's if there is a
       match on addressee's word 1). '-1' indicates it is a '1 member
       group' list (individual) and should be avoided.
    3. Email address (external).

                             *****
*----------------------------------------------------------------------*
*/; t_en=mark(-2)                           /* Mark End               */
$KMTMAIL:$kmtmail_ver='1.02'
    Address ISPEXEC;"CONTROL ERRORS RETURN";ima_macro=0
    Parse Arg tem,fem,zustdsc,tr;If tem/='' Then Signal byp1
    "ISREDIT MACRO (tem) NOPROCESS";If rc=0 Then ima_macro=1

byp1:
/*  "CONTROL ERRORS CANCEL"                                           */

ini1:
    If tem='??' Then Signal Help_me
    If tr='/T' Then Trace r
    n_st=mark(2)                            /* Mark Start             */
/*
* Use '*' as first word for doco comments.
* Grout/Name           Location  Email
* ------------------   --------  ---------------------------------------
  Alex_at_home       : CSC-1   : alexkara@netspace.net.au
  Alex_Kara          : CSC     : akara@csc.com
  Sergio_Atomat      : CSC-1   : spottumati@csc.com
  Automation_Group   : CSC     : AUST_Automation_Mainframe@csc.com
  Brian_Walker       : Kmart-1 : Brian.Walker@kmart.com.au
  CICS_Alex_Kara     : CSC-1   : akara@csc.com
  CICS_Support_Group : CSC     : dss_nsw@csc.com
  David_Watkins      : CSC-1   : dwatkins2@csc.com
  Frank_Arigo        : CSC-1   : farrigo@csc.com.au
  Kmart_Merchandise  : Kmart   : kmartitmerchandise@kmart.com.au
  Kmart_Supply       : Kmart   : kmartitlocalsupplychainsystems@kmart.com.au
  MVS_Group          : CSC     : oss_melb@csc.com.au
* David_Watkins' Group:-
  Networks_Group     : CSC     : aust_swnet@csc.com
  Operations_Group   : CSC     : shiftman@csc.com
* Ute_Eremin's Group (Resource Engineering Team)
  Perfornace_Group   : CSC     : sysperf@csc.com
  Raff_Panza         : CSC-1   : rpanza@csc.com.au
* Raff_Panza's Group:
  System_Change_S/W  : CSC     : aust_satm@csc
  Security_Group     : CSC     : austss@csc.com
  Security_Group_K   : Kmart   : kmartit.securityservices@kmart.com.au
* Rekha currently managing new SC requests:
  ServiceCentre      : Kmart   : Rekha.vase@kmart.com.au
  Storage_Group      : CSC     : AUST_Storage@csc.com
  Ute_Eremin         : CSC-1   : ueremin@csc.com.au

*/; n_en=mark(-2)                           /* Mark End               */
$KMTMAIL:ver='1.01'
    Parse SOURCE . . xcmd .
    table=xcmd;tbdispl=Strip(Substr(xcmd,1,7)'P')
    Parse Value 'CICS_Support 0' With us r_code what temlist femlist
    uc='ABCDEFGHIJKLMNOPQRSTUVWXYZ';lc='abcdefghijklmnopqrstuvwxyz'
    If tem='' Then tem=us

    "TBCREATE &TABLE KEYS(EMAIL NAME LOCATION) NAMES(WHAT)",
         "REPLACE NOWRITE"
    zedlmsg='"'name'" has automatically been added to the from list.',
            'Make your "F" or "T" selections and hit youe [END] key',
            'to process your dist-list or "CANcel" to abandon processing.'
    Do i=n_st To n_en
        Parse Value Space(Sourceline(i)) With name ' : ' location ' : ' email,
                    1 w1 .
        If w1='*' Then Iterate
        what=
        If Wordpos(Translate(name,uc,lc),fem)>0 Then Do
            what=what'F'
            femlist=femlist'/'name'/'location'/'email
        End
        If Wordpos(Translate(name,uc,lc),tem)>0 Then Do
            what=what'T'
            temlist=temlist'/'name'/'location'/'email
        End
        "TBMOD &TABLE"
    End
    "TBSORT &TABLE FIELDS(NAME)";"TBTOP &TABLE"

    headline='Email Distribution List'
    If zustdsc/='' Then headline=headline||zustdsc
Scr1:Parse Value ' ' With zcmd sel
    If Build_panel/='Y' Then Do;x=Build_panel();Build_panel='Y';End
    "TBDISPL &TABLE PANEL(&TBDISPL)";If rc=8 Then Signal exi1
    If Substr(zcmd,1,3)='CAN' Then Signal exi8
    If zcmd='?' Then Do
        x=BR('%'xcmd '??');Signal scr1
    End

    msub=ztdsels;Signal con2
mus2:"TBDISPL &TABLE"

con2:"CONTROL DISPLAY SAVE"
    Select
        When sel='T' Then Do
            If Index(temlist,name'/'location'/'email)=0 Then Do
                temlist=temlist'/'name'/'location'/'email;what=what||'T'
            End
        End
        When sel='-T' Then Do
            what=$Cstring(what,'T',,,,'NULL')
            temlist=$Cstring(temlist,'/'name'/'location'/'email,,,,'NULL')
        End
        When sel='F' Then Do
            If Index(femlist,name'/'location'/'email)=0 Then Do
                femlist=femlist'/'name'/'location'/'email;what=what||'F'
            End
        End
        When sel='-F' Then Do
            what=$Cstring(what,'F',,,,'NULL')
            femlist=$Cstring(femlist,'/'name'/'location'/'email,,,,'NULL')
        End
        Otherwise Nop
    End
    "TBMOD &TABLE"


gnx2:"CONTROL DISPLAY RESTORE"
    msub=msub-1
    If msub<1 Then Do
        zedlmsg="Senders and receivers may be removed using '-T' or",
                "'-F' selections. Hit your [END] key to process your",
                'dist-list or "CANcel" to abandon processing.'
        "SETMSG MSG(ISRZ001)"
        "TBTOP &TABLE"
        Signal scr1
    End;Else Signal mus2

exi8:r_code=8
exi1:
    "TBEND &TABLE"
    If femlist='' Then Do
        Parse Value Space(us) With name ' : ' location ' : ' email
        femlist=name'/'location'/'email
    End;Else femlist=Strip(femlist,,'/')
    temlist=Strip(temlist,,'/')
    "VPUT (femlist,temlist) SHARED"
    If Build_panel='Y' Then Do
        "LIBDEF ISPSLIB";"LIBDEF ISPMLIB";"LIBDEF ISPPLIB"
        m#=Msg('Off');Address TSO "DELETE '"dsnfx"'"
    End
    Return r_code

Mark:Arg diff;If \Datatype(diff,'W') Then diff=1;Return sigl+diff

/*--------------------------------------------------------------------*/
/* Create panel(s) from sourcelines between the '/* */'               */
/*--------------------------------------------------------------------*/
build_panel:
    u=Userid();p=Sysvar(syspref);If u/=p&p/='' Then u=p'.'u;hlq0=u
    lab=0;dd='TP'Time('s');dsnfx=hlq0'.$$$TEMP.'dd
    #msg=Msg('Off')
    Address TSO
    "DELETE '"dsnfx"'"
    "ALLOC DA('"dsnfx"') NEW CATALOG TRACK SPACE(1,1) DSORG(PO)",
       "LRECL(80) BLKSIZE(0) UNIT(SYSDA) DIR(1) RECFM(F B) REU"
    "FREE DA('"dsnfx"')"
    members=Strip(Substr(xcmd,1,7)'P')
    Do While members/=''
        Parse VAR members memb members
        #tr=Trace('o')
        lab=lab+1;Interpret "Call make_mem_"lab
        "NEWSTACK"
        Do i=n_st To n_en;Queue Sourceline(i);End;Queue ''
        x=Trace(#tr)
        "ALLOC F("dd") DA('"dsnfx"("memb")') SHR REU"
        "EXECIO * DISKW "dd" (FINIS"
        If rc/=0 Then Do
           Say "Error outputing to datadset '"dsnfx"("memb")', rc="rc"."
           Exit
        End
    End
    Address
    "LIBDEF ISPPLIB DATASET ID('&dsnfx') STACK"
    "LIBDEF ISPSLIB DATASET ID('&dsnfx') STACK"
    "LIBDEF ISPMLIB DATASET ID('&dsnfx') STACK"
    x=Msg(#msg)
    Return 0

/*--------------------------------------------------------------------*/
/* Create help panel(s) from sourcelines between the '/* */'          */
/*--------------------------------------------------------------------*/
make_mem_1:n_st = mark(2)
/*
)ATTR
 _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) HILITE(USCORE)
 @ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
 ` TYPE(TEXT) INTENS(LOW) COLOR(TURQ) HILITE(USCORE)
 # TYPE(OUTPUT) SKIP(ON) INTENS(LOW)
 $ TYPE(OUTPUT) INTENS(HIGH) COLOR(WHITE)
)BODY EXPAND(\\)
@&HEADLINE
%&SID ===>_ZCMD                                               %Scroll ===>_AMT +
+Enter@T+against ALL desired recipients. Enter@F+to dob someone else in.
`Sel`What`Name              `Location `eMail                                   +
)MODEL
_Z  $WHAT#NAME              #LOCATION #EMAIL
)INIT
  &SID = &ZSYSID
  .ZVARS = '(SEL)'
  &XAMT = TRANS(TRUNC(&AMT,1) H,HALF P,PAGE C,CSR D,DATA *,*)
  IF (&XAMT = HALF,PAGE,CSR,DATA) &AMT = &XAMT
)PROC
  &XAMT = TRANS(TRUNC(&AMT,1) H,HALF P,PAGE C,CSR D,DATA *,*)
  IF (&XAMT = HALF,PAGE,CSR,DATA) &AMT = &XAMT
  VER (&SEL,LIST,F,T,-F,-T)
)END
*/
n_en=mark(-2);Return 0

/*--------------------------------------------------------------------*/
/* Self extracting tutorial.                                          */
/*--------------------------------------------------------------------*/
Help_me:
    chgchar='&';cname='there'
    Signal on Syntax Name error_off_1
    Parse Value $Whoami() With cname sname  /* Toggle as per format   */
error_off_1: Signal Off Syntax
    Do i=t_st To t_en
        line=Sourceline(i)
        Do While Index(line,chgchar)>0
            Interpret "Parse VAR line p1 '"chgchar"' var '.' p2"
            If Index(var,'(')>0 Then Do
                Parse VAR var var '(' vl ')'
                If ¬Datatype(vl,'W') Then vl=Length(var)
                Interpret 'line=p1||Substr('var',1,vl)||p2'
            End
            Else Interpret 'line=p1||'var'||p2'
        End
        Say Substr(line,1,79)
    End
    Exit

/*--------------------------ooo00 REXX 00ooo--------------------------*/
/* Sample use of this routine.                                        */
/*--------------------------------------------------------------------*/
    xx=$KMTMAIL(,'CICS_Support_Group')
    Address ISPEXEC "VGET (femlist,temlist) SHARED"

    pref='To:  '
    Do While temlist/=''
        Parse VAR temlist name '/' location '/' email '/' temlist
        Say pref email;pref='     '
    End
    pref='From:'
    Do While femlist/=''
        Parse VAR femlist name '/' location '/' email '/' femlist
        Say pref email;pref='     '
    End

