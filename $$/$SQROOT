/*--------------------------ooo00 REXX 00ooo--------------------------*/
/*  $SQROOT:                                                          */
/*                                                                    */
/*  Routine to return the square root of the number passed to it.     */
/*  If the number provided is not numeric (decimals are accepted),    */
/*  zero (0) is returned.                                             */
/*                                                                    */
/*  You may pass a second positional parameter (comma seperated) for  */
/*  the number of decimal points to calculate to. (Default is the     */
/*  number of decimal places of input number.)                        */
/*  Any comma punctuations will be automatically removed.             */
/*                                                                    */
/*    eq. sqroot=$sqroot(1684,4)       <- explicit 4 decimal points   */
/*        sqroot=$sqroot(1684.0000)    <- implicit 4 decimal points   */
/*        sqroot=$sqroot(168.4)        <- implicit 1 decimal points   */
/*                                                                    */
/*--------------------------------------------------------------------*/
$sqroot:sqr_ver='1.01'
    Arg square,precision,trace
    If trace/='' Then Trace r
    Numeric Digits 30
    If precision='' Then Parse VAR square square ',' precision ',' Trace
    If Index(square,',')>0 Then square=Space(Translate(square,'',','),0)
    If Datatype(square)/='NUM' Then Return 0
    Parse Var square dig '.' dec
    If precision='' Then precision=Length(dec)

    xxx=Reverse(dig);dig=
    Do While xxx/=''
        Parse Var xxx w1 +2 xxx
        dig=dig w1
    End
    dig=Space(Reverse(dig))
    If precision>0 & Datatype(precision,'w') Then Do
        xxx=dec||Copies('00',precision);dec=
        Do precision
            Parse Var xxx w1 +2 xxx
            dec=dec w1
        End
    End
    square=Space(dig dec)
    sqroot=;w0=;decpt=Words(dig)
    Parse VAR square w1 square
    Do i=1 To 10
        xx=i**2
        If xx>w1 Then Do;d1=i-1;Leave;End
    End
    sqroot=sqroot || d1
    w1=w1-d1**2
    If w1=0 & square='' Then Signal got_sqroot
    Do j=1 To Words(square)
        w2=Word(square,j)
        w0=w1 || W2
        trial_div=sqroot*20
        Do i=1 To 10
            If (trial_div+i)*i >w0 Then Do;d1=i-1;Leave;End
        End
        sqroot=sqroot || d1
        w1=w0-(trial_div+d1)*d1
        If w1=0 & square='' Then Signal got_sqroot
    End
got_sqroot:
    If Length(sqroot)>decpt Then sqroot=Insert('.',sqroot,decpt)
    Return sqroot
