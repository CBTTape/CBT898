/*------------------------------ REXX --------------------------------*/
/* $WORDAT:                                                           */
/* -------                                                            */
/* Returns the words in a string that falls on a particular character */
/* posistion.  If the character at the position is blank, the next    */
/* word is taken.  Can pass parameter of L(eading) or T(railing) to   */
/* split the string on the word and return the lead or tail part of   */
/* the string (can be either case).                                   */
/*                                                                    */
/* Parameters (positional):                                           */
/*   1. Source string.                                                */
/*   2. Colunm to locate.                                             */
/*   3. Return data indicator:                                        */
/*       L - Lead. Text before the word including leading/trailing    */
/*           spaces.                                                  */
/*       T - Trail. Text including and following the word including   */
/*           trailing spaces.                                         */
/*       # - Return the word number of the word at requested          */
/*           position.                                                */
/*       W - Return the word.  (Any value other than those defined    */
/*           above - default.)                                        */
/*                                                                    */
/* Notes:                                                             */
/*   Leading will EXCLUDE the word.                                   */
/*   Trailing will INCLUDE the word.                                  */
/*--------------------------------------------------------------------*/
$Wordat:$Wordat_ver='1.04'
    Parse Arg i_strg,s_col,r_split
    If s_col<1 Then s_col=1
    If Length(i_strg)<s_col Then i_strg=i_strg' '
    #i_i=Lastpos(' ',i_strg,s_col);r_split=Translate(r_split)
    If #i_i=0 Then #i_i=1
    Select
/*      When r_split='L' Then Return Substr(i_strg,1,#i_i-1)          */
        When r_split='L' Then Do
            If #i_i=Length(i_strg) Then suff=;Else suff=' '
            Return Substr(i_strg,1,#i_i-1)suff
        End
        When r_split='T' Then Return Strip(Substr(i_strg,#i_i),'l')
        When r_split='#' Then Return Words(Substr(i_strg,1,#i_i-1))+1
        Otherwise Do
            Parse Value Substr(i_strg,#i_i) With i_strg .
            Return i_strg
        End
    End
