                                 Z  A  P

ENTER VALID COMMAND ABOVE OR ? FOR HELP         VERSION=2.3G 17AUG92
?2

                                 CONTENTS

                 ?1      - THIS SCREEN
                 ?2, ?3  - GENERAL INFO
                 ?4, ?5  - INPUT/OUTPUT COMMANDS
                 ?6      - SESSION CONTROL COMMANDS
                 ?7      - DUMP COMMANDS
                 ?8      - BYTE COMMANDS
                 ?9      - STRING COMMANDS
                 ?10, ?11- MISCELLANEOUS COMMANDS
                 ?12     - EXPLANATION OF SYMBOLS
                 ?13     - SAMPLE ZAP SESSION


                               GENERAL INFO

                 --OPERANDS ARE ENTERED IMMEDIATELY AFTER
                 THE COMMAND, WITH NO INTERVENING BLANKS.
                 --THE BLOCK IS READ INTO A WORK BUFFER,
                 WHERE YOU MODIFY IT.  WHEN YOU ENTER THE
                 "ZAP" COMMAND, THE BLOCK IS WRITTEN BACK
                 TO THE DATASET FROM THE BUFFER.  IF ANY
                 OTHER JOB OR USER HAS UPDATED THAT BLOCK
                 IN BETWEEN WHEN YOU FIRST DISPLAYED IT
                 AND WHEN YOU "ZAPPED" IT, THE OTHER
                 CHANGES WILL BE LOST.


                         GENERAL INFO (CONTINUED)

                 --IF YOU MAKE CHANGES TO A BLOCK, TO GO
                 TO ANOTHER BLOCK YOU MUST EITHER "ZAP"
                 THE BLOCK (RE-WRITE IT TO THE DATASET),
                 OR ENTER THE COMMAND TWICE IN A ROW
                 WHICH WILL CAUSE YOU TO LEAVE THE
                 CURRENT MODIFIED BLOCK.


                          INPUT/OUTPUT COMMANDS

                 P<EXP> - POINT TO REC WHOSE TTR IS <EXP>
                 P      - POINT TO BEGINNING OF DATA SET
                 T<EXP> - POINT TO TRACK <EXP>, RECORD 1
                 T      - POINT TO NEXT TRACK, RECORD 1
                 R<EXP> - SHOW BLK <EXP> REL. TO CURRENT
                 R      - POINT TO NEXT PHYSICAL RECORD
                 B      - POINT TO PREVIOUS RECORD
                 VTOCDS4- POINT TO VTOC FMT4 DSCB
                 LASTDS1- POINT TO LAST FMT1 DSCB IN VTOC
                 ABS<EXP> - POINT TO REC WITH CCHHR = EXP
                 %<EXP> - POINT TO TTR @ LOC <EXP> IN BLK


                        MORE INPUT/OUTPUT COMMANDS

                 LAST   - POINT TO LAST RECORD (DS1LSTAR)
                 M<NAME>- FOR PDS, POINT TO MEMBER <NAME>
                 M      - POINT TO START OF CURRENT MEMBR
                 NAME<N>- AFTER 'M', SHOW ENTRY POINT <N>
                 NAME   - SELECT ENTRY POINT NAMED MEMBER
                 E<N>   - SAME AS NAME<N>
                 E      - SAME AS NAME
                 ZAP    - REPLACE BLOCK FROM CURRENT BUFF


                         SESSION CONTROL COMMANDS

                 LOG      - START LOGGING THIS SESSION
                 CRT      - SET WIDTH 4,4 AND VERBOSE
                 TERSE    - DO NOT DO AUTO WHERE
                 VERBOSE  - ALWAYS GIVE WHERE INFO
                 W<D>,<U> - SET WINDOW DOWN/UP SIZE(S)
                 WFULL    - SET SIZE TO URSA SCREEN SIZE
                 LINE40, LINE80 - SET LINE LENGTH 40 | 80
                 NOTE<COMNT>-WRITE <COMNT> INTO LOG FILE
                 EJECT    - EJECT A PAGE IN THE LOG FILE


                              DUMP COMMANDS

                 DUMP       - DUMP ALL RECORDS IN THE
                              DATA SET IN ABDUMP FORMAT
                 DUMPT<EXP> - DUMP TO TTR <EXP> FROM
                              CURRENT RECORD
                 DUMPT      - DUMP CURRENT RECORD ONLY
                 DUMPF<EXP> - DUMP FOR <EXP> RECORDS FROM
                              CURRENT RECORD
                 DUMPF      - DUMP CURRENT RECORD
                 DUMPE      - DUMP CURRENT RECORD TO EOF

                 EOF, I/O ERROR, AND END-OF-DS HALT DUMP


                              BYTE COMMANDS

                 D<EXP> - DISPLAY BYTE AT OFFSET <EXP>
                 <EXP>  - SAME AS D<EXP>
                 D      - PAGE TO NEXT SCREEN (D+#SCREEN)
                 U      - PAGE TO PREV SCREEN (D-#SCREEN)
                 >      - GO FORWARD IN TRACE TABLE
                 <      - GO BACKWARD IN TRACE TABLE
                 EBCDIC - EBCDIC TRANSLATION (DEFAULT)
                 ASCII  - ASCII-8 TRANSLATION
                 ZCODE  - ZCODE TRANSLATION
                 =<LAB> - DEFINE <LAB> TO CURR LOCATION
                 NODEF  - CLEAR ALL DEFINED LABELS FROM =


                              STRING COMMANDS

                 S<STR>   - STORE <STR> AT CURRENT LOC
                 X<STR>   - EXCLUSIVE OR AT CURRENT LOC
                 O<STR>   - OR AT CURRENT LOC
                 N<STR>   - AND AT CURRENT LOC
                 SET<STR> - SET ENTIRE RECORD TO <STR>
                            S,X,O,N,SET MAY BE ENTERED
                            ALONE TO USE PREVIOUS <STR>
                 L<STR>   - LOOK FOR <STR> FROM NEXT BYTE
                 L        - CONTINUE LOOKING FOR <STR>
                 F<STR>   - LIKE L<STR>, CONT'S PAST EOFS
                 F        - LIKE L, CONTINUES PAST EOFS


                          MISCELLANEOUS COMMANDS

                 END    - EXIT ZAP
                 #<EXP> - FIND HEX/DECIMAL VALUE OF <EXP>
                 FLOAT<F>-FIND FLOATING PT VALUE OF <F>
                 IDEF   - DISPLAY DEFINE LABEL TABLE
                 ITRACE - DISPLAY TRACE TABLE
                 ?N     - VIEW NTH HELP DISPLAY (1-13)
                 WHERE  - GIVE CURRENT LOCATION ETC.
                 ASM<OP> - GIVE OBJECT CODE FOR MNEMONIC
                 DISASM<EXP> - DISASSEMBLE INSTR AT <EXP>


                       MORE MISCELLANEOUS COMMANDS

                 WHATMEM- FIND DIR ENTRY CLOSEST TO REC *
                 WM       - SAME AS WHATMEM
                 DO<CMD>  - EXECUTE TSO <CMD> AS AT READY
                 V<EXP>   - ADD CONTENTS OF 2 BYTES AT
                            <EXP> TO CURR VALUE OF LOC
                 BASE<EXP>- ADD <EXP> TO BUFFER OFFSET
                            WHEN COMPUTING ADDR
                 DISP<TYPE>-SET RECORD DISPLAY START POS
                            <TYPE> IS COUNT | KEY | DATA
                 J<TTR>- RELATIVE TO BEGINING OF VOLUME
                 <EXP> IS COMPOSED OF OPERATORS (+,-,*,/)
                       DEFINE SYMBOLS ('=' COMMAND) AND
                 HEX OR DECIMAL CONSTANTS. THE FOLLOWING
                 SYMBOLS ARE PREDEFINED: *=CURRENT OFFSET
                 L=LOGICAL RECORD LENGTH, K=KEY LENGTH
                 BL=MAXIMUM BLOCK SIZE.
                 <STR> MAY BE EITHER UP TO 16 CHARACTERS
                       ENCLOSED IN ANY DELIMITER, OR UP
                       TO 16 HEX DIGITS, OR A DECIMAL VAL
                       ENDING WITH '.' (LENGTH 4 BYTES)
                 <LAB> MAY ANY 1 TO 8 CHARACTERS
                 <F>   IS ANY FLOATING POINT CONSTANT IN
                       INTERNAL FORM (IE: FORTRAN A FORM)


                            SAMPLE ZAP SESSION

                 ZAP LOAD   READY LEVEL COMMAND ENTERED
                 MTEST      SELECT MEMBER "TEST"
                 EFIRST     SELECT ENTRY POINT "FIRST"
                 4C         GO TO OFFSET 4C IN RECORD
                 S00        STORE 1 BYTE HEX
                 +4         ADVANCE PTR 4 BYTES IN BLOCK
                 NFF0F      TURN OFF 1 NIBBLE
                 ZAP        REWRITE THAT BLOCK
                 R+3        GO TO 3RD BLOCK FROM HERE
                 L/HELLO/   FIND SOME TEXT
                 END        ALL DONE

OFF: 16CF (  5839) ADDR: 016CF (    5839) DSN: SYS3.OLR.CICS.LOADLIB
LEN: 17A0 (  6048) BASE: 00000 (       0) CCHHR: 220D000511 TTR:  009811
