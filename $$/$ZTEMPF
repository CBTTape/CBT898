/*--------------------------ooo00 REXX 00ooo--------------------------*/
/* Use command "$RU $ZTEMPF" ($Routine Upgrade) to update with the    */
/* latest infrastructure copy of $ZTEMPF.   Use command               */
/* "$RU $ZTEMPF ?" to display latest infrastructure version.          */
/*--------------------------------------------------------------------*/
$ztempf:$ztempf_ver='1.10';If Arg(1)='?' Then Return $ztempf_ver
    Parse Upper Arg p#1,p#2,p#3,p#4;If p#4/='' Then Trace r
    Address TSO;temp_limit=30;If p#1='/F' Then temp_limit=999
    Address ISPEXEC "CONTROL ERRORS RETURN"
    If Wordpos(p#2,'/D D')>0 Then Do
        #msg=Msg('Off')
        "DELETE  '"Strip(p#1,,"'")"'"
        If Wordpos(p#3,'/FT FT')>0 Then "FREE F(ISPFILE)"
        x=Msg(#msg)
        Return 0
    End
    pref=Sysvar(Syspref);userid=Userid()
    If pref/=userid Then Do
        If pref/='' Then pref=pref'.'userid;Else pref=userid
    End
    If p#1='/CLEAR' Then Do
        #msg=Msg('Off')
        Do i=1 To temp_limit
            dsname="'"pref".$TEMP"Right(i,3,'0')".TEMP'"
            If Sysdsn(dsname)='OK' Then "DELETE" dsname
        End
        x=Msg(#msg);Return 0
    End
    If Wordpos('/PO',p#1)>0 Then Do
        po_org=1;p#1=Delword(p#1,Wordpos('/PO',p#1),1)
    End;Else po_org=0
    Do i=1 By 1 Until i>temp_limit
        dsname=pref".$TEMP"Right(i,3,'0')'.TEMP'
        If Sysdsn("'"dsname"'")/='OK' Then Leave
    End
    If i>temp_limit Then Return temp_limit
    Signal on Syntax Name error_off_$ALKUVOL
    unit_vol='UNIT(SYSDA)';unit_vol=$alkuvol('$ZTEMPF')
error_off_$ALKUVOL:Signal off Syntax
    If Wordpos('NAME',p#1)>0 | Wordpos('/N',p#1)>0 Then Nop
    Else Do
        If Wordpos(p#2,'/M M')>0 Then Do
            xx=Listdsi("'"p#1"' DIRECTORY")
            If xx<5 | sysreason=9 | sysreason=25 Then Nop;Else Signal def_file
            If sysdsorg='PO' Then po_org=1;Else po_org=0
            Parse VAR sysrecfm rf1 +1 rf2 +1 rf3
            lrecl=syslrecl;blksize=sysblksize
            If sysadirblk='NO_LIM' Then sysadirblk=5
            pri=sysprimary;sec=sysseconds;typ=sysunits;dir=sysadirblk
            If typ='BLOCK' Then typ='BLOCK('pri')'
        End
        Else Do
def_file:   rf1='F';rf2='B';rf3=
            Address ISREDIT "(lrecl)=LRECL";If rc/=0 Then lrecl=80
            blksize=(6200%lrecl)*lrecl;pri=15;sec=15;typ='TRACKS';dir=5
        End
        rfm=Space(rf1 rf2 rf3)
        If po_org Then,
            "ALLOC DS('"dsname"')" typ "SPACE("pri","sec")",
                "DSORG(PO) DIR("dir")",
                "RECFM("rfm") LRECL("lrecl") BLKSIZE("blksize")",
                unit_vol
        Else,
            "ALLOC DS('"dsname"')" typ "SPACE("pri","sec") DSORG(PS)",
                "RECFM("rfm") LRECL("lrecl") BLKSIZE("blksize")",
                unit_vol
        "FREE DS('"dsname"')"
    End
    If Wordpos(p#3,'/FT FT')>0 Then "ALLOC F(ISPFILE) DS('"dsname"') SHR REU"
    Return dsname
/*--------------------------ooo000OOOO000ooo--------------------------*/
/* $ZTEMPF - Routine to create a temporary file with name of:         */
/*    userid.$TEMPunique-suffix.TEMP - attrib PS FB 80/6160           */
/* (Attrib=FB,lrecl,blksize<6200.)                                    */
/* If "unique-suffix" > 30, you have too many temporary datasets      */
/* hanging around and a ruturn code equal to the limit will be set.   */
/* Numeric dsname indicates error - limit reached, eg.                */
/*  ztempf=$ztempf();If Datatype(ztempf,'W') Then Say ztempf 'used'   */
/* If the dataset has been created it's name will be returned. It is  */
/* the responsibility of the calling program to delete the dataset or */
/* copy it before deleting.                                           */
/* Parameters (positional):                                           */
/* 1st:                                                               */
/*   NAME   - Only the unique "dsname" will be returned without       */
/*            creation. (Useful when you want non standard RECFM and  */
/*            SPACE allocation.)                                      */
/*   /CLEAR - Clear all temp datasets.  Only the first 30 will be     */
/*            cleared, however, all the 30 datasets will be cleared.  */
/*            If "/F" was used to permit allocation of additional     */
/*            datasets, they will have to be manually deleted.        */
/*   /F     - Force past limit of 30. With this no need to check      */
/*            numeric return. Sets a max limit of 999 datasets.       */
/*   /N     - Same as "NAME".                                         */
/*   /PO    - Make a DSORG=PO dataset with 5 dir blocks.              */
/*   blank  - Create a unique dataset and return the dataset name     */
/*            (default).                                              */
/*   dsname - If the second parameter is "/D" or "/M". Must be fully  */
/*            qualified. May or may not be quoted.                    */
/* 2nd:                                                               */
/*   D      - Delete file. (Toggles message status during deletion.)  */
/*   M      - Use dsname (first parameter) as model for new one. If   */
/*            model not found, file is allocated with default values. */
/*   /D     - Same as "D".                                            */
/*   /M     - Same as "M".                                            */
/* 3rd:                                                               */
/*   FT     - Used for File Tailoring. Allocate to ddname ISPFILE.    */
/*            Deallocate if 2nd. parameter is "/D".                   */
/*   /FT    - Same as "FT".                                           */
/* 4th:                                                               */
/*   nb     - Any non-blank value turns trace on.                     */
/*--------------------------------------------------------------------*/
$ztempf_End:
