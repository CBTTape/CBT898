/*--------------------------ooo00 REXX 00ooo--------------------------*/
ms=mark(2)
/*

    Hello &CNAME..

    AA: Assembler Analyser.

*/
me=mark(-2)
    Address ISPEXEC;"CONTROL ERRORS RETURN";ima_macro=0
    Arg parm#;If parm#/='' Then Signal byp1
    "ISREDIT MACRO (parm#)"
    If rc=0 Then ima_macro=1

byp1:
    "CONTROL ERRORS CANCEL"

init:
    parm@=parm#
    If Wordpos('TRACE',parm#)>0 Then Trace r
    zedsmsg=
    If ima_macro Then Address ISREDIT
    Else Do
        zedlmsg='Only in an edit/view session.'
        Address ISPEXEC "SETMSG MSG(ISRZ001)"
        Exit
    End

    "(status)=USER_STATE"
    "X ALL";"F ' ASMA' 1 12 ALL"
    "CURSOR=1 0"
    Do Forever
        "F ' ASMA044E' NEXT";If rc/=0 Then Leave
        "(lin#)=LINENUM .ZCSR";"XSTATUS" lin#-1"=NX"
    End
    "CURSOR=1 0"
    "F 'Statements Flagged' 1 20";If rc/=0 Then Signal exi1
    "LABEL .ZCSR=.MARKF"
    "F 'Statements Flagged in this Assembly'"
    "LABEL .ZCSR=.MARKT"
    "F ' ' ALL .MARKF .MARKT";"F '!@#$%¬*()_++_)(*¬%$#@!'"

exi1:
    "USER_STATE=(status)"
    Exit

Help_me:
    If ima_macro Then Do;"ISREDIT (caps)=CAPS";"ISREDIT CAPS =OFF";End
    x=pit(Centre(' ooo000OOOO000ooo ',79,'*'))
    Do i=ms To me
        line=Strip(Sourceline(i),'t')
        Do While Index(line,chgchar)>0
            Interpret "Parse VAR line p1 '"chgchar"' var '.' p2"
            Interpret 'line=p1||'var'||p2'
        End
        x=pit(line)
    End
    x=pit(Centre(' End ',79,'*'));x=pit(' ')
    If ima_macro Then "CAPS=(caps)"
    "JF ?"
    Exit
Mark:If Datatype(Arg(1))/='NUM' Then Arg(1)=1;Return sigl+Arg(1)
pit:xx=Arg(1)
    If ima_macro Then "LINE_BEFORE 1=NOTELINE (xx)";Else Say xx;Return 0
l_d:xx=Arg(1);If last>0 Then wherex=where lin#;Else wherex=where '.ZLAST'
    wherex"=&TYPE (xx)";If \nl Then lin#=lin#+1;Return 0
