/******************************** REXX ********************************/
/**********************************************************************/
/* TRACE r                                                            */
/*--------------------------ooo000OOOO000ooo--------------------------*/
/*                                                                    */
/* Copied from ABSUM (so theres a lot of garbage at bottom.           */
/* Processes the output from SFTSMF02 job.                            */
/*                                                                    */
/*--------------------------------------------------------------------*/
    ARG infile oufile trace parm4
    Parse SOURCE . . xcmd .

ini1:
    If trace = 'TRACE' Then Trace r
    Address TSO
    xxx = Time('s')
    ddi = 'SMI'xxx
    ddo = 'SMO'xxx
    If infile = '' Then infile = 'TPM.TPM12.KARA.SMFSUM.ANZD'
    If oufile = '' Then oufile = infile'.EXTRACT.'Sysvar(Sysenv)

    msg = Msg()
    x   = Msg('Off')
    "ALLOC F("ddi") DA('"infile"') SHR REU"
    "ALLOC F("ddo") DA('"oufile"') SHR REU"
    If rc /= 0 Then,
        "ALLOC F("ddo") DA('"oufile"') NEW REU CYL SPACE(30,15)",
               "RECFM(F B) LRECL(80) BLKSIZE(0) DSORG(PS) UNIT(DISK)"

    Address TSO "EXECIO 1 DISKR "ddi" (STEM linei. OPEN)"
    If Substr(linei.1,1,1) /= '1' Then lpref = ' '
    Else                               lpref = ''
    rc1 = 0
    j   = 1
    #pr = 5000                              /* No. records per read   */

    Trace
    Do While rc1 /= 2
        rc1 = get_block()
        Do i=i To linei.0
            If Substr(linei.i,2,14) /= 'Summary Report' Then Iterate
            rc1 = 2
            Leave
        End
    End
    rc1 = 0
    Do While rc1 /= 2
        Do i=i To linei.0
            Select
                When (Substr(linei.i,2,15) = 'DUMP STATISTICS') Then,
                    Call dump_stats
                When (Substr(linei.i,2,15) = 'TRANSACTION STA') Then,
                    Call tran_stats
                Otherwise NOP
            End
            j = j + 1
        End
        rc1 = get_block()
    End

exi1:
    "EXECIO 0 DISKR "ddi" (FINIS)"
    "EXECIO 0 DISKW "ddo" (FINIS)"
    "FREE F("ddi","ddo")"
    Exit

get_block:
    If rc0 = 2 Then return rc0
    Address TSO "EXECIO "#pr" DISKR "ddi" (STEM linei. OPEN)"
    rc0 = rc ; i = 1
    Return rc0

dump_stats:
    k = i -2
    regn = Word(linei.k,6)
    lineo.1 = ' '
    lineo.2 = 'Region' regn'.'
    lineo.3 = ' '
    lineo.4 = Substr(linei.i,2);i=i+1
    lineo.5 = Substr(linei.i,2);i=i+1
    k = 6
    eob = 'N'
    Do While rc2 /= 2
        Do i=i To linei.0
            If Substr(linei.i,2,2) = '  ' Then Do
                lineo.k = Substr(linei.i,2)
                k = k + 1
            End
            Else Do
                If Substr(linei.i,2,2) = 'Su' |,
                   Substr(linei.i,2,2) = '__' Then Iterate
                eob = 'Y'
                i = i -1
                Leave
            End
        End
        If eob = 'Y' Then Leave
        rc2 = get_block()
        i = 1
    End
    k = k -4
    "EXECIO" k "DISKW "ddo" (STEM lineo. OPEN)"
    j = j + k

    Return 0

tran_stats:
    Do k=1 To 2
        lineo.k = Substr(linei.i,2)
        i = i +1
    End
    Do k=3 To 5
        Parse VAR linei.i 4 v1 +15 . 103 v2 .
        lineo.k = v1 || Right(v2,12)
        i = i +1
    End
    eob = 'N'
    Do While rc3 /= 2
        Do i=i To linei.0
            If Substr(linei.i,4,8) = '*TOTALS*' Then Do
                eob = 'Y'
                Leave
            End
            Parse VAR linei.i 4 v1 +15. 103 v2 .
            If v2 > 0 Then Do
                lineo.k = v1 || Right(v2,12)
If trace = 'TRACE' Then Say v2 lineo.k
                k = k + 1
            End
        End
        If eob = 'Y' Then Leave
        rc3 = get_block()
        i = 1
    End
    Parse VAR linei.i 4 v1 +15 103 v2 .
    If v2 > 0 Then Do
        lineo.k = v1 || Right(v2,12)
If trace = 'TRACE' Then Say lineo.k
    End
    Else Do
        lineo.1 = 'No storage violations detected for individual',
                  'transaction.'
        lineo.2 = ' '
        k = 3
    End
    lineo.k = ' '
    k = k +1
    lineo.k = '*'Copies('-',78)'*'
    "EXECIO" k "DISKW "ddo" (STEM lineo. OPEN)"
    j = j + k

    Return 0

/*--------------------------------------------------------------------*/

/*--------------------------------------------------------------------*/
/* Get rid of unnecessary data from report including blank lines      */
/*--------------------------------------------------------------------*/
    "ISREDIT CURSOR = 1 0"
    "ISREDIT F 'Summary Report' 1"
    "ISREDIT F 'DUMP STATISTICS'"
    If rc /= 0 Then Do
        "ISREDIT F 'TRANSACTION STATISTICS' FIRST"
        "ISREDIT (lin#f) = LINENUM .ZCSR"
        "ISREDIT F '*TOTALS*' 3"
        "ISREDIT (linet) = LINE .ZCSR"
        Signal bypass_1
    End
    "ISREDIT (lin#) = LINENUM .ZCSR"
    "ISREDIT CURSOR =" lin# -1
    "ISREDIT DEL ALL NX .ZFIRST .ZCSR"
    "ISREDIT F 'DYNAMIC TRANSACTION BACKOUT'"
    "ISREDIT (lin#) = LINENUM .ZCSR"
    "ISREDIT CURSOR =" lin# -1
    "ISREDIT LABEL" lin# -1 "= .FROML"
    "ISREDIT F 'TRANSACTION STATISTICS'"
    "ISREDIT (lin#f) = LINENUM .ZCSR"
    "ISREDIT CURSOR =" lin#f -1
    "ISREDIT DEL ALL NX .FROML .ZCSR"
    "ISREDIT (lin#f) = LINENUM .ZCSR"
    "ISREDIT F '*TOTALS*' 3"
    "ISREDIT (linet) = LINE .ZCSR"
    "ISREDIT (lin#t) = LINENUM .ZCSR"
    "ISREDIT CURSOR =" lin#t+1
    "ISREDIT DEL ALL NX .ZCSR .ZLAST"

bypass_1:
    Parse VAR linet 101 #svc .
    "ISREDIT (last) = LINENUM .ZLAST"
    "ISREDIT LABEL" lin#f+6 "= .FROML"
    "ISREDIT LABEL" last    "= .TOOML"
    Do i=lin#f+2 To lin#f+4
        "ISREDIT (line) = LINE" i
        Parse VAR line v1 +19 . 101 v2 .
        linen = v1 || v2
        "ISREDIT LINE" i " = (linen)"
    End
    If #svc > 0 Then Do i=lin#f+6 To last-2
        "ISREDIT (line) = LINE" i
        Parse VAR line v1 +19 . 101 v2 .
        If v2 > 0 Then Do
            linen = v1 || Right(v2,12)
            "ISREDIT LINE_AFTER .ZLAST = (linen)"
        End
    End
    "ISREDIT DEL ALL NX .FROML .TOOML"
    Parse VAR linet v1 +19 . 101 v2 .
    linen = v1 || Right(v2,12)
    "ISREDIT LINE_AFTER .ZLAST = (linen)"

    "ISREDIT X 'Summary Report' 1 ALL"
    "ISREDIT X 'Report Date' 97 ALL"
    "ISREDIT DEL ALL X"
    "ISREDIT RESET"
    "ISREDIT USER_STATE = (status)"

    If batch = 'Y' Then Do
        Address TSO "NEWSTACK"
        Queue ' '
        Queue 'Report run on' Date('e') 'at' Time('c')'.'
        Queue ' '
        "ISREDIT (last) = LINENUM .ZLAST"
        Do i=1 To Last
            "ISREDIT (line) = LINE" i
            Queue line
        End

        Address TSO "EXECIO * DISKW ABNDSSUM (FINIS"
        Address TSO "DELSTACK"
        Call set_email_parm
        "ISREDIT CANCEL"
        "ISREDIT MEND"
    End

    Exit

