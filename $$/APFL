/******************************** REXX ********************************/
    n_st=mark(2)    /* Mark Start */
/*
/*--------------------------ooo000OOOO000ooo--------------------------*/
/*                                                                    */
/* APFL: APF List display.                                            */
/*                                                                    */
/* Allocate all the datasets in the APF list to a DD and present  it  */
/* under ISPFALOC for subsequent processing.                          */
/* Permissable parameters:                                            */
/*   /R - Return pairs of dsn and volume in one long string to        */
/*        caller for it's processing logic.                           */
/*   /S - Say details rather than put in table.                       */
/*   L  - Compare with the LINKLIST.                                  */
/*                                                                    */
/* Permissable commands:                                              */
/*   FS string | ALL                                                  */
/*      - Find String. Pass parameter of any non-blank included       */
/*        string and only dataset names including the string will be  */
/*        displayed. Note, the full dataset name will be searched for */
/*        the string.                                                 */
/*        FS's may be stacked to generate an implied 'and' search.    */
/*        Pass literal of "ALL" to ignore previous FS parameter,      */
/*        however, the previous string will be remembered and may be  */
/*        be used as a stafcked "FS" command.                         */
/*        Alternatively issue a "REFRESH" command which will negate   */
/*        all previous "FS" values.                                   */
/*   SORT { V | D | S }                                               */
/*      - Sort table whete the permissable parameters are:            */
/*        D - Dataset name.                                           */
/*        S - "S" field name.                                         */
/*        V - Volume.                                                 */
/*   Refresh | /R                                                     */
/*      - R(efresh) the table.                                        */
/*        caller for it's processing logic.                           */
/*   ?  - This tutorial.                                              */
/*                                                                    */
/* The following id the S field keys in the table display:            */
/*   A  - APF list only                                               */
/*   B  - Both APF and LINK lists                                     */
/*   L  - LINK list only                                              */
/*                                                                    */
/* Members required to package this routine:                          */
/* REXX:                                                              */
/*    APFL     - This driver                                          */
/* Panel:                                                             */
/*    APFLP    - Table display panel                                  */
/*                                                                    */
/*--------------------------------------------------------------------*/
*/
n_en=mark(-2)   /* Mark End   */
    Arg parm#;Address ISPEXEC;"CONTROL ERRORS RETURN";ima_macro=0
    Parse Source . . xcmd .
    If parm#/='' Then Signal byp1
    "ISREDIT MACRO (parm#) NOPROCESS";If rc=0 Then ima_macro=1

byp1:
/*  "CONTROL ERRORS CANCEL"                                           */

ini1:
    w1=Word(parm#,1);If Wordpos(w1,"? ??")=0 Then Signal No_help_#1
    If w1="??" Then Signal Help_me;"ISREDIT (m)=MEMBER";rcm=rc
    If rcm=0 Then Signal Help_me;Signal On Syntax Name Help_me
    x=Br(xcmd "??");Return
    Mark:If Datatype(Arg(1))/="NUM" Then Arg(1)=1;Return sigl+Arg(1)
    Help_me:Signal Off Syntax;#tr=Trace("o")
    Do i=n_st To n_en;nl=Sourceline(i)
    If rcm=0 Then "ISREDIT LINE_BEFORE 1=NOTELINE (nl)"
    Else Say Substr(nl,1,79);End;Return 0

No_help_#1:
    table="$A"Time('s')
Refresh:
    zedsmsg=
    If Wordpos('/S',parm#)>0 Then sit=1;Else sit=0
    If Wordpos('/R',parm#)>0 Then apf_l_ret=1;Else apf_l_ret=0
    If Wordpos('L',parm#)>0  Then linklist=1;Else linklist=0
    parms=;parms1=

    If \apf_l_ret Then Do
        "TBEND &TABLE"
        "TBCREATE &TABLE KEYS(DSN VOL) NAMES(APFS FHIT) REPLACE NOWRITE"
        If rc/=0 Then Do
            zedlmsg="Unable to open table, RC="rc"."
            Signal erx1
        End
        "TBSORT &TABLE FIELDS(DSN,C,A)"
    End
    Else sit=1

/*--------------------------------------------------------------------*/
/* Define variables                                                   */
/*--------------------------------------------------------------------*/
    Numeric Digits 10
    apfs='A';fhit='N';apf_l=;drow='ALL'

    cvt=c2d(Storage(10,4));
    cvtauthl=Storage(d2x(cvt+x2d('1E4')),4)
    If c2x(cvtauthl)='7FFFF001' Then Signal dynamic_list

    apft='STATIC'
    apfcount=c2d(Storage(d2x(c2d(apf)),2))     /* get apf entry count */
    apfptr=c2d(apf)+2                      /* init ptr to apf entries */
                                               /* get llt entry count */
    Do apfcount
        entrylen=c2d(Storage(d2x(apfptr)))           /* get entry len */
        vol=Storage(d2x(apfptr+1),6)                  /* print volser */
        vol=Translate(vol,' ','00'x)
        dsn=Storage(d2x(apfptr+7),entrylen-6)            /* print dsn */
        If sit Then apf_l=apf_l dsn vol
        Else "TBMOD &TABLE ORDER"
        apfptr=apfptr+entrylen+1               /* point to next entry */
    End
    Signal have_apf_list

dynamic_list:
    apft='DYNAMIC'
    cvtecvt=c2d(Storage(d2x(cvt+x2d('8C')),4))
    ecvtcsvt=c2d(Storage(d2x(cvtecvt+x2d('E4')),4))
    apfa=c2d(Storage(d2x(ecvtcsvt+x2d('C')),4))
    apf1=c2d(Storage(d2x(apfa+x2d('8')),4))     /* First entry        */
    apfn=apf1                                   /* Next entry         */
    apfl=c2d(Storage(d2x(apfa+x2d('C')),4))     /* Last  entry        */
    apf_e=0                                 /* End of list indicator  */
    #tr=Trace('o')
    Do forever
        dsn=Strip(Storage(d2x(apfn+x2d('18')),44))
        If bitand(Storage(d2x(apfn+4),1),'80'x)='80'x Then vol='*SMS* '
        Else vol=Storage(d2x(apfn+x2d('44')),6)
        If Substr(dsn,1,1)\=x2c('00') Then Do         /* Not deleted  */
            If sit Then apf_l=apf_l dsn vol
            Else "TBMOD &TABLE ORDER"
        End
        apfn=c2d(Storage(d2x(apfn+x2d('8')),4))
        If apf_e Then Leave
        If apfn=apfl Then apf_e=1
    End

/*--------------------------------------------------------------------*/
have_apf_list:
    If apf_l_ret Then Return apf_l
    If sit Then Signal Say_IT_and_leave

    If linklist Then Do
        llt=Storage(d2x(cvt+x2d('4DC')),4)
/*                                                                    */
/*      Get link list entries                                         */
/*                                                                    */
        lltcount=c2d(Storage(d2x(c2d(llt)+4),4))
        lltptr=c2d(llt)+8
        Do lltcount
            "TBTOP &TABLE"
            dsn=Strip(Storage(d2x(lltptr+1),44))
            x=Listdsi("'"dsn"'");vol=sysvolume
            "TBSCAN &TABLE ARGLIST(DSN,VOL)"
            If rc=0 Then apfs="B";Else apfs="L"
            "TBMOD &TABLE ORDER"
            lltptr=lltptr+45
        End
    End
/*--------------------------------------------------------------------*/
    "TBTOP &TABLE"

scr1:
    zcmd=;sel=
    "TBDISPL &TABLE PANEL(APFLP)"
    If rc>4 Then Signal eop1

/*--------------------------------------------------------------------*/
/* Test for 'ZCMD'                                                    */
/*--------------------------------------------------------------------*/
    If zcmd='' Then Signal noz1

    Parse VAR zcmd cmd p1 p2
    If cmd='TRACE' Then Do
        Select
            When p1='OFF' Then Trace('N')
            When p1='ON'  Then Trace('R')
            Otherwise Do                    /* Toggle                 */
                #tr=Trace()
                If Verify(#tr,'NO')=0 Then Trace('R');Else Trace('N')
            End
        End
        #tr=Trace();Signal scr1
    End
    If cmd='?' Then Do
        x=Br(xcmd "??")
        Signal scr1
    End
    If Wordpos(cmd,'REFRESH REF R /R')>0 Then Signal refresh

    If zcmd='SORT' Then Do
        Select
            When Substr(parm1,1,1)='V' Then sp='VOL'
            When Substr(parm1,1,1)='D' Then sp='DSN'
            When Substr(parm1,1,1)='S' Then sp='APFS'
            Otherwise Substr(parm1,1,1)='D' Then sp='DSN'
        End
        "TBSORT &TABLE FIELDS(&SP)"
        Signal scr1
    End

    If zcmd='FS' Then Do
        If parm1='ALL' Then drow='ALL'
        Else Do
            "TBTOP &TABLE"
            Do Forever
                "TBSKIP &TABLE"
                If rc\=0 Then Leave
                If drow='SCAN' & fhit='N' Then Iterate
                If Index(dsn,parm1)>0 Then fhit='Y';Else fhit='N'
                "TBMOD &TABLE"
            End
            drow='SCAN'
            "TBTOP &TABLE";"TBVCLEAR &TABLE"
            fhit='Y'
            "TBSARG &TABLE NAMECOND(FHIT,EQ)"
        End
        Signal scr1
    End

noz1:
    msub=ztdsels
    If sel='' Then Signal gnx1
    Signal con1

mus1:
    ISPEXEC "TBDISPL &TABLE"

con1:
    If sel\='' Then Do
        If sel='S' Then sel='B'
        f00=sel
        zcmd=f00
        If Length(zcmd)>1 Then ,
          If Wordpos(zcmd,'CE CB CL')>0 | Substr(zcmd,1,2)='CC' Then Do
              szcmd=zcmd;"VPUT (SZCMD) SHARED"
          End
        csdsn00="'"dsn"'"
        If vol='*SMS*' Then NOP
        Else If vol\='' Then parms='V='vol;Else parms=
        "CONTROL DISPLAY SAVE"
        parms=Strip(parms" "parms1)
        parm1='%MDS'
        parm2=p0
        parm3=f00
        parm4=csdsn00
        parm5=parms
        parm6=
        parm7=
        parm8=
        "SELECT CMD(%CSMDSN" parm1 parm2 parm3 parm4,
            parm5 parm6 parm7 parm8")"
        "CONTROL DISPLAY RESTORE"
        Signal gnx1
    End
    Signal gnx1

other:
    Signal scr1

gnx1:
    msub=msub-1
    If msub<1 Then Signal scr1;Else Signal mus1
/*--------------------------------------------------------------------*/
eop1:
    "TBEND &TABLE"
    Return 0

erx1:
    "SETMSG MSG(ISRZ001)"
    Return 0

Say_IT_and_leave:
    Say 'APF LIBRARY List  -' apft '('Words(apf_l)%2' Libraries)'
    Say ' '
    Say 'Entry   Volume    DSNAME'
    Say '-----   ------    'Copies('-',44)
    xxx=apf_l;i=0
    Do While xxx/=''
       i=Right(i+1,5)
       Parse VAR xxx dsn vol xxx
       Say i ' ' Substr(vol,1,6) '  ' dsn
    End

    Exit
