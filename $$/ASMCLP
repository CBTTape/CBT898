)ATTR
    # TYPE(OUTPUT) INTENS(HIGH)
    @ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
    ~ TYPE(TEXT) INTENS(HIGH) SKIP(ON)
)BODY EXPAND(\\)
@\-\ COMPILE LINK - ASSEMBLER \-\
%COMMAND ===>_ZCMD                                                             +
%
+Action          %===>_PR~<=  @A+assemble,@AL+assemle link-edit
+SOURCE data set:
+  Data set      %===>_ASOTHER
+  Prog type     %===>_Z~<=   @C+(ICS) or@T+(SO)   +Cics version%===>_Z  ~<=
+  Amode         %===>_Z~<=   @1+(24b) or@2+(31b)
+  Auth code     %===>_Z~<=   @0+or@1              +Asis of force Color or
+  GDDM          %===>_Z~<=   @N+or@Y   +           Mono:       %===>_Z~<=@A/C/M
+
+Befor IBM libs. %===>_Z~<=   +Source before IBM MACLIBS
+OBJECT data set (options%A+or%AL+):
+  Data set      %===>_AOOTHER                                       ~<=
+LOAD data set (options%L+or%AL+):                                      Volume:
+  Data set(TSO) %===>_TALOTHER                                      ~<=>_TALVOL
+  Data set(CICS)%===>_CALOTHER                                      ~<=>_CALVOL
+Copy libraries  %===>_ACPYL                                         ~<=
+Compile options %===>_ACOPT
+Linkage options %===>_ALOPT
+Entry point     %===>_ENTRY   ~<=+(Leave@blank+if entry the same as prog name)
+Include ISPLINK %===>_Z~<=   @Y+or@N
+JCL options:
+  Output class  %===>_Z~<=@A+or@X+Account%===>_ACCT                ~<=+ID%=>_Id
)INIT
 .ZVARS = '(PTYPE CICSVER AMODEX AUTHCODE USEGDDM MONOCHRM B4IBM  +
            INCLISPL OUTCL)'
 .HELP = HNOHELP
 &GC001 = 'Field must be keyed.'
 &GC002 = 'Entry not as specified.'
 &GC003 = 'Construction of DSNAME does not conform to standards.'
 &GC004 = 'Load DSN must not be the same as source DSN.'
 &GC006 = 'Field must be numeric.'
 &GC007 =
 'suggest use minimum of ''DECK,NOOBJECT,LIST,NOALIGN,NOXREF'' against option.'
 &GC008 = 'Suggest use minimum of "MAP,LET,LIST" against option.'
 &GC009 = 'Invalid name format.'
)PROC
        VER (&PR,NONBLANK,MSG=GC001)
        VER (&PR,LIST,A,AL,L,MSG=GC002)
        IF (&ASOTHER ¬= ' ')
            &DDSET = &ASOTHER
            VER (&DDSET,DSNAME,MSG=GC003)
            IF (&PR = AL,L)
              IF (&PTYPE = T)
                VER (&TALOTHER,NONBLANK,MSG=GC001)
                VER (&TALOTHER,DSNAME,MSG=GC003)
              IF (&PTYPE = C)
                VER (&CALOTHER,NONBLANK,MSG=GC001)
                VER (&CALOTHER,DSNAME,MSG=GC003)
            IF (&PTYPE = T)
              IF (&ASOTHER = &TALOTHER)
                 VER (&TALOTHER,LIST,X&TALOTHER,MSG=GC004)
            IF (&PTYPE = C)
              IF (&ASOTHER = &CALOTHER)
                 VER (&CALOTHER,LIST,X&CALOTHER,MSG=GC004)
        VER (&AOOTHER,DSNAME,MSG=GC003)
        IF (&ASOTHER = &AOOTHER)
            VER (&AOOTHER,LIST,XXXX,MSG=GC004)
        VER (&PTYPE,NONBLANK,MSG=GC001)
        VER (&PTYPE,LIST,C,T,MSG=GC002)
        IF (&PTYPE = A)
             VER (&CICSVER,NB,MSG=GC001)
             VER (&CICSVER,LIST,1.6,1.7,MSG=GC002)
        VER (&AMODEX,NONBLANK,MSG=GC001)
        &AMODE = TRANS (TRUNC (&AMODEX,1) 1,'24' 2,'31' MSG=GC002)
        IF (&ACPYL ¬= ' ')
            VER (&ACPYL,DSNAME,MSG=GC003)
        VER (&AUTHCODE,NONBLANK,MSG=GC001)
        VER (&AUTHCODE,LIST,0,1,MSG=GC002)
        VER (&USEGDDM,NONBLANK,MSG=GC001)
        VER (&USEGDDM,LIST,Y,N,MSG=GC002)
        VER (&MONOCHRM,NONBLANK,MSG=GC001)
        VER (&MONOCHRM,LIST,C,M,A,MSG=GC002)
        IF (&ACOPT = &Z)
           &ACOPT = 'DECK,NOOBJECT,LIST,NOALIGN,NOXREF'
           VER (&ACOPT,LIST,X&ACOPT,MSG=GC007)
        REFRESH ACOPT
        IF (&ALOPT = &Z)
           &ALOPT = 'MAP,LET,LIST'
           VER (&ALOPT,LIST,X&ALOPT,MSG=GC008)
        REFRESH ALOPT
        VER (&ENTRY,NAME,MSG=GC009)
        VER (&INCLISPL,NB,MSG=GC001)
        VER (&INCLISPL,LIST,Y,N,MSG=GC002)
        VER (&ID,NONBLANK,MSG=GC001)
        VER (&OUTCL,NONBLANK,MSG=GC001)
        VER (&OUTCL,LIST,A,X,V,Z,MSG=GC002)
/*      VER (&ACCT,NONBLANK,MSG=GC001)                                */
)END
