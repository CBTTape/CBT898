%headline=' Create BMS map parameters '
%"ISPEXEC VGET (zsysid)";sid=zsysid
%sid=Substr(sid,1,4)
.1. Introduction
!G

 BFI and it's complement BTI are edit macros that can be used to create a BMS
!y  b                    y  b
 map from an ISPF panel or an ISPF panel from a BMS map respectively.
 NOTE - It is assumed that the end user is familiar with basic (and I mean
!w     b
 basic) ISPF panel designs.

 The basic feature of this facility is to permit the user to define a proposed
 CICS screen under ISPF and test under ISPF Dialog Test (option 7.2).  Once the
 test passes all scrutiny, you can generate a BMS macro from the panel
 definition and subsequently assemble/link-edit the macro into a map.

 You can also reverse engineer and generate an ISPF panel from an existing BMS
 macro using the complementary macro BTI, modify and test it under ISPF Dialog
!                                    y  b
 test before re-converting it back to a BMS macro using macro BFI.
!                                                             y  b
 In escence, if the ISPF panel does not pass the Dialog test, don't expect the
 conversion to work. There is only basic syntax checks and conversion assumes
 the panel HAS PASSED the Dialog test.
!          y         b

 It is highly recommeded that only basic ISPF panel facilities be used to ensure
 valid BMS map generation.  Please do not use the dynamic features.

.2. Additional panel requirements.
!G
   The following additional panel customisations are required to successfully
   generate a BMS macro:
    1 - ZVARS
!y    wg
        Define all the place holders in the body of the panel.
        In the )INIT section syntactically correct .ZVARS definition for each Z
!              w    b                              y     b                    y
        variable placeholder. (This should not be an issue as the panel will
        fail if this is incorrect.)
           .ZVARS='(field1,field2,....,fieldn)'
!y
    2 - FSET
!y    wg
        Define which fields need the modified data tag (MDT) set to on.
!                                    yb       yb   yb   y  b
        Follows the same format as the .ZVARS, except that variable &FSET is
!                                      y     b                      y    b
        used in the equate field. As this is not an ISPF feature, any invalid
        format may not generate an ISPF dialogue error.  This value is used to
        control the MDT using the FSET attribute identifier in the macro.
!                                 y   b
           &FSET='(field1,field2,....,fieldn)'
!y
    3 - INITS
!y    wg
        Initialise field(s) to spaces.
        Follows the same format as the &FSET above. This value is used to set
!                                      y    b
        "INITIAL=' '" (spaces) entries for I/O variables. (By default, I/O
!        g          b
        fields are left to the processing program for initialisation.
           &INITS='(field1,field2,....,fieldn)'
!y
    4 - INITU
!y    wg
        Initialise I/O field unconditionally to assignment value in the )INIT
!                                                                       w
        section.
=y
           &INITU='(VAR1,VAR2,VAR4)'
        There should be an variable assignment statement line:
!b
           &VAR1 = 'Initial value 1111'
           &VAR2 = 'Initial value 2222'
           &VAR4 = 'Initial value 4444'
        generating in the BMS macro:
!b
           VAR1  DFHMDF  ...,INITIAL='Initial value',....
=
    5 - CURSOR
!y    wg
        Cursor placement.
        In the )INIT or first hit in any other section any .CURSOR assignment
!              w    b                                      y      b
        will be identified and an IC value will be included in the attribute
!                                 y b
        parameter for the appropriate field. (If multiple .CURSOR equates are
!                                                         y      b
        found, the first occurance will be used.)

   The EXPAND(..) feature of the )BODY section is catered for. However, it may
!      y      b yb               w    b
   be prudent to check output.

   The following equates should be set up after the )END panel command to ensure
!                                                   w   b
   you do not get a panel error as underscre is not permitted in variable names.
   (These equates are automatically generated when using the BTI feature.):
!                                                            y  b
     &I_var = 'input_picture'
!    y         g            y
     &O_var = 'output_picture'
!    y         g             y
     &N_var = 'alternale_COBOL_name'
!    y         g                   y

.3.Parameters:
!G
     parm1  - ISPF panel name (must be in the same directory for a PC).
!y          wb
     parm2  - PC if running on a PC. This is required as certain syntax differ
!y          w y b
              from mainframe to PC.

.4.GOTCHAs:
!G
    1. Do not use variables in the )ATTR section.
!   ygb                            w    b
    2. Do not use panel build logic in the )INIT section.
!   ygb                                    w    b
    3. Confirm EXPAND(..) logic generates desired results.
!   ygb        y      b yb
    4. Initialisation of I/O fields should be defined after the )END section
!   ygb                                                         w   b
       using &I_* and &O_* variables as well as in the )INIT section against the
!            y    b   y    b                           w    b
       original variable name.
    5. Using macro while editing original panel will cream it with the BMS
!   ygb
       macro.
    6. Translation TRNK will truncate initial values by removing trailing
!   ygb            g    b
       blanks. This requires a clear screen before map display.

.5.Members needed to fully package this processing:
!G
   (Members marked with a 'o' seperator are optional and only compliment other
!                          wb
   features of tis facility.)
     REXX:
!g       b
       BFI    - BMS from ISPF main driver. Use this to:
!y            wb
=                yb
                 1. Generate BMS macro from ISPF panel.
                 2. Assemble BMS macro.
                 3. Set up COBOL/PL1 name equates at end of panel.
=
       BFIDH  o Dynamic help test.
!y            wb
       BFIMR  o COBOL copy-book source redefine generator. Requires COBOL name
!y            wb
                generator flag to be on in BFI process.
!                                          w  b
       BFIMRO o COBOL Occurs evaluation.
!y            wb
       BFIPSYSo Dedicated PaySys processor to place parenthesis COBOL name
!y            wb
                definitions either side of standard COBOL names.  This gets
                executed if variable PaySys is set to Y in BFI.
!                                    y     b          yb   w  b
                generated.
       BTI    o BMS to ISPF main driver. Use this to reverse engineer a BMS
!y            wb
                macro and convert it to an ISPF panel for modifications and
                subsequent BFIing.
!                          y  b
       HELPDRVR
!y
              o Driver used for thit tutorial (and it's associated packaging).
!             wb
       NO     o Routine to insert sequence numbers in columns 73-80.
!y            wb
       TP     o Routine to permit panel testing during edit session.
!y            wb
       XD     o Exclude duplicates macro.
!y            wb
       ZVARS  o Quick dirty to ensure the .ZVARS ISPF command is properly
!y            wb                          y     b
       $WORDAT- Subroutine to identify word at column position.  (Required if
!y            wb
                you use include/ignore line range "ln1-ln2" feature.)
!                                                  y      b
     Panels:
!g         b
=y            wb
       BFIP   - BMS from ISPF parameter entry panel.
       BTIP   o BMS to ISPF parameter entry panel.
       BFIMRP o COBOL source redines copy-book generator.

     Skeletons:
!g            b
       BFIS     - JCL to generate DSECT and loadmodule.
=

.6.BFIP panel and parameters.
!G
 The following is the main parameter entry panel for the BFI process:


 ------------------------ Create BMS Map from ISPF panel -----------------------
!y
&&SID. ===>
!w         4

 Map details:
  Member      ===>          <=   ISPF panel (use dataset below if not same PDS)
!             w    4       w     b
  Assemble    ===>   <=          Y or N
!             w    4w            gb   g
  Mapset name ===>          <=   Limit to 7 chars if language is assembler
!             w    4       w     b
                                 - or - blank for extraction from panel
!                                w     y     b
  Mapname     ===>          <=   Limit to 7 chars if language is assembler
!             w    4       w     b
                                 - or - blank for extraction from panel
!                                w     y     b
  DSECT name  ===>   <=          S (mapSet) or M (Mapname) used for macro
!             w    4w            gb            gb
 Map processing details:
  Ignore      ===>                                              <=  Eg. 1,2
!             w    4                                           w    b
  Process     ===>                                              <=  Eg. 4,5 or *
!             w    4                                           w    b
  Name Gen    ===>   <=          Y or N      COBOL names ===>   <=
!             w    4w            gb   gb                 w    4w
     Head     ===>     <= Lines =>                              <=  Eg. 1,2,3,24
!             w    4  w   b     w  4                           w    b
     Body     ===>     <= Lines =>                              <=  Eg. * (rest)
!             w    4  w   b     w  4                           w    b
  Mode        ===>    <=         IN (Input), OU (Output) or IO (Inout)
!             w    4 w           g  b        g  b           g  b
  Language    ===>       <=      C (Cobol), A (Asm), P (PLI) or R (RPG)
!             w    4    w        g b        g b      g b        g b
  Translation ===>       <=      A (Asis) or T (Trnk - remove lead/trail blnks)
!             w    4    w        g b         g b
  Truncation  ===>   <=          If TRNK B (Both), T (Trailing) or L (Leading)
!             w    4w            b       gb        gb              gb
  Ext. attrib ===>   <=          Y or N
!             w    4w            gb   gb
  Rec'l names ===>   <=          Y or N Used to reconcile COBOL/PL1 names
!             w    4w            gb   gb
  PICIN/OUT   ===>   <=          Y or N Used to generate PICIN and PICOUT stmts.
!             w    4w            gb   gb
  Sequence no ===>   <=          Y or N Used to generate sequence nos cols 73-80
!             w    4w            gb   gb
 The following are required if Assemble=Y above:
  BMS c'book  ===>                                              <= ( BM )
!             w    4w                                          w   b y  b
  LoadMod     ===>                                              <= ( BL )
!             w    4w                                          w   b y  b
  AMODE       ===>    <=         31 or 24
!             w    4 w           g  b  g

                       ****************************
!t
.7.The BFI fields described.
!G
  Member     - If Assemble=N:
!y           wby
               Name of the panel member to be copied into the currently edited
!                          y    b
               member before changing with the macro. (The edited member cannot
               be the same as the panel name.)
             - If Assemble=Y:
!            wby
               BMS macro name (after panel conversion). Can be executed from any
               edit session.) If name is blank, the current member's details
               will be used.
  Mapset name-This value will be used in the DFHMSD macro and the mapset name in
!y           wb                              y     b
              link-editing.  If the field is blank, the setting of variable
              &M_MAPSET = 'mapset' will be used (last entry in the panel, after
!             y                   b
              )END).
!             w   b
  Mapname    -This value will be used in the DFHMDI macro.  If the field is
!y           wb                              y     b
              blank, the setting of variable &M_MAPNAME = 'mapname' will be used
!                                            y                     b
              (last entry in the panel, after )END).
!                                             w   b
  DSECT name -Identifies whether the mapSet or Mapname value will be used as the
!y           wb                         yb     yb
              output member name in the BMS macro dataset (specified below) if
              an assembly is requested.
  Map processing details:
!g
  Process    -Specify the lines to be processed. Enter * if all lines are to be
!y           wb                                        yb
              processed or specify individual lines with a comma seperator.
              Number ranges are invalid. If most lines are to be processed,
              enter * here and enter the lines not required in the Ignore field.
!                   yb                                             y     b
  Ignore     -Specify any lines to be ignored in the processing. Each line has
!y           wb
              to be individually specified with a comma seperator. Number ranges
              are invalid. This field should be used if some lines are not to be
              processed into the BMS macro.

  Name Gen   -Use this field to indicate whether names are to be automatically
!y           wb
              generated for each field.  If N is entered, the field names from
!                                           yn
              the panel is used and literals will remain nameless.  If Y is
!                                                                      yn
              entered all panel field names will be ignored and names generated
              for both I/O fields and literals.  (See below under Head and Body
!                                                                 y    b   y
              for further details.)

  COBOL names-Indicate here whether COBOL names are to be used in the BMS macro.
!y           wb
              If Y is entered, then the COBOL name associated with the variable
!                yb
              equate &N_VAR1 = 'COBOL-NAME' after the )END will be used in the
!                    y          r         yb          w    b
              BMS macro. This is a usefull feature when the COBOL name is
              significantly different from the field name, especialy if the Name
!                                                                           y
              Gen feature is used.
!             y  b
              To use this feature, the Language must be set to COBOL.
!                                      y       b               yb

  Head       -Enter the Headline prefix here if Name Gen is activated. In the
!y           wb                                 y        b
              following lines field enter all lines (comma seperated) that are
              used to make up the headline.
              The suffix of the headline name will be the field's position of
              llcc where ll is the line number and cc is the column.
!             y    b     y  b                      y  b  b
  Body       -Enter the Bodyline prefix here if Name Gen is activated. In the
!y           wb                                 y        b
              following lines field enter all lines (comma seperated) that are
              used to make up the bodyline. Enter * if all lines other than
!                                                 yb
              headlines are to included.
              The suffix of the bodyline name will be the field's position of
              llcc where ll is the line number and cc is the column.
!             y    b     y  b                      y  b  b
  Mode       -Self explanatory BMS map mode used on the DFHMSD macro.
!y           wb                                         y      b
  Language   -Self explanatory BMS map language used on the DFHMSD macro.
!y           wb                                         y      b
  Translation-Use this field to indicate building the BMS macro from the panel
!y           wb
              as is which meand that the screen built will be a full screen or
              alternaively only a skeleton screen is built and the screen will
              need to be explicitly erased before display.
  Truncation -This value is used in conjunction with the Translation option
!y           wb
              TRNK.
!             y   b
  Ext. attrib-Self explanatory BMS map mode used on the DFHMSD macro to
!y           wb
              generate the MAPATTS=.. parameter.
!                          y       r  b
  Rec'l names-Setting this field to Y will force reconciliation of COBOL/PL1
!y           wb                     yb
              name equate statemets after the )END with variables in the panel.
!                                             w    b
              This should be performed in the panel itself or against a copy of
              it as execution assumes it is a panel.
              Notes:
!             g
                 - destructive operation and can cream invalid panel
!                yb
                   members.
                 - unreconciled COBOL equates will be deleted while
!                yb
                   undefined will be highlighted for manual update.
                 - this flag is not sticky and will be reset to N.
!                yb                                             y.
  PICIN/OUT  -Setting this field to Y to generate PICIN and PICOUT statements
!y           wb                     yb            y     b   y      b
              for I/O fields as applicable. Only applicable to COBOL language
              screens.
  Sequence no-Setting this field to Y to generate sequence nos in cols 73-80.
!y           wb                     yb
              This is handy when changes to maps are PTFs using line
!                                                    y  b
              replacement. Not limited by language.
 The following fields are required for assemblies:
!g
  BMS c'book -Destination of BMS copybook source output from the assembly.
!y           wb
  LoadMod    -Destination of the link-edited load module.
!y           wb
  AMODE      -Addressing mode (31 or 24) for use in the link-edit JCL.
!y           wb

.8.ISPF panel design and features.
!G
 The expand feature of the )BODY section is catered for. However, it may
!                          w     b
 be prudent to check output. I thoroughly recommend using EXPAND(\\).
!                                                         y      r yb

 The following equates should be set up after the )END panel command to ensure
!                                                 w    b
 you do not get a panel error. (These equates are generated free of charge when
 using the BTI feature and re-applied in reverse.)
!          y   b
    &I_var = 'input_picture'        (will automatically be  generated from
!   y         r            yb
    &O_var = 'output_picture'       (NUMERIC(ON) attribute value as PIC 9s..
!   y         r             yb       y          b
    &N_var = 'alternale_COBOL_name' Used to compliment the BFIMR macro.
!   y         r                   yb                       y     b

 Parameters:
     parm1 - ISPF panel-name (must be in the same directory as edited member).
!    g     wb     y          b
     parm2 - PC if running on a PC. This is required as certain syntax
!    g     wy   b
              differ from mainframe to PC. (This is only applicable if you have
              access to SPF/Pro V5.0.)

.9.BFI GOTCHAs:
!G
    1. Do not use variables in the )ATTR section.
!   ygb                            w    b
    2. Do not use any panel build logic in the )INIT section.
!   ygb                                        w    b
    3. Confirm EXPAND(..) logic generates desired results.
!   ygb        w      r wb
    4. Initialisation of I/O fields should be defined after the )END section
!   ygb                  y  b                                   w    b
       using &I_* and &O_* variables as well as in the )INIT section against the
!            y    b   y    b                           w     b
       original variable name.
    5. Using macro while editing original panel may cream it with the BMS map.
!   ygb
       (Should be OK with this release.)
    6. Translation TRNK will truncate initial values by removing trailing
!   ygb            y    b
       blanks. This requires a clear screen before map display or,
         @EXEC CICS SEND .... CLEAR
!   y


.10.BTI (BMS map To Ispf panel) features:
!G
 This feature should only be used if the original BMS macro is not available.

 Macro to convert a BMS map to ISPF panel format (stock standard).  You can then
 modify the panel using the editor and test it under ISPF option 7.2 until you
 are happy with it.  Then hit it with %BFI to convert it back to a BMS map.

 The following is the main parameter entry panel for the BTI process:

 ---------------------------- BMS Map To ISPF Panel ----------------------------
!y
&&SID. ===>
!w         4

 BMS Map macro Source - Format 'dataset(member)':
   Dataset   ===> ____________________________________________ <=
!b           w    4                                           w
 Convert output to literals:
             ===> _ <=        N (or Y if directed by site administrator)
!b           w    4w          yb    yb

 Enter the following parameters to generate customised variable names for use in
 the ISPF panel:
   Generate  ===> _ <=        Y or N
!b           w    4w          yb   y
   Prefix    ===> _      <=   Must follow naming conventions
!b           w    4     w     b
   Start seq ===> _      <=   Must be numeric (use leading zeros to pad)
!b           w    4     w     b

 Remove redundant attributes:
             ===> _ <=        Y or N
!b           w    4 w         yb   y
 Default color:   Input        Output
             ===> ________ <=> ________ <=
!b           w    4       w    4       w
 Pad char: X ===> _ <=  9 ===> _ <= Y or N
!b         yw     4w    yw     4w   yb   y
 The following attributes may be used in generating the panel. If any may be in
 conflict with variable names or input text, remove from the list:
             ===> %+_$`!@#¬{}?<>/\:;*()~   <=
!b                r                        w

 Enter ? on the command line for HELP (do not use PF1).
!b     yb
                       ****************************
!t
.11.The BTI fields described.
!G
   Dataset  -Fully qualified solurce of the BMS macro format: 'dataset(member)'.
  !y          wb
   Convert output to literals: (If applicable to site.)
!y
            -Tells the function to conver output to literals.  Default is No.
!           wb                                                            yb
             Only enable this feature if directed to do so.
             Some sites have labels on literals thereby implying it is an output
             field and enabling this feature will remove labels even from
             legitimate output fields.  However, this is no issue as labels will
             be re-inserted when converted back to BMS. This problem can be
             overcome by using the COBOL name feature which will automatically
             identify it's associated field as an I/O field as literals should
             not have a COBOL name (should be FILLERs).
   Generate -Generate your own field naming standards. Set this to Y to generate
!y          wb                                                     yb
             your own names as opposed to the BMS field name.  This is mainly
             used to give a sequential number to a field.  If this is set to Y,
!                                                                            yb
             Prefix and Start seq must be entered.
!            w      b   w         b
             (Why? Because I can and to satisfy practice outlined in point
             "convert output to literals" above.)
!             w                         b
   Prefix   -Prefix to use.  Prefix of the generated variable if Y entered
!y          wb                                                   yb
             above. Default is No.
!                              yb
   Start seq-Suffix start.
!y          wb
             Starting sequence number to append to the prefix.  This is
             incremented to create unique names.  Default is 1.
   Remove redundant attributes:
!y
            -Some attribute characters may get duplicated or default generated
!           wb
             ones not used. Set to Y to remove unused ones to unclutter the
!                                  yb
             )ATTR section.
!            w     b
             While in the )ATTR section look out for truncated entries.  Some
!                         w     b
             fields may use all attribute components which could result in an
             attribute definition longer than a line. It will be truncated and
             commented appropriately. You may need to re-customise that
             attribute and associated fields.
  Def color -Define default colors. Defaults are Red and White respectively.
!y          wb                                   r   b   w    b
  Pad X/9   -Set the character and numeric pad characters. On entry they will be
!y          wb                                                              y
             will be set to 'X' and '9' respectively.  However some initial
!                            yb      yb
             values may look bad. So change it to space or whatever looks good
             to you. Use this feature to highlight inconspicuous input output
             fields (eg. message line at bottom of screen without a tag).

 The following ISPF panel commands will be generated to permit changes and
 more readily conversion back to BMS maps.
 In the )INIT section to initialise values prior to displaying the panel:-
!       w     b
  &VARx  = 'variable_(I/O_field)_initial_value'
!y          r                                 y
     generated from any PICIN/PICOUT values.
!                       y            b
     Note - This feature duplicates the equates generated after the )END section
!w          b                                                       w    b
            and is included to make the ISPF display more realistic. Any changes
            made to these entries prior to re-conversion (BFI) will need to be
!                                                         y  b
            repeated after the end section.)

  .ZVARS = '(var1,var2,....,varn)'
!y          r                    y
     for all variables whose name length is longer than the field length.
  &FSET  = '(var1,var2,....,varn)'
!y          r                    y
     for all variables that have FSET as an atribute parameter.
!                                y    b
  &INITS = '(var1,var2,....,varn)'
!y          r                    y
     for all I/O fields that need an INITIAL='  ' (spaces) in the BMS map.
!                                    y            b
  &INITU = '(var1,var2,....,varn)'
!y          r                    y
     for all I/O fields that need an INITIAL='xx' (unconditially include the
!                                    y            b
     assignment value from the )INIT section.
!                              w     b
  .CURSOR = 'var1'
!y           r   y
     for the variable var1 that has an IC attribute parameter.
!                     y    b           yb

 Notes - If a literal string is not terminated with an attribute byte, a default
!w       b
         attribute byte will be inserted.  This byte will have the following
         attributes:
              TYPE(TEXT) INTENS(HIGH) COLOR(BLUE)
!y

       - The attribute bytes generated will be generated from the special
!w       b
         characters and dropped if any are used in the body of the display.

 The following equates are set up after the )END panel command to ensure you do
!                                           w    b
 not get a panel error (these will be used to rebuild the BMS map).
  &I_var = 'input_picture'
!y          r            y
  &O_var = 'output_picture'
!y          r             y
  &N_var = 'alternale_COBOL_name'
!y          r                   y

.12.Complimentary features.
!G
 The following topics are presented in sequence:
=y  g       w b
  1 BFIMR   - Make BMS redefines source copybook using COBOL names.
  2 BFIMRO  - Evaluate occurances in redefines source.
  3 BFIPSYS - Generate COBOL names for the left and right parentheses.
  4 ZVARS   - Evaluate ZVARS in ISPF panel.
=

.BFIMR
!y
 This edit macro will generate a BMS redefines source copybook using COBOL names
 from the original BMS map and the assembled source copybook. For further
 details, invoke BFIMR with a ? parameter.
!                y     b      y b

.BFIMRO
!y
 This macro will process a redefines source and attempt to evaluate
 redefinitions. This macro will automatically be invoked by BFIMR if the
!                                                           y     b
 appropriate prompt is checke. Alternatively it may be invoked stand alone on
 any source if the format is correct.

.BFIPSYS
!y
 This macro will process a BMS map that has the COBOL names included as per BFI
 specifications and where it detects left and right brackets it will generate
 COBOL names with -LP and -RP suffixes respectively. This macro is invoked by
!                 y   b   y   b
 by BFI but may be invoked stand alone.
!   y   b

.ZVARS
!y
 ISPF panels have a .ZVARS feature that permit the variable name Z to be used as
!                   y      b                                     y b
 a placeholder for names that are longer than the field name.  This macro will
 identify all these place holder variables and build a .ZVARS statement list to
 inlude in the ISPF's )INIT section.
!                     w     b

 BFIMR - BMS From ISPF Make Redefines copybook.
!G
 BFIMR (BMS map From Ispf Make Redefine) is a routine to suplement BFI for
!y     byb      yb   yb   yb   yb
 generating COBOL source redefines to permit map fields to be addressed by their
 full COBOL names.

 Note - To use this facility, the BMS map must be defined as an I/O map, ie.
!w      b
        "MODE=INOUT,".
!y

 To execute this macro you may pass the following parameters:
   ?         - For help but you already know this you clever person you. Don't
!y           w b
               you???
   BMS_map   - Fully qualified BMS macro source.  If this parameter is missing,
!y           w b
               a panel will be displayed to permit dataset(member) entry.  This
               file will be read to assist in the redefinition end COBOL name
               generation. See requirements below.

   source    - Fully qualified  COBOL source generated by the BMS map assembly
!y           w b
               process. The supplied file will be copied into the current member
               for subsequent processing.  If this parameter is missing (either
               as an initial parameter or panel entry from above) the current
               member being edited/viewed will be assumed to be a copy of the
               source and processed accordingly.  Caution is advised as this is
               a destructive macro and may cream an innocent record layout if
               misused.  Suggest alway use in view mode and use explicit saves
               to avoid those silly little accidents that we always say @#*! to
               AFTER the event and don't have the OOPS button functioning.

 This macro requires the COBOL field name on the first line of the DFHMDF macro
 (with at least one space after the last comma and before the continuation
 indicator).

 If BFI is used to design the map using ISPF panels and subsequent conversion to
 BMS map, if you use the COBOL name inclusion feature, the COBOL name will be
 isserted on the appropriate line starting in column 40. (For further details on
 the COBOL name feature refer to the help screens for the BFI macro/command.

 If you do not like COBOL names mentioned in the BMS map (would be bloody good
 doco but) and use the BFI macro to create BMS map, you can create a temporary
 BMS map with the names and use it to build the redefinition copy-book.

 You have the option to attempt to evaluate occurances. Select "Y" on the
 parameter entry panel or run macro "BFIMRO" stand alone. For this feature to
 work, the BMS map's COBOL names should be the same so that the process can pick
 up duplicate (or block duplicate names) and treat them a occurances.  Watch
 this feature as if an occurance is detected on like COBOL names, evaluated
 occurances are assumed to be a mirror image and no validation is performed.


 BFIMRO- BFIMR Occurs evaluation.
!G

 After the redefines copybook has been created usmmg BFIMR you may use this
 macro to evaluate OCCURANCES.

 BFIPSYS: Dedicated BFI extension for PaySys P/L....
!G

 Called by BFI when expanding COBOL names or may be invoked stand alone.

 This routine is for use on PaySys BMS maps where an input field is enclosed in
 brackets. When an input DFHMDF entry with a COBOL name (commented) is
 encountered, the preceeding and following DFHMDF entries are checked for
 corresponding brackets. If they are found, their respective entries are updated
 with the COBOL name using the appropriate '-LP' and '-RP' suffixed comments.


                             (End of Instructions.)
!G
*
* This should be the last entry.
*
* Note the index is not paragraphed but manually positioned as the
* start of the Index is before the "I.".
*
=Gb                                                                            G
#                                  I. Index:
!G

&  Hello &CNAME..                                              Version: &VT..

   This facility permits you to create BMS maps from ISPF panels.

   The following topics are presented in sequence or may be selected by code.

=Gb  2b                                                                        G
     1       Introduction.
     2       Additional panel requirements.
     3       Parameters.
     4       GOTCHAs.
     5       Members needed to fully package this processing.
     6       BFIP panel and parameters.
     7       The BFI fields described.
     8       ISPF panel design and features.
     9       BFI GOTCHAs:
=Gb 2 b                                                                        G
    10       BTI (BMS map To Ispf) features.
    11       The BTI fields described.
    12       Complimentary features.
    BFIMR    Make BMS redefines source copybook using COBOL names.
!Gb 2    b                                                                     G
    BFIMRO   Evaluate occurances in redefines source.
!Gb 2     b                                                                    G
    BFIPSYS  Generate COBOL names for the left and right parentheses.
!Gb 2      b                                                                   G
    ZVARS    Evaluate ZVARS in ISPF panel.
!Gb 2    b                                                                     G
=
=Gy                                                                            G


                               (End of Index.)
!G

%helpdd='Alex'
?TN (HELPTN) *
    TN  Tutorial Navigation.
!Gy 2 b                    y b                                                 G


!G
