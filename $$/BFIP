)ATTR  DEFAULT(%+_)
    ~ TYPE(TEXT) INTENS(HIGH) SKIP(ON)
    _ TYPE(INPUT) INTENS(HIGH) COLOR(RED) HILITE(USCORE)
    # TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)
    @ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
    ? TYPE(TEXT) INTENS(LOW) COLOR(GREEN)
)BODY EXPAND(\\)
@&TIME\-\ Create BMS Map from ISPF panel \-\-----
%&SID%===>_ZCMD                                                                +
%
+Map details:
+ Member     %===>_MEMBER  ~<=  +ISPF panel (must be in same PDS)
+ Assemble   %===>_Z~<=         ?Y+or?N
+ Mapset name%===>_MAPSET  ~<=  +Limit to 7 chars if language is assembler
+                               %- or -@blank+for extraction from panel
+ Mapname    %===>_MAPNAME ~<=  +Limit to 7 chars if language is assembler
+                               %- or -@blank+for extraction from panel
+ DSECT name %===>_Z~<=         ?S+(mapSet) or?M+(Mapname) used for macro
+Map processing details:
+ Process    %===>_MAPPLNS                                     ~<= +Eg. * or 4,5
+ Ignore     %===>_MAPILNS                                     ~<= +Eg. 1,2
+ Name Gen   %===>_Z~<=         ?Y+or?N     +COBOL names%===>_Z~<=
+    Head    %===>_Z  ~<=+Lines%=>_MAPHLNS                     ~<= +Eg. 1,2,3,24
+    Body    %===>_Z  ~<=+Lines%=>_MAPBLNS                     ~<= +Eg. * (rest)
+ Mode       %===>_Z ~<=        ?IN+(Input),?OU+(Output) or?IO+(Inout)
+ Language   %===>_Z    ~<=     ?C+(Cobol),?A+(Asm),?P+(PLI) or?R+(RPG)
+ Translation%===>_Z    ~<=     ?A+(Asis) or?T+(Trnk - remove lead/trail blnks)
+ Truncation %===>_Z~<=         +If TRNK?B+(Both),?T+(Trailing) or?L+(Leading)
+ Ext. attrib%===>_Z~<=         ?Y+or?N
+ Rec'l names%===>_Z~<=         ?Y+or?N+Used to reconcile COBOL/PL1 names
+ PICIN/OUT  %===>_Z~<=         ?Y+or?N+Used to generate PICIN and PICOUT stmts.
+ Sequence no%===>_Z~<=         ?Y+or?N+Used to generate sequence nos cols 73-80
+The following are required if Assemble=Y above:
+ BMS c'book %===>_BMSMLIB                                     ~<=+(@BM+)
+ LoadMod    %===>_BMSLLIB                                     ~<=+(@BL+)
+ AMODE      %===>_Z ~<=        ?31+or?24
)INIT
.ZVARS = '(MAPASM,MAPDIND,MAPNGEN,MAPCOBN,MAPHPF,MAPBPF,MAPMODE +
           MAPLANG,MAPTRAN,MAPTRNK,MAPXATR,MAPRECN,MAPPICIO, +
           MAPSEQN,AMODE)'
 .HELP  = HNOHELP
 &SID   = &ZSYSID
 &TIME  = &ZTIME
 &MAPMODE = TRANS( TRUNC(&MAPMODE,3)
              INP,IN OUT,OU INO,IO *,*)
 IF (&MAPASM = &Z) &MAPASM = 'N'
 If (&MAPMODE=&Z) &MAPMODE='OU'
 &GC001='Enter lines to process or ''*'' for all lines.'
)REINIT
 &MAPMODE = TRANS( TRUNC(&MAPMODE,3)
              INP,IN OUT,OU INO,IO *,*)
)PROC
&XXX=TRUNC(&ZCMD,4)
IF (&XXX='HELP') &ZCMD='?'
IF (&ZCMD Â¬= '?')
 VER(&MEMBER,NAME)
 VER(&MAPASM,NB,LIST,Y,N)
 VER(&MAPDIND,NB,LIST,M,S)
 VER(&MAPSET,NAME)
 VER(&MAPNAME,NAME)
 VER(&MAPPLNS,NB,MSG=GC001)
 &MAPMODE = TRANS( TRUNC(&MAPMODE,2)
           IN,IN OU,OUT IO,INOUT *,*)
 VER(&MAPMODE,NB,LIST,IN,OUT,INOUT)
 &MAPLANG = TRANS( TRUNC(&MAPLANG,1)
            C,COBOL A,ASM P,PLI R,RPG *,*)
 VER(&MAPLANG,NB,LIST,COBOL,ASM,PLI,RPG)
 &MAPTRAN = TRANS( TRUNC(&MAPTRAN,1)
            A,ASIS T,TRNK *,*)
 VER(&MAPTRAN,NB,LIST,ASIS,TRNK)
 IF (&MAPTRAN = TRNK) VER(&MAPTRNK,NB,LIST,B,T,L)
 IF (&MAPLANG = 'COBOL') VER(&MAPCOBN,NB,LIST,Y,N)
 VER(&MAPXATR,NB,LIST,Y,N)
 VER(&MAPRECN,NB,LIST,Y,N)
 VER(&MAPNGEN,NB,LIST,Y,N)
 VER(&MAPPICIO,NB,LIST,Y,N)
 IF (&MAPASM = 'Y')
     VER(&BMSMLIB,NB,DSNAMEQ)
     VER(&BMSLLIB,NB,DSNAMEQ)
     VER(&AMODE,NB,LIST,31,24)
)END
