/*--------------------------ooo00 REXX 00ooo--------------------------*/
/*                                                                    */
/* EXEC to place BIG letters into text being edited.                  */
/*                                                                    */
/*--------------------------------------------------------------------*/
BIG_ver='1.02'
    Arg parm#;Address ISPEXEC;"CONTROL ERRORS RETURN";ima_macro=0
    If parm#/='' Then Signal byp1
    "ISREDIT MACRO (parm#)";If rc=0 Then ima_macro=1

byp1:
    Parse Upper VAR parm# parm1 parm2 parm3 parm4 parm5 parm6
/*  "CONTROL ERRORS CANCEL"                                           */

ini1:
    If Wordpos(parm1,'HELP /H ? ?? /?')>0 Then Do
        "SELECT PGM(ISPTUTOR) PARM(BIGH001)"
        Exit
    End

    If ima_macro Then Do
        Address ISREDIT;"(status)=USER_STATE";"(row,col)=CURSOR"
        "(last)=LINENUM .ZLAST";"(lrecl)=LRECL"
    End
    Else,
        Parse Value '1 1 79 24' With row col lrecl last

    alphabet="ABCDEFGHIJKLMNOPQRSTUVWXYZ";numbers="0123456789"
    specials='''"-=/%*?.,:;+()!¦|_<>$@&#[]\~`¬'

    Call parse_parms

    If string='' Then Do
        len=(cpl*14)-2
        Call bigcentr
        Signal ext1
    End

    srow=row;scol=col
    If col>0 Then col=col-1
    limit=LENGTH(string);linesr=row+11+13*(limit-1)
    If down & linesr>last Then Do
        If fit Then Do
            limit=(last-row+2)/13
            If limit>0 Then string=Substr(string,1,limit)
            zedlmsg="'FIT' parameter reduced string to "limit" characters."
            Address ISPEXEC "SETMSG MSG(ISRZ001)"
        End
        Else Do
            zedlmsg = "Need "linesr" lines to complete letters from current",
                    "position."
            Signal erx1
        End
    End

    max=(lrecl+2-col)%14
    If limit>max & ¬down Then Do
        If fit Then Do
            limit=max
            If limit>0 Then string=Substr(string,1,limit)
            zedlmsg="'FIT' parameter reduced string to "limit "characters."
            Address ISPEXEC "SETMSG MSG(ISRZ001)"
        End
        Else Do
            zedlmsg="You are only permitted to big "max" characters",
                    "due to LRECL="lrecl+0"."
            Signal erx1
        End
    End

    frl=row
    If down Then tol=linesr;Else tol=frl+11

    Do i=1 By 1 Until i >= limit
        letter=Substr(string,i,1);o_letter=letter
        If letter=' ' Then letter='space'
        Else If Index(specials,letter)>0 Then,
                 letter='S'Index(specials,letter)
        Interpret "Call L_"letter

        If down Then Do
            If ima_macro Then,
                "LINE "row+12" = LINE + < &COL '              '>"
            Else Say line
            row=row+13
        End
        Else col=col+14
    End

    If centre Then Do
        len=(Length(string)*14)-2
        Call bigcentr
    End
    Signal ext1

erx1:
    Address ISPEXEC "SETMSG MSG(ISRZ001)"

ext1:
    "USER_STATE=(status)"
    "CURSOR=&SROW &SCOL"
    Exit

/*--------------------------------------------------------------------*/
/* Character processing                                               */
/*--------------------------------------------------------------------*/
L_A:
    "LINE "row"    = LINE + < &COL '  AAAAAAAAAA  '>"
    "LINE "row+1"  = LINE + < &COL ' AAAAAAAAAAAA '>"
    "LINE "row+2"  = LINE + < &COL ' AA        AA '>"
    "LINE "row+3"  = LINE + < &COL ' AA        AA '>"
    "LINE "row+4"  = LINE + < &COL ' AA        AA '>"
    "LINE "row+5"  = LINE + < &COL ' AAAAAAAAAAAA '>"
    "LINE "row+6"  = LINE + < &COL ' AAAAAAAAAAAA '>"
    "LINE "row+7"  = LINE + < &COL ' AA        AA '>"
    "LINE "row+8"  = LINE + < &COL ' AA        AA '>"
    "LINE "row+9"  = LINE + < &COL ' AA        AA '>"
    "LINE "row+10" = LINE + < &COL ' AA        AA '>"
    "LINE "row+11" = LINE + < &COL ' AA        AA '>"
    Return

L_B:
    "LINE "row"    = LINE + < &COL ' BBBBBBBBBB   '>"
    "LINE "row+1"  = LINE + < &COL ' BBBBBBBBBBB  '>"
    "LINE "row+2"  = LINE + < &COL ' BB        BB '>"
    "LINE "row+3"  = LINE + < &COL ' BB        BB '>"
    "LINE "row+4"  = LINE + < &COL ' BB       BB  '>"
    "LINE "row+5"  = LINE + < &COL ' BBBBBBBBB    '>"
    "LINE "row+6"  = LINE + < &COL ' BBBBBBBBB    '>"
    "LINE "row+7"  = LINE + < &COL ' BB       BB  '>"
    "LINE "row+8"  = LINE + < &COL ' BB        BB '>"
    "LINE "row+9"  = LINE + < &COL ' BB        BB '>"
    "LINE "row+10" = LINE + < &COL ' BBBBBBBBBBB  '>"
    "LINE "row+11" = LINE + < &COL ' BBBBBBBBBB   '>"
    Return

L_C:
    "LINE "row"    = LINE + < &COL '  CCCCCCCCCC  '>"
    "LINE "row+1"  = LINE + < &COL ' CCCCCCCCCCCC '>"
    "LINE "row+2"  = LINE + < &COL ' CC        CC '>"
    "LINE "row+3"  = LINE + < &COL ' CC           '>"
    "LINE "row+4"  = LINE + < &COL ' CC           '>"
    "LINE "row+5"  = LINE + < &COL ' CC           '>"
    "LINE "row+6"  = LINE + < &COL ' CC           '>"
    "LINE "row+7"  = LINE + < &COL ' CC           '>"
    "LINE "row+8"  = LINE + < &COL ' CC           '>"
    "LINE "row+9"  = LINE + < &COL ' CC        CC '>"
    "LINE "row+10" = LINE + < &COL ' CCCCCCCCCCCC '>"
    "LINE "row+11" = LINE + < &COL '  CCCCCCCCCC  '>"
    Return

L_D:
    "LINE "row"    = LINE + < &COL ' DDDDDDDDD    '>"
    "LINE "row+1"  = LINE + < &COL ' DDDDDDDDDD   '>"
    "LINE "row+2"  = LINE + < &COL ' DD       DD  '>"
    "LINE "row+3"  = LINE + < &COL ' DD        DD '>"
    "LINE "row+4"  = LINE + < &COL ' DD        DD '>"
    "LINE "row+5"  = LINE + < &COL ' DD        DD '>"
    "LINE "row+6"  = LINE + < &COL ' DD        DD '>"
    "LINE "row+7"  = LINE + < &COL ' DD        DD '>"
    "LINE "row+8"  = LINE + < &COL ' DD        DD '>"
    "LINE "row+9"  = LINE + < &COL ' DD        DD '>"
    "LINE "row+10" = LINE + < &COL ' DDDDDDDDDD   '>"
    "LINE "row+11" = LINE + < &COL ' DDDDDDDDD    '>"
    Return

L_E:
    "LINE "row"    = LINE + < &COL ' EEEEEEEEEEEE '>"
    "LINE "row+1"  = LINE + < &COL ' EEEEEEEEEEEE '>"
    "LINE "row+2"  = LINE + < &COL ' EE           '>"
    "LINE "row+3"  = LINE + < &COL ' EE           '>"
    "LINE "row+4"  = LINE + < &COL ' EE           '>"
    "LINE "row+5"  = LINE + < &COL ' EEEEEEEE     '>"
    "LINE "row+6"  = LINE + < &COL ' EEEEEEEE     '>"
    "LINE "row+7"  = LINE + < &COL ' EE           '>"
    "LINE "row+8"  = LINE + < &COL ' EE           '>"
    "LINE "row+9"  = LINE + < &COL ' EE           '>"
    "LINE "row+10" = LINE + < &COL ' EEEEEEEEEEEE '>"
    "LINE "row+11" = LINE + < &COL ' EEEEEEEEEEEE '>"
    Return

L_F:
    "LINE "row"    = LINE + < &COL ' FFFFFFFFFFFF '>"
    "LINE "row+1"  = LINE + < &COL ' FFFFFFFFFFFF '>"
    "LINE "row+2"  = LINE + < &COL ' FF           '>"
    "LINE "row+3"  = LINE + < &COL ' FF           '>"
    "LINE "row+4"  = LINE + < &COL ' FF           '>"
    "LINE "row+5"  = LINE + < &COL ' FFFFFFFF     '>"
    "LINE "row+6"  = LINE + < &COL ' FFFFFFFF     '>"
    "LINE "row+7"  = LINE + < &COL ' FF           '>"
    "LINE "row+8"  = LINE + < &COL ' FF           '>"
    "LINE "row+9"  = LINE + < &COL ' FF           '>"
    "LINE "row+10" = LINE + < &COL ' FF           '>"
    "LINE "row+11" = LINE + < &COL ' FF           '>"
    Return

L_G:
    "LINE "row"    = LINE + < &COL '  GGGGGGGGGG  '>"
    "LINE "row+1"  = LINE + < &COL ' GGGGGGGGGGGG '>"
    "LINE "row+2"  = LINE + < &COL ' GG        GG '>"
    "LINE "row+3"  = LINE + < &COL ' GG           '>"
    "LINE "row+4"  = LINE + < &COL ' GG           '>"
    "LINE "row+5"  = LINE + < &COL ' GG           '>"
    "LINE "row+6"  = LINE + < &COL ' GG     GGGGG '>"
    "LINE "row+7"  = LINE + < &COL ' GG     GGGGG '>"
    "LINE "row+8"  = LINE + < &COL ' GG        GG '>"
    "LINE "row+9"  = LINE + < &COL ' GG        GG '>"
    "LINE "row+10" = LINE + < &COL ' GGGGGGGGGGGG '>"
    "LINE "row+11" = LINE + < &COL '  GGGGGGGGGG  '>"
    Return

L_H:
    "LINE "row"    = LINE + < &COL ' HH        HH '>"
    "LINE "row+1"  = LINE + < &COL ' HH        HH '>"
    "LINE "row+2"  = LINE + < &COL ' HH        HH '>"
    "LINE "row+3"  = LINE + < &COL ' HH        HH '>"
    "LINE "row+4"  = LINE + < &COL ' HH        HH '>"
    "LINE "row+5"  = LINE + < &COL ' HHHHHHHHHHHH '>"
    "LINE "row+6"  = LINE + < &COL ' HHHHHHHHHHHH '>"
    "LINE "row+7"  = LINE + < &COL ' HH        HH '>"
    "LINE "row+8"  = LINE + < &COL ' HH        HH '>"
    "LINE "row+9"  = LINE + < &COL ' HH        HH '>"
    "LINE "row+10" = LINE + < &COL ' HH        HH '>"
    "LINE "row+11" = LINE + < &COL ' HH        HH '>"
    Return

L_I:
    "LINE "row"    = LINE + < &COL '  IIIIIIIIII  '>"
    "LINE "row+1"  = LINE + < &COL '  IIIIIIIIII  '>"
    "LINE "row+2"  = LINE + < &COL '      II      '>"
    "LINE "row+3"  = LINE + < &COL '      II      '>"
    "LINE "row+4"  = LINE + < &COL '      II      '>"
    "LINE "row+5"  = LINE + < &COL '      II      '>"
    "LINE "row+6"  = LINE + < &COL '      II      '>"
    "LINE "row+7"  = LINE + < &COL '      II      '>"
    "LINE "row+8"  = LINE + < &COL '      II      '>"
    "LINE "row+9"  = LINE + < &COL '      II      '>"
    "LINE "row+10" = LINE + < &COL '  IIIIIIIIII  '>"
    "LINE "row+11" = LINE + < &COL '  IIIIIIIIII  '>"
    Return

L_J:
    "LINE "row"    = LINE + < &COL '   JJJJJJJJJJ '>"
    "LINE "row+1"  = LINE + < &COL '   JJJJJJJJJJ '>"
    "LINE "row+2"  = LINE + < &COL '       JJ     '>"
    "LINE "row+3"  = LINE + < &COL '       JJ     '>"
    "LINE "row+4"  = LINE + < &COL '       JJ     '>"
    "LINE "row+5"  = LINE + < &COL '       JJ     '>"
    "LINE "row+6"  = LINE + < &COL '       JJ     '>"
    "LINE "row+7"  = LINE + < &COL '       JJ     '>"
    "LINE "row+8"  = LINE + < &COL ' JJ    JJ     '>"
    "LINE "row+9"  = LINE + < &COL ' JJ    JJ     '>"
    "LINE "row+10" = LINE + < &COL ' JJJJJJJJ     '>"
    "LINE "row+11" = LINE + < &COL '  JJJJJJ      '>"
    Return

L_K:
    "LINE "row"    = LINE + < &COL ' KK        KK '>"
    "LINE "row+1"  = LINE + < &COL ' KK       KK  '>"
    "LINE "row+2"  = LINE + < &COL ' KK      KK   '>"
    "LINE "row+3"  = LINE + < &COL ' KK     KK    '>"
    "LINE "row+4"  = LINE + < &COL ' KK    KK     '>"
    "LINE "row+5"  = LINE + < &COL ' KKKKKK       '>"
    "LINE "row+6"  = LINE + < &COL ' KKKKKK       '>"
    "LINE "row+7"  = LINE + < &COL ' KK    KK     '>"
    "LINE "row+8"  = LINE + < &COL ' KK     KK    '>"
    "LINE "row+9"  = LINE + < &COL ' KK      KK   '>"
    "LINE "row+10" = LINE + < &COL ' KK       KK  '>"
    "LINE "row+11" = LINE + < &COL ' KK        KK '>"
    Return

L_L:
    "LINE "row"    = LINE + < &COL ' LL           '>"
    "LINE "row+1"  = LINE + < &COL ' LL           '>"
    "LINE "row+2"  = LINE + < &COL ' LL           '>"
    "LINE "row+3"  = LINE + < &COL ' LL           '>"
    "LINE "row+4"  = LINE + < &COL ' LL           '>"
    "LINE "row+5"  = LINE + < &COL ' LL           '>"
    "LINE "row+6"  = LINE + < &COL ' LL           '>"
    "LINE "row+7"  = LINE + < &COL ' LL           '>"
    "LINE "row+8"  = LINE + < &COL ' LL           '>"
    "LINE "row+9"  = LINE + < &COL ' LL           '>"
    "LINE "row+10" = LINE + < &COL ' LLLLLLLLLLLL '>"
    "LINE "row+11" = LINE + < &COL ' LLLLLLLLLLLL '>"
    Return

L_M:
    "LINE "row"    = LINE + < &COL ' MM        MM '>"
    "LINE "row+1"  = LINE + < &COL ' MMM      MMM '>"
    "LINE "row+2"  = LINE + < &COL ' MMMM    MMMM '>"
    "LINE "row+3"  = LINE + < &COL ' MM MM  MM MM '>"
    "LINE "row+4"  = LINE + < &COL ' MM   MMM  MM '>"
    "LINE "row+5"  = LINE + < &COL ' MM    M   MM '>"
    "LINE "row+6"  = LINE + < &COL ' MM        MM '>"
    "LINE "row+7"  = LINE + < &COL ' MM        MM '>"
    "LINE "row+8"  = LINE + < &COL ' MM        MM '>"
    "LINE "row+9"  = LINE + < &COL ' MM        MM '>"
    "LINE "row+10" = LINE + < &COL ' MM        MM '>"
    "LINE "row+11" = LINE + < &COL ' MM        MM '>"
    Return

L_N:
    "LINE "row"    = LINE + < &COL ' NN        NN '>"
    "LINE "row+1"  = LINE + < &COL ' NNN       NN '>"
    "LINE "row+2"  = LINE + < &COL ' NNNN      NN '>"
    "LINE "row+3"  = LINE + < &COL ' NN NN     NN '>"
    "LINE "row+4"  = LINE + < &COL ' NN  NN    NN '>"
    "LINE "row+5"  = LINE + < &COL ' NN   NN   NN '>"
    "LINE "row+6"  = LINE + < &COL ' NN    NN  NN '>"
    "LINE "row+7"  = LINE + < &COL ' NN     NN NN '>"
    "LINE "row+8"  = LINE + < &COL ' NN      NNNN '>"
    "LINE "row+9"  = LINE + < &COL ' NN       NNN '>"
    "LINE "row+10" = LINE + < &COL ' NN        NN '>"
    "LINE "row+11" = LINE + < &COL ' NN         N '>"
    Return

L_O:
    "LINE "row"    = LINE + < &COL '  OOOOOOOOOO  '>"
    "LINE "row+1"  = LINE + < &COL ' OOOOOOOOOOOO '>"
    "LINE "row+2"  = LINE + < &COL ' OO        OO '>"
    "LINE "row+3"  = LINE + < &COL ' OO        OO '>"
    "LINE "row+4"  = LINE + < &COL ' OO        OO '>"
    "LINE "row+5"  = LINE + < &COL ' OO        OO '>"
    "LINE "row+6"  = LINE + < &COL ' OO        OO '>"
    "LINE "row+7"  = LINE + < &COL ' OO        OO '>"
    "LINE "row+8"  = LINE + < &COL ' OO        OO '>"
    "LINE "row+9"  = LINE + < &COL ' OO        OO '>"
    "LINE "row+10" = LINE + < &COL ' OOOOOOOOOOOO '>"
    "LINE "row+11" = LINE + < &COL '  OOOOOOOOOO  '>"
    Return

L_P:
    "LINE "row"    = LINE + < &COL ' PPPPPPPPPPP  '>"
    "LINE "row+1"  = LINE + < &COL ' PPPPPPPPPPPP '>"
    "LINE "row+2"  = LINE + < &COL ' PP        PP '>"
    "LINE "row+3"  = LINE + < &COL ' PP        PP '>"
    "LINE "row+4"  = LINE + < &COL ' PP        PP '>"
    "LINE "row+5"  = LINE + < &COL ' PPPPPPPPPPPP '>"
    "LINE "row+6"  = LINE + < &COL ' PPPPPPPPPPP  '>"
    "LINE "row+7"  = LINE + < &COL ' PP           '>"
    "LINE "row+8"  = LINE + < &COL ' PP           '>"
    "LINE "row+9"  = LINE + < &COL ' PP           '>"
    "LINE "row+10" = LINE + < &COL ' PP           '>"
    "LINE "row+11" = LINE + < &COL ' PP           '>"
    Return

L_Q:
    "LINE "row"    = LINE + < &COL '  QQQQQQQQQ   '>"
    "LINE "row+1"  = LINE + < &COL ' QQQQQQQQQQQ  '>"
    "LINE "row+2"  = LINE + < &COL ' QQ        QQ '>"
    "LINE "row+3"  = LINE + < &COL ' QQ        QQ '>"
    "LINE "row+4"  = LINE + < &COL ' QQ        QQ '>"
    "LINE "row+5"  = LINE + < &COL ' QQ        QQ '>"
    "LINE "row+6"  = LINE + < &COL ' QQ        QQ '>"
    "LINE "row+7"  = LINE + < &COL ' QQ    QQ  QQ '>"
    "LINE "row+8"  = LINE + < &COL ' QQ     QQ QQ '>"
    "LINE "row+9"  = LINE + < &COL ' QQ      QQQQ '>"
    "LINE "row+10" = LINE + < &COL ' QQQQQQQQQQ   '>"
    "LINE "row+11" = LINE + < &COL '  QQQQQQQ QQ  '>"
    Return

L_R:
    "LINE "row"    = LINE + < &COL ' RRRRRRRRRRR  '>"
    "LINE "row+1"  = LINE + < &COL ' RRRRRRRRRRRR '>"
    "LINE "row+2"  = LINE + < &COL ' RR        RR '>"
    "LINE "row+3"  = LINE + < &COL ' RR        RR '>"
    "LINE "row+4"  = LINE + < &COL ' RR        RR '>"
    "LINE "row+5"  = LINE + < &COL ' RRRRRRRRRRRR '>"
    "LINE "row+6"  = LINE + < &COL ' RRRRRRRRRRR  '>"
    "LINE "row+7"  = LINE + < &COL ' RR    RR     '>"
    "LINE "row+8"  = LINE + < &COL ' RR     RR    '>"
    "LINE "row+9"  = LINE + < &COL ' RR      RR   '>"
    "LINE "row+10" = LINE + < &COL ' RR       RR  '>"
    "LINE "row+11" = LINE + < &COL ' RR        RR '>"
    Return

L_S:
    "LINE "row"    = LINE + < &COL '  SSSSSSSSSS  '>"
    "LINE "row+1"  = LINE + < &COL ' SSSSSSSSSSSS '>"
    "LINE "row+2"  = LINE + < &COL ' SS        SS '>"
    "LINE "row+3"  = LINE + < &COL ' SS           '>"
    "LINE "row+4"  = LINE + < &COL ' SSS          '>"
    "LINE "row+5"  = LINE + < &COL '  SSSSSSSSS   '>"
    "LINE "row+6"  = LINE + < &COL '   SSSSSSSSS  '>"
    "LINE "row+7"  = LINE + < &COL '          SSS '>"
    "LINE "row+8"  = LINE + < &COL '           SS '>"
    "LINE "row+9"  = LINE + < &COL ' SS        SS '>"
    "LINE "row+10" = LINE + < &COL ' SSSSSSSSSSSS '>"
    "LINE "row+11" = LINE + < &COL '  SSSSSSSSSS  '>"
    Return

L_T:
    "LINE "row"    = LINE + < &COL ' TTTTTTTTTTTT '>"
    "LINE "row+1"  = LINE + < &COL ' TTTTTTTTTTTT '>"
    "LINE "row+2"  = LINE + < &COL '      TT      '>"
    "LINE "row+3"  = LINE + < &COL '      TT      '>"
    "LINE "row+4"  = LINE + < &COL '      TT      '>"
    "LINE "row+5"  = LINE + < &COL '      TT      '>"
    "LINE "row+6"  = LINE + < &COL '      TT      '>"
    "LINE "row+7"  = LINE + < &COL '      TT      '>"
    "LINE "row+8"  = LINE + < &COL '      TT      '>"
    "LINE "row+9"  = LINE + < &COL '      TT      '>"
    "LINE "row+10" = LINE + < &COL '      TT      '>"
    "LINE "row+11" = LINE + < &COL '      TT      '>"
    Return

L_U:
    "LINE "row"    = LINE + < &COL ' UU        UU '>"
    "LINE "row+1"  = LINE + < &COL ' UU        UU '>"
    "LINE "row+2"  = LINE + < &COL ' UU        UU '>"
    "LINE "row+3"  = LINE + < &COL ' UU        UU '>"
    "LINE "row+4"  = LINE + < &COL ' UU        UU '>"
    "LINE "row+5"  = LINE + < &COL ' UU        UU '>"
    "LINE "row+6"  = LINE + < &COL ' UU        UU '>"
    "LINE "row+7"  = LINE + < &COL ' UU        UU '>"
    "LINE "row+8"  = LINE + < &COL ' UU        UU '>"
    "LINE "row+9"  = LINE + < &COL ' UU        UU '>"
    "LINE "row+10" = LINE + < &COL ' UUUUUUUUUUUU '>"
    "LINE "row+11" = LINE + < &COL '  UUUUUUUUUU  '>"
    Return

L_V:
    "LINE "row"    = LINE + < &COL ' VV        VV '>"
    "LINE "row+1"  = LINE + < &COL ' VV        VV '>"
    "LINE "row+2"  = LINE + < &COL ' VV        VV '>"
    "LINE "row+3"  = LINE + < &COL ' VV        VV '>"
    "LINE "row+4"  = LINE + < &COL ' VV        VV '>"
    "LINE "row+5"  = LINE + < &COL ' VV        VV '>"
    "LINE "row+6"  = LINE + < &COL ' VV        VV '>"
    "LINE "row+7"  = LINE + < &COL '  VV      VV  '>"
    "LINE "row+8"  = LINE + < &COL '   VV    VV   '>"
    "LINE "row+9"  = LINE + < &COL '    VV  VV    '>"
    "LINE "row+10" = LINE + < &COL '     VVVV     '>"
    "LINE "row+11" = LINE + < &COL '      VV      '>"
    Return

L_W:
    "LINE "row"    = LINE + < &COL ' WW        WW '>"
    "LINE "row+1"  = LINE + < &COL ' WW        WW '>"
    "LINE "row+2"  = LINE + < &COL ' WW        WW '>"
    "LINE "row+3"  = LINE + < &COL ' WW        WW '>"
    "LINE "row+4"  = LINE + < &COL ' WW        WW '>"
    "LINE "row+5"  = LINE + < &COL ' WW        WW '>"
    "LINE "row+6"  = LINE + < &COL ' WW   WW   WW '>"
    "LINE "row+7"  = LINE + < &COL ' WW  WWWW  WW '>"
    "LINE "row+8"  = LINE + < &COL ' WW WW  WW WW '>"
    "LINE "row+9"  = LINE + < &COL ' WWWW    WWWW '>"
    "LINE "row+10" = LINE + < &COL ' WWW      WWW '>"
    "LINE "row+11" = LINE + < &COL ' WW        WW '>"
    Return

L_X:
    "LINE "row"    = LINE + < &COL ' XX        XX '>"
    "LINE "row+1"  = LINE + < &COL ' XX        XX '>"
    "LINE "row+2"  = LINE + < &COL '  XX      XX  '>"
    "LINE "row+3"  = LINE + < &COL '   XX    XX   '>"
    "LINE "row+4"  = LINE + < &COL '    XX  XX    '>"
    "LINE "row+5"  = LINE + < &COL '     XXXX     '>"
    "LINE "row+6"  = LINE + < &COL '     XXXX     '>"
    "LINE "row+7"  = LINE + < &COL '    XX  XX    '>"
    "LINE "row+8"  = LINE + < &COL '   XX    XX   '>"
    "LINE "row+9"  = LINE + < &COL '  XX      XX  '>"
    "LINE "row+10" = LINE + < &COL ' XX        XX '>"
    "LINE "row+11" = LINE + < &COL ' XX        XX '>"
    Return

L_Y:
    "LINE "row"    = LINE + < &COL ' YY        YY '>"
    "LINE "row+1"  = LINE + < &COL ' YY        YY '>"
    "LINE "row+2"  = LINE + < &COL '  YY      YY  '>"
    "LINE "row+3"  = LINE + < &COL '   YY    YY   '>"
    "LINE "row+4"  = LINE + < &COL '    YY  YY    '>"
    "LINE "row+5"  = LINE + < &COL '     YYYY     '>"
    "LINE "row+6"  = LINE + < &COL '      YY      '>"
    "LINE "row+7"  = LINE + < &COL '      YY      '>"
    "LINE "row+8"  = LINE + < &COL '      YY      '>"
    "LINE "row+9"  = LINE + < &COL '      YY      '>"
    "LINE "row+10" = LINE + < &COL '      YY      '>"
    "LINE "row+11" = LINE + < &COL '      YY      '>"
    Return

L_Z:
    "LINE "row"    = LINE + < &COL ' ZZZZZZZZZZZZ '>"
    "LINE "row+1"  = LINE + < &COL ' ZZZZZZZZZZZZ '>"
    "LINE "row+2"  = LINE + < &COL '          ZZ  '>"
    "LINE "row+3"  = LINE + < &COL '         ZZ   '>"
    "LINE "row+4"  = LINE + < &COL '        ZZ    '>"
    "LINE "row+5"  = LINE + < &COL '       ZZ     '>"
    "LINE "row+6"  = LINE + < &COL '      ZZ      '>"
    "LINE "row+7"  = LINE + < &COL '     ZZ       '>"
    "LINE "row+8"  = LINE + < &COL '    ZZ        '>"
    "LINE "row+9"  = LINE + < &COL '   ZZ         '>"
    "LINE "row+10" = LINE + < &COL '  ZZZZZZZZZZZ '>"
    "LINE "row+11" = LINE + < &COL ' ZZZZZZZZZZZZ '>"
    Return

L_1:
    "LINE "row"    = LINE + < &COL '      11      '>"
    "LINE "row+1"  = LINE + < &COL '     111      '>"
    "LINE "row+2"  = LINE + < &COL '    1111      '>"
    "LINE "row+3"  = LINE + < &COL '      11      '>"
    "LINE "row+4"  = LINE + < &COL '      11      '>"
    "LINE "row+5"  = LINE + < &COL '      11      '>"
    "LINE "row+6"  = LINE + < &COL '      11      '>"
    "LINE "row+7"  = LINE + < &COL '      11      '>"
    "LINE "row+8"  = LINE + < &COL '      11      '>"
    "LINE "row+9"  = LINE + < &COL '      11      '>"
    "LINE "row+10" = LINE + < &COL '  1111111111  '>"
    "LINE "row+11" = LINE + < &COL '  1111111111  '>"
    Return

L_2:
    "LINE "row"    = LINE + < &COL '  2222222222  '>"
    "LINE "row+1"  = LINE + < &COL ' 222222222222 '>"
    "LINE "row+2"  = LINE + < &COL ' 22        22 '>"
    "LINE "row+3"  = LINE + < &COL '           22 '>"
    "LINE "row+4"  = LINE + < &COL '           22 '>"
    "LINE "row+5"  = LINE + < &COL '          22  '>"
    "LINE "row+6"  = LINE + < &COL '        22    '>"
    "LINE "row+7"  = LINE + < &COL '      22      '>"
    "LINE "row+8"  = LINE + < &COL '    22        '>"
    "LINE "row+9"  = LINE + < &COL '  22          '>"
    "LINE "row+10" = LINE + < &COL ' 222222222222 '>"
    "LINE "row+11" = LINE + < &COL ' 222222222222 '>"
    Return

L_3:
    "LINE "row"    = LINE + < &COL '  3333333333  '>"
    "LINE "row+1"  = LINE + < &COL ' 333333333333 '>"
    "LINE "row+2"  = LINE + < &COL ' 33        33 '>"
    "LINE "row+3"  = LINE + < &COL '           33 '>"
    "LINE "row+4"  = LINE + < &COL '           33 '>"
    "LINE "row+5"  = LINE + < &COL '        3333  '>"
    "LINE "row+6"  = LINE + < &COL '        3333  '>"
    "LINE "row+7"  = LINE + < &COL '           33 '>"
    "LINE "row+8"  = LINE + < &COL '           33 '>"
    "LINE "row+9"  = LINE + < &COL ' 33        33 '>"
    "LINE "row+10" = LINE + < &COL ' 333333333333 '>"
    "LINE "row+11" = LINE + < &COL '  3333333333  '>"
    Return

L_4:
    "LINE "row"    = LINE + < &COL '       444    '>"
    "LINE "row+1"  = LINE + < &COL '      4444    '>"
    "LINE "row+2"  = LINE + < &COL '     44 44    '>"
    "LINE "row+3"  = LINE + < &COL '    44  44    '>"
    "LINE "row+4"  = LINE + < &COL '   44   44    '>"
    "LINE "row+5"  = LINE + < &COL '  44444444444 '>"
    "LINE "row+6"  = LINE + < &COL ' 444444444444 '>"
    "LINE "row+7"  = LINE + < &COL '        44    '>"
    "LINE "row+8"  = LINE + < &COL '        44    '>"
    "LINE "row+9"  = LINE + < &COL '        44    '>"
    "LINE "row+10" = LINE + < &COL '        44    '>"
    "LINE "row+11" = LINE + < &COL '        44    '>"
    Return

L_5:
    "LINE "row"    = LINE + < &COL ' 555555555555 '>"
    "LINE "row+1"  = LINE + < &COL ' 555555555555 '>"
    "LINE "row+2"  = LINE + < &COL ' 55           '>"
    "LINE "row+3"  = LINE + < &COL ' 55           '>"
    "LINE "row+4"  = LINE + < &COL ' 55           '>"
    "LINE "row+5"  = LINE + < &COL ' 555555555    '>"
    "LINE "row+6"  = LINE + < &COL ' 5555555555   '>"
    "LINE "row+7"  = LINE + < &COL '          55  '>"
    "LINE "row+8"  = LINE + < &COL '           55 '>"
    "LINE "row+9"  = LINE + < &COL '           55 '>"
    "LINE "row+10" = LINE + < &COL ' 555555555555 '>"
    "LINE "row+11" = LINE + < &COL '  5555555555  '>"
    Return

L_6:
    "LINE "row"    = LINE + < &COL '  6666666666  '>"
    "LINE "row+1"  = LINE + < &COL ' 666666666666 '>"
    "LINE "row+2"  = LINE + < &COL ' 66        66 '>"
    "LINE "row+3"  = LINE + < &COL ' 66           '>"
    "LINE "row+4"  = LINE + < &COL ' 66           '>"
    "LINE "row+5"  = LINE + < &COL ' 66666666666  '>"
    "LINE "row+6"  = LINE + < &COL ' 666666666666 '>"
    "LINE "row+7"  = LINE + < &COL ' 66        66 '>"
    "LINE "row+8"  = LINE + < &COL ' 66        66 '>"
    "LINE "row+9"  = LINE + < &COL ' 66        66 '>"
    "LINE "row+10" = LINE + < &COL ' 666666666666 '>"
    "LINE "row+11" = LINE + < &COL '  6666666666  '>"
    Return

L_7:
    "LINE "row"    = LINE + < &COL ' 777777777777 '>"
    "LINE "row+1"  = LINE + < &COL ' 77777777777  '>"
    "LINE "row+2"  = LINE + < &COL ' 77      77   '>"
    "LINE "row+3"  = LINE + < &COL '        77    '>"
    "LINE "row+4"  = LINE + < &COL '       77     '>"
    "LINE "row+5"  = LINE + < &COL '      77      '>"
    "LINE "row+6"  = LINE + < &COL '      77      '>"
    "LINE "row+7"  = LINE + < &COL '      77      '>"
    "LINE "row+8"  = LINE + < &COL '      77      '>"
    "LINE "row+9"  = LINE + < &COL '      77      '>"
    "LINE "row+10" = LINE + < &COL '      77      '>"
    "LINE "row+11" = LINE + < &COL '      77      '>"
    Return

L_8:
    "LINE "row"    = LINE + < &COL '  8888888888  '>"
    "LINE "row+1"  = LINE + < &COL ' 888888888888 '>"
    "LINE "row+2"  = LINE + < &COL ' 88        88 '>"
    "LINE "row+3"  = LINE + < &COL ' 88        88 '>"
    "LINE "row+4"  = LINE + < &COL '  88      88  '>"
    "LINE "row+5"  = LINE + < &COL '   88888888   '>"
    "LINE "row+6"  = LINE + < &COL '   88888888   '>"
    "LINE "row+7"  = LINE + < &COL '  88      88  '>"
    "LINE "row+8"  = LINE + < &COL ' 88        88 '>"
    "LINE "row+9"  = LINE + < &COL ' 88        88 '>"
    "LINE "row+10" = LINE + < &COL ' 888888888888 '>"
    "LINE "row+11" = LINE + < &COL '  8888888888  '>"
    Return

L_9:
    "LINE "row"    = LINE + < &COL '  9999999999  '>"
    "LINE "row+1"  = LINE + < &COL ' 999999999999 '>"
    "LINE "row+2"  = LINE + < &COL ' 99        99 '>"
    "LINE "row+3"  = LINE + < &COL ' 99        99 '>"
    "LINE "row+4"  = LINE + < &COL ' 99        99 '>"
    "LINE "row+5"  = LINE + < &COL ' 999999999999 '>"
    "LINE "row+6"  = LINE + < &COL ' 999999999999 '>"
    "LINE "row+7"  = LINE + < &COL '           99 '>"
    "LINE "row+8"  = LINE + < &COL '           99 '>"
    "LINE "row+9"  = LINE + < &COL ' 99        99 '>"
    "LINE "row+10" = LINE + < &COL ' 999999999999 '>"
    "LINE "row+11" = LINE + < &COL '  9999999999  '>"
    Return

L_0:
    "LINE "row"    = LINE + < &COL '   00000000   '>"
    "LINE "row+1"  = LINE + < &COL '  0000000000  '>"
    "LINE "row+2"  = LINE + < &COL ' 00        00 '>"
    "LINE "row+3"  = LINE + < &COL ' 00        00 '>"
    "LINE "row+4"  = LINE + < &COL ' 00        00 '>"
    "LINE "row+5"  = LINE + < &COL ' 00        00 '>"
    "LINE "row+6"  = LINE + < &COL ' 00        00 '>"
    "LINE "row+7"  = LINE + < &COL ' 00        00 '>"
    "LINE "row+8"  = LINE + < &COL ' 00        00 '>"
    "LINE "row+9"  = LINE + < &COL ' 00        00 '>"
    "LINE "row+10" = LINE + < &COL '  0000000000  '>"
    "LINE "row+11" = LINE + < &COL '   00000000   '>"
    Return

L_S1:
    "LINE "row"    = LINE + < &COL ""                '''         "">"
    "LINE "row+1"  = LINE + < &COL ""                '''         "">"
    "LINE "row+2"  = LINE + < &COL ""                ''          "">"
    "LINE "row+3"  = LINE + < &COL ""                '           "">"
    "LINE "row+4"  = LINE + < &COL "                            ">"
    "LINE "row+5"  = LINE + < &COL "                            ">"
    "LINE "row+6"  = LINE + < &COL "                            ">"
    "LINE "row+7"  = LINE + < &COL "                            ">"
    "LINE "row+8"  = LINE + < &COL "                            ">"
    "LINE "row+9"  = LINE + < &COL "                            ">"
    "LINE "row+10" = LINE + < &COL "                            ">"
    "LINE "row+11" = LINE + < &COL "                            ">"
    Return

L_S2:
    q  = '  """   """   '
    "LINE "row"    = LINE + < &COL '"q"'>"
    "LINE "row+1"  = LINE + < &COL '"q"'>"
    q  = '  ""    ""    '
    "LINE "row+2"  = LINE + < &COL '"q"'>"
    q  = '  "     "     '
    "LINE "row+3"  = LINE + < &COL '"q"'>"
    "LINE "row+4"  = LINE + < &COL '              '>"
    "LINE "row+5"  = LINE + < &COL '              '>"
    "LINE "row+6"  = LINE + < &COL '              '>"
    "LINE "row+7"  = LINE + < &COL '              '>"
    "LINE "row+8"  = LINE + < &COL '              '>"
    "LINE "row+9"  = LINE + < &COL '              '>"
    "LINE "row+10" = LINE + < &COL '              '>"
    "LINE "row+11" = LINE + < &COL '              '>"
    Return

L_S3:
    "LINE "row"    = LINE + < &COL '              '>"
    "LINE "row+1"  = LINE + < &COL '              '>"
    "LINE "row+2"  = LINE + < &COL '              '>"
    "LINE "row+3"  = LINE + < &COL '              '>"
    "LINE "row+4"  = LINE + < &COL ' -----------  '>"
    "LINE "row+5"  = LINE + < &COL ' -----------  '>"
    "LINE "row+6"  = LINE + < &COL ' -----------  '>"
    "LINE "row+7"  = LINE + < &COL '              '>"
    "LINE "row+8"  = LINE + < &COL '              '>"
    "LINE "row+9"  = LINE + < &COL '              '>"
    "LINE "row+10" = LINE + < &COL '              '>"
    "LINE "row+11" = LINE + < &COL '              '>"
    Return

L_S4:
    "LINE "row"    = LINE + < &COL '              '>"
    "LINE "row+1"  = LINE + < &COL '              '>"
    "LINE "row+2"  = LINE + < &COL '              '>"
    "LINE "row+3"  = LINE + < &COL '              '>"
    "LINE "row+4"  = LINE + < &COL '  = = = = = = = = = = =  '>"
    "LINE "row+5"  = LINE + < &COL '              '>"
    "LINE "row+6"  = LINE + < &COL '  = = = = = = = = = = =  '>"
    "LINE "row+7"  = LINE + < &COL '              '>"
    "LINE "row+8"  = LINE + < &COL '              '>"
    "LINE "row+9"  = LINE + < &COL '              '>"
    "LINE "row+10" = LINE + < &COL '              '>"
    "LINE "row+11" = LINE + < &COL '              '>"
    Return

L_S5:
    "LINE "row"    = LINE + < &COL '            / '>"
    "LINE "row+1"  = LINE + < &COL '           // '>"
    "LINE "row+2"  = LINE + < &COL '          //  '>"
    "LINE "row+3"  = LINE + < &COL '         //   '>"
    "LINE "row+4"  = LINE + < &COL '        //    '>"
    "LINE "row+5"  = LINE + < &COL '       //     '>"
    "LINE "row+6"  = LINE + < &COL '      //      '>"
    "LINE "row+7"  = LINE + < &COL '     //       '>"
    "LINE "row+8"  = LINE + < &COL '    //        '>"
    "LINE "row+9"  = LINE + < &COL '   //         '>"
    "LINE "row+10" = LINE + < &COL '  //          '>"
    "LINE "row+11" = LINE + < &COL ' //           '>"
    Return

L_S6:
    "LINE "row"    = LINE + < &COL ' %%%%%%     %%'>"
    "LINE "row+1"  = LINE + < &COL ' %%  %%    %% '>"
    "LINE "row+2"  = LINE + < &COL ' %%  %%   %%  '>"
    "LINE "row+3"  = LINE + < &COL ' %%%%%%  %%   '>"
    "LINE "row+4"  = LINE + < &COL '        %%    '>"
    "LINE "row+5"  = LINE + < &COL '       %%     '>"
    "LINE "row+6"  = LINE + < &COL '      %%      '>"
    "LINE "row+7"  = LINE + < &COL '     %%       '>"
    "LINE "row+8"  = LINE + < &COL '    %% %%%%%% '>"
    "LINE "row+9"  = LINE + < &COL '   %%  %%  %% '>"
    "LINE "row+10" = LINE + < &COL '  %%   %%  %% '>"
    "LINE "row+11" = LINE + < &COL ' %%    %%%%%% '>"
    Return

L_S7:
    "LINE "row"    = LINE + < &COL '      **      '>"
    "LINE "row+1"  = LINE + < &COL '  **  **  **  '>"
    "LINE "row+2"  = LINE + < &COL '   ** ** **   '>"
    "LINE "row+3"  = LINE + < &COL '     ****     '>"
    "LINE "row+4"  = LINE + < &COL '      **      '>"
    "LINE "row+5"  = LINE + < &COL ' ************ '>"
    "LINE "row+6"  = LINE + < &COL ' ************ '>"
    "LINE "row+7"  = LINE + < &COL '      **      '>"
    "LINE "row+8"  = LINE + < &COL '     ****     '>"
    "LINE "row+9"  = LINE + < &COL '   ** ** **   '>"
    "LINE "row+10" = LINE + < &COL '  **  **  **  '>"
    "LINE "row+11" = LINE + < &COL '      **      '>"
    Return

L_S8:
    "LINE "row"    = LINE + < &COL '  ??????????  '>"
    "LINE "row+1"  = LINE + < &COL ' ???????????? '>"
    "LINE "row+2"  = LINE + < &COL ' ??        ?? '>"
    "LINE "row+3"  = LINE + < &COL ' ??        ?? '>"
    "LINE "row+4"  = LINE + < &COL '  ??      ??  '>"
    "LINE "row+5"  = LINE + < &COL '        ??    '>"
    "LINE "row+6"  = LINE + < &COL '      ??      '>"
    "LINE "row+7"  = LINE + < &COL '      ??      '>"
    "LINE "row+8"  = LINE + < &COL '      ??      '>"
    "LINE "row+9"  = LINE + < &COL '              '>"
    "LINE "row+10" = LINE + < &COL '      ??      '>"
    "LINE "row+11" = LINE + < &COL '      ??      '>"
    Return

L_S9:
    "LINE "row"    = LINE + < &COL '              '>"
    "LINE "row+1"  = LINE + < &COL '              '>"
    "LINE "row+2"  = LINE + < &COL '              '>"
    "LINE "row+3"  = LINE + < &COL '              '>"
    "LINE "row+4"  = LINE + < &COL '              '>"
    "LINE "row+5"  = LINE + < &COL '              '>"
    "LINE "row+6"  = LINE + < &COL '              '>"
    "LINE "row+7"  = LINE + < &COL '              '>"
    "LINE "row+8"  = LINE + < &COL '              '>"
    "LINE "row+9"  = LINE + < &COL '      ..      '>"
    "LINE "row+10" = LINE + < &COL '     ....     '>"
    "LINE "row+11" = LINE + < &COL '      ..      '>"
    Return

L_S10:
    "LINE "row"    = LINE + < &COL '              '>"
    "LINE "row+1"  = LINE + < &COL '              '>"
    "LINE "row+2"  = LINE + < &COL '              '>"
    "LINE "row+3"  = LINE + < &COL '              '>"
    "LINE "row+4"  = LINE + < &COL '              '>"
    "LINE "row+5"  = LINE + < &COL '              '>"
    "LINE "row+6"  = LINE + < &COL '              '>"
    "LINE "row+7"  = LINE + < &COL '              '>"
    "LINE "row+8"  = LINE + < &COL '     ,,,,     '>"
    "LINE "row+9"  = LINE + < &COL '     ,,,,,    '>"
    "LINE "row+10" = LINE + < &COL '      ,,,     '>"
    "LINE "row+11" = LINE + < &COL '     ,,       '>"
    Return

L_S11:
    "LINE "row"    = LINE + < &COL '              '>"
    "LINE "row+1"  = LINE + < &COL '              '>"
    "LINE "row+2"  = LINE + < &COL '              '>"
    "LINE "row+3"  = LINE + < &COL '              '>"
    "LINE "row+4"  = LINE + < &COL '      ..      '>"
    "LINE "row+5"  = LINE + < &COL '     ....     '>"
    "LINE "row+6"  = LINE + < &COL '      ..      '>"
    "LINE "row+7"  = LINE + < &COL '              '>"
    "LINE "row+8"  = LINE + < &COL '              '>"
    "LINE "row+9"  = LINE + < &COL '      ..      '>"
    "LINE "row+10" = LINE + < &COL '     ....     '>"
    "LINE "row+11" = LINE + < &COL '      ..      '>"
    Return

L_S12:
    "LINE "row"    = LINE + < &COL '              '>"
    "LINE "row+1"  = LINE + < &COL '              '>"
    "LINE "row+2"  = LINE + < &COL '              '>"
    "LINE "row+3"  = LINE + < &COL '              '>"
    "LINE "row+4"  = LINE + < &COL '      ..      '>"
    "LINE "row+5"  = LINE + < &COL '     ....     '>"
    "LINE "row+6"  = LINE + < &COL '      ..      '>"
    "LINE "row+7"  = LINE + < &COL '              '>"
    "LINE "row+8"  = LINE + < &COL '     ,,,,     '>"
    "LINE "row+9"  = LINE + < &COL '     ,,,,,    '>"
    "LINE "row+10" = LINE + < &COL '      ,,,     '>"
    "LINE "row+11" = LINE + < &COL '     ,,       '>"
    Return

L_S13:
    "LINE "row"    = LINE + < &COL '              '>"
    "LINE "row+1"  = LINE + < &COL '     ++++     '>"
    "LINE "row+2"  = LINE + < &COL '     ++++     '>"
    "LINE "row+3"  = LINE + < &COL '     ++++     '>"
    "LINE "row+4"  = LINE + < &COL ' ++++++++++++ '>"
    "LINE "row+5"  = LINE + < &COL ' ++++++++++++ '>"
    "LINE "row+6"  = LINE + < &COL ' ++++++++++++ '>"
    "LINE "row+7"  = LINE + < &COL '     ++++     '>"
    "LINE "row+8"  = LINE + < &COL '     ++++     '>"
    "LINE "row+9"  = LINE + < &COL '     ++++     '>"
    "LINE "row+10" = LINE + < &COL '     ++++     '>"
    "LINE "row+11" = LINE + < &COL '              '>"
    Return

L_S14:
    "LINE "row"    = LINE + < &COL '       ((     '>"
    "LINE "row+1"  = LINE + < &COL '      ((      '>"
    "LINE "row+2"  = LINE + < &COL '     ((       '>"
    "LINE "row+3"  = LINE + < &COL '    ((        '>"
    "LINE "row+4"  = LINE + < &COL '   ((         '>"
    "LINE "row+5"  = LINE + < &COL '   ((         '>"
    "LINE "row+6"  = LINE + < &COL '   ((         '>"
    "LINE "row+7"  = LINE + < &COL '   ((         '>"
    "LINE "row+8"  = LINE + < &COL '    ((        '>"
    "LINE "row+9"  = LINE + < &COL '     ((       '>"
    "LINE "row+10" = LINE + < &COL '      ((      '>"
    "LINE "row+11" = LINE + < &COL '       ((     '>"
    Return

L_S15:
    "LINE "row"    = LINE + < &COL '     ))       '>"
    "LINE "row+1"  = LINE + < &COL '      ))      '>"
    "LINE "row+2"  = LINE + < &COL '       ))     '>"
    "LINE "row+3"  = LINE + < &COL '        ))    '>"
    "LINE "row+4"  = LINE + < &COL '         ))   '>"
    "LINE "row+5"  = LINE + < &COL '         ))   '>"
    "LINE "row+6"  = LINE + < &COL '         ))   '>"
    "LINE "row+7"  = LINE + < &COL '         ))   '>"
    "LINE "row+8"  = LINE + < &COL '        ))    '>"
    "LINE "row+9"  = LINE + < &COL '       ))     '>"
    "LINE "row+10" = LINE + < &COL '      ))      '>"
    "LINE "row+11" = LINE + < &COL '     ))       '>"
    Return

L_S16:
    "LINE "row"    = LINE + < &COL '     !!!!     '>"
    "LINE "row+1"  = LINE + < &COL '     !!!!     '>"
    "LINE "row+2"  = LINE + < &COL '     !!!!     '>"
    "LINE "row+3"  = LINE + < &COL '     !!!!     '>"
    "LINE "row+4"  = LINE + < &COL '     !!!!     '>"
    "LINE "row+5"  = LINE + < &COL '     !!!!     '>"
    "LINE "row+6"  = LINE + < &COL '     !!!!     '>"
    "LINE "row+7"  = LINE + < &COL '     !!!!     '>"
    "LINE "row+8"  = LINE + < &COL '              '>"
    "LINE "row+9"  = LINE + < &COL '              '>"
    "LINE "row+10" = LINE + < &COL '     !!!!     '>"
    "LINE "row+11" = LINE + < &COL '     !!!!     '>"
    Return

L_S17:
    "LINE "row"    = LINE + < &COL '     ¦¦¦¦     '>"
    "LINE "row+1"  = LINE + < &COL '     ¦¦¦¦     '>"
    "LINE "row+2"  = LINE + < &COL '     ¦¦¦¦     '>"
    "LINE "row+3"  = LINE + < &COL '     ¦¦¦¦     '>"
    "LINE "row+4"  = LINE + < &COL '     ¦¦¦¦     '>"
    "LINE "row+5"  = LINE + < &COL '              '>"
    "LINE "row+6"  = LINE + < &COL '              '>"
    "LINE "row+7"  = LINE + < &COL '     ¦¦¦¦     '>"
    "LINE "row+8"  = LINE + < &COL '     ¦¦¦¦     '>"
    "LINE "row+9"  = LINE + < &COL '     ¦¦¦¦     '>"
    "LINE "row+10" = LINE + < &COL '     ¦¦¦¦     '>"
    "LINE "row+11" = LINE + < &COL '     ¦¦¦¦     '>"
    Return

L_S18:
    "LINE "row"    = LINE + < &COL '     ||||     '>"
    "LINE "row+1"  = LINE + < &COL '     ||||     '>"
    "LINE "row+2"  = LINE + < &COL '     ||||     '>"
    "LINE "row+3"  = LINE + < &COL '     ||||     '>"
    "LINE "row+4"  = LINE + < &COL '     ||||     '>"
    "LINE "row+5"  = LINE + < &COL '     ||||     '>"
    "LINE "row+6"  = LINE + < &COL '     ||||     '>"
    "LINE "row+7"  = LINE + < &COL '     ||||     '>"
    "LINE "row+8"  = LINE + < &COL '     ||||     '>"
    "LINE "row+9"  = LINE + < &COL '     ||||     '>"
    "LINE "row+10" = LINE + < &COL '     ||||     '>"
    "LINE "row+11" = LINE + < &COL '     ||||     '>"
    Return

L_S19:
    "LINE "row"    = LINE + < &COL '              '>"
    "LINE "row+1"  = LINE + < &COL '              '>"
    "LINE "row+2"  = LINE + < &COL '              '>"
    "LINE "row+3"  = LINE + < &COL '              '>"
    "LINE "row+4"  = LINE + < &COL '              '>"
    "LINE "row+5"  = LINE + < &COL '              '>"
    "LINE "row+6"  = LINE + < &COL '              '>"
    "LINE "row+7"  = LINE + < &COL '              '>"
    "LINE "row+8"  = LINE + < &COL '              '>"
    "LINE "row+9"  = LINE + < &COL '              '>"
    "LINE "row+10" = LINE + < &COL ' ____________ '>"
    "LINE "row+11" = LINE + < &COL ' ____________ '>"
    Return

L_S20:
    "LINE "row"    = LINE + < &COL '       <<<    '>"
    "LINE "row+1"  = LINE + < &COL '      <<<     '>"
    "LINE "row+2"  = LINE + < &COL '     <<<      '>"
    "LINE "row+3"  = LINE + < &COL '    <<<       '>"
    "LINE "row+4"  = LINE + < &COL '   <<<        '>"
    "LINE "row+5"  = LINE + < &COL '  <<<         '>"
    "LINE "row+6"  = LINE + < &COL ' <<<          '>"
    "LINE "row+7"  = LINE + < &COL '  <<<         '>"
    "LINE "row+8"  = LINE + < &COL '   <<<        '>"
    "LINE "row+9"  = LINE + < &COL '    <<<       '>"
    "LINE "row+10" = LINE + < &COL '     <<<      '>"
    "LINE "row+11" = LINE + < &COL '      <<<     '>"
    Return

L_S21:
    "LINE "row"    = LINE + < &COL '    >>>       '>"
    "LINE "row+1"  = LINE + < &COL '     >>>      '>"
    "LINE "row+2"  = LINE + < &COL '      >>>     '>"
    "LINE "row+3"  = LINE + < &COL '       >>>    '>"
    "LINE "row+4"  = LINE + < &COL '        >>>   '>"
    "LINE "row+5"  = LINE + < &COL '         >>>  '>"
    "LINE "row+6"  = LINE + < &COL '          >>> '>"
    "LINE "row+7"  = LINE + < &COL '         >>>  '>"
    "LINE "row+8"  = LINE + < &COL '        >>>   '>"
    "LINE "row+9"  = LINE + < &COL '       >>>    '>"
    "LINE "row+10" = LINE + < &COL '      >>>     '>"
    "LINE "row+11" = LINE + < &COL '     >>>      '>"
    Return

L_S22:
    "LINE "row"    = LINE + < &COL '              '>"
    "LINE "row+1"  = LINE + < &COL '              '>"
    "LINE "row+2"  = LINE + < &COL '              '>"
    "LINE "row+3"  = LINE + < &COL '              '>"
    "LINE "row+4"  = LINE + < &COL '              '>"
    "LINE "row+5"  = LINE + < &COL '              '>"
    "LINE "row+6"  = LINE + < &COL '              '>"
    "LINE "row+7"  = LINE + < &COL '              '>"
    "LINE "row+8"  = LINE + < &COL '              '>"
    "LINE "row+9"  = LINE + < &COL '              '>"
    "LINE "row+10" = LINE + < &COL '              '>"
    "LINE "row+11" = LINE + < &COL '              '>"
    Return

L_S23:
    "LINE "row"    = LINE + < &COL '     $$$      '>"
    "LINE "row+1"  = LINE + < &COL '  $$$$$$$$$$  '>"
    "LINE "row+2"  = LINE + < &COL ' $$$$$$$$$$$$ '>"
    "LINE "row+3"  = LINE + < &COL ' $$  $$$   $$ '>"
    "LINE "row+4"  = LINE + < &COL ' $$$ $$$      '>"
    "LINE "row+5"  = LINE + < &COL '  $$$$$$$$$   '>"
    "LINE "row+6"  = LINE + < &COL '   $$$$$$$$$  '>"
    "LINE "row+7"  = LINE + < &COL '     $$$  $$$ '>"
    "LINE "row+8"  = LINE + < &COL ' $$  $$$   $$ '>"
    "LINE "row+9"  = LINE + < &COL ' $$$$$$$$$$$$ '>"
    "LINE "row+10" = LINE + < &COL '  $$$$$$$$$$  '>"
    "LINE "row+11" = LINE + < &COL '     $$$      '>"
    Return

L_S24:
    "LINE "row"    = LINE + < &COL '   @@@@@@@@   '>"
    "LINE "row+1"  = LINE + < &COL '  @@@@@@@@@@  '>"
    "LINE "row+2"  = LINE + < &COL ' @@@      @@@ '>"
    "LINE "row+3"  = LINE + < &COL ' @@  @@@@  @@ '>"
    "LINE "row+4"  = LINE + < &COL ' @@ @@@@@@ @@ '>"
    "LINE "row+5"  = LINE + < &COL ' @@ @@  @@ @@ '>"
    "LINE "row+6"  = LINE + < &COL ' @@ @@  @@ @@ '>"
    "LINE "row+7"  = LINE + < &COL ' @@  @@@@@@@@ '>"
    "LINE "row+8"  = LINE + < &COL ' @@    @@@@@@ '>"
    "LINE "row+9"  = LINE + < &COL ' @@@       @@ '>"
    "LINE "row+10" = LINE + < &COL '  @@@@@@@@@@  '>"
    "LINE "row+11" = LINE + < &COL '    @@@@@@@   '>"
    Return

L_S25:
    o.1 ='   &&&&&      '
    o.2 ='  &&   &&     '
    o.3 ='  &&   &&     '
    o.4 ='  &&   &&     '
    o.5 ='   && &&      '
    o.6 ='  &&&&&&   && '
    o.7 =' &&   &&& &&  '
    o.8 =' &&    &&&&   '
    o.9 =' &&     &&    '
    o.10=' &&     &&&   '
    o.11='  &&&&&&& &&  '
    o.12='   &&&&&   && '
    Do i=row To row+11
        "(line)=LINE" i
        line=Overlay(o.i,line,col)
        "LINE" i"=(line)"
    End
    Return

L_S26:
    "LINE "row"    = LINE + < &COL '    ##  ##    '>"
    "LINE "row+1"  = LINE + < &COL '    ##  ##    '>"
    "LINE "row+2"  = LINE + < &COL ' ############ '>"
    "LINE "row+3"  = LINE + < &COL ' ############ '>"
    "LINE "row+4"  = LINE + < &COL '    ##  ##    '>"
    "LINE "row+5"  = LINE + < &COL '    ##  ##    '>"
    "LINE "row+6"  = LINE + < &COL '    ##  ##    '>"
    "LINE "row+7"  = LINE + < &COL '    ##  ##    '>"
    "LINE "row+8"  = LINE + < &COL ' ############ '>"
    "LINE "row+9"  = LINE + < &COL ' ############ '>"
    "LINE "row+10" = LINE + < &COL '    ##  ##    '>"
    "LINE "row+11" = LINE + < &COL '    ##  ##    '>"
    Return

L_S27:
    "LINE "row"    = LINE + < &COL '   [[[[[[     '>"
    "LINE "row+1"  = LINE + < &COL '   [[[[[[     '>"
    "LINE "row+2"  = LINE + < &COL '   [[         '>"
    "LINE "row+3"  = LINE + < &COL '   [[         '>"
    "LINE "row+4"  = LINE + < &COL '   [[         '>"
    "LINE "row+5"  = LINE + < &COL '   [[         '>"
    "LINE "row+6"  = LINE + < &COL '   [[         '>"
    "LINE "row+7"  = LINE + < &COL '   [[         '>"
    "LINE "row+8"  = LINE + < &COL '   [[         '>"
    "LINE "row+9"  = LINE + < &COL '   [[         '>"
    "LINE "row+10" = LINE + < &COL '   [[[[[[     '>"
    "LINE "row+11" = LINE + < &COL '   [[[[[[     '>"
    Return

L_S28:
    "LINE "row"    = LINE + < &COL '   ]]]]]]     '>"
    "LINE "row+1"  = LINE + < &COL '   ]]]]]]     '>"
    "LINE "row+2"  = LINE + < &COL '       ]]     '>"
    "LINE "row+3"  = LINE + < &COL '       ]]     '>"
    "LINE "row+4"  = LINE + < &COL '       ]]     '>"
    "LINE "row+5"  = LINE + < &COL '       ]]     '>"
    "LINE "row+6"  = LINE + < &COL '       ]]     '>"
    "LINE "row+7"  = LINE + < &COL '       ]]     '>"
    "LINE "row+8"  = LINE + < &COL '       ]]     '>"
    "LINE "row+9"  = LINE + < &COL '       ]]     '>"
    "LINE "row+10" = LINE + < &COL '   ]]]]]]     '>"
    "LINE "row+11" = LINE + < &COL '   ]]]]]]     '>"
    Return

L_S29:
    "LINE "row"    = LINE + < &COL ' \            '>"
    "LINE "row+1"  = LINE + < &COL ' \\           '>"
    "LINE "row+2"  = LINE + < &COL '  \\          '>"
    "LINE "row+3"  = LINE + < &COL '   \\         '>"
    "LINE "row+4"  = LINE + < &COL '    \\        '>"
    "LINE "row+5"  = LINE + < &COL '     \\       '>"
    "LINE "row+6"  = LINE + < &COL '      \\      '>"
    "LINE "row+7"  = LINE + < &COL '       \\     '>"
    "LINE "row+8"  = LINE + < &COL '        \\    '>"
    "LINE "row+9"  = LINE + < &COL '         \\   '>"
    "LINE "row+10" = LINE + < &COL '          \\  '>"
    "LINE "row+11" = LINE + < &COL '           \\ '>"
    Return

L_S30:
    "LINE "row"    = LINE + < &COL '   ~~~     ~~ '>"
    "LINE "row+1"  = LINE + < &COL '  ~~~~~~~~~~  '>"
    "LINE "row+2"  = LINE + < &COL ' ~~    ~~~    '>"
    "LINE "row+3"  = LINE + < &COL '              '>"
    "LINE "row+4"  = LINE + < &COL '              '>"
    "LINE "row+5"  = LINE + < &COL '              '>"
    "LINE "row+6"  = LINE + < &COL '              '>"
    "LINE "row+7"  = LINE + < &COL '              '>"
    "LINE "row+8"  = LINE + < &COL '              '>"
    "LINE "row+9"  = LINE + < &COL '              '>"
    "LINE "row+10" = LINE + < &COL '              '>"
    "LINE "row+11" = LINE + < &COL '              '>"
    Return

L_S31:
    "LINE "row"    = LINE + < &COL ' ``           '>"
    "LINE "row+1"  = LINE + < &COL '  ``          '>"
    "LINE "row+2"  = LINE + < &COL '   ``         '>"
    "LINE "row+3"  = LINE + < &COL '     `        '>"
    "LINE "row+4"  = LINE + < &COL '              '>"
    "LINE "row+5"  = LINE + < &COL '              '>"
    "LINE "row+6"  = LINE + < &COL '              '>"
    "LINE "row+7"  = LINE + < &COL '              '>"
    "LINE "row+8"  = LINE + < &COL '              '>"
    "LINE "row+9"  = LINE + < &COL '              '>"
    "LINE "row+10" = LINE + < &COL '              '>"
    "LINE "row+11" = LINE + < &COL '              '>"
    Return

L_S32:
    "LINE "row"    = LINE + < &COL '              '>"
    "LINE "row+1"  = LINE + < &COL '              '>"
    "LINE "row+2"  = LINE + < &COL '              '>"
    "LINE "row+3"  = LINE + < &COL '              '>"
    "LINE "row+4"  = LINE + < &COL '              '>"
    "LINE "row+5"  = LINE + < &COL ' ¬¬¬¬¬¬¬¬¬¬¬¬ '>"
    "LINE "row+6"  = LINE + < &COL ' ¬¬¬¬¬¬¬¬¬¬¬¬ '>"
    "LINE "row+7"  = LINE + < &COL '           ¬¬ '>"
    "LINE "row+8"  = LINE + < &COL '           ¬¬ '>"
    "LINE "row+9"  = LINE + < &COL '           ¬¬ '>"
    "LINE "row+10" = LINE + < &COL '              '>"
    "LINE "row+11" = LINE + < &COL '              '>"
    Return

L_space:                                    /* Space                  */
    "LINE "row"    = LINE + < &COL '              '>"
    "LINE "row+1"  = LINE + < &COL '              '>"
    "LINE "row+2"  = LINE + < &COL '              '>"
    "LINE "row+3"  = LINE + < &COL '              '>"
    "LINE "row+4"  = LINE + < &COL '              '>"
    "LINE "row+5"  = LINE + < &COL '              '>"
    "LINE "row+6"  = LINE + < &COL '              '>"
    "LINE "row+7"  = LINE + < &COL '              '>"
    "LINE "row+8"  = LINE + < &COL '              '>"
    "LINE "row+9"  = LINE + < &COL '              '>"
    "LINE "row+10" = LINE + < &COL '              '>"
    "LINE "row+11" = LINE + < &COL '              '>"
    Return


/*--------------------------------------------------------------------*/
/* Centre text                                                        */
/*--------------------------------------------------------------------*/
bigcentr:
    "(x) = LABEL .F"
    If rc = 0 Then Do
        "(frl) = LINENUM .F"
        "(x) = LABEL .T"
        If rc /= 0 Then Do
            zedlmsg = "Label '.F' must have a terminating '.T'."
            Signal erx1
        End
        Else "(tol) = LINENUM .T"
    End
    "(LRECL) = LRECL"
    Do lin=frl By 1 Until lin >= tol
        "(line) = LINE &LIN"
        If lin > 1 Then Do
            "CURSOR = " lin - 1
            "DOWN CURSOR"
        End
        padl = lrecl - len
        half = padl % 2
        padc = Substr(pad,1,half,pad)
        line   = Substr(padc||Substr(line,1,len),1,lrecl,pad)
        "LINE &LIN = (line)"
    End
    zedlmsg = "Data moved accross "half" characters."
    Address ISPEXEC "SETMSG MSG(ISRZ001)"
    Return


/*--------------------------------------------------------------------*/
/* Parse parameters                                                   */
/*--------------------------------------------------------------------*/
parse_parms:


/*--------------------------------------------------------------------*/
/* Parse parameters (Expects parameter list in variable "parm#")      */
/*--------------------------------------------------------------------*/
Parse_parms:
    #parm#=parm#

    If #tr/='R' Then Do
        #tr=parse_cons('TRACE','R','O')
        If #tr='O' Then #tr=parse_cons('/TR','R','O',3)
    End
    centre=parse_cons('centre','1','0');If centre Then col=0
    down=parse_cons('down','1','0')
    down=parse_cons('accross','0',down)
    fit=parse_cons('fit','1','0')

    pad=parse_varb('p=','???')
    If pad='???' Then pad=' ';Else pad=Substr(pad,1,1)
    cpl=parse_varb('cpl=',0,'NUM')
    If ¬Datatype(cpl,'W') Then Do
        zedlmsg="cpl=.. parameter not numeric. Correct and re-enter."
        Signal err01
    End
    If (cpl*14)-2 >= lrecl Then Do
        zedlmsg="cpl=.. parameter generates logical string > LRECL="lrecl"."
        Signal err01
    End
    string=
    xx=parse_cons('alpha','1','0',5);If xx Then string=alphabet
    xx=parse_cons('num','1','0',3);If xx Then string=numbers
    xx=parse_cons('spec','1','0',4);If xx Then string=specials
    If string/='' Then Return 0

    If parm#='' & cpl>0 & centre Then Return 0

    If parm#='' Then Do
        zedlmsg="Missing character string parameter."
        Signal err01
    End

    string=Translate(parm#)

    Return 0

err01:
    Address ISPEXEC "SETMSG MSG(ISRZ001)";Exit 8

/*--------------------------------------------------------------------*/
/* Parse string 'parm#' with 'mask'. Result set to 'N' if mask not    */
/* found or set to 'Y' if found. Can pass positive/negative result    */
/* substitution as the 2 and 3 parameter. Defaults are Y and N.       */
/* Can set null return value for either by passing 'NULL'. Can set    */
/* either to the original mask by entering '*' (suggest 'NULL' for the*/
/* other value).                                                      */
/* Can pass a mask length as fourth parameter. Comma delimit to pad   */
/* out if prior parameters are not supplied.                          */
/* Can pass 'WORD' as fourth parameter to return the word that        */
/* contain that mask (word does not need to start with mask).         */
/*--------------------------------------------------------------------*/
parse_cons: Procedure Expose parm#;Parse Arg mask,posr,negr,maskl
    If posr=''     Then posr='Y' ;If negr=''     Then negr='N'
    If posr='NULL' Then posr=''  ;If negr='NULL' Then negr=''
    If posr='*'    Then posr=mask;If negr='*'    Then negr=mask
    Select
        When (maskl='WORD') Then Do
            y#=0;xxx=parm#
            Do i=1 To Words(xxx)
                Parse VAR xxx x_x xxx
                If Index(x_x,mask)>0 Then Do;y#=i;posr=x_x;Leave;End
            End
        End
        When (Datatype(maskl,'W')) Then Do
            y#=0;xxx=parm#
            Do i=1 To Words(xxx)
                Parse VAR xxx x_x xxx
                If Substr(x_x,1,maskl)=Substr(mask,1,maskl) Then Do
                    y#=i;Leave
                End
            End
        End
        Otherwise y#=Wordpos(mask,parm#)
    End
    If y#>0 Then Do;parm#=Delword(parm#,y#,1);Return posr;End
    Return negr

/*--------------------------------------------------------------------*/
/* Parse string 'parm#' with 'mask'. Result set to 'N' if mask not    */
/* found or set to next space delimeted value immediately following   */
/* the mask (NULLs is a valid value).                                 */
/* Can pass positive/negative result substitution as the 2 parameter. */
/* Can pass 'NUM' as third parameter to check for numerics and return */
/* negative result if not numeric.                                    */
/*--------------------------------------------------------------------*/
parse_varb: Procedure Expose parm#;Parse Arg mask,negr,dt
    If negr='' Then negr='N'
    parm##=' 'parm#;m#=' 'mask;y#=Index(parm##,m#)
    If y# > 0 Then Do
        If Substr(parm##,y#+Length(m#),1)='' Then Do
            px='';data="Parse VAR parm## p1 '"m#"' p2"
        End
        Else data="Parse VAR parm## p1 '"m#"' px p2"
        Interpret data
        parm#=Strip(p1) Strip(p2)
        If dt='NUM' & Datatype(px)/='NUM' Then Return negr
        Else                                   Return px
    End
    Return negr
