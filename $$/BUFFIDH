%headline=' 3270 Data Streams '
%#linemode=1

.1. Runtime  Parameters:
!G

.1a. Panel source(member):
!G
     Dataset(member) where panel to be converted resides.

.1b. Copy library:
!G
     PDS where the copybook created is to be placed prior to inclusion into the
     assembler source code.
     Member     - The name of the copybook (if not unique, it will replace the
!y              wb
                  existing member).
     Scrsize    - The name of the variable (in the copybook member) that will be
!y              wb
                  used to EQUate the 3270 data streams' length.
.1c. Runtime conversion parameters:
!G
     Start line - Line to start generating data stream from. Range is 1 to 24.
!y              wb
     End line   - Line to end generate data strem on. The range is 1 to 24.
!y              wb
                  Greater lines are not allowed for because of SBA limitations
                  of processing program.
     Line#on    - Whether line numbers are to be placed on the SBA string.
!y              wb
                  Lines are handy for easier addresability to SBA for changes.
                  Format of line numbers are LINErowcol, eg. LINE1655 for row 16
!                                            y   w     b     y   w    b       w
                  column 55.  Selection of Y will automatically turn on macro
!                        w  b
                  expansion.
     Macro Expd - Expand the macro during conversion or wait till assembly. You
!y              wb
                  may suppress macro insertion by entering S into this option.
!                                                          yb
     Ext attrib - Extended attributes supported, ie. for colour terminals.
!y              wb
                  Selection of N will place the MONO parameter on the WCCDC
!                              yb               w   b                 w
                  macro.
     WCC indic. - Write Control Command character.
!y              wb
=y                  wb
                  W - write
                  E - erase write
                  A - erase/write alterntate.
     T'lation   - Whether leading/trailing spaces are to be removed.
!y              wb
=

.1d. Commands in display panel:
!G
     EDITA | EA - Edit the@Assembler copybook member+generated.
!y         by   wb
     EDITP | EP - Edit the ISPPLIB dateset or dataset(member).
!y         by   wb
     TEST       - Display the panel.
!y              wb
     LOAD       - Assemble, link-edit, load and display the converted 3270 data
!y              wb
                  stream. Note, the conversion need to have been executed prior
                  to this command.
     HXM        - Process XMEM tutorial panels. (Dedicated command. Don't use
!y              wb
                  unless you know what you are doing.)
     CANcel     - Cancel out of panel without saving setting for next session.
!y              wb


.2. Processin Strategy:
!G

 The objectives are:
!g
=y         b
        1. Generate a 3270 BUFFER outlay from an ISPF created panel.
        2. Position text/IO fields without finger counting.
        3. Set up basic attributes for the fields.

 Processing strategy:
!g
        1. Design panel using editer. Test under ISPF option 7.2.
!y         b                                                 w  b
        2. Convert panel to copybook.
        3. Test outlay using 3270 data stream test command TEST.
!y         b                                               y   b
           If unsatisfactory,
!
              THEN play with ISPF again.
!y                 b
              ELSE and only then:
!y                 b
        4. Edit copybook member. (Remember the EDITM command ?)
!y         b                                   y     b
        5. Make any changes/enhacements to the member. Re-assemble.
        6. GOTO step 3.

.3. ISPF panels and limitations:
!G                                                                            `

 Create a panel under ISPF using the editer. Adhere to appropriate syntax.

 Limitations.
!g

 ATTR section.
!g
   1. Ensure all entries are in C-A-P-I-T-A-L-S.
!y    b                         ybybybybybybybyb

   2. Ensure DEFAULT(...), if used, starts in column 7. If not specified, %+_
!y    b      y           b                           wb                   y
      will be assumed.


   3. The following parameters will be interpreted:
!y    b
        c      - Attribute character. (If using hex characters, use in both ATTR
!y             w b                                                          y
                 and BODY sections with HEX turned on.)
!                    y    b             w   b
=y             w b                                                          w
        TYPE   - INPUT, OUTPUT  or TEXT.
        INTENS - HIGH, LOW or NON.
        COLOR  - WHITE, BLUE, RED, PINK, GREEN, YELLOW or TURQ.
        HILITE - USCORE, REVERSE or BLINK.
=

      Note: If no ATTR section defined, defaults assumed.
!w                y    b

 BODY section.
!g
   1. )BODY line attributes are ignored, eg. EXPAND etc...).
!y          b                                y            b

   2. Avoid repetition of ' or & values in the panel. May be used but be
!y    b                   yb   yb
      careful. (Limit of 39 repetitions, any greater will be notified.)
      Recommend use of a substitute character in the panel and after conversion,
      replace the substitute character in the COPYBOOK with the respective
      double value of '' or && (assembler syntax requirement).
!                     y  b  y  b

   3. If a line is to be blank, either leave blank or use a TEXT attribute
!y    b                                      y     b        y    b
      character in column 1.

   4. DO specify I/O fields (variables) in C-A-P-I-T-A-L-S, please.....
!y    b                                    ybybybybybybyby

 INIT section.
!g
   1. The following statements will be interpreted:
!y    b
      .CURSOR = Uses this specification for the IC paramater in the MAP.  Will
!y            w b                               y  b
                use the variable specified after this command to initialy
                position the cursor.
      .ZVARS  = Specifies the variables that are to replace the Z variables in
!y            w b                                               y b
                the BODY section. These variables will be placed in the
                respective copybook in lieu of the Z variables.
!y                                                 y b
                (Refer to the BIBLE.)
      &MDTON  = Similar to .ZVARS except variable MDTON is used to keep the
!y            w b          y      b               y     b
                ISPF panel syntactically correct. If this option is specified,
                the modified data tag MDT will be turned on for variables in
!y                                    w   b
                the name-list following the assignment. (Used in building the
                ATTRB statement in the copybook.)
!               y     b
                Format:   &MDTON = '(var1 var2 ...varn)'
!                         y
                Generates: RADC sr,sc,tiY,c,h,er,ec,'c' (Refer section 7.)
!                          y                            b              2b
   2. All other statement are ignored.
!y    b

   Note: )REINIT, )PROC and )END sections are all ignored.
!w       y      b y     b   y    b


.4. Panel Testing:
!G

 After the panel has been created, test it using ISPF option 7.2 or entering
!                                  y       b                 w   b
 TEST on the command line.
!y    b

 If the test fails, for sure as hell the TPUT will@fail+. Refer to the BIBLE
!                   y                b
 and correct all errors.

 If it works under 7.2, there is a good chance that the rest will work.
!                  w  b


.5. Panel Conversion:
!G

 After the panel has been tested and is deemed to give the right format:
 Enter TSO %BUFFI on any command line or you favourite CLIST envoking routine.
!      y          b
 The displayed panel will permit the user to enter runtime parameters that will
 be used to  convert the ISPF panel to a copybook for TPUT.

.5a. ISPF panels to SBA conversion summary:
!G

 The following is a sample format of the listing created from the conversion.
=g
 ISPF PANELS TO SBA CONVERSION AS AT 11/02/88
 LN CL A TYPE    INTE COLOR     HILIGHT   LG  INITIAL VALUE/FIELD NAME
 -- -- - ------- ---- --------- --------- --  ----------------------------------
 01 01 @ INITIAL BRT  YELLOW    OFF       79  '¢-¢ ISPF MASTER APPLICATION MENU
 02 01 % INITIAL BRT  NEUTRAL   OFF       12  'OPTION  ===>'
 02 14 _ UNPROT  BRT  RED       OFF       65  ZCMD
 03 01 $ PROT    BRT  NEUTRAL   OFF       70  OMESSAGE
 **** ABOVE VARIABLE TRUNCATED TO "OMESSAG" ****
 03 73 # PROT    NORM NEUTRAL   OFF       07  Z
 **** MDT TURNED ON FOR VAR "ZUSER   " ABOVE ****
 **** ABOVE Z VAR REPLACED BY "ZUSER   " ****
 04 01 % INITIAL BRT  NEUTRAL   OFF       05  '   0 '
 04 07 + INITIAL NORM BLUE      OFF       26  'ISPF Parms                '
 04 34 % INITIAL BRT  NEUTRAL   OFF       07  '     A '
 .........etc........
 20 01 % INITIAL BRT  NEUTRAL   OFF       79  '
 21 01 + INITIAL NORM BLUE      OFF       05  'Enter'
 21 07 % INITIAL BRT  NEUTRAL   OFF       03  'END'
=

.5b. Parameters passed and attributes translated summary.
!G

 The following is a format of the listing created from the conversion outlining
 the ZVAR substitution, field with MTD on and the attribute-id with their specs.
!    y    b                        y   b

=g
 VCNT DEFINED ZVARS
 ---- --------------------------------------------------------------------------
 0004 ZUSER   ZTIME   ZTERM   ZAPPLID
 (Number of variables encountered followed by the variable names.)

 MTD  DEFINED MDTON
 ---- --------------------------------------------------------------------------
 0002 ZCMD    ZTIME
 (Number of variables encountered followed by the variable names.)

 ATTRIBUTES
 -------------------------------------------------------------------------------
 %THWO+TLBO_IHRO#OLWO$OHWO@THYO
 (Attribute byte followed by type, intensity, color and high-light.)
=
                                                                              +

.5c. Generated BMS macro listing.
!g

 The following is a sample format of the listing created from the conversion.
=g
 ISPF PANELS TO SBA CONVERSION AS AT 11/02/88
 ZZ4       WCCDC W,,COLOR/MONO
           SBADC 01,01,PHN,Y
 CURTIME   DS   CL08
           SBADC 01,10,PHN,Y
           DC   CL70'------------------- ICE EXECUTION PANEL -----------X
                -------------------'
           RADC  02,01,PLN,B,,02,80,' '
           SBADC 03,01,PHN,T
 SCRMSGX   DS   CL78
           RADC  04,01,PLN,B,,04,80,' '
           SBADC 05,01,PLN,B
           DC   CL79'Expiry time of this ICE:                           X
           RADC  06,01,PLN,B,,06,14,' '
           SBADC 06,19,PHN,Y
 HH        DS   CL02
           SBADC 06,22,PLN,B
           DC   CL01':'        ....etc.....
=


.6. Design suggestions:
!G

  1. If using the TRNK option, keep attribute hard up against the left hand side
!y   b            y    b
     of literals.

  2. If using the ASIS option, make sure byte 1 of each line is an attribute
!y   b            y    b
     byte, and the panel has 24 lines defined. (Define trailing blank lines as
     fillers.)

  3. If characters are repeated more than 5 times in a literal, throw in an
!y   b
     attribute byte before and after the repeated literal. (Minimises the length
     of the 3270 buffer control string generated for the TPUT.)
     eg. Instead of (generates 90 byte control/data string):
         ~------------------------------ HEADLINE ---------------------------
!y
         Code (generates 59 byte control/data string):
         ~------------------------------~HEADLINE~---------------------------
!y

  4. If the variable name is longer than the field size, use the .ZVARS option.
!y b                                                             y      b

  5. If you want to receive unchanged transmitted data, use the &MDTON option.
!y b                                                            y      b
     Note: MDT = 'off' is the default.
!    w     y           b

.7. Copybook code generated:
!G

  The following is a description of each of the different types of lines that
  may be generated into the copyboob from the ISPF panel.

.7a. Attribute bytes:
!G

  For each attribute byte encountered in the )BODY section of the panel, the
!                                            y     b
  following assembler macro will be generated into a Set Buffer Address (SBA)
  Define Constant (DC) - hence SBADC:

  blank  SBADC sr,sc,tim,c,h
!y
     Where -
=y               w b
           SBADC - Macro name
           sr    - Starting row  position
           sr    - Starting column  position
           tim   - TYPE/INTENSITY/MDT
                 t  - Type. Can have the following values:
!                y  w b
                      P protected, U unprotected
!                     yb           yb
                 i  - Intensity. Can have the following values:
!                y  w b
                      H high, L low or N non
!                     yb      yb       yb
                 m  - MDT flag. Can have the following values:
!                y  w b
                      Y MDT on, N MDT off
!                     yb        yb
           c     - Colour. The first character of valid colours.
           h     - Hilite. Can have the following values:
                   U undescore, R reverse, B blink or O off.
!                  yb           yb         yb         yb
=


.7b. IO field:
!G

  IO fields are identified by the type of attribute byte encountered. For
  each IO field byte encountered in the )BODY section of the panel, the
  following assembler code will be generated:

  varname  DS CLll
!y

     Where -
=y                 wb
           varname - Variable name (max 8 bytes)
           DS      - Literal 'define storage'
           CL      - Literal 'character length'
           ll      - Length of variable
=


.7c. Literal:
!G

  Literals are identified by the type of attribute byte encountered. For each
  literal byte encountered in the )BODY section of the panel, the following
  assembler code will be generated:

  blank    DC CLll'literal-value'
!y

     Where -
=y                 wb
           DC      - Literal 'define storage constant'
           CL      - Literal 'character length'
           ll      - Length of constant
           lit-val - Value of the literal. Note if literal value extends past
=
                     column 71 of the code generated, appropriate continuation
                     syntax will be adhered to

  Each literal field will be parsed to establish if all bytes in the field are
  the same. If all fields are the same, the SBADC and DC code lines normaly
!                                           y     b   y  b
  generated would be replaced by the following Repeat-to-Address define
  constant - hence RADC:

  blank  RADC  sr,sc,tim,c,h,er,ec,'c'
!y
     Where -
=y               wb
           RADC  - Macro name
           sr,sc,tim,c,h
!y
                 - Same as in SBADC
           er    - Ending row position
           ec    - Ending column position
                   Note - If er,ec are the end of the line, column 1 of the next
!                  w      b  y     b
                          line is used as the repeat to address. On line 24 the
                          ending co-ordinates are 24,80.
!                                                 y    b
           'c'   - The character to be repeated
=


.7d. Miscellaneous:
!g

  At the start of each copybook, the following Write Control Command Define
  Constant code will be generated:

  label1  WCCDC w,,ccc
!y
     Where -
           label1- Name of the copybook member supplied on the main screen
!y               wb
           WCCDC - Write Control Character macro name
!y               wb
           w     - W Write (generated if translate option ASIS used)
!y               w y b                                    y    b
                   EW Erase Write (generated if translate option TRNK used)
!                  y b                                           y    b
           ccc   - Set to COLOR if extended attributes paramer was Y, and set
!y               w        w                                        yb
                   to MONO if N was specified.
!                     w    b

  At the end of each copybook, the following code will be generated:

  label2  EQU  *-label1
!y
     Where -
           label2 - Name of the variable Scrsize supplied on the main screen
!y                w b                    y       b
           EQU    - Literal 'EQUATE'
!y                w b
           *-label1
!y
                 +- label1 is the variable name on the WCCDC macro generated
!                 w y      b                           y     b


.8. Test new SBA:
!G

 After the copybook has been created, enter LOAD on the command line.  This will
!                                           y    b
 assemble and link-edit a loadable module of the 3270 data stream and calculate
!                                                y                b
 it's length. Then program BUFFLOAD will be executed that will load the module
!                          y        b
 generated and issue a fullscreen TPUT of the data stream.
!                                 y    b


.C. Miscellaneous Commands:
!G

 The following miscellaneous commands may be issued:
 HXM nnn  - Setup for XMEM tutorial panel where nnn is the number suffix.
!y        w b         y    b                    y   b


                             (End Of Instructions.)
!G




#I ?  This will tag as Index but leave line blank.
                                 I. Index.
!G
=Gb                                                                            G

&  Hello &CNAME..

   This facility permits the user to create a panel under ISPF, test it and
   then convert it into a 3270 data stream for subsequent TPUTs.

   The following topics may be selected by number:
     1 - Runtime parameters.
!Gy    w b                                                                     G
=Gy         w b                                                                G
         1a - Panel source(member).
         1b - Copy library.
         1c - Runtime conversion parameters.
         1d - Commands in display panel.
=Gy    w b                                                                     G
     2 - Processing strategy.
     3 - ISPF panels and limitations.
     4 - Panel testing.
     5 - Panel conversion.
=Gy         w b                                                                G
         5a - ISPF panels to SBA maps conversion summary.
         5b - Parameters passed and attributes translated summary.
         5c - Generated copybook listing.
     6 - Design suggestions.
!Gy    w b                                                                     G
     7 - Copybook code generated.
!Gy    w b                                                                     G
         7a - Attribute bytes.
         7b - IO field.
         7c - Literal.
         7d - Miscellaneous.
=Gy    w b                                                                     G
     8 - Test newmap under an assembler program.
     C - Miscellaneous commands.

   Note: If the followig is confusing, tough TITTIES, this is not designed as
!Gyw     b                                                                     G
=Gb                                                                            G
         an educational course in ISPF, CICS, SBA, ASSEMBLY, JCL or any other
         facility it makes use of:
            It is designed to make creating 3270 data streams easier.
!Gy                                                                            G

                                 End of Index.
!G
=

