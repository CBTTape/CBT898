/*--------------------------ooo00 REXX 00ooo--------------------------*/
/* C2T: Cylinder to Tracks                                            */
/*                                                                    */
/* Convert space parameters from CYL to TRK.                          */
/*                                                                    */
/* Parameter(s):                                                      */
/*  /A  - Apply change.                                               */
/*  /R  - Apply change.                                               */
/*                                                                    */
/*--------------------------------------------------------------------*/
C2T:c2t_ver='1.03'
    ARG parm#;Address ISPEXEC;"CONTROL ERRORS RETURN";ima_macro=0
    If parm#/='' Then Signal byp1
    "ISREDIT MACRO (parm#) NOPROCESS";If rc=0 Then ima_macro=1

byp1:
/*  "CONTROL ERRORS CANCEL"                                           */

ini1:
    Parse Upper VAR parm# parm#
    If Wordpos('/A',parm#)>0 Then Do
        noteline=;parm#=Delword(parm#,Wordpos('/A',parm#),1)
    End
    If Wordpos('/R',parm#)>0 Then Do
        rel=',RLSE';parm#=Delword(parm#,Wordpos('/R',parm#),1)
    End;Else rel=
    Address ISREDIT;"(status)=USER_STATE";"CURSOR=1 0";"X ALL"
    #rel=
    Signal on Syntax Name error_off_$JCLDD
    $jcldd_aval=0
    x=$jclddx(1);$jcldd_aval=1
error_off_$JCLDD:Signal off Syntax
    Do Forever
        "F 'SPACE=(CYL,(' NEXT";If rc/=0 Then Leave
        If $jcldd_aval Then Do
            "(lin#)=LINENUM .ZCSR"
            If Index(Word($jclddx(lin#),3),'DSN=')=0 Then Iterate
        End
        "(line)=LINE .ZCSR"
        Parse VAR line p1 'SPACE=(CYL,(' alloc ')' p3
        Parse VAR alloc pri ',' sec ',' p2;If p2/='' Then p2=','p2
        If rel/='' Then Do
            If Index(line,',RLSE')=0 Then #rel=rel;Else #rel=
        End
        linex=p1||'SPACE=(TRK,('pri*15','sec*15||p2')'#rel||p3
        If noteline='' Then Do
            "LINE .ZCSR=(linex)";"LINE_BEFORE .ZCSR=NOTELINE (line)"
        End
        Else "LINE_BEFORE .ZCSR=NOTELINE (linex)"
    End
    If noteline/='' Then iSay('Use parameter of "/A" to apply changes.',
        'Use parameter of "/R" to release unused space.')
    "F 'SPACE=(' ALL"
    Signal get_out

Get_out:"USER_STATE=(status)";Exit
