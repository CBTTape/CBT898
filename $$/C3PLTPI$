/*--------------------------ooo00 REXX 00ooo--------------------------*/
/* C3PLTPI$: Work out whatever from the PLTPI.                        */
/*                                                                    */
/* Parms (positional):                                                */
/*  1. PLTPI suffix.                                                  */
/*  2. Applid.                                                        */
/*  3. Enty type to test for, eg. DB2 will test for programs in       */
/*     variable 'DB2'.                                                */
/*--------------------------------------------------------------------*/
C3PLTPI$:                                   /* ETS customised        */
    Address ISPEXEC;"CONTROL ERRORS RETURN";ima_macro=0
    ARG parm#;If parm#/='' Then Signal byp1
    "ISREDIT MACRO (parm#) NOPROCESS";If rc=0 Then ima_macro=1

byp1:
/*  "CONTROL ERRORS CANCEL"                                           */

ini1:
    Parse SOURCE . xenv xcmd xdd xdsn .
    Parse Upper arg pltpi,applid,ent
    db2='DFHD2CM0'
    regions=' ',
            'CICSCERT Q xxPLTI ',
            'CICSOAT  Q xxPLTI ',
            'CICSPRDA P xxPLTI ',
            'CICSQA5  Q xxPLTI ',
            'CICSSUNG P P1PLTIS',
            'CICSTAGE Q xxPLTI ',
            'CICSTEP  Q xxPLTI ',
            'CICSTSTX D xxPLTI ',
            'CICSTEST T xxPLTI ',
            ' '
    Interpret "Parse VAR regions . ' "applid" ' cq apltpi ."
    If cq='' Then Return 'Er-PLTPI'
    tdsn="DN"cq"CICS.CICS.V230.TABLSRC";pltpi=pltpi"PLTI"
    If SYsdsn("'"tdsn"("pltpi")'")/='OK' Then Do
        If SYsdsn("'"tdsn"("apltpi")'")/='OK' Then Return 'Er-PLTPI'
        pltpi=apltpi
    End
    dd='C#'Time('s');Address TSO "ALLOC F("dd") DSN('"tdsn"("pltpi")') SHR REU"
    Address TSO "EXECIO * DISKR "dd" (STEM linei. FINIS)"
    Address TSO "FREE F("dd")"
    Interpret 'pgms='ent
    Do While pgms/=''
        Parse VAR pgms pgm pgms
        Do i=1 To linei.0
            If Index(linei.i,'PROGRAM='pgm)>0 Then Return pgm
        End
    End
    Return ''
