/******************************** REXX ********************************/
c3sitox_ver='V1.23'
/*--------------------------ooo000OOOO000ooo--------------------------*/
/* C3SITOX: C3 sub-routine for SIT Override eXtract                   */
/*                                                                    */
/* Extract CICS applids from startup JCL through //SYSIN member       */
/* navigation.                                                        */
/*                                                                    */
/* SIT override extraction is based on keywords set up in variable    */
/* "sitp".  Value is set at contents between the '=' and next         */
/* space (or comma). Variable 'special_parse' contains values that    */
/* need special parsing.  Set up a label (and process) for those.     */
/* Use existing code for sample as required.                          */
/*                                                                    */
/* Details gathered will be put in 'userid.$(CICSREGN)' if required.  */
/*                                                                    */
/* Optional parameters:                                               */
/*   Positional:                                                      */
/*     sysin   - SYSIN DD value. Some places it may refer to a proc   */
/*               override (eg. //DFDHSIP.SYSIN). Default '//SYSIN'.   */
/*   Keyword:                                                         */
/*     RETURN  - Return to edit session, do not cancel on execution.  */
/*     NOSTAT  - Bypass stats gathering                               */
/*                                                                    */
/* Requires:                                                          */
/*   $ALKHLQU  - hlq generator. (Not all sites have 1 level prefix.)  */
/*   $COPYMEM  - Get comulative SYSIN extract.                        */
/*   $EVALAMP  - Evaluate JCL variables.                              */
/*   $ZTEMPF   - Temporary filename creator.                          */
/*--------------------------------------------------------------------*/
/*  Toggle the following values                                       */
    say_sito =0                             /* Say SITO parameters    */
    view_sito=0                             /* View SITO b4 exit      */
    no_stat  =0                             /* Do not generate stats  */
    no_ex_ed =0                             /* Do not exit edit       */
    m_sito_i ='??'                          /* Missing SITO indic'r   */

    ARG parm#;Address ISPEXEC;"CONTROL ERRORS RETURN";ima_macro=0
    If parm#/='' Then Signal byp1
    "ISREDIT MACRO (parm#) NOPROCESS";If rc=0 Then ima_macro=1

byp1:
/*  "CONTROL ERRORS CANCEL"                                           */

ini1:
/*                          DFHDBCON <- IMS                           */

    special_parse='CSQCPARM DFHMQPRM DFHDBCON DSN2STRT GRPLIST'
    sitp='applid csddsn db2conn dct dfltuser dsalim edsalim fct mct mxt',
         'pltpi pltsd start sysidnt tst aiexit sit stgprot dsalim edsalim',
         special_parse
    cicsregn="'"$alkhlqu()".$(CICSREGN)'"
    cicsregn=C3$('CICSREGN')

    trf="abcdefghijklmnopqrstuvwxyz,'("
    trt="ABCDEFGHIJKLMNOPQRSTUVWXYZ   "
    zedsmsg=;db2conn=;tr_it=
    Parse VAR parm# parm1 parm2 parm3;Parse SOURCE . . xcmd .

    Address ISREDIT;"(status)=USER_STATE"
    Address ISPEXEC "VGET (applmac,jcldsn,viewsit) SHARED"
    If applmac=1 Then Signal macro_1
    If applmac=2 Then Signal macro_2

macro_0:
    If sorder='SORDER' Then sorder='LAST'
/*--------------------------------------------------------------------*/
/* See if any called procs.                                           */
/*--------------------------------------------------------------------*/
    "CURSOR=.ZFIRST"
    Do Forever
        "F ' EXEC ' NEXT";If rc/=0 Then Leave
        "(linei)=LINE .ZCSR"
        If Substr(linei,1,2)/='//' Then Iterate
        If Substr(linei,1,3)='//*' Then Iterate
        w3=Word(Translate(linei,' ',','),3)
        If Substr(w3,1,4)='PGM=' Then Iterate
        If Substr(w3,1,5)='PROC=' Then w3=Substr(w3,6)
        linei=Translate(linei,' ',',')
        "(lin@,col@)=CURSOR";"LABEL" lin@"=.LEXEC"
        incl_proc="'"jcldsn"("w3")'"
        incl_proc="("w3")'"
        "F """incl_proc" --"" FIRST"
        If rc/=0 Then,
            "COPY '"jcldsn'('w3")' BEFORE .ZFIRST"
        "CURSOR=.LEXEC" col@+1
    End
/*--------------------------------------------------------------------*/
/* See if CSD is JCL defined.                                         */
/*--------------------------------------------------------------------*/
    "ISREDIT F '//DFHCSD ' 1 FIRST"
    If rc=0 Then Do
        "ISREDIT F 'DSN=' NEXT"
        "ISREDIT (line)=LINE .ZCSR"
        Parse VAR line 'DSN=' csdjcl .
        If csdjcl='' Then Parse VAR line 'DSNAME=' csdjcl .
        If csdjcl/='' Then Do
            csdjcl=Translate(csdjcl,' ',',');Parse VAR csdjcl csdjcl .
            If Index(csdjcl,'&')>0 Then csdjcl=$evalamp(csdjcl,,sorder)
            If say_sito Then Say Left('csdjcl',8)'   >' csdjcl'     <- from JCL'
        End
    End;Else csdjcl=
/*--------------------------------------------------------------------*/
/* See if SIT is JCL defined.                                         */
/*--------------------------------------------------------------------*/
    "ISREDIT CURSOR=.ZLAST";sitjcl=
    Do Forever
        "ISREDIT F 'SIT=' PREV";If rc/=0 Then Leave
        "ISREDIT (line)=LINE .ZCSR"
        If Substr(line,1,2)/='//' Then Iterate
        If Substr(line,1,3)='//*' Then Iterate
        line=Translate(line,'   ',",)'");Parse VAR line ' SIT=' sitjcl .
        If sitjcl='' Then Iterate
        If Index(sitjcl,'&')>0 Then sitjcl=$evalamp(sitjcl,,sorder)
        If say_sito Then Say Left('sitjcl',8)'   >' sitjcl'     <- f    rom JCL'
        Leave
    End
/*--------------------------------------------------------------------*/
/* Get CICS environmental hlq                                         */
/*--------------------------------------------------------------------*/
    all_env=$alkcics('envmentx');envmentx='P'
    Do While all_env/=''
        Parse VAR all_env find ',' qual all_env
        "ISREDIT CURSOR=1 0"
        Do Forever
            "ISREDIT F '"find".'";If rc/=0 Then Leave
            "ISREDIT (line)=LINE .ZCSR"
            If Substr(line,1,2)/='//' Then Iterate
            If Substr(line,1,3)='//*' Then Iterate
            envmentx=qual;all_env=;Leave
        End
    End
/*--------------------------------------------------------------------*/
/* See if START= defined in the JCL                                   */
/*--------------------------------------------------------------------*/
    "ISREDIT CURSOR=1 0";startjcl=;cicstep=
    Do Forever
        "ISREDIT F 'PGM=DFHSIP'";If rc/=0 Then Leave
        "ISREDIT (line)=LINE .ZCSR"
        If Substr(line,1,2)/='//' Then Iterate
        If Substr(line,1,3)='//*' Then Iterate
        cicstep=Strip(line)
        "ISREDIT (lin#)=LINENUM .ZCSR"
        Leave
    End
    If cicstep/='' Then Do Forever
        lin#=lin#+1;"ISREDIT (line)=LINE" lin#
        If Substr(line,1,3)='//*' Then Iterate
        If Substr(line,1,3)/='// ' Then Leave
        cicstep=cicstep || Strip(line)
    End
    If cicstep/='' Then Do
        Parse VAR cicstep 'START=' startjcl ',';Parse VAR startjcl startjcl .
        If Index(startjcl,'&')>0 Then startjcl=$evalamp(startjcl)
    End
    If startjcl='' Then Do
        "ISREDIT F 'PGM=DFHSIP' FIRST";If rc=0 Then Do
            Do Forever
                "ISREDIT F ' START=' PREV";If rc/=0 Then Leave
                "ISREDIT (line)=LINE .ZCSR"
                If Substr(line,1,2)/='//' Then Iterate
                If Substr(line,1,3)='//*' Then Iterate
                line=Translate(line,' ',',')
                Parse VAR line ' START=' startjcl .
                Leave
            End
        End
    End
    Address ISPEXEC "VPUT (csdjcl,sitjcl,startjcl) SHARED"
/*--------------------------------------------------------------------*/
    Address ISPEXEC "VGET (member) SHARED";"CURSOR=1 1"
    If parm1='' | parm1='RETURN' Then sysin='//DFHSIP.SYSIN '
    Else sysin=parm1
    sito=

    "CURSOR=1 0";where='LAST'
    Do Forever
        "F ' PGM=DFHSIP'";If rc/=0 Then Leave
        "(line)=LINE .ZCSR";If Substr(line,1,3)='//*' Then Iterate
        where='NEXT';Leave
    End
    "F '"sysin"' 1 &WHERE"
    If rc/=0 Then Do
        sysin='//SYSIN '
        "F '"sysin"' 1 &WHERE"
        If rc/=0 Then Do
            zedlmsg='"'sysin'" not found.'
            procs=C3$('procs')
            zedlmsg=zedlmsg 'Ensure variable "procs" in member "C3$"',
                    'is defined correct. Current value is:'procs
            Address ISPEXEC "SETMSG MSG(ISRZ001)";Signal exi0
        End
    End
    Address TSO "NEWSTACK"
    ztempf="'"Strip($ztempf(),,"'")"'"
    Address ISPEXEC "VGET (prod) SHARED"
    yyy=C3$('tabsrc',prod,sitjcl,region,envmentx)
    Do While yyy/=''
        Parse VAR yyy somem yyy
        If Index(somem,'&')>0 Then somem=$evalamp(somem,,sorder)
        x=$Copymem(somem,'+'ztempf)
        If x=0 Then Do;Parse VAR somem . '(' xx ')';sito=sito xx;end
    End
    "(last)=LINENUM .ZLAST";"(lin#)=LINENUM .ZCSR";lin#=lin#-1;notfirst=0
    line=Overlay('  ',line,3)
    Do Forever
        If lin#=last Then Leave
        lin#=lin#+1
        "(line)=LINE" lin#;If rc/=0 Then Leave
        If Wordpos(Strip(line),'/* //')>0 Then Leave
        If Substr(line,1,2)/='//' Then Do;Queue line;Iterate;End
        If Substr(line,3,1)/=' ' & notfirst Then Leave
        notfirst=1
        Parse VAR line 'DSN=' somem ','
        Parse VAR somem somem .
        If somem/='' Then Do
            If Index(somem,'&')>0 Then somem=$evalamp(somem,,sorder,tr_it)
            Parse VAR somem . '(' xx ')';sito=sito xx
            x=$Copymem(somem,'+'ztempf)
        End
    End
    Queue ''

    Address ISPEXEC
    If Wordpos(member,sito)>0 Then sito=member
    Else sito=Translate(Space(sito),',',' ')
    dd='C3'Time('s')
    Address TSO "ALLOC F("dd") DSN("ztempf") MOD REU"
    Address TSO "EXECIO * DISKW "dd" (FINIS"
    Address TSO "FREE F("dd")"
    applmac=1;"VPUT (sito,applmac,member,parm#) SHARED"
    If viewSIT='Y' Then Do
         viewSIT=;"VPUT (viewsit) SHARED"
         zedsmsg=
         zedlmsg="This is the hybrid of SIT and SITO parameters'",
                 'processing order.  Remember last entry is "he".'
         "SETMSG MSG(ISRZ001)"
         "VIEW DATASET("ztempf")"
    End
    "VIEW DATASET("ztempf") MACRO("xcmd")"
    #m1=Msg('Off');Address TSO "DELETE" ztempf;x=Msg(#m1)

Exi0:
    applmac=;Address ISPEXEC "VPUT (applmac) SHARED"
    "ISREDIT USER_STATE=(status)"
    If Wordpos('RETURN',parm#)>0 | no_ex_ed Then Nop;Else "ISREDIT CANCEL"
    Return

/*--------------------------------------------------------------------*/
/* This macro component parses the SIT overrides and extracts the     */
/* appropriate override settings.                                     */
/*--------------------------------------------------------------------*/
macro_1:
    applmac=;Address ISPEXEC "VPUT (applmac) SHARED"
/*  Interpret "Parse Value '' With" sitp                              */
    xx=Words(sitp special_parse)
    Interpret "Parse Value Copies(m_sito_i' ',xx) With" sitp special_parse

    "X '*' 1 ALL"
    yyy=sitp
    Do While yyy/=''
        Parse VAR yyy yy yyy
        x=find_parm(yy)
    End
    Address ISPEXEC
/*--------------------------------------------------------------------*/
    If say_sito Then Do
        Say 'Details from SIT overrides:'
        Say '---------------------------'
        yyy=sitp
        Do While yyy/=''
            Parse VAR yyy yy yyy
            Interpret "Say '  'Substr(yy,1,8)' > '"yy
        End
    End
/*--------------------------------------------------------------------*/
    Interpret 'yyy=Strip('sitp')'
    If yyy/='' Then Do
        "VPUT (sitp" sitp") SHARED"
        "VGET (parm#) SHARED"
        If Wordpos('NOSTAT',parm#)=0 & \no_stat Then Do
            Parse Value Strip(cicsregn,,"'") With xx '(' .
            If Sysdsn("'"xx"'")='OK' Then Do
                applmac=2;"VPUT (applmac) SHARED"
                "EDIT DATASET(&CICSREGN) MACRO("xcmd")"
            End
        End
    End
    Else Do
        zedlmsg='No data extracted.'
        "SETMSG MSG(ISRZ001)"
    End

Exi1:
    "ISREDIT USER_STATE=(status)"
    If \view_sito Then "ISREDIT CANCEL"
    Return

Find_parm: Arg find
    "CURSOR=.ZLAST 80"
    Do Forever
        "F '"find"=' PREV NX"
        If rc/=0 Then Do
            If find='DSN2STRT' Then Signal l_DSN2STRT_ext
            Return 4
        End
        "(linei)=LINE .ZCSR";Parse VAR linei linei +71
        line=' 'Translate(linei,trt,trf)
        If Index(line,' 'find'=')=0 Then Iterate
        If Wordpos(find,special_parse)>0 Then Do
            Interpret "Parse VAR line '"find"' zzz"
            Interpret "zzz=l_"find"()"
        End
        Else Interpret "Parse VAR line ' "find"=' zzz ."
        Interpret "zzz=Space(Translate(zzz,'  ','()'))"
        Interpret find'=zzz'
        Return 0
    End


l_GRPLIST:
    sp=Index(' 'linei,' 'find'=')
    PArse Value ' 'linei With ' 'find'=' zzz .
    zzz=' 'Translate(zzz,trt,trf)
    Parse VAR zzz zzz ')' .;Return '('Space(Substr(zzz,2),1,',')')'
l_CSQCPARM:Parse VAR zzz 'SN=' zzz .;Return zzz
l_DFHMQPRM:Parse VAR zzz 'SN=' zzz .;Return zzz
l_DFHDBCON:Parse VAR zzz '=' p1 p2 .
/*         If Datatype(p1,'W') Then Return p2;Else Return p1          */
           Return p1
l_DSN2STRT:db2conn='YES';Parse VAR zzz '=' p1 p2 p3 .
   If p3=')' Then Return p2;Else Return p1
l_DSN2STRT_ext:Parse Value C3pltpi$(applid,pltpi,'DB2') With  zzz .
   If zzz/='' Then Do
        Interpret find'=zzz'
        If Substr(zzz,1,3)/='Er-' Then db2conn='YES'
        Else Return 0
   End
   Return 4

/*--------------------------------------------------------------------*/
/* This macro component processes the update of the summary file.     */
/*--------------------------------------------------------------------*/
macro_2:
    applmac=;Address ISPEXEC "VPUT (applmac) SHARED"
    Address ISPEXEC "VGET (newi) SHARED"
    Address ISREDIT
    "(memb)=MEMBER";"(dsn)=DATASET"
    If "'"dsn"("memb")'"/=cicsregn Then Do
        zedlmsg='Not in member' cicsregn'.'
        Address ISREDIT "SETMSG MSG(ISRZ001)"
        Exit
    End

    If newi Then Do;"X ALL";"DELETE ALL X";End
    "(last)=LINENUM .ZLAST";"(caps)=CAPS";"CAPS=OFF"
    If last=0 Then Do
        linex=Substr('Member',1,8) Substr('Applid',1,8) Substr('SysIdnt',1,4),
              Substr('SITo',1,8) Substr('CSD',1,44) d1
        "LINE_AFTER .ZLAST=(linex)"
        linex=Copies('-',8) Copies('-',8) Copies('-',4),
              Copies('-',8) Copies('-',44)
        "LINE_AFTER .ZLAST=(linex)"
    End
    "XSTATUS 1=X";"XSTATUS 2=X"

    Address ISPEXEC "VGET (applid,sysidnt,member,sito,csddsn,csdjcl) SHARED"
    If csdjcl/='' Then csddsn=csdjcl
    "F '"member"' 1"
    If rc= 0 Then Do
        "(line) = LINE .ZCSR"
        Parse VAR line . a1 s1 o1 csd1 d1
        If applid='' Then applid=a1
        If sysidnt='' Then sysidnt=s1
        what="LINE .ZCSR"
    End
    Else Do
        d1=;what="LINE_AFTER .ZLAST"
    End
    linex=Substr(member,1,8) Substr(applid,1,8) Substr(sysidnt,1,4),
          Substr(sito,1,8) Substr(csddsn,1,44) d1
    what "= (linex)";"SORT 1 8 NX"

Exi2:
    "USER_STATE = (status)";"CAPS=(caps)"
    "END"
    Address
    Return

nl: Parse Arg nl1
    "ISREDIT" where "= NOTELINE (nl1)";Return 0
