/*--------------------------ooo00 REXX 00ooo--------------------------*/
/*  CALC: 'Simple' decimal/HEX calculator.                            */
/*                                                                    */
/*  Enter "?" parameter for help or see bottom of program.            */
/*                                                                    */
/*--------------------------------------------------------------------*/
calc:calc_ver='1.04'
    sub='&'                                 /* Substitute character   */

    Numeric Digits 30
    Parse Upper Arg parm#,trace;If trace/='' Then Trace r
    If Wordpos('/W',parm#)>0 Then Do
        dataat='W';parm#=Delword(parm#,Wordpos('/W',parm#),1)
    End;Else dataat=
    If Wordpos('/L',parm#)>0 Then Do
        dataat='L';parm#=Delword(parm#,Wordpos('/L',parm#),1)
    End;seqno=0
    If Wordpos('/LS',parm#)>0 Then Do
        seqno=1;dataat='L';parm#=Delword(parm#,Wordpos('/LS',parm#),1)
    End
    If dataat/='' Then Do
        parm#=Space(Translate($dat@csr('/'dataat),' ','00'x) parm#)
        If seqno Then Parse var parm# . parm#
    End
    If Index(parm#,',')>0 Then parm#=Space(Translate(parm#,'',','),0)
    pi=3.14285714285714285714
    If Index(parm#,'P')>0 Then parm#=$Cstring(parm#,'P',pi,,'*')
    If parm#='??' Then Signal Help_me
    If parm#='?' Then Do;"%BR %CALC ??";Exit;End
    Address ISPEXEC "VGET (calcrslt) PROFILE"
    If parm#='/X' Then Do
        If Verify(calcrslt,'ABCDEF','M')>0 Then Do
            zedlmsg=calcrslt '<- already HEX.';Signal exi1
        End
        xx=calcrslt;calcrslt=d2x(calcrslt)
        zedlmsg=calcrslt '<- "'xx'" converted to HEX.';Signal exi1
    End
    If parm#='/D' Then Do
        xx=calcrslt;calcrslt=x2d(calcrslt)
        zedlmsg=calcrslt '<- "'xx'" converted to decimal.';Signal exi1
    End
    If Index(parm#,sub)>0 | parm#='/?' Then Do
        If calcrslt='' Then Do
            zedlmsg='No previous calculation stored.';Signal exi1
        End
        parm#=$Cstring(parm#,sub,calcrslt,,'*')
        If parm#='/?' Then Do
            zedlmsg='Previous result ->"'calcrslt'".';Signal exi1
        End
    End
    If Wordpos('/2D',parm#)>0 Then Do
        c2dec=1;parm#=Delword(parm#,Wordpos('/2D',parm#),1) '/X'
    End;Else c2dec=0
    If Wordpos('/2X',parm#)>0 Then Do
        c2hex=1;parm#=Delword(parm#,Wordpos('/2X',parm#),1)
    End;Else c2hex=0
    If Verify(parm#,'ABCDEF','M')=0 & Wordpos('/X',parm#)=0 Then Do
        Do While Index(parm#,'SQ')>0
            Parse Upper VAR parm# p1 'SQ(' square ')' p2
            If square/='' Then Do
                Parse VAR square square ',' precision
                sqroot=$sqroot(square,precision)
                If sqroot=0 Then Do
                    zedlmsg="Invalid SQROOT expression '"square"' entered."
                    Signal exi1
                End
                parm#=p1 sqroot p2
            End
        End
        Signal on Syntax Name error_off_00
        Interpret "calcrslt="parm#
        If c2hex Then calcrslt=d2x(calcrslt)
        zedlmsg=calcrslt
        Signal exi1
    End
    ELse Do
        If Wordpos('/X',parm#)>0 Then parm#=Delword(parm#,Wordpos('/X',parm#),1)
        expr=parm#;st=1;hexc='0123456789ABCDEF'
        Do Forever
            st=Verify(expr,hexc,'M',st);If st=0 Then Leave
            en=Verify(expr,hexc,'N',st);If en=0 Then en=Length(expr)+1
            hex=Substr(expr,st,en-st);dec=x2d(hex)
            expr=$Cstring(expr,hex,dec,st,1)
            st=Index(expr,dec,st)+length(dec)+1
        End
        Signal on Syntax Name error_off_00
        Interpret "val1="expr";val2=Format("expr",,0)"
        If val1/=val2 Then xtra=,
             ' <- Note: data has been reformatted due to',
             'decimal "'val1'" result. '
        Else xtra=
        If val1>0 Then ll=
        Else Do;ll=',8';xtra=xtra'- negative expanded to 8 bytes long.';End
        If c2dec Then calcrslt=val2
        Else Interpret "calcrslt=d2x("val2 || ll")"
        zedlmsg=calcrslt xtra
        Signal exi1
    End
error_off_00:Signal off Syntax
    zedlmsg="Invalid expression '"parm#"' entered."
exi1:Address ISPEXEC "VPUT (calcrslt) PROFILE"
     Parse source . env .;If env='FUNCTION' Then Return calcrslt
     Address ISPEXEC "SETMSG MSG(ISRZ001)";Exit

Help_me:n_st=mark(2)    /* Mark Start */         /* Use TF72 for text */
/*

    CALC: Simple decimal/HEX calculator.   [Ver:1.03]

    Just pass CALC a valid computation in REXX format. You can use '&'
    to substitute the last value generated by "CALC" into the current
    expression. ('&' can be used multiple times in the expression.) This
    routine can be used for both decimal and HEX arithmetic.

    You can pass editted numerics (eg. 1,024,000) and the commas ','
    will be removed free of charge.

    If any HEX characters 'ABCDEF' are found in the expression, it will
    be assumed to be HEX.

    If you are stupid enough to divide by hex that results in 'decimal
    point' output, it will be rounded up before converting digits to
    HEX.

    Do not mix HEX and decimal formats.

    You may include "SQ(number)" in the expression to have CALC
    calculate the square root of "number" before avaluating expression.
    (Don't try SQ on HEX.)
       eg.  CALC SQ(626)*3    -> 75
    Note, the result is to the same decimal point as the input to the
    SQ(..) function,
       eg.  CALC SQ(626.000000)*3    -> 75.059976

    You may include "P" in the expression to have CALC substitute the
    value of "pi" before avaluating expression.  The default setting
    for "pi" is to 20 decimal points of "3.14285714285714285714".

    You may use CALC on a line or word of screen being displayed. Simply
    supply the appropriate /L, /LS or /W parameter and place the cursor
    on the desired line/word.

    Parameters (keyword):
       ?   - This tutorial.
       /?  - Display last value.
       /D  - Convert the last result from HEX to decimal.
       /L  - Evaluate the expression on the cursor line.
       /LS - Evaluate the expression on the cursor line. The 'S'
             indicates that the line contains sequence numbers which will
             be removed. Eg. line is from an edit/view session.
       /W  - Evaluate the expression on the cursor word. This parameter
             does not require sequence number identification as only the
             word at the cursor is evaluated (and I'm hoping you have not
             put the cursor on the line number).
       /X  - Following an expression indicates that the expression is to
             process HEX values.
           - By itself, it will convert the last result from decimal to
             HEX.
       /2D - Convert to Decimal. This assumes that the input is HEX and
             the result is to be output in decimal format. (This command
             can be used to convert HEX to decimal in it's simplest
             form. Alternatively calculate HEX value as normal and once
             the result is displayed, enter 'CALC /D'.)
       /2X - Convert to HEX. This assumes that the input is decimal and
             the result is to be output in HEX format. (This command can
             be used to convert decimal to HEX in it's simplest form.
             Alternatively calculate decimal value as normal and once
             the result is displayed, enter 'CALC /X'.)

    If you need to toggle any value from HEX/decimal you will need two
    passes. Enter,
    1. CALC val {/X}  <- sets the last result value (use '/X' for HEX)
    2. CALC /X        <- Convert last result to HEX
        -or-
    2. CALC /D        <- Convert last result to decimal

            Parse VAR
       P   - Pi. Replace every occurance of "P" with pi (to 20 decimal
             points), "3.14285714285714285714".
       SQ()- Replace with the square root value between '()'.
       ,   - Automatically remove all commas.
       &   - Last value calculated by CALC and stored in your profile.

    Call ups:
       $CSTRING o Change text from one value to another (used to
                  substitute for '&' and/or 'P').
       $DAT@CSR o Get data at cursor (when using /L, /LS or /W
                  parameters).
       $SQROOT  o Calculate the square root of a number.
       BR       o Display this tutorial using ISPF's browser.
       CALC     - This program.

*/
n_en=mark(-2)   /* Mark End   */
    Do i=n_st To n_en;Say Substr(Sourceline(i),1,79);End;Return 0
    Mark:If Datatype(Arg(1))/="NUM" Then Arg(1)=1;Return sigl+Arg(1)
