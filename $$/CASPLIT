/******************************** REXX ********************************/
    n_st=mark(2)    /* Mark Start */
/*--------------------------ooo00 REXX 00ooo--------------------------*/
/* CASPLIT: VSAM CA/CI split analyser.                                */
/*                                                                    */
/* EXEC to process a piece of JCL and extract all the dataset names   */
/* from them and if they are VSAM dataset, determine the number of CA */
/* and CI splits and report on them. It also reports on any dataset   */
/* that has > 1 extents for any of its components. If does not try to */
/* identify the VSAM type (ie. KSDS, ESDS, PATH etc..) and if a data  */
/* or index component is not found, 'N/A' will be inserted.           */
/*                                                                    */
/* Any PATHS detected will be converted into an AIX and the latter    */
/* will be analysed.                                                  */
/*                                                                    */
/* Parameters (for command processing):                               */
/* Keyword:                                                           */
/*   /B     - Generate JCL for batch processing.                      */
/*   /D     - Dataset is the VSAM file to report on.                  */
/*   /H     - Hardcopy output. Default is to SDSF held output.        */
/*   /RD    - Report on Duplicates.  For "cumulative" reports do not  */
/*            suppress duplicate analysis.  (Default is to ignore     */
/*            any dataset already processed.)                         */
/*   /S     - Force "Say" commands (instead of NOTELINES) if a macro. */
/*   *{*{*{*{*{*}}}}}                                                 */
/*          - Inefficiency level to report on. Number of '*' and over */
/*            to list. CA, CI or No Ext will trip report.             */
/* Positional:                                                        */
/*   dataset- Dataset to extract a list of datasets (one per line) to */
/*            process for CA/CI splits.                               */
/*   /NJCL  - Not JCL format data. Process using "." recognised words */
/*            from input data.                                        */
/*                                                                    */
/*--------------------------------------------------------------------*/
n_en=mark(-2)   /* Mark End   */
CASPLIT:casplit_ver='1.05'
    Address ISPEXEC;"CONTROL ERRORS RETURN";ima_macro=0
    Arg parm#;If parm#/='' Then Signal byp1
    "ISREDIT MACRO (parm#) NOPROCESS";If rc=0 Then ima_macro=1

byp1:
/*  "CONTROL ERRORS CANCEL"                                           */

ini1:
    If Wordpos('/T',Translate(parm#))>0 Then Do
        #tr=Trace('r')
        parm#=Delword(parm#,Wordpos('/T',Translate(parm#)),1)
    End
    If Wordpos('/B',Translate(parm#))>0 Then Do
        batch=1;parm#=Delword(parm#,Wordpos('/B',Translate(parm#)),1)
    End;Else batch=0
    If Wordpos('/H',Translate(parm#))>0 Then Do
        hardcopy=1;parm#=Delword(parm#,Wordpos('/H',Translate(parm#)),1)
        batch=1
    End;Else hardcopy=0
    If Wordpos('/S',Translate(parm#))>0 Then Do
        parm#=Delword(parm#,Wordpos('/S',Translate(parm#)),1)
        noteline=
    End
    If Wordpos('/D',Translate(parm#))>0 Then Do
        parm#=Delword(parm#,Wordpos('/D',Translate(parm#)),1)
        Parse VAR parm# VSAM .
    End;Else VSAM=
    If Wordpos('/RD',Translate(parm#))>0 Then Do
        parm#=Delword(parm#,Wordpos('/RD',Translate(parm#)),1)
        duplic=1
    End;Else duplic=0
    If Index(Translate(' 'parm#),' *')>0 Then Do
        Parse Value ' 'Translate(parm#) With p1 ' *' xxx p2
        ri=Length('*'xxx)
        parm#=Space(p1 p2)
    End;Else ri=0
    If batch Then Signal Create_JCL
    If ima_macro Then Do
        Address ISREDIT;"(status)=USER_STATE";"(caps)=CAPS";"CAPS=OFF"
    End
    Parse Upper VAR parm# parm1 parm2 parm3
    x=NSay('*********************************************************')
    x=NSay(' ')
    x=NSay(' CA/CI split and number of extents analysis on dataset')
    x=NSay(Centre(parm1,54)'  'Copies('*',ri))
    x=NSay(' on' Date('e') 'at' time()'.')
    x=NSay(' ')
    x=NSay(' ')

    If \ima_macro & Sysdsn(parm1) /= 'OK' Then Do
        x=NSay('*********************************************************')
        x=NSay('*')
        x=NSay('* Dataset' parm1 'not found...')
        x=NSay('*')
        x=NSay('*********************************************************')
        Return 8
    End
    If vsam/='' Then Do
        linei.1='DSN='vsam
        linei.0=1
        Address TSO
        Signal Process_data
    End
    If ima_macro then Do
        j=0
        "F 'CICS' 1 6 FIRST"
        If rc=0 Then Do;j=j+1;"(xx)=LINE .ZCSR";linei.j=Word(xx,1);End
/*--------------------------------------------------------------------*/
        "PROCESS RANGE C";"(cmd)=RANGE_CMD"
        If cmd='C' Then Do
            "(zfrange)=LINENUM .ZFRANGE";"(zlrange)=LINENUM .ZLRANGE"
        End
        Else Do
            zfrange=1;"(zlrange)=LINENUM .ZLAST"
        End
/*--------------------------------------------------------------------*/
        "CURSOR="zfrange" 0"
        Do Forever
            "F '.' NEXT";If rc/=0 Then Leave
            "(line)=LINE .ZCSR";"(lin#)=LINENUM .ZCSR";"CURSOR="lin#+1 0
            dp=Index(line,'.');If dp=0 Then Iterate
            dsn=$Wordat(line,dp,'W')
            If $vername(dsn,,'-')/='OK' Then Iterate
            Parse VAR dsn 1 ch11 +1 1 ch13 +3
            If ch11='*' | ch13='//*' Then Iterate
            If $vername(dsn,,'-')/='OK' Then Iterate
            j=j+1;linei.j='DSN='dsn
            If lin#>=zlrange Then Leave
        End
        linei.0=j
        Address TSO
        Signal Process_data
    End
    Address TSO
    dd = 'CA'Time('s')
    "ALLOC F("dd") DSN("parm1") SHR REU"
    If rc /= 0 Then Do
        x=NSay('*********************************************************')
        x=NSay('*')
        x=NSay('* Dataset' parm1 'could not be opened...')
        x=NSay('*')
        x=NSay('*********************************************************')
        Return 8
    End
    "EXECIO * DISKR "dd" (STEM linei. FINIS)"
    "FREE F("dd")"
    If parm2='/NJCL' Then Do
        j=0
        Do i=1 To linei.0
            line=linei.i
            If Substr(linei.i,1,4) = 'CICS' Then DO
                xx=Word(linei.i,1)
                j=j+1;linei.j=xx
            End
            dp=Index(line,'.');If dp=0 Then Iterate
            dsn=$Wordat(line,dp,'W')
            Parse VAR dsn 1 ch11 +1 1 ch13 +3
            If ch11='*' | ch13='//*' Then Iterate
            If $vername(dsn,,'-')/='OK' Then Iterate
            j=j+1;linei.j='DSN='dsn
        End
        linei.0=j
    End

Process_data:
    If linei.0 = 0 Then Do
        x=NSay('*********************************************************')
        x=NSay('*')
        x=NSay('* Dataset' parm1 'is empty..............')
        x=NSay('*')
        x=NSay('*********************************************************')
        Return 8
    End

    x=Msg('On');dsn_list=

    "NEWSTACK";si=0;tot_dsn=0;hit_dsn=0
    Do i=1 To linei.0
        If Substr(linei.i,1,4) = 'CICS' Then DO
            xx=Word(linei.i,1)
            x=NSay(xx);x=NSay(Copies('=',Length(xx)));x=NSay(' ')
            dsn_list=
            Iterate
        End
        If Substr(linei.i,1,3) = '//*' Then Iterate
        If Substr(linei.i,1,2) = '/*' Then Iterate
        If Substr(linei.i,1,1) = ' '   Then Iterate
        If Strip(linei.i) = '//' Then Leave
        Parse VAR linei.i 'DSN=' dsn .
        Parse VAR dsn dsn ','
        If dsn = '' Then Iterate
        If Substr(dsn,1,2) = '&&' Then Iterate
        If Wordpos(dsn,dsn_list)>0 Then Iterate
        If Index(dsn,'&') > 0 Then dsn = $evalamp(dsn)
        dsn=Strip(dsn,,"'")
        If Index(dsn,'&') > 0 Then Do
            Queue "DSN: '"dsn"'"
            Queue '        Not all variables have been evaluated.'
            Queue '        Dataset ignored.'
            Queue ' '
            If ri=0 Then Do Queued();Parse Pull line;Say line;End
            Iterate
        End
        If Wordpos(dsn,dsn_list)=0 Then dsn_list=dsn_list dsn
        x = Listdsi("'"dsn"' NORECALL")
        If sysreason /= 12 Then Do
            x=NSay("DSN: '"dsn"' <-" Sysdsn("'"dsn"'"))
            x=NSay(' ')
            If ri=0 Then Do Queued();Parse Pull line;Say line;End
            Iterate
        End
        x = Outtrap('lineo.',500,'NOCONCAT')
        "LISTC ENT('"dsn"') ALL"
        Drop sp.ca.
        Drop sp.ci.
        Drop ex.ca.
        Drop ex.ci.
        If Word(lineo.1,1)='PATH' Then Do
            aix=
            Do j=1 To lineo.0
                If Index(lineo.j,' AIX----')>0 Then Do
                    Parse Value Translate(lineo.j,' ','-') With . aix xx .
                    aix=Space(aix xx,1,'-')
                    Leave
                End
            End
            If aix/='' Then Do
                x=NSay("DSN: '"dsn"'")
                x=NSay("  *** Converted to AIX-> '"aix"'  ***")
                dsn=aix
                x=Outtrap('lineo.',500,'NOCONCAT')
                "LISTC ENT('"dsn"') ALL"
            End
        End
        If Wordpos(dsn,dsn_list)=0 Then dsn_list=dsn_list dsn
        Do j=1 To lineo.0
            If Substr(lineo.j,4,12) = 'DATA -------' Then Do
                t = 'DA'
                Iterate
            End
            If Substr(lineo.j,4,12) = 'INDEX ------' Then Do
                t = 'IX'
                Iterate
            End
            If Substr(lineo.j,37,10) = 'SPLITS-CI-' Then Do
                sp.ci.t = Translate(Substr(lineo.j,47,14),' ','-') +0
                Iterate
            End
            If Substr(lineo.j,37,10) = 'SPLITS-CA-' Then Do
                sp.ca.t = Translate(Substr(lineo.j,47,14),' ','-') +0
                ex.ca.t = Translate(Substr(lineo.j,80,10),' ','-') +0
                Iterate
            End
        End
        Queue "DSN: '"dsn"'"
        Queue '        Data:  Index:'
        Queue '        ------ ------'
        If sp.ca.da = 'SP.CA.DA' Then sp.ca.da = 'N/A'
        If sp.ca.ix = 'SP.CA.IX' Then sp.ca.ix = 'N/A'
        If sp.ci.da = 'SP.CI.DA' Then sp.ci.da = 'N/A'
        If sp.ci.ix = 'SP.CI.IX' Then sp.ci.ix = 'N/A'
        If ex.ca.da = 'EX.CA.DA' Then ex.ca.da = 'N/A'
        If ex.ca.ix = 'EX.CA.IX' Then ex.ca.ix = 'N/A'
        If ex.ci.da = 'EX.CI.DA' Then ex.ci.da = 'N/A'
        If ex.ci.ix = 'EX.CI.IX' Then ex.ci.ix = 'N/A'

        If sp.ca.da > 0 Then l = Length(sp.ca.da)
        Else                 l = 0
        If sp.ca.ix > 0 & Length(sp.ca.ix) > l Then l = Length(sp.ca.ix)
        xtra=Substr(Substr('*******',1,l),1,7,' ');If l>si Then si=l
        Queue xtra Right(sp.ca.da,6) Right(sp.ca.ix,6),
            '  (CA splits)'

        If sp.ci.da > 0 Then l = Length(sp.ci.da)
        Else                 l = 0
        If sp.ci.ix > 0 & Length(sp.ci.ix) > l Then l = Length(sp.ci.ix)
        xtra=Substr(Substr('*******',1,l),1,7,' ');If l>si Then si=l
        Queue xtra Right(sp.ci.da,6) Right(sp.ci.ix,6),
            '  (CI splits)'

        If ex.ca.da > 1 Then l = Length(ex.ca.da)
        Else                 l = 0
        If ex.ca.ix > 1 & Length(ex.ca.ix) > l Then l = Length(ex.ca.ix)
        xtra = Substr(Substr('*******',1,l),1,7,' ')
        xtra=Substr(Substr('*******',1,l),1,7,' ');If l>si Then si=l
        Queue xtra Right(ex.ca.da,6) Right(ex.ca.ix,6),
            '  (No. of Extents)'
        Queue ' '
        If si<ri Then "DELSTACK"
        Else hit_dsn=Hit_dsn+1
        tot_dsn=tot_dsn+1;si=0
        Do Queued();Parse Pull line;x=NSay(line);End
    End

    If ri>0 Then Do
        x=NSay(' ')
        x=NSay(' ')
        x=NSay(hit_dsn 'out of' tot_dsn 'matched mask "'Copies('*',ri)'".')
        x=NSay(' ')
    End
    If ima_macro Then Do
        "ISREDIT CAPS=(caps)";"ISREDIT USER_STATE=(status)"
    End
    Exit

Mark:Arg n#;If Datatype(n#)/='NUM' Then n#=1;Return sigl+n#
NSay:Parse Arg n#
    If noteline='' Then Say n#
    Else Do
        If ima_macro Then "ISREDIT LINE_BEFORE .ZFIRST=NOTELINE (n#)"
        Else Say n#
    End
    Return 0

/*--------------------------------------------------------------------*/
/* Sample JCL to execute in batch.                                    */
/*--------------------------------------------------------------------*/
Create_JCL:
    Address TSO "DELSTACK"
    "ISREDIT (DSN)=DATASET";"ISREDIT (member)=MEMBER"
    n_st=mark(2)    /* Mark Start */
Queue "//T32AZKCA JOB (SU1ZIBMS),'$$$EXIMP-',"
Queue '//             CLASS=A,COND=(4,LT),'
Queue '//             MSGCLASS=X,TIME=1440,REGION=0M,'
Queue '//             NOTIFY=&SYSUID,LINES=9999'
Queue '//*MAIN     LINES=(9999,W),CLASS=CICSUTIL      <- JES3 sites'
Queue '//*'
Queue "//*  JCL from: 'T32AZK.$($$$EXIMP)"
Queue '//*'
Queue '//*-------------------------------------------------------------------*'
Queue '//*'
Queue '//VARS SET MEMBER='member
Queue '//     SET INPUT='dsn
Queue '//     SET HARDCOPY=&INPUT..&MEMBER'
Queue '//*'
Queue '//*-------------------------------------------------------------------*'
Queue '//RERUN    EXEC PGM=IEFBR14'
Queue '//SYSTSPRT DD DSN=&HARDCOPY,'
Queue '//          DISP=(MOD,DELETE),UNIT=SYSDA,SPACE=(TRK,(0,0))'
Queue '//*'
Queue '//STEP01   EXEC PGM=IKJEFT01,'
Queue "// PARM=('%CASPLIT ''&INPUT("member")''" Copies('*',ri) "/NJCL')"
Queue '//SYSOUT   DD SYSOUT=*'
Queue '//SYSPROC  DD DISP=SHR,DSN=T32AZK.$$'
If hardcopy Then Do
    Queue '//SYSTSPRT DD DSN=&HARDCOPY,'
    Queue '//          DISP=(,CATLG),UNIT=SYSDA,SPACE=(TRK,(150,50),RLSE),'
    Queue '//          DCB=(RECFM=FB,LRECL=133,BLKSIZE=0)'
End
Else Queue '//SYSTSPRT DD SYSOUT=*'
Queue '//SYSTSIN  DD DUMMY'
Queue '//'
Queue ''
    dd='EI'Time('s');ztempf=$ztempf()
    Address TSO "ALLOC F("dd") DSN('"ztempf"') SHR REU"
    Address TSO "EXECIO * DISKW "dd" (FINIS"
    Address ISPEXEC "LMINIT DATAID(DATAID) DDNAME("dd")"
    Address ISPEXEC "EDIT DATAID(&DATAID)"
    Address ISPEXEC "LMFREE DATAID(&DATAID)"
    Address TSO "FREE F("dd")";xx=$ztempf(ztempf,'D')

    Exit
