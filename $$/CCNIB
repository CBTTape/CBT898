/*--------------------------ooo00 REXX 00ooo--------------------------*/
/* CCNIB: CICS installation JCL customiser.                           */
/*                                                                    */
/* This member has been specifically set up for DuPont NIB.           */
/*                                                                    */
/* Hit it with the "JC" parameter first.                              */
/*                                                                    */
/* Pass paremeter of "REDO" for old stuff.                            */
/*                                                                    */
/* Any other parameter passed will be treated as STC name (APPLID).   */
/*                                                                    */
/*--------------------------------------------------------------------*/
    Arg parm#
    Address ISPEXEC;"CONTROL ERRORS RETURN";ima_macro=0
    If parm#/='' Then Signal byp1
    "ISREDIT MACRO (parm#) NOPROCESS"
    If rc=0 Then ima_macro=1

byp1:
/*  "CONTROL ERRORS CANCEL"                                           */

ini1:
    stcname='CICSI0T'
vol1='EDC403'                           /* TMON/SS                */
    vol1='RPCIC2'                           /* CICS Runtime           */
    hlqc='DNDCICS'

    Parse Upper VAR parm# parm#
    If Wordpos('REDO',parm#)>0 Then Do
        redo=1;parm#=Delword(parm#,Wordpos('REDO',parm#),1)
    End
    Else redo=0
    If parm#/='' Then Parse VAR parm# stcname .
    Address ISREDIT;"(status)=USER_STATE"
    "CURSOR=1 0";"SCAN=OFF";"(dataset)=DATASET"
dataset='DNMCICS.CICS230.CUST'
    If dataset='DNMCICS.CICS230.CUST' Then Do
        "X '//*' 1 ALL"
        "C '??????' '&&VOLUME' ALL NX";"(#cv1)=CHANGE_COUNTS"
        "C '=HLQ.' '=&&HLQC..' ALL NX";"(#ch1)=CHANGE_COUNTS"
        "C '(HLQ.' '(&&HLQC..' ALL NX";"(#ch2)=CHANGE_COUNTS"
        "C ' HLQ.' ' &&HLQC..' ALL NX";"(#ch3)=CHANGE_COUNTS"
If redo Then Do
        "C '"vol1"' '&&VOLUME' ALL NX";"(#cv1)=CHANGE_COUNTS"
        "C '="hlqc".' '=&&HLQC..' ALL NX";"(#ch1)=CHANGE_COUNTS"
        "C '("hlqc".' '(&&HLQC..' ALL NX";"(#ch2)=CHANGE_COUNTS"
        "C ' "hlqc".' ' &&HLQC..' ALL NX";"(#ch3)=CHANGE_COUNTS"
End
        "C '=MVSSMPSF.' '=MVSSMPJ.' ALL NX"
        "C '(MVSSMPSF.' '(MVSSMPJ.' ALL NX"
        "C ' MVSSMPSF.' ' MVSSMPJ.' ALL NX"
        "C '=GSESF.'    '=DNMCICS.' ALL NX"
        "C '(GSESF.'    '(DNMCICS.' ALL NX"
        "C ' GSESF.'    ' DNMCICS.' ALL NX"
        "CURSOR=1 0"
        Do Forever
            "F 'MAXCC'";If rc/=0 Then Leave
            "(line)=LINE .ZCSR";line=Substr(line,1,72);Parse VAR line line '/*'
            If Space(line,0)/='SETMAXCC=0' Then Iterate
            col=Verify(line,' ','N')-1
            linex=Substr(' ',1,col)'IF MAXCC<9 THEN SET MAXCC=0'
            "(lin#)=LINENUM .ZCSR"
            "LINE" lin#"=' '";"LINE_AFTER" lin#"= (linex) "
            "CURSOR="lin#+2 0
        End
        "SEEK '.STCNAME.' FIRST";If rc=0 Then i_stcn='Y'
        "SEEK '&&STCNAME.' FIRST";If rc=0 Then i_stcn='Y'
        "SEEK '(STCNAME) ' FIRST";If rc=0 Then i_apln='Y'
        If i_stcn/='Y' & #ch1=0 & #ch2=0 & #ch3=0 & #cv1=0 Then Signal get_out
        "SEEK ' STCNAME=' FIRST"
        If rc=0 Then Do
            "(line)=LINE .ZCSR"
            If Word(line,1)/='//*' & Word(line,2)='SET' Then Signal get_out
        End
        "SEEK ' HLQC=' FIRST"
        If rc=0 Then Do
            "(line)=LINE .ZCSR"
            If Word(line,1)/='//*' & Word(line,2)='SET' Then Signal get_out
        End
        "SEEK ' VOLUME=' FIRST"
        If rc=0 Then Do
            "(line)=LINE .ZCSR"
            If Word(line,1)/='//*' & Word(line,2)='SET' Then Signal get_out
        End
        "SEEK '//*  JCL FROM:' FIRST"
        If rc=0 Then disp=2
        Else Do
            "SEEK '//*' FIRST";disp=0
        End
        "(lin#)=LINENUM .ZCSR"
        sep='//*'Copies('-',67)'*'
        "LINE_BEFORE" lin#+disp"=(sep)";lin#=lin#+1+disp
        "CURSOR="lin#;"CAPS=OFF"
        If i_apln='Y' Then Do
            linex='//     SET APPLID='stcname'    <- Change'
            "LINE_BEFORE .ZCSR=(linex)"
        End
        If i_stcn='Y' Then Do
            linex='//     SET STCNAME='stcname'   <- Change'
            "LINE_BEFORE .ZCSR=(linex)"
        End
        If #ch1>0 | #ch2>0 | #ch3>0 Then Do
            linex='//     SET HLQC='hlqc'      <- Change'
            "LINE_BEFORE .ZCSR=(linex)"
        End
        If #cv1>0 Then Do
            linex='//     SET VOLUME='vol1'     <- Change'
            "LINE_BEFORE .ZCSR=(linex)"
        End
        "LINE_BEFORE .ZCSR='//* '"
        linex='//* You may need to use the "SYMSUB /RI" command if',
              'any of the above'
        "LINE_BEFORE .ZCSR=(linex)"
        linex='//* variables are used in SYSIN instream data. Issue',
              'command'
        "LINE_BEFORE .ZCSR=(linex)"
        linex='//* "SYMSUB ?" for help.'
        "LINE_BEFORE .ZCSR=(linex)";"LINE_BEFORE .ZCSR=(sep)"
        "C '.STCNAME.' '.&&STCNAME..' ALL"
        "C '(STCNAME) ' '(&&APPLID) ' ALL"

        Signal get_out
    End

    "X '//*' 1 ALL"
    "C 'UUUU'     '&&UUUU'     ALL NX"
    "C 'VVVVVV'   '&&VVVVVV'   ALL NX"
    "C 'DOCVOL'   '&&DOCVOL'   ALL NX"
    "C 'PPVOL'    '&&PPVOL'    ALL NX"
    "C 'DLVOL'    '&&DLVOL'    ALL NX"
    "C 'SMPVOL'   '&&SMPVOL'   ALL NX"
    "C 'HFSVOL'   '&&HFSVOL'   ALL NX"
    "C 'GSEX'     '&&GSEX'     ALL NX"
    "C 'MVSSMPX'  '&&MVSSMPX'  ALL NX"
    "C 'CCCCCCCC' '&&CCCCCCCC' ALL NX"


Exit

    Do Forever
        "F 'GRPLIST=('"
        If rc/=0 Then Leave
        "(line)=LINE .ZCSR"
        Parse VAR line p1 'GRPLIST=(' list ')' p2
        list=Translate(list,' ',',')
        com=Wordpos('COMMON',list)
        If com=0 Then msg='** No "COMMON" list.'
        Else Do
            x1=SubWord(list,1,com-2);x2=Subword(list,com+1)
            w1=Word(list,com-1)
            list=Translate(Space(x1 "COMMON" w1 x2),',',' ')
            linex=p1'GRPLIST=('list')'p2
            "LINE .ZCSR=(linex)"
            msg=line
        End
        x=nl(msg)
    End

Get_out:
    "FIND '//*' 1 ALL";"USER_STATE=(status)"
    Exit

nl: Parse Arg nl1
    "LINE_BEFORE .ZCSR= NOTELINE (nl1)";Return 0
