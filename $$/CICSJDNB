/******************************** REXX ********************************/
    matrix=,
        'SYSE:',
        'CICSTOS1 CICSTOS2 CICSTOS3 CICSTOS5 CICSTOS6',
        'CICSSRD4 CICSSRD5 CICSSD5R CICSQAS CICSSQSD',
        'CICSTMIL CICSTPKG CICSTDC1 CICSTDC2',
        ':',
        'SYSB:',
        'CICSCDS',                             /* Production  regions */
        'CICSDC1',                             /* Production  regions */
        'CICSDC2',                             /* Production  regions */
        'CICSDD1',                             /* Production  regions */
        'CICSDP1 CICSDP2 CICSDP3',             /* Production  regions */
        'CICSDP4',                             /* Production  regions */
        'CICSDP5 CICSDP6 CICSDP7 CICSDP8',     /* Production  regions */
        'CICSAT2',                             /* Production  regions */
        'CICSRDC1 CICSRDC2 CICSSD1R',          /* Development regions */
        ':',
        'SYSG:',
        'CICSDB1',                             /* Production  regions */
        'CICSDB5',                             /* Production  regions */
        ':',
        ''
    regnignr=Csgch$('regnignr')
    regnmask=Csgch$('regnmask')
    sysid=Strip(storage(d2x(x2d(c2x(storage(10,4)))+x2d(154)),8))

    cvt=Storage(10,4);asvt=Storage(d2x(c2d(cvt)+x2d(22c)),4)
    ascbmax=c2d(Storage(d2x(c2d(asvt)+x2d(204)),4))
    xf7='7F'X                               /* Active @ mask          */
    x_r_x=regnmask;regn=
    Do While x_r_x/=''
        asve@=d2x(c2d(asvt)+x2d(210));asve=Storage(asve@,4)
        r_list=
        Parse VAR x_r_x mask x_r_x
        aster1=Index(mask,'*')
        If aster1>0 Then aster2=Index(mask,'*',aster1+1);Else aster2=0
        Select
            When aster1=0 Then m_type=4
            When aster2=0 Then Do
                If aster1=1 Then Do
                    m_type=3;mask=Substr(mask,2)
                End
                Else Do
                    m_type=1;mask=Substr(mask,1,Length(mask)-1)
                End
            End
            Otherwise Do
                m_type=2;Parse VAR mask '*' mask '*' .
            End
        End
        maskl=Length(mask)
        Do i=1 To ascbmax
            If Bitor(Substr(asve,1,1),xf7)=xf7 Then Do
                jbn=c2x(Storage(d2x(c2d(asve)+x2d(0AC)),4))
                If jbn=0 Then
                    jbn=c2x(Storage(d2x(c2d(asve) + x2d(0B0)),4))
                jbnm=Storage(jbn,8)
                If jbnm='INIT    ' | jbn=0 | jbnm='ASCHINT ' Then Do
                    asve@=d2x(x2d(asve@)+(4));asve=Storage(asve@,4)
                    Iterate
                End
                xx=match_reg_mask()
                If xx/='' Then r_list=r_list xx
            End
            asve@=d2x(x2d(asve@)+(4));asve=Storage(asve@,4)
        End
        If r_list/='' Then x=Sort_regions(r_list)
    End
    If regn/='' Then regions=Substr(regn,1,Length(regn)-1);Else regions=
    regionp=regions
    If Length(regions)>159 Then Do
        regionp=Translate(regionp,' ',',')
        regionp=Space($Wordat(regionp,158,'L'),1,',')'+'
    End
    xregs=Translate(regions,' ',',')
    Interpret "Parse VAR matrix '"sysid":' sysregs ':'"
    nxregs=
    Do while sysregs/=''
        Parse VAR sysregs reg sysregs
        If Wordpos(reg,xregs)=0 Then nxregs=nxregs reg
    End
    Say 'Regions not executing:'
    Do While nxregs/=''
        Parse VAR nxregs reg nxregs
        Say '  'reg
    End
    Return 0

match_reg_mask:
    rjn=;jbnm=Strip(jbnm)
    Select
        When m_type=1 Then,                 /* Pattern CICS*          */
            If Substr(Strip(jbnm),1,maskl)=mask Then rjn=jbnm
        When m_type=2 Then,                 /* Pattern *CICS*         */
            If Index(jbnm,mask)>0 Then rjn=jbnm
        When m_type=3 Then,                 /* Pattern *CICS          */
            If Substr(Strip(jbnm),Length(jbnm)-maskl+1)=mask Then rjn=jbnm
        Otherwise,                          /* Pattern CICS           */
            If Strip(jbnm)=mask Then rjn=jbnm
    End
    If rjn/='' & Wordpos(rjn,regnignr)>0 Then rjn=
    Return Strip(rjn)

/*--------------------------------------------------------------------*/
/*  Sort regions using a simple bubble sort process.                  */
/*--------------------------------------------------------------------*/
Sort_REGIONS: Arg xxx
    Do i=1 To 9999
        Parse VAR xxx v.i xxx;If xxx='' Then Leave
    End
    Do l=1 to i-1
        swap=0
        Do j=1 to i-l
            k=j+1
            If v.j>v.k Then Do
                swap=1;x=v.j;v.j=v.k;v.k=x
            End
        End
        If swap=0 Then Leave
    End
    Do l=1 to i;regn=regn||v.l',';End
    Return yyy

