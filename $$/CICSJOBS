/*--------------------------ooo00 REXX 00ooo--------------------------*/
/*                                                                    */
/*  CICSJOBS                                                          */
/*                                                                    */
/*  Routine to scan all executing JOBS/STCS and identify any CICS     */
/*  jobs matching masks and excludin specifics.                       */
/*                                                                    */
/*  Arguments (positional).                                           */
/*     regions- List of region masks, space seperated to return       */
/*              seperated.                                            */
/*     ignore - List of region masks, space seperated to ignore if    */
/*              matched..                                             */
/*     /R | R - Return the list of CICS regions (including TMON jobs) */
/*              comma seperated.                                      */
/*                                                                    */
/*--------------------------------------------------------------------*/
CICSJOBS:cicsjobs_ver='1.06'
    Parse Upper Arg regnmask,regnignr,ret_data
    Address ISPEXEC
    im_a_macro = 0
    If parm# /= '' Then Signal byp1
    "CONTROL ERRORS RETURN"
    "ISREDIT MACRO (parm#) NOPROCESS"
    If rc > 0 Then SIGNAL byp1
    im_a_macro = 1

byp1:
    cactn = "RETURN"
/*  cactn = "CANCEL"                                                  */
    "CONTROL ERRORS" cactn

ini1:
    Parse SOURCE . . xcmd .

    If regnmask='' Then Do
        regnmask= 'CICS*'                   /* CICS names mask(s)     */
        regnmask=regnmask 'TMCI*'           /*    and the TMON jobs   */
    End
    If regnignr='' Then Do
        regnignr= 'OM2CICS'                 /* Ignore mask match      */
    End

    site    = TELSTRA
    site    = FULLNAME

    x = get_regions()
    If Wordpos(ret_data,'R /R')>0 Then Return regn
    Else Say regn

    Exit

get_regions:
    cvt     =  Storage(10,4)
    asvt    =  Storage(d2x(c2d(cvt) + x2d(22c)),4)
    ascbmax =  c2d(Storage(d2x(c2d(asvt) + x2d(204)),4))
    xf7     = '7F'X                         /* Active @ mask          */

    regn    =
    Do While regnmask /= ''
        asve@  =  d2x(c2d(asvt) + x2d(210))
        asve   =  Storage(asve@,4)
        r_list =
        Parse VAR regnmask mask regnmask
        aster1 = Index(mask,'*')
        If aster1 > 0 Then aster2 = Index(mask,'*',aster1+1)
        Else               aster2 = 0
        Select
            When (aster1 = 0) Then m_type = 4
            When (aster2 = 0) Then Do
                If aster1 = 1 Then Do
                    m_type = 3
                    mask = Substr(mask,2)
                End
                Else Do
                    m_type = 1
                    mask = Substr(mask,1,Length(mask)-1)
                End
            End
            Otherwise Do
                m_type = 2
                Parse VAR mask '*' mask '*' .
            End
        End
        maskl = Length(mask)
        suff  =
        Select
            When site = 'TELSTRA' Then pref = Substr(mask,2,1)
            Otherwise pref =
        End
        Do i=1 To ascbmax
            If Bitor(Substr(asve,1,1),xf7) = xf7 Then Do
                jbn = c2x(Storage(d2x(c2d(asve) + x2d(0AC)),4))
                If jbn = 0 Then
                    jbn = c2x(Storage(d2x(c2d(asve) + x2d(0B0)),4))
                jbnm = Storage(jbn,8)
                If jbnm = 'INIT    ' | jbn = 0 |,
                   jbnm = 'ASCHINT ' Then Do
                    asve@ = d2x(x2d(asve@) + (4))
                    asve  = Storage(asve@,4)
                    Iterate
                End
                xx = match_reg_mask()
                If xx /= '' Then,
                    If Index(regnignr,' 'xx' ') = 0 Then,
                        r_list = r_list xx
            End
            asve@ = d2x(x2d(asve@) + (4))
            asve  = Storage(asve@,4)
        End
        If r_list  /= '' Then x = Sort_regions(r_list,pref,suff)
    End

    If regn /= '' Then regn = Substr(regn,1,Length(regn)-1)

    Return 0

match_reg_mask:
    rjn = ''
    Select
        When m_type = 1 Then,               /* Pattern CICS*          */
            If Substr(Strip(jbnm),1,maskl) = mask Then rjn = jbnm
        When m_type = 2 Then,               /* Pattern *CICS*         */
            If Index(jbnm,mask) > 0 Then rjn = jbnm
        When m_type = 3 Then,               /* Pattern *CICS          */
            If Substr(Strip(jbnm),Length(jbnm)-maskl+1) = mask Then,
                 rjn = jbnm
        Otherwise,                          /* Pattern CICS           */
            If Strip(jbnm) = mask Then rjn = jbnm
    End
    If rjn /= '' Then Do
        Select
            When site = 'TELSTRA' Then rjn = Strip(Substr(rjn,5))
            Otherwise NOP
        End
    End
    Return Strip(rjn)

/*--------------------------------------------------------------------*/
/*  Sort regions using a simple bubble sort process.                  */
/*--------------------------------------------------------------------*/
Sort_REGIONS: Arg xxx,v1,v2
    Do i=1 To 9999
        Parse VAR xxx v.i xxx
        If xxx = '' Then Leave
    End
    Do l=1 to i-1
        swap = 0
        Do j=1 to i-l
            k = j+1
            If v.j > v.k Then Do
                swap = 1
                x = v.j
                v.j = v.k
                v.k = x
            End
        End
        If swap = 0 Then Leave
    End
    Do l=1 to i
        If v1 /= '' Then regn = regn || v1 || v.l','
        Else             regn = regn || v.l || v2','
    End

    Return yyy

