/*--------------------------ooo00 REXX 00ooo--------------------------*/
/*  CICUJ:                                                            */
/*  Routine to return CICS jobs executing.  Issues a STATUS command.  */
/*  for all applicable CICS jobs and then parses the output and       */
/*  extracts the executing jobs from the list provided.               */
/*                                                                    */
/*  Parameters (positional):                                          */
/*   sysid  - System id. Default is the system.                       */
/*   type   - request type.                                           */
/*            F - Returns the full CICS name(s) comma separated       */
/*                (default).                                          */
/*            P - Returns the part CICS name(s) comma separated (last)*/
/*                3/4 characters.                                     */
/*                                                                    */
/*--------------------------------------------------------------------*/
CICUJ:cicuj_ver='1.02'
    PARSE  ARG  sysid,type,trace;If trace/='' Then Trace r

    If type='' Then Do
        sysid=Translate(sysid,' ',',');Parse VAR sysid sysid type
    End
    If sysid='' Then,
        sysid=Strip(storage(d2x(x2d(c2x(storage(10,4)))+x2d(154)),8))
    If type='' Then type='F'

    valid_regions=CICU$(sysid)
    #m1=Msg('On');x=Outtrap('line.',5000,'NOCONCAT')
    Address TSO "STATUS ("valid_regions")"
    x=Outtrap('Off');x=Msg(#m1)
    exec.=;regs.=;s_ids=
    Do i=1 To line.0
        If Index(line.i,'EXECUTING')>0 Then Do
            i=i+1;Parse Var line.i ' JOB ' reg . . . s_id .
            If Wordpos(s_id,s_ids)=0 Then s_ids=s_ids s_id
            exec.s_id=exec.s_id reg
            regs.s_id=regs.s_id Substr(reg,5)
        End
    End
    Do While s_ids/=''
        Parse VAR s_ids s_id s_ids
        regs.s_id=Space(regs.s_id,,',')
        exec.s_id=Space(exec.s_id,,',')
    End
    If type='F' Then Return exec.sysid;Else Return regs.sysid
