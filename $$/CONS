/******************************** REXX ********************************/
/**********************************************************************/
/* TRACE r                                                            */
/*--------------------------ooo000OOOO000ooo--------------------------*/
/*                                                                    */
/*  Macro to generate DEFINE console CSD batch update definitions from*/
/*  the member being edited/viewed.                                   */
/*                                                                    */
/*  Format of data (words):                                           */
/*    1. Userid. May have an optional '(term)' following it with no   */
/*       imbeded spaces.                                              */
/*    2. All words after word 1 will be placed before the literal     */
/*       "TSO console" in the DESCRIPTION() field.                    */
/*       If no data is supplied, then the userid is used in the       */
/*       description.                                                 */
/*                                                                    */
/*  The first line may be of the format "GROUP(group)". If the first  */
/*  line does not have the format group name "TSOCNSL" will be used.  */
/*                                                                    */
/*--------------------------------------------------------------------*/
    ARG parm#
    Address ISPEXEC
    ima_macro=0
    If parm#/='' Then Signal byp1
    "CONTROL ERRORS RETURN"
    "ISREDIT MACRO (parm#) NOPROCESS"
    If rc>0 Then SIGNAL byp1
    ima_macro=1

byp1:
    cactn="RETURN"
    cactn="CANCEL"
    "CONTROL ERRORS" cactn

ini1:
    zedsmsg=
    chgchar='`'

    PARSE Upper VAR parm# parm#

    Address ISREDIT
    "(status)=USER_STATE";"(last)=LINENUM .ZLAST";j=1
    "(line)=LINE" j;Parse VAR line 'GROUP(' group ')'
    If group='' Then group='TSOCNSL'
    Else Do;"LINE" j"='*" Strip(line)"'";j=2;End
    Do j=j To last
        "(line)=LINE" j
        Parse VAR line ui name
        Parse VAR ui ui '(' ti ')'
        If name='' Then name=ui;Else name=Strip(name)
        If ti='' Then ti='TS'Substr(ui,Length(ui)-1)
        "LINE" j"='*" Strip(line)"'"
        x=set_def()
    End

    zedlmsg='Use the "MD" line command to convert NOTELINEs to data.'
    Address ISPEXEC "SETMSG MSG(ISRZ001)"
    "USER_STATE=(status)";Exit

set_def:
    n_st = mark(2)                          /* Mark next line         */
/*
`DELETE TERMINAL(&TI.) GROUP(&GROUP.)
`DEFINE TERMINAL(&TI.) GROUP(&GROUP.)
`       NETNAME(&TI.) CONSNAME(&UI.)
`       DESCRIPTION(&NAME. TSO console)
        AUTINSTMODEL(NO) TYPETERM(DFHCONS)
`       PRINTERCOPY(NO) ALTPRINTCOPY(NO) TASKLIMIT(NO) USERID(&UI.)
        NATLANG(E) TERMPRIORITY(0) INSERVICE(YES) SOLICITED(NO)
        ATTACHSEC(LOCAL) BINDSECURITY(NO) USEDFLTUSER(NO)
*/
    n_en = mark(-2)                         /* Mark prev 2 line       */

    "(caps)=CAPS";"CAPS=OFF"
    x=nl('*')
    Do i=n_en To n_st By -1
        line=Sourceline(i)
        If Substr(line,1,1)=chgchar Then Do
            line=' 'Substr(line,2)
            Do While Index(line,'&')>0
                Parse VAR line p1 '&' var '.' p2
                Interpret 'line=p1||'var'||p2'
            End
        End
        x=nl(Substr(line,2))
    End
    "CAPS=(caps)";Return 0

nl: Parse Arg nl1;"LINE_AFTER" j"=NOTELINE (nl1)";Return 0
Mark: Arg diff;If Datatype(diff)/='NUM' Then diff=1;Return sigl+diff
