/*--------------------------ooo00 REXX 00ooo--------------------------*/
/*  CSDA$: CSD Analyser variable definer.                             */
/*                                                                    */
/*  This routine is called by CSDA to set variables for field         */
/*  definitions (record parser).                                      */
/*                                                                    */
/*  For further details browse the comments at the bottom of this     */
/*  member or invoke with a paremeter of "??".                        */
/*--------------------------------------------------------------------*/
CSDA$:csda$_ver='2.06'                      /* CSDA$ version          */
    readCSD=1                               /* Read CSD if available  */
    listdesc=1                              /* Site list Desc default */
    listdate=1                              /* Site list changed date */
    datefmt='E'                             /* E(uro), U(SA) J(ulian) */
    callign=1                               /* Automatically allign   */
    nrcolor='PINK'                          /* CSD NoRead color       */
    isort_limit=150                         /* "Internal"sort limit   */
    proc_lim=25                             /* On-line proc limit     */
    pop_upf=10                              /* Pop up progress freq   */

    Parse SOURCE . xenv xcmd xdd xdsn .
    Arg parm#;Address ISPEXEC;"CONTROL ERRORS RETURN";ima_macro=0
    If parm#/='' Then Signal byp1
    "ISREDIT MACRO (parm#) NOPROCESS";If rc=0 Then ima_macro=1

byp1:
/*  "CONTROL ERRORS CANCEL"                                           */

ini1:
    w1=Word(parm#,1);If Wordpos(w1,"? ??")>0 Then Signal help_#1

    Arg parm1,parm2,parm3
    If parm1='/R' Then Interpret "Signal" parm2

Set_CICS_version:
    vd13='N/'                               /* CICS TS1.3 or lower    */
    vd21='Y/'                               /* CICS TS2.1 or greater  */
    "VGET (cicsv) SHARED";Interpret "vd=vd"cicsv

    no_wild=,        /* No on-line '*' permitted for following fields */
           "FILES",
           "PROGRAMS",
           "TERMINALS",
           "TRANSACTIONS",
           ""

Set_valid_item_types:
    validtypes=,
               ' 1 CONnections     01F4',
               ' 2 CORbaservers    0226',
               ' 3 DB2Conns        1B58',
               ' 4 DB2Entries      1D4C',
               ' 5 DB2Trans        1EDC',
               ' 6 DJars           0258',
               ' 7 DOctemplates    238C',
               ' 8 Enqmodels       157C',
               ' 9 Files           0320',
               '10 Groups          0006',
               '11 Ipconns         2580',
               '12 Journalmodels   0384',
               '13 LIBrarys        15E0',
               '14 Lsrpools        028A',
               '15 MapSets         03E8',
               '16 PARTItionsets   07D0',
               '17 PARTNers        09C4',
               '18 PIpelines       24B8',
               '19 PROCesstypes    2134',
               '20 PROFiles        0BB8',
               '21 PROGrams        0FA0',
               '22 Requestmodels   2328',
               '23 Sessions        10ED',
               '24 TCpipservices   23F0',
               '25 TDqueues        1770',
               '26 TErminals       123A',
               '27 TRANClasses     1318',
               '28 TRANSactions    1388',
               '29 TSmodels        1F40',
               '30 TYpeterms       11CB',
               '31 Urimaps         2454',
               '32 Webservices     251C',
               ''

Set_Translate_matrixes_Positional:                  /* Trail comment=HEXid    */
    CON_acm="ACmthd_48:1("'01'x"=VTAM,"'02'x"=IRC,"'03'x"=INDirect," ||,
            '04'x"=XM)/8"                                               /* 10 */
    CON_dat="Datast_56:1("'01'x"=User,"'02'x"=3270,"'03'x"=SCs,"     ||,
            '04'x"=STrfield,"'05'x"=Lms)/8"                             /* 12 */
    CON_pro="Protoc_50:1("'01'x"=APPC,"'02'x"=LU61,"'03'x"=EXCI)/4"     /* 0F */
    CON_rfm="RECfmt_58:1("'01'x"=U,"'02'x"=Vb)/2"                       /* 13 */
    COR_Auto="AutoPb_48:1("'01'x"=Yes,"'02'x"=No)/3"                    /* 0E */
    COR_st="Status_50:1("'01'x"=Enabled,"'02'x"=Disabled)/8"            /* 0F */
If cicsv=21 Then Do
    DB2C_ConE="ConErr_48:1("'01'x"=Abend,"'02'x"=Sqlcode)/7"            /* 0E */
    DB2C_RsMe="ResynM_52:1("'01'x"=Yes,"'02'x"=No)/7"                   /* 1A */
    DB2C_StdB="StndBy_54:1("'01'x"=NoCon,"'02'x"=Con,"'03'x"=ReCon)/5"  /* 10 */
    DB2C_trdE="TrdErr_56:1("'01'x"=Abend,"'02'x"=N906D,"'03'x"=N906)/6" /* 11 */
    DB2C_AccR="ActRec_58:1("'01'x"=Uow,"'02'x"=TXid,"||,                /* 12 */
              '03'x"=None,"'04'x"=TAsk)/4"
    DB2C_trdW="TrdWai_66:1("'01'x"=Yes,"'02'x"=No)/3"                   /* 17 */
End
Else Do
    DB2C_ConE="ConErr_48:1("'01'x"=Abend,"'02'x"=Sqlcode)/7"            /* 0E */
    DB2C_RsMe="Unavail_52:1(N-A)/0"
    DB2C_StdB="StndBy_52:1("'01'x"=NoCon,"'02'x"=Con,"'03'x"=ReCon)/5"  /* 10 */
    DB2C_trdE="TrdErr_54:1("'01'x"=Abend,"'02'x"=N906D,"'03'x"=N906)/6" /* 11 */
    DB2C_AccR="ActRec_56:1("'01'x"=Uow,"'02'x"=TXid,"||,                /* 12 */
              '03'x"=None,"'04'x"=TAsk)/4"
    DB2C_trdW="TrdWai_64:1("'01'x"=Yes,"'02'x"=No)/3"                   /* 17 */
End
    DB2E_AccR="ActRec_48:1("'01'x"=Uow,"'02'x"=TXid,"||,                /* 12 */
              '03'x"=None,"'04'x"=TAsk)/4"
    DB2E_AutT="AutTyp_50:1("'01'x"=Userid,"'02'x"=Group,"||,            /* 12 */
              '03'x"=Sign,"'04'x"=TErm,"||,                             /* 12 */
              '05'x"=TX,"'06'x"=Opid)/6"
    DB2E_trdW="TrdWai_56:1("'01'x"=Yes,"'02'x"=No,"'03'x"=Pool)/5"      /* 17 */
    ENQ_st="Status_48:1("'01'x"=Enabled,"'02'x"=Disabled)/8"            /* 0D */
                                                                        /* 0D */
    FILE_st="Status_54:1("'01'x"=Enabled,"'02'x"=Disabled,"'03'x"=Unread)/8"
    FILE_op="Opentime_56:1("'01'x"=Startup,"'02'x"=FirstRef)/8"         /* 0F */
    FILE_disp="Disp_58:1("'01'x"=Share,"'02'x"=Old)/8"                  /* 10 */
    FILE_o_a="Add_68:1("'01'x"=No,"'02'x"=Yes)/3"                       /* 11 */
    FILE_o_b="Browse_70:1("'01'x"=No,"'02'x"=Yes)/3"                 /* 12 */
    FILE_o_d="Delete_72:1("'01'x"=No,"'02'x"=Yes)/3"                 /* 13 */
    FILE_o_r="Read_74:1("'01'x"=Yes,"'02'x"=No)/3"                 /* 14 */
    FILE_o_u="Update_76:1("'01'x"=No,"'02'x"=Yes)/3"                 /* 15 */
    IPCON_au="AutoCon_48:1("'01'x"=No,"'02'x"=Yes)/3"                   /* 0E */
    IPCON_in="InServ_50:1("'01'x"=No,"'02'x"=Yes)/3"                    /* 0D */
    LIBRY_cr="Critic_48:1("'01'x"=No,"'02'x"=Yes)/3"                    /* 0E */
    LIBRY_st="Status_50:1("'01'x"=Enabled,"'02'x"=Disabled)/8"          /* 0D */
    JM_type="Type_48:1("'01'x"=MVS,"'02'x"=SMF,"'03'x"=Dummy)/8"        /* 0E */
    PIPE_st="Status_48:1("'01'x"=Enabled,"'02'x"=Disabled)/8"           /* 0D */
    PROF_sz="ScrSiz_48:1("'00'x"=Default,"'01'x"=Default,"||,           /* 0E */
             '02'x"=Alternat)/8"                                        /* 0E */
    PROF_uc="Uctran_50:1("'00'x"=No,"'01'x"=No,"'02'x"=Yes)/3"          /* 19 */
    PROG_lan="Lang_48:1("'01'x"=Assem,"'02'x"=CObol,"'03'x"=Pli,"||,
             '05'x"=C,"'07'x"=LE370)/5"                                 /* 0E */
    PROG_rel="RELoad_50:1("'01'x"=No,"'02'x"=Yes)/3"                    /* 0F */
    PROG_res="RESide_52:1("'01'x"=No,"'02'x"=Yes)/3"                    /* 10 */
    PROG_st="Status_58:1("'01'x"=Enabled,"'02'x"=Disabled)/8"           /* 0D */
    PROG_edf="CEDF_60:1("'01'x"=Yes,"'02'x"=No)/3"                      /* 13 */
    PROG_dl="DatLoc_62:1("'01'x"=Any,"'02'x"=Below)/5"                  /* 14 */
    PROG_ek="EXECke_64:1("'01'x"=User,"'02'x"=CICS)/4"                  /* 15 */
    SES_pro="Protoc_48:1("'01'x"=APPC,"'02'x"=LU61,"'03'x"=EXCI)/4"     /* 10 */
    TCP_stat="Status_48:1("'01'x"=Open,"'02'x"=Closed)/6"               /* 14 */
    TCP_pro="Protoc_50:1("'01'x"=IIOP,"'02'x"=HTTP,"'03'x"=ECI)/4"      /* 16 */
    TD_type="Type_48:1("'01'x"=EXTRA,"'02'x"=INTRA,"'03'x"=INDIRECT)/8" /* 0E */
    TD_disp="Disp_64:1("'01'x"=Shr,"'02'x"=Old,"'03'x"=Mod)/3"          /* 0F */
    TD_atfy="AtiFac_66:1("'01'x"=Terminal,"'02'x"=File,"'03'x"=System)/8"
    TE_aimd="AImodl_48:1("'01'x"=No,"'02'x"=Yes,"'03'x"=Only)/4"        /* 10 */
    TRAN_st="Status_48:1("'01'x"=Enabled,"'02'x"=Disabled)/8"           /* 0D */
    TRAN_dl="DatLoc_50:1("'01'x"=Below,"'02'x"=Any)/5"                  /* 19 */
    TRAN_ky="DatKey_52:1("'00'x"=User,"'01'x"=User,"'02'x"=CICS)/4"     /* 1A */
    TRAN_is="Isolat_58:1("'01'x"=Yes,"'02'x"=No)/3"                     /* 1D */
    TRAN_ps="SPurge_68:1("'01'x"=No,"'02'x"=Yes)/3"                     /* 11 */
    TRAN_tp="TPurge_70:1("'01'x"=No,"'02'x"=Yes)/3"                     /* 12 */
    TS_loca="Locatn_48:1("'01'x"=Auxilary,"'02'x"=Main)/8"              /* 0F */
    TY_ship="Shipbl_48:1("'01'x"=No,"'02'x"=Yes)/3"                     /* 0F */
    URIM_st="Status_48:1("'01'x"=Enabled,"'02'x"=Disabled)/8"           /* 0D */
    URIM_us="Usage_50:1("'01'x"=Server,"'02'x"=Client,"||,
            '03'x"=Pipeline)/8"                                         /* 0E */
    URIM_sc="SCheme_52:1("'01'x"=HTTP,"'02'x"=HTTPS)/5"                 /* 0F */
    WEBS_va="Validn_48:1("'01'x"=No,"'02'x"=Yes)/3"                     /* 0D */

Set_record_layouts_0:
    LSR_buffers="D512_09/5D2_Y_"  ||,
                "D1K_0A/5D2_I_"   ||,
                "D2K_0B/5D2_I_"   ||,
                "D4K_0C/5D2_I_"   ||,
                "D8K_0D/5D2_I_"   ||,
                "D12K_0E/5D2_I_"  ||,
                "D16K_0F/5D2_I_"  ||,
                "D20K_10/5D2_I_"  ||,
                "D24K_11/5D2_I_"  ||,
                "D28K_12/5D2_I_"  ||,
                "D32K_13/5D2_I_"  ||,
                "I512_16/5D2_Y_"  ||,
                "I1K_17/5D2_I_"   ||,
                "I2K_18/5D2_I_"   ||,
                "I4K_19/5D2_I_"   ||,
                "I8K_1A/5D2_I_"   ||,
                "I12K_1B/5D2_I_"  ||,
                "I16K_1C/5D2_I_"  ||,
                "I20K_1D/5D2_I_"  ||,
                "I24K_1E/5D2_I_"  ||,
                "I28K_1F/5D2_I_"  ||,
                "I32K_20/5D2_I_"  ||,
                "HD4K_21/8D3_Y_"  ||,
                "HD8K_22/8D3_I_"  ||,
                "HD12K_23/8D3_I_" ||,
                "HD16K_24/8D3_I_" ||,
                "HD20K_25/8D3_I_" ||,
                "HD24K_26/8D3_I_" ||,
                "HD28K_27/8D3_I_" ||,
                "HD32K_28/8D3_I_" ||,
                "HI4K_29/8D3_Y_"  ||,
                "HI8K_2A/8D3_I_"  ||,
                "HI12K_2B/8D3_I_" ||,
                "HI16K_2C/8D3_I_" ||,
                "HI20K_2D/8D3_I_" ||,
                "HI24K_2E/8D3_I_" ||,
                "HI28K_2F/8D3_I_" ||,
                "HI32K_30/8D3_I_" ||,
                ""
Set_record_layouts_1:
    itemflds=, /* Format itemtype1 idtext1_hexid1/maxlen1{D|R|Xval}_rep1{_id2.*/
           "CONNECTIONS",
                    "Netnam_05/8_Y_"    ||,
                    "INDsys_06/8_Y_"    ||,
                    "REMsys_0A/4_Y_"    ||,
                    "REMnam_0B/4_Y_"    ||,
                    "REMsyN_1B/4_Y_"    ||,
                     CON_acm"_"vd"Y_"   ||,
                     CON_pro"_"vd"Y_"   ||,
                     CON_dat"_"vd"Y_"   ||,
                     CON_rfm"_"vd"Y_"   ||,
                    "QueLim_0D/4D1(No)_Y_"||,
                    "MaxQti_0E/4D1(No)_Y",
           "CORBASERVERS",
                    "JNDIpr_05/58_Y_"   ||,
                     COR_Auto"_"vd"Y_"  ||,
                    "SEbtim_0A/12R$R02_Y_" ||,
                    "Shelf_07/58_Y_"    ||,
                    "DJard_15/58_Y_"    ||,
                     COR_st"_"vd"Y_"    ||,
                    "Host_08/58_Y_"     ||,
                    "Unauth_0F/58_Y_"   ||,
                    "Port_09/5D3_Y",
           "DB2CONNS",
                    "DB2id_07/4_Y_"     ||,
                     DB2C_ConE"_Y/Y_"   ||,
                    "MSGq1_08/4_Y_"     ||,
                    "PUrgeC_0B/8R$R01_Y_" ||,
                     DB2C_RsMe"_"vd"Y_" ||,
                     DB2C_StdB"_Y/Y_"   ||,
                    "StatsQ_0D/4_Y_"    ||,
                    "TCBlim_0E/4D2_Y_"  ||,
                     DB2C_trdE"_Y/Y_"   ||,
                     DB2C_AccR"_Y/Y_"   ||,
                    "Plan_11/8_Y_"      ||,
                    "PlanEx_12/8_Y_"    ||,
                    "TrdLim_0F/4D3_Y_"  ||,
                     DB2C_trdW"_Y/Y",
           "DB2ENTRIES",
                    "TRan_08/4_Y_"      ||,
                    "Plan_11/8_Y_"      ||,
                    "PROtec_0D/4D3_Y_"  ||,
                    "TrdLim_0F/4D3_Y_"  ||,
                     DB2E_AccR"_Y/Y_"   ||,                             /* 12 */
                     DB2E_AutT"_Y/Y_"   ||,                             /* 12 */
                     DB2E_trdW"_Y/Y",
           "DB2TRANS",
                    "Tranid_08/4_Y_"    ||,
                    "Entry_09/8_Y",
           "DJARS",
                    "CorbaS_05/4_Y_"    ||,
                    "HFSfil_07/58_Y",
           "DOCTEMPLATES",
                    "Templt_07/8_Y_"    ||,
                    "File_08/8_Y_"      ||,
                    "TS-que_09/16_Y_"   ||,
                    "TD-que_0A/4_Y_"    ||,
                    "Prog_0B/4_Y_"      ||,
                    "ExProg_0C/4_Y_"    ||,
                    "P-DDna_0D/8_Y_"    ||,
                    "P-Memb_0E/8_Y",
           "ENQMODELS",
                    "EnqScp_07/4_Y_"    ||,
                     ENQ_st"_"vd"Y_"    ||,
                    "EnqNam_08/58_Y",
           "FILES",
                    "Dsname_06/44_Y_"   ||,
                    "LSR_0D/5R$R03_Y_"  ||,
                    "Strngs_0E/5N1_Y_"  ||,
                    "RemSys_0A/4_Y_"    ||,
                    "RemNam_0B/8_Y_"    ||,
                    "RSize_07/4D2_Y_"   ||,
                    "KeyLen_08/3D1_Y_"  ||,
                     FILE_st"_"vd"Y_"   ||,
                     FILE_op"_"vd"Y_"   ||,
                     FILE_disp"_"vd"Y_" ||,
                     FILE_o_a"_"vd"Y_"  ||,
                     FILE_o_b"_"vd"Y_"  ||,
                     FILE_o_d"_"vd"Y_"  ||,
                     FILE_o_r"_"vd"Y_"  ||,
                     FILE_o_u"_"vd"Y_"  ||,
                    "Inxbuf_0F/5N1_Y_"  ||,
                    "Datbuf_10/5N1_Y",
           "IPCONNS",
                    "Applid_07/8_Y_"    ||,
                    "Netid_0F/26_Y_"    ||,
                    "Host_0A/56_Y_"     ||,
                    "Port_09/5N1(No)_Y_"||,
                    "TcpipS_08/08_Y_"   ||,
                    "RecvC_0B/3N1_Y_"   ||,
                    "SendC_0C/3N1_Y_"   ||,
                     IPCON_au"_"vd"Y_"  ||,
                     IPCON_in"_"vd"Y",
           "JOURNALMODELS",
                    "Journl_07/8_Y_"    ||,
                    "Stream_08/26_Y_"   ||,
                     JM_type"_"vd"Y",
           "LIBRARYS",
                    "Rankg_05/2N1_Y_"   ||,
                     LIBRY_cr"_"vd"Y_"  ||,
                     LIBRY_st"_"vd"Y_"  ||,
                    "DSN01_07/44_Y_"    ||,
                    "DSN02_08/44_I_"    ||,
                    "DSN03_09/44_I_"    ||,
                    "DSN04_0A/44_I_"    ||,
                    "DSN05_0B/44_I_"    ||,
                    "DSN06_0C/44_I_"    ||,
                    "DSN07_0D/44_I_"    ||,
                    "DSN08_0E/44_I_"    ||,
                    "DSN09_0F/44_I_"    ||,
                    "DSN10_10/44_I_"    ||,
                    "DSN11_11/44_I_"    ||,
                    "DSN12_12/44_I_"    ||,
                    "DSN13_13/44_I_"    ||,
                    "DSN14_14/44_I_"    ||,
                    "DSN15_15/44_I_"    ||,
                    "DSN16_16/44_I",
           "LSRPOOLS",
                    "LSpool_14/1N1_Y_"  ||,
                    "Maxkey_06/3N1_Y_"  ||,
                    "Strngs_08/3N1_Y_"  ||,
                     LSR_buffers"_"vd"Y",
           "PIPELINES",
                     PIPE_st"_"vd"Y_"   ||,                             /* 0E */
                    "Respwa_0A/4D2(Deft)_Y_"||,
                    "Config_05/42_Y_"   ||,
                    "SHelf_08/42_Y_"    ||,
                    "Wsdir_09/42_Y",
           "PROCESSTYPES",
                    "File_07/8_Y",
           "PROFILES",
                     PROF_sz"_Y/Y_"     ||,                             /* 0E */
                     PROF_uc"_Y/Y_"     ||,                             /* 19 */
                    "RTout_08/4D2(No)_Y",
           "PROGRAMS",
                     PROG_st"_"vd"Y_"   ||,
                     PROG_lan"_"vd"Y_"  ||,
                     PROG_rel"_"vd"Y_"  ||,
                     PROG_res"_"vd"Y_"  ||,
                     PROG_edf"_"vd"Y_"  ||,
                     PROG_dl"_"vd"Y_"   ||,
                     PROG_ek"_"vd"Y_"   ||,
                    "RemSys_07/4_Y_"    ||,
                    "RemNam_08/4_Y_"    ||,
                    "Tran_09/4_Y",
           "SESSIONS",
                    "Connec_05/5_Y_"    ||,
                    "MOdena_08/8_Y_"    ||,
                     SES_pro"_"vd"Y_"   ||,
                    "Maxim_09/8R$R01_Y_" ||,
                    "Rprefx_0B/2_Y_"    ||,
                    "Rcount_0C/3N1_Y_"  ||,
                    "Sprefx_0D/2_Y_"    ||,
                    "Scount_0E/3N1_Y_"  ||,
                    "Ssize_14/5N2_Y_"   ||,
                    "Rsize_15/5N2_Y",
           "TCPIPSERVICES",
                    "URM_0E/8_Y_"       ||,
                    "Port_0F/5D2_Y_"    ||,
                     TCP_stat"_"vd"Y_"  ||,
                     TCP_pro"_"vd"Y_"   ||,
                    "Tran_12/4_Y_"      ||,
                    "Backlg_13/5D2(00001)_Y_"||,
                    "SOckCl_18/6N1(No)_Y_"||,
                    "MaxdtL_1B/6D3(000032)_Y_"  ||,
                    "IP-adr_17/16_Y",
           "TDQUEUES",
                     TD_type"_"vd"Y_"   ||,
                    "DDname_09/8_Y_"    ||,
                    "INDnam_10/4_Y_"    ||,
                     TD_disp"_"vd"Y_"   ||,
                     TD_atfy"_"vd"Y_"   ||,
                    "Facili_0C/4_Y_"    ||,
                    "Tran_0D/4_Y_"      ||,
                    "Triglv_0E/5N2_Y",
           "TERMINALS",
                    "Netnam_08/8*4_Y_"  ||,
                    "Typeterm_07/8_Y_"  ||,
                    "Printr_0D/4_Y_"    ||,
                     TE_aimd"_"vd"Y_"   ||,
                    "AIname_06/8_Y_"    ||,
                    "ConNo_09/3D1_Y_"   ||,
                    "CoName_1E/8_Y_"    ||,
                    "Userid_13/8_Y_"    ||,
                    "RemSys_0A/4_Y_"    ||,
                    "RemNam_0B/4_Y_"    ||,
                    "RemNet_21/4_Y_"    ||,
                    "RemMod_0C/8_Y",
           "TRANCLASSES",
                    "MaxAct_05/3N2_Y",
           "TRANSACTIONS",
                    "Prog_06/8_Y_"      ||,
                     TRAN_st"_"vd"Y_"   ||,
                    "TWAsiz_07/5N2_Y_"  ||,
                    "PROFil_08/8_Y_"    ||,
                    "Priory_0C/3N1(1)_Y_"  ||,
                    "RemSys_0A/4_Y_"    ||,
                    "RemNam_0B/4_Y_"    ||,
                     TRAN_ky"_"vd"Y_"   ||,
                     TRAN_dl"_"vd"Y_"   ||,
                     TRAN_is"_"vd"Y_"   ||,
                     TRAN_ps"_"vd"Y_"   ||,
                     TRAN_tp"_"vd"Y_"   ||,
                    "TranCl_18/8(DFHTCL00)_Y_"    ||,
                    "Alias_14/4_Y",
           "TSMODELS",
                    "Prefix_07/16_Y_"   ||,
                    "XPrefx_0B/32_Y_"   ||,
                     TS_loca"_"vd"Y_"   ||,
                    "RemSys_09/4_Y",
           "TYPETERMS",
                    "Device_05/8_Y_"    ||,
                    "TModel_06/1_Y_"    ||,
                     TY_ship"_"vd"Y_"   ||,
                    "PageSz_0A/7R$R01_Y_" ||,
                    "AltPSz_0C/7R$R01_Y",
           "URIMAPS",
                     URIM_st"_"vd"Y_"   ||,
                     URIM_us"_"vd"Y_"   ||,
                     URIM_sc"_"vd"Y_"   ||,
                    "HOST_10/42_Y_"     ||,
                    "Path_11/42_Y_"     ||,
                    "TCpip_15/8_Y_"     ||,
                    "TRan_17/4_Y_"      ||,
                    "PRog_19/8_Y_"      ||,
                    "PIpe_1A/8_Y_"      ||,
                    "Webs_1B/42_Y_"     ||,
                    "User_20/8_Y",
           "WEBSERVICES",
                    "Pipe_05/8_Y_"      ||,
                     WEBS_va"_"vd"Y_"   ||,
                    "WSBind_07/42_Y_"   ||,
                    "WDSlfi_08/42_Y",
           ''

    descflds=, /* Format item1 idtext1_hexid1/maxlen1_rep1            */
               "CONNECTIONS    Desc_0C/58_Y             ",
               "CORBASERVERS   Desc_06/58_Y             ",
               "DB2CONNS       Desc_06/58_Y             ",
               "DB2ENTRIES     Desc_06/58_Y             ",
               "DB2TRANS       Desc_06/58_Y             ",
               "DJARS          Desc_06/58_Y             ",
               "DOCTEMPLATES   Desc_06/58_Y             ",
               "ENQMODELS      Desc_06/58_Y             ",
               "FILES          Desc_12/58_Y             ",
               "GROUPS         Desc_06/58_Y             ",
               "IPCONNS        Desc_06/58_Y             ",
               "JOURNALMODELS  Desc_06/58_Y             ",
               "LIBRARYS       Desc_06/58_Y             ",
               "LSRPOOLS       Desc_15/58_Y             ",
               "MAPSETS        Desc_06/58_Y             ",
               "PARTITIONSETS  Desc_06/58_Y             ",
               "PARTNERS       Desc_06/58_Y             ",
               "PIPELINES      Desc_06/58_Y             ",
               "PROCESSTYPES   Desc_06/58_Y             ",
               "PROFILES       Desc_06/58_Y             ",
               "PROGRAMS       Desc_06/58_Y             ",
               "REQUESTMODELS  Desc_06/58_Y             ",
               "SESSIONS       Desc_1C/58_Y             ",
               "TCPIPSERVICES  Desc_06/58_Y             ",
               "TDQUEUES       Desc_06/58_Y             ",
               "TERMINALS      Desc_06/58_Y             ",
               "TRANCLASSES    Desc_06/58_Y             ",
               "TRANSACTIONS   Desc_15/58_Y             ",
               "TSMODELS       Desc_06/58_Y             ",
               "TYPETERMS      Desc_1C/58_Y             ",
               "URIMAPS        Desc_06/58_Y             ",
               "WEBSERVICES    Desc_06/58_Y             ",
               ''

    Interpret "Return" parm#

/*--------------------------------------------------------------------*/
/* Routine to format X'aaaabbbb' to D'xxx,yyy' where.                 */
/*    Input: aaaabbbb hex value where aaaa-> decimal xxx and          */
/*           bbbb-> decimal yyy.                                      */
/*--------------------------------------------------------------------*/
$R01:
    Parse VAR parm3 xxx +4 yyy
    Return Right(c2d(xxx),3,'0')','Right(c2d(yyy),3,'0')

/*--------------------------------------------------------------------*/
/* Routine to format X'aaaabbbbcccc' to D'xx,yy,zz' where.            */
/*    Input: aaaabbbbcccc hex value where aa-> decimal xx,            */
/*           bb-> decimal yy and cc-> decimal zz.                     */
/*--------------------------------------------------------------------*/
$R02:
    Parse VAR parm3 xx +4 yy +4 zz
    Return Right(c2d(xx),2,'0')','Right(c2d(yy),2,'0')','Right(c2d(zz),2,'0')

/*--------------------------------------------------------------------*/
/* Routine to format the LSR field for files.                         */
/* If spce i  passed, then the field is not defined and uses the      */
/* default definitions, which in this case is "1" (hence the '_Def'   */
/* suffix).  HEX '00' is no LSR pool use.                             */
/* This routine replaces inline definition:                           */
/*      "LSR_0D/1D1(1-Def)_Y_"  ||,                                   */
/*--------------------------------------------------------------------*/
$R03:
    Select
        When parm3='00'x Then Return 'None'
        When parm3=''    Then Return '1_Def'
        Otherwise Return c2d(parm3)
    End

/*--------------------------------------------------------------------*/
/* Help tutorial.                                                     */
/*--------------------------------------------------------------------*/
help_#1:
    n_st=mark(2)    /* Mark Start */
/*
----------------------------ooo000OOOO000ooo----------------------------

  CSDA$: CSD Analyser variable definer.

  This routine is called by CSDA to set variables or return field
  values (for parsing, translating and converting) a CSD record returned
  by "EXECIOVS".

  Process has been exported to prevent creaming of the main driver
  while experimenting with field definitions.

  Internal secrets:
  -----------------
  1.Variables defined in this routine (for other refer to main driver
    CSDA):
    a) itemflds  < Defines all the fields that may be reported against
       individual entity types.
       NOTE:- When adding fields to this variable, DO NOT forget to add
              that field to the "exclflds" variables.
       Format:- 'type1 head1_hexid1/olen1_rep1_head2_....'   - where,
         type1 - entity identifier
         head1 - 1st. field identifier (printed literal)
         '_'   - Literal used as seperator for parsing.
         hexid1- hex value (in display format) of the field identifier.
                 The process will chain through the record looking for
                 this value.
                 (Use 'FF' as placeholder if you do not know code when
                  developing/testing.)
         '/'   - Literal used as seperator for parsing.
         olen1 - maximum output size (seperated from 'hexid' by a
                 "/".
                 This field can be further subdivided into the
                 following format:- ol{ D|N|R|X ll}{(dv)}
                 where,
                   ol   - Output length (used for formating).
                          Note:- Output length should not exceed 42
                                 characters in length (other than
                                 description).  This is a formatting
                                 issue brought about by an attempt to
                                 make output more legible.  If the value
                                 can be greater than 42 characters, set
                                 it to 42 and if the length is >42 then
                                 the formatting routine will truncate it
                                 to fit, right justified with a leading
                                 '+' to indicate least signifficant
                                 leading characters have been truncated.
                   'D'  - Literal 'D' indicating: that value is to be
                          converted from HEX to decimal/digits for
                          display purposes. Field will be '0' padded
                          right justified to 'ol'.
                   'N'  - Literal 'N' indicating: that value is to be
                          converted from HEX to numeric/decimal for
                          display purposes. Field subject to
                          truncation.
                   'R'  - REXX sub-routine in this member to return to
                          CSDA. If this parameter is used, the variable
                          'll' will containg the label name rather than
                          a length.  The label must exist else
                          unpredictable results will occur.
                          If 'R' is detected, the following command will
                          be issued by CSDA with the field contents to
                          be processed being passed as the 3rd parameter
                          to CSDA$:
                             val=CSDA$('/R',ll,field_val)
                   'X'  - Literal 'X' indicating: that value is to be
                          converted from HEX to displayable HEX format
                          for display purposes.
                   '*'  - Literal '*' indicating: that if the value is
                          missing it will default to the item's value.
                          (Eg. if 'netname' missing it will take on the
                          termid value.)
                          If this parameter is used, the variable
                          'll' will containg the maximum length of
                          the substituted field.  This length must
                          be provided for parsing syntax.
                   ll   - Trailing value to confirm presence of the
                          'D|X' value when using the "Parse" REXX
                          command.  If this value is blank it is
                          assumed that there was no 'D|X' value
                          supplied. If it is non-blank then a 'D|X' was
                          supplied and data is processed accordingly.
                          If 'R' is used, this value should be a
                          valid label that can be branched to and
                          process/return the value supplied.
                   (    - Literal used as seperator for parsing.
                   dv   - Default literal value (unquoted and enclosed
                          in brackets) to be alloacted if the HEXid is
                          not found.
                          Note: If a 'dv' is supplied, the 'ol' (output
                                length) will be adjusted accordingly.
                              : This is different from the '*' above
                                where the primary entity value is used.
                   )    - Literal used as seperator for parsing.
         '_'   - Literal used as seperator for parsing.
         rep1  - Literal 'Y' or 'N' to indicate if the field is to be
                 reported (processed). See below for format 'x/y'.
                 Set to 'I' to ignore reporting if field value is NULL
                 (not found/returned).
                 You may wish to suppress the field for a number of
                 reasons:
                  1. Field is not available under your version of CICS.
                     This will suppress attempted processing thereby
                     saving valuable cycles.
                  2. Positional field may have changed between versions
                     of CICS.
                  3. You may consider it a useless field at your site.
                     Remember that setting it to 'N' affects all users.
                     If it's just you who doesn't want it, use another
                     field suppression facility.
                  Note:
                  -----
                  Some fields are positional while others are
                  hexid/length identified. Positional fields tend to be
                  binary flags to indicate static values and may have
                  changed with CICS TS2.1. Therefore positional fields
                  may be misinterpreted (or unavailable) with earlier
                  versions.
                  For these positional fields, the 'rep1' value is of
                  the format 'x/y' where,
                    x   - Indicates whether the field is available to
                          that version of CICS (Y or N). You can pass a
                          parameter of "/13" to tell 'CSDA' not to
                          report positional fields. Alternatively set
                          variable "vb" in 'CSDA$' to 'N/' for site
                          specifics.
                    '/' - Seperator literal used for parsing.
                    y   - If the positional parameter IS available, this
                          is used to indicate whether to report/suppress
                          the available field.
         '_'   - Literal used as seperator for parsing. This seperator
                 indicates the above set of values are to be repeated
                 (followed by "head2_hexid2/olen2_rep2_").
                 The absence of this terminates the item's field
                 definitions.
         head2 - 2nd. field identifier etc...
       This variable (matrix) is used to parse CSD records read using
       EXECIOVS.

       You may string as many of these field id's together as you like
       but they must be seperated by '_' and the whole data must not
       contain any imbeded blanks (except the one seperating the
       typeid and the field(s).
       Note- 'hexid' is the standard way of identifying variable
             format data, however, some data like flags are in the
             fixed format. You can specify fixed format as,
             Format:-
               oo:l(x1=lit1{,x2=lit2{,x3=lit3}})
             where,
               oo   - Fixed record offset of field/flag.
               ':'  - Seperator used to identify this format def'n.
               l    - length if field/flag (note ":" seperator)
               ()   - Between brackets is a direct translation
                      matrix.  The matrix consiste of format:-
                      'xx=lit' where,
                        xx   - explicit possible field values.  Hex
                               values need to be coded in hex.
                               (Binary masks not catered for in this
                               release.)
                        lit  - literal to be associated with the field
                               value. Note that this value's length
                               should not exceed the 'olen' value
                               defined for the field. Note the '='
                               seperator.
                      You may have as many entries as you like in the
                      matrix, however, values must be comma seperated
                      and may not contain included spaces.
       Feel free to add your own fields. However, to minimise
       maintainability, suggest you set them up in another REXX and
       call it to assign values. Eg., change the assign statement to:-
           'itemflds=myassign()'
       and create member 'mysassign' which return a doctored version
       if the assign statement in this REXX.

    b) descflds  < Can be considered a single field format of
       "itemflds".  The descriptions have been removed to permit
       exclusion of descriptions as often they are too abstract and
       also using this format they can be forced to the end of the
       report to avoid clutter.
       Note: If you are anally retentive and want your report columns
             to align, make all lengths 8 bytes long.

    c) readCSD   < Read the CSD to provide field values if available
       (and EXECIOVS is active).  Default 1, (0/1).
    d) listdesc  < Site's list description default. Default 1, (0/1).
    e) listdate  < Site's list changed date/time. Default 1, (0/1).
    f) datefmt   < Date format, E(uropean), U(SA) or J(ulian). Default
       'E'.
    g) callign   < Automatically allign columns. Default 1, (0/1).
    h) nrcolor   < CSD NoRead color indicator if chose not to read
       CSD.  This color is set if the '/NR' flag is used, CSD not
       available or EXECIOVS not active.  Default is 'PINK' (any valid
       ISPF panel definition COLOR value).
    i) isort_limit < Limit for using the less efficient $SORT routine.
       Default is 150.
    j) no_wild   < List of fields for which no on-line '*' search is
       permitted because of potential process time blowouts.

  2.Internal routines to set/return variable values.
    $R01: Routine to format X'aaaabbbb' to D'xxx,yyy' where HEX aaaa
          -> decimal xxx and HEX bbbb -> decimal yyy.
    $R02: Routine to format X'aaaabbbbcccc' to D'xx,yy,zz' where HEX
          aaaa -> decimal xx, HEX bbbb -> decimal yy and HEX cccc ->
          decimal zz.
    $R03: Routine to format the LSR field for files.  If space is
          passed, then the field is not defined and uses the default
          definitions, which in this case is "1" (hence the '_Def'
          suffix).  'N' is no LSR pool use.

------------------------------------------------------------------------
*/
n_en=mark(-2)   /* Mark End   */

    If w1="??" Then Signal Help_me;"ISREDIT (m)=MEMBER";rcm=rc
    If rcm=0 Then Signal Help_me;Signal On Syntax Name Help_me
    Parse Source . . xcmd .;x=$$BR(xcmd "??");Return
    Mark:If Datatype(Arg(1))/="NUM" Then Arg(1)=1;Return sigl+Arg(1)
    Help_me:Signal Off Syntax;#tr=Trace("o")
    Do i=n_st To n_en;nl=Sourceline(i)
    If rcm=0 Then "ISREDIT LINE_BEFORE 1=NOTELINE (nl)"
    Else Say Substr(nl,1,79);End;Return 0
