/******************************** REXX ********************************/
/*--------------------------ooo000OOOO000ooo--------------------------*/
/* CSDCONL: CSD Changed (ONLine).                                     */
/*                                                                    */
/* Macro to process an object CSD list and report on all entries that */
/* have been changed since an input date.                             */
/*                                                                    */
/* Input date is parameter 1 and can have the following format:       */
/*   dd[/mm[/yy]] - European date format.                             */
/*   yy[yy].ddd   - JUlian date format,                               */
/*   -days        - Number of days before today.                      */
/*    Import into your DU exit                                        */
/*--------------------------------------------------------------------*/
    "ISREDIT MACRO (parm#) NOPROCESS"
    Parse Upper VAR parm# date .
    If date='' Then Do
        zedlmsg='Missing cut off date in format dd[/mm[/yy]],',
                'yy[yy].ddd or +/-days.'
        Address ISPEXEC "SETMSG MSG(ISRZ001)";Exit
    End
    If Substr(date,1,1)='-' Then xx=$DATEMAN('VER',date,2)
    Else xx=$DATEMAN('E-N',,,date)
    If Word(xx,1)='Error' Then Do
        zedlmsg=xx;Address ISPEXEC "SETMSG MSG(ISRZ001)";Exit
    End
    If Index(xx,'.')=0 Then jd=$DATEMAN('E2J',xx,2);Else jd=xx
    Address ISREDIT;"(status)=USER_STATE";"(caps)=CAPS";"CAPS=OFF"

    "F 'GROUP NAME:' FIRST"
    "DEL ALL NX .ZFIRST .ZCSR"

    "X ALL"
    "F '.' 112 ALL"
    "DEL ALL X"
    "(last)=LINENUM .ZLAST"
    #tr=Trace('o')
    first=1
    Do i=1 To last
        "(line)=LINE" i
        Parse Var line w1 +40 110 date time
        If date<jd Then Iterate
        If first Then Do
            x=n_l('The following entries have changed since' jd':')
            x=n_l(' ');first=0
        End
        x=n_l(w1 date time)
    End

    "CAPS=(caps)";"USER_STATE=(status)"
    Exit

n_l:Parse Arg n#;"LINE_BEFORE .ZFIRST=NOTELINE (n#)";Return 0
