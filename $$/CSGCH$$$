/******************************** REXX *******************************
    site    ='SRC'                          /* Site identifier        */
)SKIP DOCO
  The above line directs the Dynamic tutorial driver to location of
  in-stream doco. Go down for directions.
  Note commented doco contains Dynamic tutorial text control characters
  in column 1.

  Hit this with macro CSGCH$VF.

*/
    Arg parm1
    Address ISPEXEC "VGET (reg,sid,chgenvt,chgstcn) SHARED"
/*--------------------------------------------------------------------*/
/* Customise for site:                                                */
/*                                                                    */
/* This section is used to massage CICS region names passed to this   */
/* routine and return a value as per the request. For truncation the  */
/* returned value is used in member names.  Should return no more     */
/* than 4 bytes as prefix and suffix may be added to the value to     */
/* make up the member name.                                           */
/*   Format is:                                                       */
/*     'REGION' region-name act                                       */
/*    where act = T(runcate from full name)                           */
/*                E(xpand from truncated name)                        */
/* Return values:                                                     */
/*    name   - Expanded or truncated names.                           */
/*    blank  - Ignore this region and continue processing             */
/*    8      - Stop processing and tell of error                      */
/*--------------------------------------------------------------------*/
    If Word(parm1,1)='REGION' Then Do
        Parse VAR parm1 . regn act .
        If act='T' Then Do
            If Substr(regn,1,4)/='CICS' Then Return 8
            Else Return Substr(regn,5)
        End
        Else Return 'CICS'regn
    End
/*--------------------------------------------------------------------*/
/* Customise for site:                                                */
/*                                                                    */
/* This section is used to massage CSD qualifiers (STC/APPLID) to     */
/* generate unique multiple CSD processing members in the one         */
/* dataset. Similar conscept to above.                                */
/*--------------------------------------------------------------------*/
    If Word(parm1,1)='CSD' Then Do
        Parse VAR parm1 . regn act .
        If act='T' Then Do         /* TS 1.3 */
            If Substr(regn,1,2)/='AC' Then Return regn
            Else Return Substr(regn,3)
        End
        Else Return 'AC'regn
/*      If act='T' Then Do         /* V2.2   */                       */
/*          If Substr(regn,1,4)/='CICS' Then Return regn              */
/*          Else Return Substr(regn,5)                                */
/*      End                                                           */
/*      Else Return 'CICS'regn                                        */
    End
/*--------------------------------------------------------------------*/
/* This section is used to extract the environment out of a passed    */
/* JCL change base dataset.                                           */
/*--------------------------------------------------------------------*/
    If Word(parm1,1)='ENV' Then Do
        siteenvt='D,T,Q,P'                  /* Make same as below     */
        Parse VAR parm1 . jcldsn .
        Parse VALUE Strip(jcldsn,,"'") With 3 env +1
        If Wordpos(env,Translate(siteenvt,' ',','))>0 Then Return env
        Else Return ''
    End
/*--------------------------------------------------------------------*/
/*--------------------------------------------------------------------*/
/* Logic customisation for setting the region name for use in dataset */
/* names.                                                             */
/*--------------------------------------------------------------------*/
    If site='AKOS' Then sid='AKOS';Else If sid='' Then sid='sid'
    If reg='' Then reg='reg';Else reg=Substr(reg,5)
/*  If chgenvt='' Then chgenvt='chgenvt'                              */
    If Wordpos(chgenvt,'D T P Q')=0 Then chgenvt='D'
    If chgstcn='' Then chgstcn='stcname'
    Address ISPEXEC "VPUT (chgenvt,chgstcn) SHARED"

/*--------------------------------------------------------------------*/
/* Variables that must be customised to site specifications           */
/*--------------------------------------------------------------------*/
startvar: /* Do not move or delete this line.                         */

    infrahlq= $alkhlq()                     /* Infra hlq              */
    siteenvt= 'D,T,Q,P'                     /* Site environments      */
    regnmask= 'CICS*'                       /* CICS names mask(s)     */
                                            /*   space seperated      */
    regnignr= 'TMONCICE'                    /* Ignore mask match space*/
                                            /*   seperated            */
    copyany ='N'                            /* Can copy non CICS memb */
    copyfbu ='Y'                            /* Copy from Backup lib   */
    chgacct =$Alkacct()                        /* Account code        */
    chghlqC = 'DN'chgenvt'CICS'
    chghlqA = 'DN%CICS'
    chghlq  = chghlqC
/*  chghlq  = infrahlq                                                */
    chgjclc = chghlq'.$CHANGES.'sid'.CH'
    chgsid# = 3                             /* SYSID number in name   */
    chgjclw = chghlq'.**.CH*'
    appndstc='N'                            /* Append STC in JCL name */
    cicshlq1= chghlqC
    cicshlq = cicshlq1'.CICS'
    cicshlqv= cicshlq'230'
    csd_o   = cicshlqv'.DFHCSD'             /* V2.3                   */
    csd_#   = csd_o                         /* V2.3                   */
    csd_w   = chghlqC'.**.DFHCSD'           /* V1.3 & 2.3             */
/* Toggle the next block if environment dependant                     */
/*  jobl_o  = 'DUMMY'                       /* Place holders          */*/
/*  proc_o  = 'DUMMY'                       /* Place holders          */*/
    jobl_o  = 'LSE.PROCLIB.SRC'
    proc_o  = 'LSE.PROCLIB.SRC'
    hlqc=
/*  Select                                                            */
/*      When chgenvt1='xD' Then Do                                    */
/*          jobl_o='DNDCICS.CICSZOS.JCL.CNTL'                         */
/*          proc_o='CENTER.PROCLIB'                                   */
/*          hlqc=                                                     */
/*      End                                                           */
/*      When chgenvt1='xT' Then Do                                    */
/*          jobl_o='CICS.EXEC.CLIST'                                  */
/*          proc_o='CENTER.PROCLIB'                                   */
/*          hlqc=                                                     */
/*      End                                                           */
/*      When chgenvt1='xQ' Then Do                                    */
/*          jobl_o='CICSDB.PROD.JCL'                                  */
/*          proc_o='CENTER.PROCLIB'                                   */
/*          hlqc='DB'                                                 */
/*      End                                                           */
/*      When chgenvt1='xP' Then Do                                    */
/*          jobl_o='CICSDB.PROD.JCL'                                  */
/*          proc_o='CENTER.PROCLIB'                                   */
/*          hlqc='DB'                                                 */
/*      End                                                           */
/*      Otherwise Do                                                  */
/*          jobl_o='SYDCICS.PROCLIB'                                  */
/*          proc_o='CENTER.PROCLIB'                                   */
/*          hlqc='DB'                                                 */
/*      End                                                           */
/*  End                                                               */
    jobl_#  = chghlqC'.'jobl_o
    proc_#  = chghlqC'.'proc_o
jobl_#  = jobl_o
proc_#  = proc_o
    tab_o   = cicshlqv'.TABLLOAD'
    tab_a   = cicshlqv'.TABLSRC'
    tab_#   = tab_o
    tab_slm = '//LKED.SYSLMOD  DD  DISP=SHR,DSN='
    util_o  = cicshlqv'.LOADLIB'
    util_a  = cicshlqv'.ETS.SOURCE'
    util_#  = chghlq'.LOADLIB'
    util_slm= '//LKED.SYSLMOD  DD  DISP=SHR,DSN='
    auth_o  = cicshlqv'.AUTHLIB'
    auth_a  = 'Refer_to_Utils./Tablib_Source'
    auth_#  = auth_o
    auth_slm= util_slm
    parm_o  = cicshlqv'.SYSIN'              /* V2.3 runtime parmlib   */
    parm_#  = parm_o
    loadlib = tab_o
    load_r  = 'DUMMY'
    load_a  = 'DUMMY'
    load_slm= '//SYSLMOD  DD  DISP=SHR,DSN='
    load_#  = loadlib
    cicstl1 = cicshlqv'.SDFHLOAD'           /* V2.3                   */
    cicstl2 = util_o
    helpdsn = infrahlq'.$$'
    ispfhlq = 'ISP'
    sysexec = infrahlq'.$$'
copyfbu ='N'

    batchdsn= cicstl2                       /* Set to 'DUMMY' if unusd*/
    conscmd = 'OPERCMD'
    conscmdi= 'Y'                           /* Y if use concmd in imp */
    conslib = 'DNDCICS.CICS230.AUTHLIB'     /* N if lnklst (not nulls)*/
    pdsedld = infrahlq'.$LOAD'              /* PDSEDIT loadlib        */
    ispplib = ispfhlq'.SISPPENU'
    ispmlib = ispfhlq'.SISPMENU'
    ispslib = ispfhlq'.SISPSENU'
    isptlib = ispfhlq'.SISPTENU'

    chgmanc = 'SOLVE'                       /* Change management cmd  */
    chgmanc = 'GCARS'                       /* Change management cmd  */
    chgmano = 'PIO'                         /* Change management opt  */
    chgmana = 'N'                           /* Auto change man gen    */
    autoindx= 'Y'                           /* Auto gen $$$INDEX      */

/*--------------------------------------------------------------------*/
/* Variables that should be evaluated for customisation. Should       */
/* funtion with the shipped package, however check classes, SMS       */
/* management and CSD SIP override.                                   */
/* After basic tests, set autodel='APPLY';disaudit='N'                */
/*--------------------------------------------------------------------*/
    autodel = 'APPLY'                       /* SIMULATE/APPLY         */
    batchsin= 'BATCHSIN'
    chgjobc = 'A'                           /* Job class              */
    chgmsgc = 'X'                           /* Message class          */
    chgjreg = 'REGION=0M,'                  /* Region size for jcard  */
    CSDbreq = 'Y'                           /* Bounce for CSD change  */
    csdext  = 'DFH0CBDC'                    /* CSD extract program    */
    csdsip  = 'Y'                           /* CSD defined in SIP     */
    disaudit= 'Y'                           /* Display audit output   */

    extmacs = 'CSGCHXTP'                    /* Macro manip CSD ext    */

    excsdupd= 'CSGCHXCU'                    /* CSD Update Exit        */
    exjobcrd= 'CSGCHXJC'                    /* Job card exit          */
    excsdopc= 'CSGCHXOC'                    /* CSD console cmd Exit   */
    exwtomsg= 'CSGCHXWO'                    /* WTO message Exit       */
    excsdupd= 'N'                           /* CSD Update Exit        */
    excsdopc= 'N'                           /* CSD console cmd Exit   */
    exwtomsg= 'N'                           /* WTO message Exit       */

    smsmangd= 'N'                           /* BU,ST dataset SMS mng'd*/

/*--------------------------------------------------------------------*/
/* Variables that should survive lack of customisation, however,      */
/* may be changed as required.                                        */
/* Check number of generations to keep and day of week to use for     */
/* change dataset.                                                    */
/*--------------------------------------------------------------------*/
    #ver    = 5                             /* No of past versions    */
    bustexst= 'Y'                           /* Verify exist of BU, ST */
    comp_PDS= 'PARM,JOBL,PROC'              /* Compress (comma sep)   */
    comp_PDS= 'N/A'                         /* Compress (comma sep)   */
    ctrl_M  = 'N'                           /* Control_M implement    */
    day#    = 7                             /* Change day             */
    helpdrvr= 'CSGCHELP=CSGCHELP'
    ignmemb = '$$$'chgmanc' $$$INDEX I#CTRLM B#CSG', /* Ignore membrs */
              '$CSDTSTI $CSDTSTO $TRIGGER'        /*   space seper.   */
    jidasmem= 'Y'                           /* Job ID AS MEMber name  */
    regnveri= 'N'                           /* Verify region          */
    subit   = 'Y'                           /* Permit direct submit   */
    cola    = 'GREEN'                       /* 'SET AUDIT'cmd color   */
    userhlq = Sysvar(Syspref)

    Interpret "Return" parm1

/*--------------------------ooo000OOOO000ooo--------------------------*
)DOCO
%headline=' CSGCH$ Usage '

   Standalone module to customise dataset names to the naming
   conventions for different sites.

   You may need to develop unique algorithms for each site with
   allowance for each system.

   DO NOT set variables to NULLS ('') as the parsing of returned
!r       b
   variables will cause unpredictable result. For the same reason DO NOT
!                                                                 r
   include imbedded blanks unless explicitly stated.

   DO NOT ship this members to different systems as it is customised
!r       b
   to GCR. standards and will cream the other site customisations.
!     y  b

   See below for custimisation description.

   How to use.
!  g          b
   Set up a variable of list of variables to return, eg. to return
   all variables.
   Note: For variables that contain a space (eg. ignmemb) request
         individually as the 'Interpret "Parse.."' will give
         unpredictable results.
  --------------------------------------------------------------------
   Format 1:
    v1 = 'chgjobc chgmsgc chgacct chgjreg'
    v2 = Csgch$(v1)
    Interpret "Parse var v2" v1

   Format 2:
    ignmemb = Csgch$('ignmemb')

 *--------------------------ooo000OOOO000ooo--------------------------*
 *                                                                    *
 * Customisation description.                                         *
 *                                                                    *
 *--------------------------------------------------------------------*

    VGET variables:
!   g              b
     reg    = Region name.  This variable is passed as the full region
              name. It may need to be tailored for 'loadlib' naming
              standards (depending on the length of CICS names).
     sid    = System Id.
     chgenvt= Change environment taken from the value of the "Env" field
              on the control panel (as passed back from the dialog).
              Will be a subset of "siteenvt". Can be used to fine
              tune/supplement dataset naming conventions.

    Variables set and returned:
!   g                         b
    parm1   = List of variables to return to the caller.

              If the 1st. 6 characters are "REGION" then manipulate
              the "region name" (2nd. word) to site standards. The 3rd
              word indicates the manipulation required, T(runcate) or
              E(xpand).  This is required for storing region specific
              members in load libraries where the member name is of
              format 'pprrrrss' where:
                 pp    - prefix to identify purpose (namely $L,IL,BL)
                 rrrr  - truncated region name (as applicable)
                 ss    - suffix to identify dataset type (eg. BU,ST)

 *- Must variable -------------------(do not move or change this line)-*

    site    = Site identifier. Controls processing logic in REXX
              routines. This variable is only used in this member.
    siteenvt= Site environments. This field is used to validate the
              'chgenvt' variable for use in dataset names. At certain
              sites this variable can/is used for fine tuning the CSD
              dataset name.  This list should be comma seperated. The
              value entered in the "Env" field on the control panel is
!                                  y    b
              verified against this list.
    regnmask= Space seperated CICS jobname masks. Combination formats
!             y    b
              are:
                 name   - full name (must match all)
                 *name  - any prefix, tail must match for length of name
                 name*  - any suffix, head must match for length of name
                 *name* - full length of name must be found
              This variable is used to identify CICS regions from
              executing address spaces for inclusion in the region field
              of the control panel.

    regnignr= Full names of jobs that may pass the 'regnmask' filter(s)
              but are recognised NON CICS jobs. (Space seperated.)
!                                                y    b
              Examples would be Omegamon jobs.
              Note - Wildcarding is NOT permitted and full names list
              must be specified
    copyany = Permit copy members not matching "regnmask" members
              (ie. non-CICS jobs). Should be set to 'N'.
    copyfbu = Copy from backp dataset which must have been created
              first. Default is 'Y'.  Non 'Y' value will take the copy
              from the original datasets.
    chgacct = Valid account number.
    chghlqC = Change JCL dataset CICS High Level Qualifier.
    chghlqA = All change JCL dataset CICS High Level Qualifier.
    chghlq  = Change JCL dataset work High Level Qualifier.
    chgjclc = Change JCL dataset name prefix (without the yymmdd only).
    chgsid# = SYSID number in change JCL dataset name. Set to 0 if SYSID
              is not used in the name.
    chgjclw = Change JCL dataset name prefix wildcard that will return
              all the datasets under ISPF 3.4 DSLIST.
?APS
    appndstc= Append value in variable "stcname" in the change JCL
              dataset name. Use this feature to further fine tune change
              JCL repository to seperate changes. Take care when taking
              backups as if this feature is used all backups go into the
              same dataset, so backup for 1st. change only. Also watch
              implement/backout jobs as each will backup all. Default is
              'N'.
    cicshlq1= CICS datasets's first High Level Qualifier.
    cicshlq = CICS datasets's High Level Qualifier.
    cicshlqv= CICS datasets's High Level Qualifiers including version
    csd_o   = Active (Original) CSD name.
    csd_#   = CSD template used for backup and staging datasets' prefix.
              (May or may not be the same as csd_o.)
    csd_w   = CSD wildcard (all CSD's for environment)
    jobl_o  = Active (Original) JOB typ JCL dataset name.
              Use of this field will be controlled by it's '_#' setting.
    jobl_#  = Proclib name template for backups etc.. This is used to
              bypass using SYS* hlq for work dataset names
              This field should be set to 'N/A' if only procs are used.
    proc_o  = Active (Original) proclib name.
              Use of this field will be controlled by it's '_#' setting.
    proc_#  = Proclib name template for backups etc.. This is used to
              bypass using SYS* hlq for work dataset names
              This field should be set to 'N/A' if only jobs are used.
    tab_o   = Active (Original) CICS table load library
    tab_a   = Active (Original) CICS table source
    tab_slm = Name of the SYSLMOD dataset in table assembly/link JCL
              procedure.
    util_o  = Active (Original) CICS in-house written load library
    util_a  = Active (Original) CICS in-house written source
    util_slm= Name of the SYSLMOD dataset in utility assembly/link JCL
              procedure.
    auth_o  = Active (Original) CICS authorised load library
    auth_a  = Auth source. Usually same as table/in-house source
    auth_slm= Auth loadmodule. Usually same as table/in-house SYSLMOD.
    parm_o  = Active (Original) parmlib name
    parm_#  = Parmlib name template for backups. (Same as for proc_#
              above.)
    loadlib = Active (Original) generic loadlib name (should generate
              a list containg all the load_r datasets of all regions).
    load_r  = Active (Original) dedicated loadlib name for specific
              regions. Often same as 'util_o'.
    load_a  = Site specific CICS in-house written source (Eg. Telstra cast
              table).
    load_slm= Normal loadmodule. Usually same as table/in-house SYSLMOD.
    cicstl1 = CICS loadlib #1.
    cicstl2 = CICS loadlib #2. Often same as 'util_o'. Usually the home
              of variable "csdext" (the CSD extract program in COBOL).

    helpdsn = Dataset name where the help member resides if it is not
              in a pre-allocated dataset or dataset belongs to a > 15
              concatenation set. Will check if dd in helpdrvr is same
              and if not will re-allocate.
    sysexec = Residence of CSD extract batch compare tailoring macros.

    batchdsn= Dataset where "batchsin" member resides. If batchsin is
              not used, set this variable to non-blank, eg. DUMMY.
              Usually the same as variable "cicstl2".
    conscmd = Batch console command program. Has to be LPA/LINK listed.
              Without this program 'CSD opercmd' is useless. (Must be
              linked with AC(1).)
    conscmdi= Include console command JCL in I#CTRLM and B#CSG members.
              Valid values are 'Y' or 'N'. Defult is 'N'.
    conslib = Dataset that the console command module resides in. Set
              to 'Linklist' if in the linklist.
              (Must be apf authorised.)
    pdsedld = PDSEDIT loadlib.  PDSEDIT used to do global change of
              change date in all members of the change JCL with the
              exception of the alter member (refer ALTER command).
    ispplib = ISPF base panel environment for batch
    ispmlib = ISPF base message environment for batch
    ispslib = ISPF base skeleton environment for batch
    isptlib = ISPF base table environment for batch

 *- Look at variables ------------------------------------------------*

?CC
    chgmanc = Change management system used. This value is the command
              that has to be entered to generate the change report.
    chgmano = Change management options. Indicate which change
              management options to report on:
              P - Preprocessing (pertinent preperation steps)
              I - Implementation
              O - backOut
              Dafult is 'PIO'
?CA
    chgmana = Automatically generate change management instructions
              everytime a new bit of JCL (member) creation pass is made.
              This ensures that change man instructions are always
              dynamically updated. With this set to 'N" you will need to
              Explicitly execute the command set by variable "chgmanc".
              Default is 'N' (more specifically NOT 'Y').
?AI
    autoindx= Automatically generate $$$INDEX member. Default is 'Y'.
              Turn this off if you manually add members and update index
              manually or explicitly use the INDEX macro.
              This flag will be automatically turned off if the LOCK
?AD           command is used.
    autodel = Delete old generation(s) action when creating new
              generations. Set to 'APPLY' to automatically delete
              gens older than the "#ver" value.
              'SIMULATE' will generate reports on what action would have
              been performed.
    batchsin= Batch SYSIN variable substitute program. This program is
              used to insert the CSD name as a comment into the SYSPRINT
              output of the DFHCSDUP output for easy identification of
              the CSD being processed. (No need to look for CSD in the
              JCL.) If the program is not available or you do not want
              this feature, set it's value to 'N'.
              *** DO NOT set it to NULLs as the missing value will alter
                  the parsing result of variables returned. ***
    CSDbreq = Indicate whether CICS bounce is required to implement CSD
              changes. This is used to control the wording of the change
              docket only.
    csdext  = CSD extract program(one comes supplied with this package).
?SIP
    csdsip  = Indicates whether the CSD definitions is in the SIT over-
              ride parameter.
              'Y' - directs processing for update to a staging dataset
                    with rename, implementation and COLD start.  Choose
                    this option if bounce of CICS is preferred.
              'N' - directs processing for update to live CSD with batch
                    console command for installation.  Choose this
                    option for 24x7 operations or when CSD is explicitly
                    defined in the JCL.
                    (May be temporarily toggled using the SIP=Y/N
                     command.)
    chgjobc = Execution job class.
    chgmsgc = SDSF held output class.
    chgjreg = Region size for jobcard. Default is 'REGION=0M,'.  Set
              it to 'N/A' if site standards preclude use of a region
              card.
    disaudit= Set to 'Y' or 'N' to display the delete old generation
              audit summary.

?EXM
    The following variables are used for CSD extracts' batch compare:
    extmacs = Default macros to tailor CSD extracts prior to executing
              compares (comma seperated). If not required, set variable
              to 'N'. Must reside in dataset defined by the "sysexec"
              variable below.
                CSGCHXTP - Supplied macro to remove all but tranaction
                           and program reference from a CSD extract
                           to make comparisons easier.
                           It will also include all the ADD statements
                           to identify all resources.
?EXT
   Exits:
!  g     b
    There are two exits that can be site customised. Jobcard and CSD
    update.
    On entry to the exit, a REXX stack will be available.  A non-zero return
    code will continue processing instream code, so only queue when all exit
    requirements are met and return with RC=0 otherwise rubish may be output at
    the top of the JCL.
    Do not issue a terminating "Queue ''" as this will be done in the
    main program.
    Set the exit values to 'N' if exits are not used.

    exjobcrd= Jobcard exit name. On entry a new REXX stack has been
              created with customisations to be "Queue"d to the stack.
              Passed parameters are as follows (comma seperated):
                DStype   - Dataset type (eg. $PROC,$PARM)
                JCLtype  - Type of JCL to be generated (eg. BU,ST)
                member   - Member name generated by system for JCL
                desc     - Description
                chgno    - Change no
                account  - Account
                jobclass - If non-blank replaces variable 'member'
                msgclass - Available restart points inserted as comment
              Sample jobcard exit in member CSGCHXJC
    excsdupd= CSD Update exit.
                csdhit   - CSD being updated (current for SIP=N, staging
                           for SIP=Y.
                csdbkup  - Backup CSD.
                chgjcl   - Change JCL dataset. Usually for mass updates
                           from a member.
                cicstl1  - CICS loadlib (SDFHLOAD).
                cicstl2  - Secondary dataset (usually home of extract program)
                csd4use  - Reason for generation - UPDATE or BACKOUT
                csdsip   - CSD in SIT override parameter Y/N.
                chgno    - Change number.
              Sample CSD Update exit in member CSGCHXCU.
    excsdopc= cOnsole Command exit.
                type     - Type of requests:
                             IM - Implement
                             BO - Backout
                             SI - SYSIN parameters to be used by both the
                                  implement and backout jobs.
                chgjcl   - Change dataset name (for storing SYSIN parameters).
                cedaimp  - Member name to store the SYSIN changes.
                regions  - Regions list to establish which regions to issue
                           console modify (CEMT commands) against.
                groups   - Groups that are subject to change (as extracted out
                           of the CSD update SYSIN DD(s).
              Sample CSD Update exit in member CSGCHXOC.
    exwtomsg= WTO message exit.
                jid      - Job id of executing job to specify to operations.
                step     - Step to test for WTO.
                cc       - Condition Code to test against 'step' to
                           issue WTO.
              Sample CSD Update exit in member CSGCHXWO.

?SMM
    smsmangd= This flag is used to indicate whether SMS is active for
              the dataset to be created (backup/stagibg):
                'Y' - SMS managed.
                'N' - Not SMS managed. Will generate JCL to put on the
                      same pack as the original.
              At some sites not all datasets are SMS managed and this is
              more evident when you to change the hlq because of naming
              conventions/RACF permissions.  Set this value to your site
              defaults.  If the backup job fails due to SMS conflicts,
              toggle this flag using the DSN/UPDATE feature to generate
              JCL that should work (rather than manually change the
              dataset).
 *- Should be OK variable --------------------------------------------*

    #ver    = Number of versions of change JCL (including the current
              version and all related datasets) to keep. Will not
              include future generations in the calculation.
    bustexst= Verify existance of backup and staging datasets. If the
              dataset exists, it will prompt user for verification to
              generate JCL.
?CDAY
    day#    = Change day used for generating the date for the change
              datasets. 1=Monday,2=Tuesday etc...
              '*' indicates use actual date entered. (This option
              renders generation invalid and generation will be set to
              '*' as well.)
?CP
    comp_pds= PDS's to compress prior to IEBCOPY. Should NOT compress
              load libraries comma seperated:
                Compress - PARM,PROC
                No-Comp  - TAB,UTIL,AUTH,LOAD,L
              Set to 'N/A' if none are to be compressed.
    ctrl_M  = Control_M implementation, N or J.
              N - Places a '//' job terminator card between the mainline
                  steps and a write to operator command as the WTO is
                  not applicable for self submit.
              J - Includes the WTO as part of the job stream which will
                  request operations to page CICS support if any of the
                  Control-M submitted jobs return a bad RC.
    helpdrvr= Pointer to the dynamic tutorial text. Format is
              "dd=member". The dd should not have > 15 datasets in the
              concatenation and may be preallocated. If only the member
              name is supplied, it must be in the SYSEXEC concatenation.
    ignmemb = Ignore members in change JCL when processing member lists.
              (Space seperated.)
!              y    b
              These are member names that are to be ingnored during
              processing. This variable should only be changed by the
              dialog developer.
    jidasmem= Job ID AS MEMber name.
              Y - use the member name in the change dataset.
              N - create format CSGCHdtt,
                  where 'd' is dataset identifier and 'tt' is the
                  operation type. Eg. CSGCHCIM for CSD IMplementation.
    regnveri= Verify region. Checks for CICS startup JCL in the
              PROClib for regions specified in the region field.
    subit   = Permit direct submission of BU and ST jobs, Y or N.
    cola    = Color to set matrix input field to when the 'SET AUDIT'
              command is used. Default is 'green'
    userhlq = High level qulalifier for user customised datasets.
              Used for CSD extract comparison datasets.

                             (End of Instructions.)
!G
*/
