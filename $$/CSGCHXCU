/******************************** REXX ********************************/
/*--------------------------ooo000OOOO000ooo--------------------------*/
/*                                                                    */
/* CSGCH - Sample CSD update Exit.                                    */
/*                                                                    */
/* NOTE  - Do NOT add terminating NULLS, it will be added by the main */
/*         routine.                                                   */
/*                                                                    */
/* Parameters passed:                                                 */
/*   csdhit   - CSD being updated (current for SIP=N, staging for     */
/*              SIP=Y.                                                */
/*   csdbkup  - Backup CSD.                                           */
/*   chgjcl   - Change JCL dataset. Usually for mass updates from a   */
/*              member.                                               */
/*   cicstl1  - CICS loadlib (SDFHLOAD).                              */
/*   cicstl2  - Secondary dataset (usually home of extract program)   */
/*   csd4use  - Reason for generation - UPDATE or BACKOUT             */
/*   csdsip   - CSD in SIT override parameter Y/N.                    */
/*   chgno    - Change no                                             */
/*                                                                    */
/*--------------------------------------------------------------------*/
CSGCHXCU: Arg csdhit,csdbkup,chgjcl,cicstl1,cicstl2,csd4use,csdsip,chgno

    Queue "//*"
    Queue "//* From sample exit CSGEXUPD"
    Queue "//*"
    If csd4use = 'BACKOUT' Then Signal build_csd_update_for_backout

    Queue '//*'Copies('-',67)'*'
    x=qc('//*')
    x=qc('//* Use this as a template for generation the CSD housekeeping jobs.')
    x=qc('//* Delete lines not appropriate for your operation.')
    x=qc('//*')
    x=qc('//* Use program CSGCSDX  to generate define statements from existing')
    x=qc('//* definitions.')
    x=qc('//*')
build_csd_update_for_backout:
    Queue '//*'Copies('-',67)'*'
    x=qc('//*')
    x=qc('//* CSD process/update')
    x=qc('//*')
    Queue '//*'Copies('-',67)'*'
    Queue "//UPDATE   EXEC PGM=DFHCSDUP,PARM='CSD(READWRITE)'"
    Queue '//STEPLIB  DD DISP=SHR,DSN='cicstl1
    Queue '//         DD DISP=SHR,DSN='cicstl2
    Queue '//SYSPRINT DD SYSOUT=*'
    Queue '//DFHCSD   DD DISP=SHR,DSN='csdhit','
    Queue "//            AMP=('BUFNI=30','BUFND=90')"
    If csdsip /= 'Y' Then Do
        Queue '//*FRMCSD   DD DISP=SHR,DSN='csdbkup','
        Queue "//*            AMP=('BUFNI=30','BUFND=90')"
        Queue '//*'
        Queue '//*CBDOUT   DD DISP=SHR,DSN='chgjcl'(extract)'
        Queue '//*'
    End
    Else,
        Queue '//FRMCSD   DD DISP=SHR,DSN='csdbkup','
    Queue '//SYSIN    DD *'
    If csdsip = 'Y' Then,
        Queue 'DEL GROUP(        )'
    Queue '//*        DD DISP=SHR,DSN='chgjcl'(CSD_data)'
    Queue '//         DD *'
    If csdsip = 'Y' Then,
        Queue 'COPY GROUP(        ) TO(        ) FROM(FRMCSD) REPLACE'
    Queue 'LIST'
    Queue '/*'
    Queue '//'
    Queue ' '
    Queue 'Boys and Girls,'
    Queue 'If you wish to run diagnostics and install using console commands,'
    Queue 'please use the appropriate formats (keyword sequences) from below:'
    Queue ' '
    Queue 'LIST ALL OBJECTS'
    Queue 'COPY GROUP(        ) TO(        ) FROM(FRMCSD) REPLACE'
    Queue 'ADD  GROUP(        ) LIST(        )'
    Queue 'REM  GROUP(        ) LIST(        )'
    Queue 'APP  LIST(        )  TO(        )'
    Queue 'ALTER  FILE(        ) GROUP(        )'
    Queue 'DEFINE FILE(        ) GROUP(        )'
    Queue 'EXTRACT GROUP(        ) USERPROGRAM(CSGCSDX)  OBJECTS'

    Return 0

qc:Parse Arg n#;Queue Substr(n#,1,70)'*';Return 0
