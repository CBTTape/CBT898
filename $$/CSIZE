/*--------------------------ooo00 REXX 00ooo--------------------------*/
n_st=mark(2)                                /* Mark Start             */
/*
   CSIZE: Cics datasets SIZE

   Goes through JCL looking for "DEFINE CLUSTER" and "(NEW,CATLG)"
   to establish VSAM and NONVSAM datasets allocated by the job.
   It will then extract the llq and prefix it with whatever the
   variable "hlq" is set to to get sizing info for previously
   allocated datasets.

   Will insert details as NOTELINES so runit and see.

   Parameters:
     /HLQ() | /Q()
            - HLQ between () to use as model for llq.
     /I     - CICS Infrastucture datasets. Calculates the % usage of
              S/F supplied datasets.
     /R     - Region specific dataset.
     /X     - Exclude all.
   For region infrastructure identif environment. Use the following
   keywords: PROD, QA, TEST or IVP.

   Customisation:
     Customise "CSIZE$" to generate old format hlq for infrastructure
     datasets or dataset names for region specific datasets.

*/
n_en=mark(-2)                               /* Mark End               */
/*--------------------------------------------------------------------*/
    ARG parm#;Address ISPEXEC;"CONTROL ERRORS RETURN";ima_macro=0
    If parm#/='' Then Signal byp1
    "ISREDIT MACRO (parm#) NOPROCESS"
    If rc=0 Then ima_macro=1

byp1:
/*  "CONTROL ERRORS CANCEL"                                           */
    If Wordpos(Word(parm#,1),'/? ? ?? HELP /H')>0 Then Do
        Address ISREDIT;"(caps)=CAPS";"CAPS OFF"
        Do i=n_st To n_en
            line=Sourceline(i);"LINE_BEFORE .ZFIRST=NOTELINE (line)"
        End
        "CAPS=(caps)";Exit
    End

ini1:
    sysid=Strip(storage(d2x(x2d(c2x(storage(10,4)))+x2d(154)),8))
    Parse Upper VAR parm# parm#
    If Wordpos('/I',parm#)>0 Then Do
        infra=1;parm#=Delword(parm#,Wordpos('/I',parm#),1)
    End;Else infra=0
    If Wordpos('/R',parm#)>0 Then Do
        reg_dsn=1;parm#=Delword(parm#,Wordpos('/R',parm#),1)
    End;Else reg_dsn=0
    If Wordpos('/X',parm#)>0 Then Do
        x_all=1;parm#=Delword(parm#,Wordpos('/X',parm#),1)
    End;Else x_all=0
    If Index(parm#,'HLQ(')>0 Then Do
        Parse VAR parm# p1 'HLQ(' hlqc ')' p2;parm#=Space(p1 p2)
    End
    Else Do
        If Index(parm#,'Q(')>0 Then Do
            Parse VAR parm# p1 'Q(' hlqc ')' p2;parm#=Space(p1 p2)
        End
        Else Do
            hlqc=Csize$(parm1)
            If hlqc='Error' Then Do
                zedsmsg=
                gc009='Hlq translation not set up for "'sysid'". Check out',
                      'member DSIZE$, modify and rerun.'
                Signal mexit1
            End
        End
    End

    Parse VAR parm# parm1 parm2 .
    If Wordpos(parm1,'PROD QA TEST IVP')=0 Then parm1='TEST'

    sysid=Strip(storage(d2x(x2d(c2x(storage(10,4)))+x2d(154)),8))

    Address ISREDIT;"(status)=USER_STATE";"(caps)=CAPS";"CAPS=OFF"
    If x_all Then "X ALL";Else "RESET"
    "CURSOR=1 0";applid=
    If infra Then Signal bypass_applid
    find='APPLID=';"CURSOR=.ZLAST 0"
    Do Forever
        "F '"find"' PREV";If rc/=0 Then Leave
        "(line)=LINE .ZCSR";Parse VAR line ch2 +2 1 ch3 +3
        If ch2/='//' | ch3='//*' THen Iterate;Else Leave
    End
    If rc/=0 Then Do
        find='STCNAME=';"CURSOR=.ZLAST 0"
        Do Forever
            "F '"find"' PREV";If rc/=0 Then Leave
            "(line)=LINE .ZCSR";Parse VAR line ch2 +2 1 ch3 +3
            If ch2/='//' | ch3='//*' THen Iterate;Else Leave
        End
    End
    If rc/=0 Then Do;gc009="'APPLID=/STCNAME=' not found.";Signal mexit1;End
    "(line)=LINE .ZCSR";Interpret "Parse VAR line '"find"' applid ."
    Parse VAR applid applid ',' .
bypass_applid:
    If applid='' Then hlq=hlqc
    Else hlq=hlqc'.'applid                  /* Change as required     */
Say 'hlq used "'hlq'"'
Say ' '

Say '*--VSAM------------------------------------------*'
    "F 'DEFINE CLUSTER' FIRST"
    If rc=0 Then Do
        "F ' CYL(' ALL";"F ' RECORDS(' ALL"
        "F ' CYLINDER(' ALL";"F ' TRACKS(' ALL";"F ' TRK(' ALL"
    End
    "CURSOR=1 0"
    Do Forever
        "F 'DEFINE CLUSTER'"
        If rc/=0 Then Leave
        "F 'NAME('"
        "(line)=LINE .ZCSR"
        Parse VAR line 'NAME(' dsn ')'
        llq=Strip(Substr(dsn,Lastpos('.',dsn)+1),,"'")
        nlq=Strip(Substr(dsn,1,Lastpos('.',dsn)-1),,"'")
Say 'nlq=>'nlq'< llq=>'llq'<'
        pri=;sec=;typ=;recs='??'
        x=get_VSAM_info(hlq'.'llq)
        If x/=0 Then x=get_VSAM_info(nlq)
        If x/=0 Then Do;pri='???';sec='???';typ='???';End
        linex='  'typ'('pri sec') Records('Strip(recs)'), using:' dsna
        "LINE_BEFORE .ZCSR=NOTELINE (linex)"
/*      "F 'CYL('"                                                    */
    End
Say '*--NonVSAM---------------------------------------*'
    "CURSOR=1 0"
    Do Forever
        "SEEK 'NEW,CATLG'";If rc/=0 Then Leave
        "(lin#)=LINENUM .ZCSR"
        "F 'DSN=' PREV"
        "(line)=LINE .ZCSR";"(dsn#)=LINENUM .ZCSR"
        Parse VAR line 'DSN=' dsn .
        Parse VAR dsn dsn ','
        llq=Strip(Substr(dsn,Lastpos('.',dsn)+1),,"'")
        x=get_NONVSAM_info(hlq'.'llq)
        If x/=0 Then Do;pri='???';sec='???';typ='???';End
        linex='Type(' typ ')   Primary(' pri ')   Secondary( 'sec ')',
              'Used(' used'% )'
        "F 'SPACE=' NEXT";If rc/=0 Then "CURSOR=&DSN# 0"
        Else Do
            "(,col#)=CURSOR"
            typ=$Ttrunc(typ,1,'T,TRK C,CYL *,'sysblksize)
            linex=Substr(' ',1,col#-1)'SPACE=('typ',('pri','sec'))',
            ' Used('used'%) Need('need')'
        End
        "LINE_BEFORE .ZCSR=NOTELINE (linex)"
        "CURSOR="lin#+1 0
    End
    "CAPS=(caps)";"USER_STATE=(status)";Exit
mexit1:
    Address ISPEXEC "SETMSG MSG(GC009)"
    Exit

get_VSAM_info: Arg dsna
    If reg_dsn Then dsna=csize$(,dsna,'V')
    x=Outtrap('linei.',500,'NOCONCAT');#msg=MSG('On')
    Address TSO "LISTC ENT('"dsna"') ALL"
Say Right(rc,2) dsna
    x=Outtrap('Off');x=MSG(#msg)
    If rc/=0 Then Return rc
    data=0;index=0
    Do i=1 To linei.0
        If pri/='' & sec/='' Then Leave
        w1=Word(linei.i,1)
        If w1='DATA' Then data=1
        If w1='INDEX' Then index=1
        If \data Then Iterate
        If Index(linei.i,'SPACE-TYPE')>0 Then Do
            Parse VAR linei.i 'SPACE-TYPE' typ .
            typ=Strip(TRanslate(typ,' ','-'))
            Iterate
        End
        If Index(linei.i,'SPACE-PRI')>0 Then Do
            Parse VAR linei.i 'SPACE-PRI' pri .
            pri=Strip(TRanslate(pri,' ','-'))
            Iterate
        End
        If Index(linei.i,'SPACE-SEC')>0 Then Do
            Parse VAR linei.i 'SPACE-SEC' sec .
            sec=Strip(TRanslate(sec,' ','-'))
            Iterate
        End
        If w1='STATISTICS' & recs='??'  Then Do
            i=i+1;Parse VAR linei.i 'REC-TOTAL' recs .
            recs=Strip(TRanslate(recs,' ','-'))
        End
    End
    Return 0

get_NONVSAM_info: Arg dsna
    xtra='DIRECTORY NORECALL'
    If reg_dsn Then dsna=csize$(,dsna)
    xx=Listdsi("'"dsna"'" xtra)
Say Right(xx,2) dsna
    used='??';need='??';sysblksize='??'
    If xx<5 | sysreason=9 | sysreason=25 Then Nop;Else Return 4
    pri=Strip(SYSPRIMARY)
    sec=Strip(SYSSECONDS)
    typ=Strip(SYSUNITS)
    If Datatype(sysused,'W') Then Do
        used=Format(sysused/sysalloc*100,3,0)
        need=Format(sysalloc*used/100,3,0)
        If Datatype(sysadirblk,'w') Then Do
            sec=sec','sysadirblk
            need=Format(sysalloc*used/100,3,0)',,'sysudirblk
        End
    End
    Else Do
/*      used='??';need='??'                                           */
        used=sysused;need=sysused'(PDS/E)'
    End
    Return 0

Mark:Arg diff;If \Datatype(diff,'W') Then diff=1;Return sigl+diff
