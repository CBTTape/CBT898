/*--------------------------ooo00 REXX 00ooo--------------------------*/
/* CSMDSN:                                                            */
/*                                                                    */
/* Multi-Procs driver.                                                */
/*                                                                    */
/*--------------------------------------------------------------------*/
csmdsn_ver='2.07'
    Address ISPEXEC;"CONTROL ERRORS RETURN";ima_macro=0
    Arg parm#;If parm#/= '' Then Signal byp1
    "ISREDIT MACRO (parm#)";If rc=0 Then ima_macro=1

byp1:
    "CONTROL ERRORS CANCEL"

ini1:
    Parse Upper VAR parm# parm1 parm2 parm3 parm4 parm5 parm6 parm7 parm8 parm9
    "VGET (ZAPPLID) ASIS"
    If zapplid/='CSM' Then Do
        Parse SOURCE . . xcmd .
        "SELECT CMD(%"xcmd parm#") NEWAPPL(CSM)"
        Return 0
    End

    hlq=$alkhlqo();alkload=$alkload()

    "VGET JOBPARM PROFILE"
    If jobparm='' Then Do
        jobparm="/*JOBPARM ROOM=ZTS,LINES=9999"
        "VPUT JOBPARM PROFILE"
    End
    "VGET (lcmd1stl,lcmd1l#) SHARED"        /* LINEMAC invoked ?      */

    site     = "VR"                          /* <=== change for site  */
    acct#    = "(ACCOUNT)"                   /* <=== change for site  */
    unit     = "SYSALLDA"                    /* <=== change for site  */
    aunit    = "SYSALLDA"     /* all units      <=== change for site  */
    work     = "SYSDA"                       /* <=== change for site  */
    tgtres   = "DUMMY1"                      /* <=== change for site  */
    tgtalt   = "DUMMY1"                      /* <=== change for site  */
    dstres   = "DUMMY1"                      /* <=== change for site  */
    dstalt   = "DUMMY1"                      /* <=== change for site  */
    mlfield  = 1                             /* 1 or 9                */
    traceo   =                               /* Option trace (off)    */
    retcode  = 0
/*  Address TSO "%USERGP"                  *//* <=== for racf site    */
/*  "ISPEXEC VGET USERGP SHARED"           *//* <=== FOR RACF SITE    */
/*  sysprog  = usergp                      *//* <=== for racf site    */
    xcsdsn00 =
    sysprog  = 'ZTS'                        /* <=== for non-racf site*/
    sysprogl = LENGTH(sysprog)              /*                       */
    loadlib  = alkload
    string   = "123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    "VGET ZPF05 ASIS";"VGET MDS SHARED"
    "VGET (",
        "CSMDSNCP CSMDSNBD CSMDSNND CSMDSNSD CSMDSNLS CSMDSNBP ACCT",
        "CSMDSNTC",
        ") PROFILE"
    If csmdsntc='' Then csmdsntc=0
    If csmdsnsd='' Then csmdsnsd="B"
    If csmdsnls='' Then csmdsnls="S"
    If acct='' Then Do
        acct=acct#;"VPUT ACCT PROFILE"
    End

/*--------------------------------------------------------------------*/
/* Job class for various sites and systems                            */
/*--------------------------------------------------------------------*/
    "ISPEXEC VGET ZSYSID"
    clstrg1="MVS1,1 MVS2,2 MVS4,A"               /* VR classes        */
    clstrg2="EMPP,P EMPD,D"                      /* LLES classes      */
    clstring=clstrg1 clstrg2 '*,A'
    jclass=$ttrunc(zsysid,'*',clstring)

/*--------------------------------------------------------------------*/
/* Test for Front end processor invocation                            */
/*--------------------------------------------------------------------*/
    If parm1 = '%MDS' Then Do
        p0      = parm2
        f00     = parm3
        csdsn00 = parm4
        parms   = parm5
        parms1  = parm6
        szcmd   = parm7
        dd      = parm8

        PARSE VAR parms parms parms1 parms2 parms3
        pref   = 0
        suff   = 0
        apnd   = 0
        If csmdsnls = "S" Then csmdsnls = "B"
        retlab = 'RETURN'
        Call csmdsn

        x=Outtrap('line',5,'NOCONCAT')
        Address TSO "PROFILE "msgid
        x=Outtrap('Off')
        Return retcode
    End

    "VGET CSMLEVEL PROFILE"
    If csmlevel='' Then Do
        csmlevel=0;csmlevel=csmlevel+1
        "VPUT CSMLEVEL PROFILE"
    End
    retlab=screen1
    "VGET (CSMDSN01 CSMDSN02 CSMDSN03 CSMDSN04 CSMDSN05",
      "CSMDSN06 CSMDSN07 CSMDSN08 CSMDSN09 CSDFLD1 CSDFLD2 CSDFLD3",
      "CSDFLD4 CSDFLD5 CSDFLD6 CSDFLD7 CSDFLD8 CSDFLD9",
      "CSMDSNXX CSMPAN# NOOFPANS",
      "CSICOLOR CSHCOLOR CSNCOLOR CSSCOLOR CSYHCOLO CSYLCOLO",
      "CSYWCOLO",
      "CSIHILIT CSHHILIT CSNHILIT CSSHILIT CSYHHILI CSYLHILI",
      "CSDSNXX) PROFILE"
    If cshcolor = '' Then cshcolor = "PINK"
    If csncolor = '' Then csncolor = "GREEN"
    If csicolor = '' Then csicolor = "BLUE"
    If csscolor = '' Then Do
        csscolor = "RED"
        csshilit = "USCORE"
    End
    If csyhcolo = '' Then csyhcolo = "TURQ"
    If csylcolo = '' Then csylcolo = "YELLOW"
    If csywcolo = '' Then csywcolo = "RED"
    If csmdsnnd = '' Then csmdsnnd = 1
    If csmdsnxx = '' Then Do
        gc009="Suggest you use your 'HELP' PF key for instructions."
        "SETMSG MSG(GC009)"
    End
    If csdsnxx = '' Then ,
        csdsnxx = "RESERVED.FOR.A.BLOODY.LONG.DATASET.NAME"
    If noofpans < 1 | noofpans > 9 Then Do
        noofpans = 1
        csmpan# = 1
        "VPUT (CSMPAN# NOOFPANS CSMDSNCP CSMDSNBD",
                      "CSMDSNBP) PROFILE"
    End
    zplace="ASIS"
    "VPUT ZPLACE PROFILE"
    fcsr=
    "VGET ZSYSID ASIS"
    sid=zsysid
    If csmpan# < 1 | csmpan# > 35 | DATATYPE(csmpan#) ¬= "NUM" Then,
        csmpan# = 1
    If csmpan# = '' Then csmpan# = 1
    mig#="N"

screen1:
    csmpan=Substr(string,csmpan#,1)
    If csmdsncp="ASIS" Then Do
        Interpret 'x=csdfld'csmpan
        p=SUBSTR(x,1,1)
        s=SUBSTR(x,LENGTH(x)-1,2)
        If DATATYPE(p)="NUM" Then p=20;Else p=0
        Interpret "csddcsr"csmpan"='F'Right(s+p,2,'0')"
    End
    pkey=
/*  If $Vername('CSD'p0,'N')/='OK' Then p0='SN'                       */
    "VGET (CSD&P0) PROFILE"
    hh=SUBSTR(TIME(),1,2)
    mm=SUBSTR(TIME(),4,2)
    mm=mm+csmdsntc
    hh=RIGHT(hh + (mm%60),2,'0')
    mm=RIGHT(mm//60,2,'0')
    parms=;parms1=;parms2=;parms3=
    yyyy=hh":"mm
    "DISPLAY PANEL(CSMDSN&CSMPAN)"
    rc1=rc
    If rc1/=0 Then Signal exitit
    zdlvol=
If part2/='' Then Do
    zcmd=part2;f00=part2
End
    If zcmd = '.M' Then Do
        If morel > 0 Then Do
            Do i=1 By 1 until i>=morel
                xxx = VALUE('line'i)
                data = "line"i "= xxx")
                Interpret data
            End
            Do i=1 To 20
                data = "line"i "= ''"
                Interpret data
            End
            message = "MESSAGE"
            zcmd    = ''
            "ISPEXEC DISPLAY PANEL(SYSOUTP1)"
        End
        Else Do
            gc009 = "No '.M' type messages."
            Signal errorfnd
        End
        Signal reposit
    End
    morel = ''
    fcsr  = ''
    pref  = 0
    suff  = 0
    apnd  = 0
    PARSE VAR parms parms parms1 parms2 parms3

    If zcmd = 'TRACE' Then Do
        Select
            When parms = "OFF" Then Do
                trace  = ''
                traceo = ''
                Trace Off
            End

            When parms = "OO" Then,
                traceo = "TRACE"

            Otherwise Do
                trace = "Y"
                Trace r
            End
        End
        Signal screen1
    End

    If zcmd = 'LEV' Then Do
        If parms = "I" Then Do
            csmlevel = 1
            "ISPEXEC VPUT CSMLEVEL PROFILE"
            gc009 = "CSM stacking level initialised to 1."
        End
        Else gc009 = "You are opreating at level '"&csmlevel"'."
        "ISPEXEC SETMSG MSG(GC009)"
        Signal screen1
    End

    If zcmd = color Then Do
        "ISPEXEC DISPLAY PANEL(CSMDSN0C)"
        Signal screen1
    End
    csmlevel = csmlevel - 1
    If zcmd = '.T' Then Do
        If parms = "?" Then Do
            "ISPEXEC VGET ISPFTEST SHARED"
            If ispftest = '' Then ispftest = "?"
            gc009 = "Test mode is set to '"ispftest"'."
            "ISPEXEC SETMSG MSG(GC009)"
        End
        Else Do
            "ISPEXEC CONTROL NONDISPL END"
            "ISPEXEC VGET ZENVIR ASIS"
            ispfver = SUBSTR(zenvir,6,1)
            If ispfver > 2 Then ,
                 opt7sel = "PGM(ISPYXDR) PARM(ISR) NOCHECK"
            Else opt7sel = "PGM(ISRYXDR) NOCHECK"
            "ISPEXEC SELECT &OPT7SEL"
            gc009 = "You are now in ispf test mode."
            "ISPEXEC SETMSG MSG(GC009)"
            ispftest = "Y"
            "ISPEXEC VPUT ISPFTEST SHARED"
        End
        Signal screen1
    End

    "ISPEXEC VGET ZVERB SHARED"
    If zverb = "LEFT" | zverb = "RIGHT" Then Do
        "ISPEXEC VGET (zscrolla) ASIS"
        If Datatype(zscrolla) = 'CHAR' Then Do
            If zcmd =  "LEFT" Then pfamt = -1
            Else                   pfamt = 1
            csmpan# = (csmpan# + pfamt) // noofpans
            If csmpan# = 0 Then csmpan# = noofpans
            If csmpan# < 0 Then csmpan# = noofpans + csmpan#
        End
        Else Do
            If zscrolla < 1 | zscrolla > noofpans Then Do
                gc009 = "Invalid panel number."
                "ISPEXEC SETMSG MSG(GC009)"
            End
            Else
                csmpan# = zscrolla
        End
        Signal screen1
    End
    If zverb = "DOWN" | zverb = "UP" Then Do
        If zverb = "DOWN" Then zcmd = '+1'
        Else                   zcmd = '-1'
    End
    If DATATYPE(f00) = "NUM" Then Do
       If  f00 > 0 & f00 < noofpans + 1 Then Do
           csmpan# = f00
           Signal screen1
        End
    End
    If zcmd    ¬= '' Then Signal proc1
    If csdsn00 ¬= '' Then Signal dis9
    If csmdsnbd = '' Then Do
        alk32enq = ''
        "ISPEXEC VPUT ALK32ENQ SHARED"
    /*  "ISPEXEC SELECT PGM(ISRUDL)                  *//*  MVS 2.1*/
        "ISPEXEC SELECT PGM(ISRUDL) PARM(ISRUDLP)"     /*  MVS 2.2*/
        Signal screen1
    End
    zcmd  = csmdsnbd
    parms = csmdsnbp
    Signal dot1

proc1:
    Select
        When zcmd = '.C=ZCMD' Then Do
            csmdsncp = "ZCMD"
            gc009 = "Cursor placement is on the command line."
            Signal ret9
        End

        When zcmd = '.C=ASIS' Then Do
            csmdsncp = "ASIS"
            gc009 = "Cursor placement is as is."
            Signal ret9
        End

        When zcmd = 'HQ' Then Signal hsmquer

        When SUBSTR(zcmd,1,3) = '.N=' Then Do
            csmdsnnd = SUBSTR(zcmd,4,LENGTH(zcmd)-3)
            "ISPEXEC VPUT CSMDSNND PROFILE"
            gc009 = "Numeric default set to '"csmdsnnd"'."
            Signal ret9
        End

        When SUBSTR(zcmd,1,3) = '.S=' Then Do
            csmdsnsd = SUBSTR(zcmd,4,LENGTH(zcmd)-3)
            If csmdsnsd = "?" Then "ISPEXEC VGET CSMDSNSD PROFILE"
            Else                   "ISPEXEC VPUT CSMDSNSD PROFILE"
            gc009 = "'S' option default set to '"csmdsnsd"'."
            Signal ret9
        End

        When SUBSTR(zcmd,1,3) = '.B=' Then Do
            If LENGTH(zcmd) > 3 Then,
                 xxx = SUBSTR(zcmd parms,4,LENGTH(zcmd parms)-3)
            Else xxx = ''
            If xxx = "?" Then Nop
            Else Do
                csmdsnbd = xxx
                csmdsnbp = parms
            End
            xxx = csmdsnbd csmdsnbp
            gc009 = "<ENTER> default is '"xxx"'."
            Signal ret9
        End

        When zcmd = 'CONTROL' Then Do
            Select
                When SUBSTR(parms,1,1) = "C" Then cntlactn = "CANCEL"
                When SUBSTR(parms,1,1) = "R" Then cntlactn = "RETURN"
                Otherwise Do
                    gc009 = "Invalid control parameter '"parms"'."
                    Signal errorfnd
                End
            End
            "ISPEXEC CONTROL ERRORS &CNTLACTN"
            gc009 = "CONTROL parameter changed to '"cntlactn"'."
            Signal errorfnd
        End

        When INDEX(zcmd,'C=') > 0 Then Do
            c = INDEX(zcmd,'C=')
            If LENGTH(zcmd) < c + 2 Then Do
                numb    = xf00
                data = "var = csdfld"csmpan
                Interpret data
                fcsr = "CSD"var
            End
            Else Do
                numb = SUBSTRr(zcmd,c+2,LENGTH(zcmd))
                If DATATYPE(numb) = "NUM" numb < 42 Then Do
                    If numb = 41 Then numb = "XX"
                    If numb < 21 Then Do
                       num# = RIGHT(numb,2,'0')
                       fcsr = "CSDSN"num#
                       data = "csdfld"csmpan" = sn"num#
                       Interpret data
                    End
                    Else Do
                       num# = RIGHT(numb - 20,2,'0')
                       fcsr = "CSD"csmpan"SN"num#
                       data = "csdfld"csmpan" = "csmpan"sn"num#
                       Interpret data
                    End
                End
            End
            Signal screen1
        End

        When Substr(zcmd,1,1) = '.' & Datatype(Substr(zcmd,2)) = 'NUM'
        Then Do
            numb = SUBSTR(zcmd,2)
            If numb < 1 | numb > noofpans Then Do
                gc009 = "Invalid panel number parameter."
                Signal errorfnd
            End
            csmpan# = numb
            Signal screen1
        End

        When zcmd = '=' | zcmd = '.' Then Do
            If xcsdsn00 = '' Then Do
                gc009 = "Issue an operation command before using",
                   "'"zcmd"' option."
                Signal ret9
            End
            f00     = xf00
            csdsn00 = xcsdsn00
            parms   = xparms
            Signal dis9
        End

/*-------------------------------------------------------------------*/
/* Test for '+/-n' command                                           */
/*-------------------------------------------------------------------*/
        When SUBSTR(zcmd,1,1) = "+" | SUBSTR(zcmd,1,1) = "-" Then Do
            If SUBSTR(zcmd,1,1) = "-" Then Do
                oper = -1
                diff = 20
            End
            Else Do
                oper = 1
                diff = -20
            End
            If xcsdsn00 = '' Then Do
                gc009 = "Issue an operation command before using",
                   "'"SUBSTR(zcmd,1,1)"' option."
                Signal ret9
            End
            If LENGTH(zcmd) = 1 Then numb = 1
            Else numb = SUBSTR(zcmd,2,LENGTH(zcmd)-1)
            numb = numb * oper
            data = "var = csdfld"csmpan
            Interpret data
            var  = "CSD"var
            suf1 = SUBSTR(var,LENGTH(var)-1,2)
            pre1 = SUBSTR(var,1,LENGTH(var)-2)
            suf1 = RIGHT(suf1 + numb,2,'0')
            If suf1 > 40 Then Do
                gc009 = "Increment too big."
                Signal ret9
            End
            If suf1 > 20 Then Do
                suf1 = RIGHT(suf1 + diff,2,'0')
                pre1 = "csd"csmpan"sn"
            End
            fcsr = pre1||suf1
            data = "var  = "fcsr
            Interpret data
            If var = '' Then Do
                gc009 = "Cannot '"xf00"' a null string."
                Signal ret9
            End
            data = "csdfld"csmpan" = SUBSTR(fcsr,4,LENGTH(fcsr)-3)"
            Interpret data
            fcsr    = ''
            csdsn00 = var
            f00     = xf00
            parms   = xparms
            Signal dis9
        End

/*--------------------------------------------------------------------*/
/* Test for 'TIME=' cmd...                                            */
/*--------------------------------------------------------------------*/
        When SUBSTR(zcmd,1,5) = 'TIME=' Then Do
            csmdsntc = SUBSTR(zcmd,6,LENGTH(zcmd)-5)
            If csmdsntc = "?" Then "ISPEXEC VGET CSMDSNTC PROFILE"
            Else Do
                c = INDEX(csmdsntc,':')
                If c < 2 | c > 3 | c = LENGTH(csmdsntc) Then Do
                    gc009 = "Invalid time format entered."
                    Signal errorfnd
                End
                hh1 = SUBSTR(csmdsntc,1,c-1)
                mm1 = ,
                  SUBSTR(csmdsntc,c+1,LENGTH(csmdsntc)-c)
                If hh1 > 24 | mm1 > 60 Then Do
                    gc009 = "Invalid time format entered."
                    Signal errorfnd
                End
                hh2 = SUBSTR(TIME(),1,2)
                mm2 = SUBSTR(TIME(),4,2)
                ss2 = SUBSTR(TIME(),7,2)
                t1 = (hh1*360) + (mm1*60)
                t2 = (hh2*360) + (mm2*60)
                csmdsntc = (t1 - t2)%60
                "ISPEXEC VPUT CSMDSNTC PROFILE"
            End
            gc009 = "Time compensator is set at '"csmdsntc"'."
            Signal errorfnd
        End

        When DATATYPE(zcmd) = 'NUM' & SUBSTR(zcmd,1,3) ¬= "34." Then Do
            If DATATYPE(csmdsnnd) = "NUM" Then Do
                If zcmd <= noofpans & zcmd > 0 Then Do
                    csmpan# = zcmd
                    Signal screen1
                End
            End
            Else zcmd = csmdsnnd'.'zcmd
        End

        When zcmd = 'F' & parms ¬= '' Then Do
            findparm = parms
            Signal find1
        End

        When zcmd = 'RF' Then Do
            If findparm = '' Then Do
                gc009 = "Enter a 'FIND' command first."
                Signal ret9
            End
            parms = findparm
            Signal find1
        End

        Otherwise Nop
    End

/*--------------------------------------------------------------------*/
/* Test for prefix/suffix change or appended name (eg. '.TEMP')       */
/*--------------------------------------------------------------------*/
    Select
        When Index(szcmd,'P=')>0 Then Do
            c=INDEX(szcmd,'P=')
            pref=SUBSTR(szcmd,c+2,LENGTH(szcmd)-(c+1))
            PARSE VAR pref pref rest
            szcmd=STRIP(SUBSTR(szcmd,1,c-1)||rest)
        End

        When INDEX(szcmd,'S=') > 0 Then Do
            c = INDEX(szcmd,'S=')
            suff = SUBSTR(szcmd,c+2,LENGTH(szcmd)-(c+1))
            PARSE VAR suff suff rest
            szcmd = STRIP(SUBSTR(szcmd,1,c-1)||rest)
        End

        When INDEX(szcmd,'A=') > 0 Then Do
            c = INDEX(szcmd,'A=')
            apnd = SUBSTR(szcmd,c+2,LENGTH(szcmd)-(c+1))
            PARSE VAR apnd apnd rest
            szcmd = STRIP(SUBSTR(szcmd,1,c-1)||rest)
        End

        Otherwise Nop
    End

/*--------------------------------------------------------------------*/
/* Process 'xx=yy' command...                                         */
/*--------------------------------------------------------------------*/
    If INDEX(zcmd,'=') > 0 Then Do
        equ = INDEX(zcmd,'=')
        numb = RIGHT(SUBSTR(zcmd,1,equ-1),2,'0')
        If DATATYPE(numb) = "NUM" & numb < 42 Then Do
            If numb = 41 Then numb = "XX"
            If numb < 21 Then num# = RIGHT(numb,2,'0')
            Else              num# = RIGHT(numb - 20,2,'0')
            data = "csddcsr"csmpan" = f"numb
            Interpret data
            If equ ¬= LENGTH(zcmd) Then s = ,
                SUBSTR(zcmd,equ+1,LENGTH(zcmd)-equ)
            Else s = ''
            If DATATYPE(s) = "CHAR" | s = '' Then Do
                If numb < 21 Then Do
                    data = "csdsn"num#" = s"
                    Interpret data
                    Interpret data
                    data = "csdsfld"csmpan" = csdsn"num#
                    Interpret data
                    "ISPEXEC VPUT (CSDDCSR&CSMPAN CSDSN&NUM#",
                        "CSDSFLD&CSMPAN) PROFILE"
                End
                Else Do
                    data = "csd"csmpan"sn"num#" = s"
                    Interpret data
                    Interpret data
                    data = "csdsfld"csmpan" = csd"csmpan"sn"num#
                    Interpret data
                    Interpret data
                    "ISPEXEC VPUT (CSDDCSR&CSMPAN CSD&CSMPAN.SN&NUM#",
                        "CSDSFLD&CSMPAN) PROFILE"
                End
            End
            Else Do
                If s < 1 | s > 40 Then Do
                    gc009 = "Invalid equate number."
                    Signal ret9
                End
                If s = 41 Then s  = "XX"
                If s < 21 Then s# = RIGHT(s,2,'0')
                Else           s# = RIGHT(s - 20,2,'0')
                If s < 21 Then data = "var = csdsn"s#
                Else           data = "var = csd"csmpan"sn"s#
                Interpret data
                If numb < 21 Then Do
                    data = "csdsn"num#" = var"
                    Interpret data
                    data = "csdsfld"csmpan" = csdsn"num#
                    Interpret data
                    "ISPEXEC VPUT (CSDDCSR&CSMPAN CSDSN&NUM#",
                        "CSDSFLD&CSMPAN) PROFILE"
                End
                Else Do
                    data = "csd"csmpan"sn"num#" = var"
                    Interpret data
                    data = "csdsfld"csmpan" = csd"csmpan"sn"num#
                    Interpret data
                    "ISPEXEC VPUT (CSDDCSR&CSMPAN CSD&CSMPAN#.SN&NUM#",
                        "CSDSFLD&CSMPAN) PROFILE"
                End
            End
            If part2 ¬= '' Then part2 = numb
            Else Do
                fcsr = "F"numb
                Signal screen1
            End
        End
    End

/*===================================================================*/
dot1:
    kzcmd = zcmd
    lenz  = LENGTH(zcmd)
    dot   = INDEX(zcmd,'.')
    equ   = INDEX(zcmd,'=')
    If  dot > 1 Then Do
        part1 = SUBSTR(zcmd,1,dot-1)
        If  equ = 0 Then Do
            If lenz > dot Then Do
                part2 = SUBSTR(zcmd,dot+1,lenz-dot)
                Signal prparts
            End
            data = "var = csdfld"csmpan
            Interpret data
            If var = '' Then Do
                gc009 = "No active field for using the 'command.'",
                        "option."
                Signal ret9
            End
            "ISPEXEC VGET CSD&VAR PROFILE"
            data = "var1 = csd"var
            Interpret data
            If var1 = '' Then Do
                gc009 = "Cannot use '"zcmd"' on a blank field."
                Signal ret9
            End
            f00     = part1
            csdsn00 = var1
            Signal dis9
        End
        If  equ > dot Then Do
            If lenz ¬> equ Then Do
                gc009 = "Cannot operate on a blank equate '"zcmd"'."
                Signal ret9
            End
            part2 = SUBSTR(zcmd,dot+1,(equ-1)-dot)
            zcmd  = SUBSTR(zcmd,dot+1,lenz-dot)
            lenz  = LENGTH(zcmd)
        End
    End

/*-------------------------------------------------------------------*/
    If LENGTH(zcmd) > 1 Then cctest = SUBSTR(zcmd,1,2)
    Else                     cctest = ''
    If cctest = 'CE' | cctest = 'CB' |,
       cctest = 'CD' | cctest = 'CC' Then Do
        szcmd = zcmd
/*      p0  = '?'                                                     */
p0='SN'
        Parse VAR zcmd f00 '.' .
        Parse VAR f00  f00 '/' .
        Signal csmdsn
    End

/*-------------------------------------------------------------------*/
prparts:
    szcmd = ''
    If zcmd ¬= ''  Then Do
        If part2 = '' Then Do
            gc009 = "?????? invalid command '"zcmd"'."
            Signal ret9
        End
        If DATATYPE(part2) ¬= "NUM" & part2 ¬= "C" Then Do
            gc009 = "Line number after the '.' must be numeric."
            Signal ret9
        End
        If part2 = 41 Then part2 = "XX"
        partz = RIGHT(part2,2,'0')
        If part2 > 20 Then Do
           part2 = part2-20
           p0 = csmpan"SN"
        End
        Else p0 = "SN"
        part2 = RIGHT(part2,2,'0')
        p0 = p0||part2
        data = "xxxx = csd"p0
        Interpret data
/*      "ISPEXEC VGET (&XXXX) PROFILE"                                */
/*      data = "xxxx = "xxxx                                          */
/*      Interpret data                                                */
        csdsn00 = xxxx
        If csdsn00 = '' Then Do
            gc009 = "Can't '"part1"' a blank field."
            Signal ret9
        End
        f00 = part1
        data = "csdfld"csmpan" = p0"
        Interpret data
        data = "csddcsr"csmpan" = F"partz
        Interpret data
        If part2 = "XX" Then part2 = 41
        Signal dis9
    End

dis9:
    If LENGTH(part1) > 1 Then Do
        xxx = SUBSTR(part1,2,1)
        If SUBSTR(part1,1,1) = "R" & xxx > 0 Then Do
           If partz = '' Then Do
               partz = SUBSTR(var,LENGTH(var)-1,2)
               pref  = SUBSTR(var,1,1)
               If DATATYPE(pref) = "NUM" Then partz = partz + 20
           End
           partz = partz + 1
           partx = RIGHT(partz,2,'0')
           If partz > 20 Then Do
              partx = RIGHT(partx - 20,2,'0')
              p0 = csmpan"SN"
           End
           Else p0 = "SN"
           data = "csdfld"csmpan" = p0||partx"
           Interpret data
           Interpret data
           fcsr = "csd"p0||partx
           Do while xxx > 0 & partz < 41
               partx = partz
               If partz > 20 Then Do
                  partx = RIGHT(partx - 20,2,'0')
                  p0 = csmpan"SN"
               End
               Else p0 = "SN"
               data = "csd"p0||partx" = csdsn00"
               Interpret data
               xxx   = xxx - 1
               partz = partz + 1
           End
           Signal screen1
        End
    End
    xcsdsn00 = csdsn00
    xf00     = f00
    xparms   = parms
    Call csmdsn

ret9:
    "ISPEXEC SETMSG MSG(GC009)"
    Signal screen1

exitit:
    "ISPEXEC VGET CSMLEVEL PROFILE"
    csmlevel = csmlevel - 1
    "ISPEXEC VPUT (CSMDSNCP CSMPAN# CSMDSNBD CSMDSNBP",
               "CSICOLOR CSHCOLOR CSNCOLOR CSSCOLOR CSYHCOLO CSYLCOLO",
               "CSYWCOLO",
               "CSIHILIT CSHHILIT CSNHILIT CSSHILIT CSYHHILI CSYLHILI",
               "CSDSNXX CSMLEVEL) PROFILE"
    x = OUTTRAP('line',5,'NOCONCAT')
    Address TSO "PROFILE "msgid
    x = OUTTRAP('Off')
    Exit

/*--------------------------------------------------------------------*/
/* Main processing/selection section                                  */
/*--------------------------------------------------------------------*/
csmdsn:
    x = OUTTRAP('line',500,'NOCONCAT')
    Address TSO "PROFILE"
    PARSE VAR line1 v1 v2 v3 v4 v5 v6 v7 .
    x = OUTTRAP('Off')
    If v1 ¬= '' Then Do
        If SUBSTR(v1,1,3) = "IKJ" Then msgid = v7
        Else                           msgid = v6
    End
    Address TSO "PROFILE NOMSGID"
    zcmd = ''
    sel  = f00

    PARSE VAR csdsn00 csdsn00 parmso
    If parmso ¬= '' Then Do
        If parms = '' Then Do
            parms  = parmso
            parmso = ''
        End
        Else Do
            parmss = parms
            parms  = parmso
            parmso = parmss
        End
    End

/*--------------------------------------------------------------------*/
/* dsname  - Original name as passed by dialog                        */
/* sdsname - Original name with full qualifier                        */
/* jdsname - Fully qualified dataset name (without member, unquoted)  */
/* adsname - Original name without member                             */
/* qdsname - 'jdsname' (jdsname quoted)                               */
/*--------------------------------------------------------------------*/
    dsname=csdsn00
    member=
    If Substr(dsname,1,1)="'" Then sdsname=Strip(dsname,,"'")
    Else sdsname = userid'.'dsname
    If pref/=0 Then Do
        c=Index(sdsname,'.')
        If c>0 & c/=Length(sdsname) Then,
            sdsname=Substr(sdsname,c+1,Length(sdsname)-c)
        sdsname=pref'.'sdsname
        dsname="'"sdsname"'"
    End
    If suff ¬= 0 Then Do
        l = 0
        c = INDEX(sdsname,'.')
        Do while c > 0
            l = c
            c = c + 1
            c = INDEX(sdsname,'.',c))
        End
        If l ¬= 0 Then sdsname = SUBSTR(sdsname,1,l-1)
        sdsname = sdsname'.'suff
        dsname  = "'"sdsname"'"
    End
    If apnd ¬= 0 Then Do
        sdsname = sdsname'.'apnd
        dsname  = "'"sdsname"'"
    End

    lb = INDEX(sdsname,'(')

    If SUBSTR(parms,1,2) ¬= 'V=' Then member = parms

    If lb ¬= 0 Then Do
        jdsname = SUBSTR(sdsname,1,lb-1)
        If member = '' Then ,
            member = SUBSTR(sdsname,lb+1,LENGTH(sdsname)-(lb+1))
    End
    Else jdsname = sdsname
    If member = '*' Then Do
        member  = ''
        memall  = 'Y'
        sdsname = jdsname
        parms   = ''
    End
    Else memall = 'N'
    lb = INDEX(dsname,'(')
    If lb ¬= 0 Then Do
         adsname = SUBSTR(dsname,1,lb-1)
         If SUBSTR(dsname,1,1) = "'" Then adsname = adsname"'"
    End
    Else adsname = dsname
    qdsname = "'"jdsname"'"

    alkvol = ''
    volume = ''
    If SUBSTR(parms,1,2) = "V=" Then Do
        vol = SUBSTR(parms,3,6)
        parms = parms1
        If sel = "IT" | vol = "MIGRAT" | vol = "*ALIAS" Then Nop
        Else Do
            x = listdsi("'SYS1.LINKLIB' VOLUME("vol")")
            If sysreason = 22 Then Do
               gc009 = "Volume '"vol"' not mounted or defined to the",
                       "system."
               Signal errorfnd
            End
            alkvol = vol
            volume = "VOLUME("alkvol")"
        End
    End
    "ISPEXEC VPUT (ALKVOL) SHARED"
    "ISPEXEC VPUT (ALKVOL) PROFILE"

tsthsmo:
    If zcmd = 'HQ' Then Signal sethsm
    If Wordpos(sel,' HB  HC  HD  HL  HM  HR  HU')>0 Then Signal sethsm
    If Wordpos(sel,' AI  BI  RA  RB')>0 Then Signal setasm2
    Signal testnono

sethsm:
    stmgr = "HSM"
    Signal testnono
    Signal tstmgr

setasm2:
    stmgr = "ASM2"

tstmgr:
    Address TSO "CALL '"alkload"(EXECJOB)' '0"stmgr"'"
    If rc ¬= 0 Then Signal invstmgr
    Signal testsels

testnono:
    If sel = 'AS' Then Signal notatsit        /* <=== change for site */
/*  If sel = 'DR' Then Signal notatsit */     /* <=== change for site */

    #m1=Msg('Off');x=Listdsi(qdsname " DIR "volume"NORECALL");x=MSG(#m1)
    Parse VAR sysmsglvl2 . listdsi_msg2
    listdsi_rc=sysreason
    If sysreason=0  Then Signal testsels
    If sysreason=24 Then Signal testsels
    If sysreason=9 | sysreason=25 Then Do
        If Wordpos(sel,' DL  34  HB  HC  HD  HL  HR')>0 Then Signal testsels
        If parms="FORCE" Then Do
            parms=parms1;parm1=parms2;parm2=parms3;parm3=
        End
        Else Do
            gc009=listdsi_msg2"."
            Signal errorfnd
        End
    End

testsels:
    If sel='S' Then sel=csmdsnsd

/*--------------------------------------------------------------------*/
/* Member List                                                        */
/*--------------------------------------------------------------------*/
    If sel='ML' Then Do
        "VPUT (MEMBER ALKVOL) SHARED"
        "SELECT CMD(%CSMDSNML &JDSNAME)"
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Browse or Edit                                                     */
/*--------------------------------------------------------------------*/
    If sel='B' | sel='E' | sel='V' Then Do
      If sel='B' Then action='BROWSE'
      Else If sel='E' Then action='EDIT';Else action='VIEW'
      If parms ¬= '' Then Do
          If parms='*' Then prms=;Else prms='('parms')'
          If sdsname/= jdsname Then sdsname=jdsname||prms
          Else                      sdsname=sdsname||prms
      End
      If sysdsorg='VS' Then Do
          gc009="Cannot "action" VSAM dataset. Use eXtended",
                "Edit/Browse option."
          Signal errorfnd
      End
      If syslrecl>255 & sel='E' Then Do
          gc009="Cannot edit dataset > 255 characters. Use eXtended",
                "Edit/Browse option."
         Signal errorfnd
      End

      Call ON ERROR NAME errbr1

      If alkvol/='' Then edtvol=alkvol;Else edtvol=sysvolume
      "&ACTION DATASET('&SDSNAME') &VOLUME"
      Call Off Error
      Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Extended Browse or Edit                                            */
/*--------------------------------------------------------------------*/
    If sel='XE' | sel='XB' | sel='VB' Then Do
        If parms='' Then parms='NONE'
        If sysdsorg='VS' Then Do
            If sel='XB' | sel='VB' Then prog='EXTBVSAM';Else prog='EXTEVSAM'
            "SELECT CMD(%CSMDSNVL &JDSNAME",
                "&PROG &PARMS &TRACEO) NEWAPPL(EXTE)"
            Signal reposit
        End
        If syslrecl > 255 & sel = 'XE' Then Do
            recfm1 = SUBSTR(sysrecfm,1,1)
            If recfm1 = 'U' & userid ¬= TSGAK         Then Do
                gc009 = "Not yet developed for '"&recfm1"' type",
                        "records."
                Signal errorfnd
            End
            If sysdsorg ¬= 'PS' Then Do
                gc009 = "Not yet developed for DSORG="sysdsorg"type",
                        "datasets."
                Signal errorfnd
            End
            "ISPEXEC SELECT CMD(%CSMDSNNL &JDSNAME &PARMS",
                "&TRACEO) NEWAPPL(EXTE)"
            Signal reposit
        End
        gc009 = "Only use '"sel"' against VSAM or > 255 character",
                "datasets."
        Signal errorfnd
    End

/*--------------------------------------------------------------------*/
/* Present seletion from $$$INDEX member                              */
/*--------------------------------------------------------------------*/
    If Wordpos(sel,'IB IE IV')>0 Then Do
        If sdsname/=jdsname Then Do
            gc009='Cannot use "'sel'" on member of PDS.'
            Signal errorfnd
        End
        If Sysdsn("'"jdsname"($$$INDEX)'")/='OK' Then Do
            gc009="Member '"jdsname"($$$INDEX)' not found."
            Signal errorfnd
        End
        Parse VAR sel . +1 xx
        act=$Ttrunc(xx,,'E,EDIT B,BROWSE *,VIEW')
        "ISPEXEC &ACT DATASET('&JDSNAME($$$INDEX)')"
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Present seletion from $$$INDEX member                              */
/*--------------------------------------------------------------------*/
/*  If sel='IX' Then Do                                               */
/*      If sdsname/=jdsname Then Do                                   */
/*          gc009="Cannot use "IX" on member of PDS."                 */
/*          Signal errorfnd                                           */
/*      End                                                           */
/*      If Sysdsn("'"jdsname"($$$INDEX)'")/='OK' Then Do              */
/*          gc009="Member '"jdsname"($$$INDEX)' not found."           */
/*          Signal errorfnd                                           */
/*      End                                                           */
/*      dataset=jdsname                                               */
/*      "ISPEXEC VPUT (DATASET) SHARED"                               */
/*      Address TSO "%CSMDSNIX "traceo                                */
/*      Signal reposit                                                */
/*  End                                                               */
/*                                                                    */
/*--------------------------------------------------------------------*/
/* Test for Index on RECFM=U type dataset                             */
/*--------------------------------------------------------------------*/
    If sel = 'IU' Then Do
        Address TSO "%INDEXU "qdsname alkvol
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Test for Edit/Browse Alternate system dataset                      */
/*--------------------------------------------------------------------*/
    If sel = 'EA' | sel = 'BA' Then Do
       gc009 = "Not applicable at Vic. Roads."
       Signal errorfnd

       If SUBSTR(userid,1,sysprogl) = sysprog Then Do
          If sel = 'EA' Then action = 'EDIT'
          Else               action = 'BROWSE'
          If sysvolume = tgtres Then edtvol = tgtalt
          If sysvolume = tgtalt Then edtvol = tgtres
          If sysvolume = dstres Then edtvol = dstalt
          If sysvolume = dstalt Then edtvol = dstres
          volume = 'VOLUME('&edtvol')'
          If parms ¬= '' Then Do
              If sdsname = jdsname Then Do
                  gc009 = "Cannot supply a member name over a member",
                          action" selection."
                  Signal errorfnd
              End
              sdsname = sdsname'('parms')'
          End

          Signal ON ERROR NAME errbr1
          "ISPEXEC &ACTION DATASET('&SDSNAME') &VOLUME"
          Signal OFF ERROR
          Signal reposit
      End
    End

/*--------------------------------------------------------------------*/
/* Edit using an initial Edit-Macro                                   */
/*--------------------------------------------------------------------*/
    If sel = 'ME' Then Do
        "ISPEXEC VGET (EDITMACN) PROFILE"
        "ISPEXEC DISPLAY PANEL(CSMDSNME)  CURSOR(EDITMACN)"
        If rc ¬= 0 Then Do
            gc009 = "Edit-macro name entry abandoned."
            "ISPEXEC SETMSG MSG(GC009)"
            Signal reposit
        End
        "ISPEXEC VPUT (EDITMACN) PROFILE"
        If  parms ¬= '' Then sdsname = sdsname'('parms')'

        Signal ON ERROR NAME errbr1
        "ISPEXEC EDIT DATASET('&SDSNAME') MACRO(&EDITMACN)"
        Signal OFF ERROR

        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Print dataset(member) normal or in HEX                             */
/*--------------------------------------------------------------------*/
    If sel = 'P' | sel = 'PX' Then Do
        If sysdsorg = 'VS' Then Signal vsamprn1
        dest = ''
        If parms ¬= '' Then Do
            "ISPEXEC CONTROL NONDISPL ENTER"
            "ISPEXEC DISPLAY PANEL (PRNTDSTV)"
            rc1 = rc
            If rc1 ¬= 0 Then Signal reposit
        End
        x = OUTTRAP('line',500,'NOCONCAT')
        x = MSG('On')
        If sel = 'P'  Then Address TSO "PRINTOFF "dsname dest
        If sel = 'PX' Then ,
            Address Tso "PRINTOFF "dsname dest "HEX CLASS(X)"
        rc1 = rc

        If trace = 'Y' Then Trace r
        Else x = MSG('Off')
        gc009 = line2
        morel = line0
        Signal errorfnd
    End

/*--------------------------------------------------------------------*/
/* Print member list                                                  */
/*--------------------------------------------------------------------*/
    If sel = 'PM' Then Do
        dsname = jdsname
        "ISPEXEC VPUT (DSNAME F00 PARMS1 PARMS) SHARED"
        Address TSO "%CSMDSNPM "traceo
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* VSAM print                                                         */
/*--------------------------------------------------------------------*/
    If sel = 'VP' Then Do
vsamprn1:
        If parms = 'DUMP' |,
           parms = 'HEX'  |,
           parms = 'CHAR' Then format = parms
        Else                   format = 'CHAR'
        dsname = jdsname
        "ISPEXEC FTOPEN TEMP"
        "ISPEXEC FTINCL VSAMPRNT"
        "ISPEXEC FTCLOSE"
        "ISPEXEC VGET   ZTEMPF"
        If parms = 'E' | parms = 'EDIT' Then Do
            Address TSO "ALLOC DD(ZTEMPF) DS('"ztempf"') OLD REU"
            "ISPEXEC LMINIT DATAID(DATAID) DDNAME(ZTEMPF)"
            "ISPEXEC EDIT DATAID(&DATAID)"
            "ISPEXEC LMFREE DATAID(&DATAID)"
            Address TSO "FREE DD(ZTEMPF)"
        End
        tempsub = ztempf
        "ISPEXEC VPUT (TEMPSUB) SHARED"
        Address TSO "%TEMPSUB"
        "ISPEXEC VGET (MESSAGE) SHARED"
        gc009 = message"."
        "ISPEXEC SETMSG MSG(GC009)"
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* VSAM create                                                        */
/*--------------------------------------------------------------------*/
    If sel = 'VC' Then Do
        "ISPEXEC VPUT (F00 DSNAME) SHARED"
        Address TSO "%CSMDSNVC "traceo
        Signal reposit
    End
/*                                                                    */
/*    For sites with 'FILEAID'                                        */
/*                                                                    */
/*        alk35enq = 'Y'                                              */
/*        alk35dsn = dsname                                           */
/*        alk35opt = ''                                               */
/*        panels   = 'IFA'                                            */
/*        errors   = 'FAM'                                            */
/*        tutor    = 'TFB'                                            */
/*        fileaid  = 'FASPF0'                                         */
/*        esroute  = '018'                                            */
/*        vsamhilv = ' '                                              */
/*        vsamdays = '000'                                            */
/*        retndays = '000'                                            */
/*        vsamunit = ' '                                              */
/*        isamunit = ' '                                              */
/*        wrkunit  = ' '                                              */
/*        clibr    = ' '                                              */
/*        altio    = '   '                                            */
/*        ispf     = 2                                                */
/*        help     = tutor                                            */
/*        zhindex  = 'TFBINDEX'                                       */
/*        zhtop    = 'TFBINDEX'                                       */
/*        "ISPEXEC VPUT (PANELS ERRORS TUTOR FILEAID ESROUTE",        */
/*           "VSAMHILV VSAMDAYS RETNDAYS VSAMUNIT ISAMUNIT WRKUNIT",  */
/*           "CLIBR ALTIO ISPF HELP ZHINDEX ZHTOP )  SHARED"          */
/*        "ISPEXEC VPUT (ALK35DSN ALK35OPT ALK35ENQ) SHARED"          */
/*        "ISPEXEC SELECT PGM(FASPF) PARM(U5)"                        */
/*        alk35opt = ''                                               */
/*        alk35enq = ''                                               */
/*        alk35dsn = ''                                               */
/*        "ISPEXEC VPUT (ALK35DSN ALK35OPT ALK35ENQ) SHARED"          */
/*        Signal reposit                                              */
/*  End                                                               */

/*--------------------------------------------------------------------*/
/* PDSEDIT in batch                                                   */
/*--------------------------------------------------------------------*/
    If sel = 'PE' Then Do
        gc009 = "Use option 'PO' withe the '/BATCH' command."
        Signal errorfnd
/*      idsname = dsname                                              */
/*      "ISPEXEC VPUT (IDSNAME PARMS PACK UNIT COUNT",                */
/*            "GC009 V1 V2 V3 DSOSTBL USERX) SHARED"                  */
/*      Address TSO "%CSMDSNPE "traceo                                */
/*      Signal reposit                                                */
    End

/*--------------------------------------------------------------------*/
/* PDSEDIT on-line                                                    */
/*--------------------------------------------------------------------*/
    If sel = 'PO' Then Do
        #members=sysmembers
        dsname=qdsname
        If member='' Then member=parm5
        "ISPEXEC VPUT (DSNAME MEMBER PARMS PACK UNIT COUNT #MEMBERS",
              "GC009 V1 V2 V3 DSOSTBL USERX ALKVOL) SHARED"
        Address TSO "%CSMDSNPO "traceo
        rc1 = rc
        If rc1 = 37 Then Do
             gc009 = "Dataset needs to be compressed prior to",
                     "continuing."
             Signal errorfnd
        End
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* LISTDSI on dataset                                                 */
/*--------------------------------------------------------------------*/
    If sel = 'LD' Then Do
        "ISPEXEC VPUT JDSNAME SHARED"
        Address TSO "%CSMDSNLD"
        "ISPEXEC CONTROL DISPLAY REFRESH"
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* List modified since                                                */
/*--------------------------------------------------------------------*/
    If sel = 'LM' Then Do
        "ISPEXEC SELECT CMD(%LMD '&JDSNAME' &PARMS)"
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Compress on-line/batch                                             */
/*--------------------------------------------------------------------*/
    If sel = 'Z' | sel = 'ZB' Then Do
        comprdsn = jdsname
        If listdsi_rc ¬= 0 Then Do
            gc009 = listdsi_msg2"."
            Signal errorfnd
        End
        If parms = 'HELP' Then parm1 = parms
        Else Do
            If sel = 'Z' Then parm1 = 'ONLINE'
            Else              parm1 = 'BATCH'
        End
        If parms ¬= '' Then PARSE VAR parms parm2 parm3
        parm4 = traceo
        "ISPEXEC VPUT (COMPRDSN F00 PARM1 PARM2 PARM3 PARM4) SHARED"
        Address TSO "%CSMDSNZ"
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* LISTCAT on datasets or hlq's                                       */
/*--------------------------------------------------------------------*/
    If sel = 'LE' Then Do
        command = "ENT("dsname")"
        Signal listcat
    End

    If sel = 'LC' | sel = 'LV' Then Do
        command = "LEV("dsname")"
        Signal listcat
    End
    If sel = 'LU' Then Do
        command = "CAT("dsname")"
        Signal listcat
    End
    Signal testnonv

listcat:
    cat=
    If SUBSTR(parms,1,2) = "I=" Then Do
      If SUBSTR(parms,3,LENGTH(parms)-2)= 'MVS1' Then ,
          cat = "CAT('MCAT.MVS1')"
      If SUBSTR(parms,3,LENGTH(parms)-2)= 'MVS2' Then ,
          cat = "CAT('MCAT.MVS2')"
      If SUBSTR(parms,3,LENGTH(parms)-2)= 'MVS4' Then ,
          cat = "CAT('MCAT.MVS4')"
      parms = ''
    End

    dd='LC'Time('s')
    x=MSG('Off')
    listc#0="'"$Ztempf()"'"
    keep=;mod=''
    If parms='KEEP' Then keep='KEEP'
    If parms1='KEEP' Then keep='KEEP'
    If parms='MOD'  Then mod='MOD'
    If parms1='MOD'  Then mod='MOD'
    x=MSG('On')
    x=Outtrap('line.',10,'NOCONCAT')
    If mod/='MOD' Then Do
        x=MSG('Off')
        Address TSO "DELETE "listc#0
        x=MSG('On')
        Address TSO "ALLOC F("ddname") DA("listc#0") NEW SPACE(10,10)",
              "TRACKS UNIT("work") CATALOG REUSE",
              "RECFM(V B) LRECL(125) BLKSIZE(19029)"
    End
    Else Address TSO "ALLOC F("ddname") DA("listc#0") MOD REU"
    If rc/=0 Then Do
        x=Outtrap('Off')
        gc009=line.1;morel=line.0
        Signal errorfnd
    End
    x=Outtrap('line.',10,'NOCONCAT')
    Address TSO "LISTC "command" OFILE("ddname") ALL" cat
    rc1=rc
    x=OUTTRAP('Off')
    x=MSG('Off')
    Address TSO "FREE FILE("ddname")"
    If rc1=0 Then Do
        If Substr(parms,1,2)='M=' Then Do
            m=Strip(Substr(parms,3));xtra='MACRO('m')'
        End
        Else xtra=
        "ISPEXEC VIEW DATASET(&LISTC#0) &XTRA"
    End
    Else Do
        gc009=line.1;morel=line.0
        Signal errorfnd
    End
    If keep/='KEEP' Then x=$ztempf(listc#0,'/D')
    Signal reposit

/*--------------------------------------------------------------------*/
/* Dataset information (Non-VSAM)                                     */
/*--------------------------------------------------------------------*/
testnonv:
    If sel = 'I' Then Do
        alk32enq = 'Y'
        alk32dsn = qdsname
        "ISPEXEC VPUT (ALK32DSN ALK32ENQ) SHARED"
        "ISPEXEC SELECT PGM(ISRUDA) PARM(ISRUDA2)"
        alk32enq = ''
        alk32dsn = ''
        "ISPEXEC VPUT (ALK32DSN ALK32ENQ) SHARED"
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Dataset information (VSAM)                                         */
/*--------------------------------------------------------------------*/
    If sel='VI' Then Do
        dsname=jdsname
        xx=Lastpos('.',dsname);suff=Substr(dsname,xx+1)
        If Wordpos(suff,'DATA INDEX')>0 Then dsname=Substr(dsname,1,xx-1)
        "ISPEXEC VPUT DSNAME SHARED"
        Address TSO "%CSMDSNVI "traceo
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Dataset information (Tapes)                                        */
/*--------------------------------------------------------------------*/
    If sel = 'IT' Then Do
        If alkvol ¬= '' Then Do
            alktms = 'IT'
            "ISPEXEC VPUT (ALKTMS ALKVOL) SHARED"
        End
        "ISPEXEC SELECT PGM(TMSIOPRI)"
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Allocate dataset                                                   */
/*--------------------------------------------------------------------*/
    If sel = 'A' Then Do
        If SYSDSN(dsname) = 'OK' Then Do
            gc009 = "Dataset "dsname" already catalogued."
            Signal errorfnd
          End
        alk32enq = 'A'
        alk32dsn = dsname
        "ISPEXEC VPUT (ALK32DSN ALK32ENQ) SHARED"
        "ISPEXEC SELECT PGM(ISRUDA) PARM(ISRUDA2)"
        alk32enq = ''
        alk32dsn = ''
        "ISPEXEC VPUT (ALK32DSN ALK32ENQ) SHARED"
        "ISPEXEC VGET (ZERRMSG) SHARED"
/*      "ISPEXEC SETMSG MSG(&ZERRMSG)"                                */
        gc009 = "Dataset "dsname" allocated."
        Signal errorfnd
    End

/*--------------------------------------------------------------------*/
/* Alloacte dataset using another as a model                          */
/*--------------------------------------------------------------------*/
    If sel='AM' Then Do
        model=adsname;dsname="'"jdsname".NEW'";catlg='Y';volume=
        csr='DSNAME';csrp=(Lastpos('.',dsname)+1)
testamo1:
        "ISPEXEC DISPLAY PANEL(CSMDSNAM) CURSOR(&CSR) CSRPOS(&CSRP)"
        If rc/=0 Then Do
            gc009="Dataset allocation using model abandoned."
            Signal errorfnd
          End
        If zcmd='DELETE' Then Do
            x=Outtrap('line.',500,'NOCONCAT')
            Address TSO 'DELETE' dsname
            rc1=rc
            x=Outtrap('Off')
            If rc1/=0 Then Do
                gc009=line.1"."
                Signal testamo1
            End
        End
        If SYSDSN(dsname)='OK' Then Do
            gc009="Dataset "dsname" already catalogued. Enter",
                  "'DELETE' on the command line to delete."
            "ISPEXEC SETMSG MSG(GC009)"
            csr='DSNAME'
            Signal testamo1
        End
        alk32enq='Y';alk32dsn=model
        "ISPEXEC VPUT (ALK32DSN ALK32ENQ) SHARED"
        "ISPEXEC CONTROL NONDISPL ENTER"
        "ISPEXEC SELECT PGM(ISRUDA) PARM(ISRUDA2)"
        alk32enq='A';alk32dsn=dsname
        "ISPEXEC VPUT (ALK32DSN ALK32ENQ) SHARED"
        "ISPEXEC SELECT PGM(ISRUDA) PARM(ISRUDA2)"
        alk32enq=;alk32dsn=
        "ISPEXEC VPUT (ALK32DSN ALK32ENQ) SHARED"
        If SYSDSN(dsname)='OK' Then,
             gc009="Dataset "dsname" allocated."
        Else gc009="Dataset &dsname not allocated."
        Signal errorfnd
    End

/*--------------------------------------------------------------------*/
/* Allocate an uncatalogued dataset using a model                     */
/*--------------------------------------------------------------------*/
    If sel = 'AU' Then Do
        "ISPEXEC VPUT ADSNAME SHARED"
        Address TSO "%CSMDSNAU"
        Signal reposit
      End

/*--------------------------------------------------------------------*/
/* Re-allocate dataset with changes to attributes, eg more space dirb */
/*--------------------------------------------------------------------*/
    If sel='AC' Then Do
        csdsn00=qdsname
        "ISPEXEC VPUT (CSDSN00 ALKVOL) SHARED"
        Address TSO '%CSMDSNAC' traceo
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Delete re-allocate dataset (will delete all data/members)          */
/*--------------------------------------------------------------------*/
    If sel = 'DA' Then Do
        If listdsi_rc ¬= 0 Then Do
            gc009 = listdsi_msg2
            Signal errorfnd
        End
        Address TSO "ALLOC DA("qdsname") OLD REUSE"
        rc1 = rc
        Address TSO "FREE DS("qdsname")"
        If rc1 ¬= 0 Then Do
            gc009 = "Dataset in use by another application. Cannot be",
                    "deleted."
            Signal errorfnd
        End
        alk32enq = 'Y'
        alk32dsn = qdsname
        "ISPEXEC VPUT (ALK32DSN ALK32ENQ) SHARED"
        "ISPEXEC CONTROL NONDISPL ENTER"
        "ISPEXEC SELECT PGM(ISRUDA) PARM(ISRUDA2)"
        Address TSO "RENAME "qdsname" '"jdsname".TEMP@#@#'"
        If rc ¬= 0 Then Do
            gc009 = "Temporary rename to '"jdsname".temp@#@#' failed.",
                    "Process abandoned."
            Signal errorfnd
        End
        gc009 = "NOTE - All contents of dataset will be lost. Use",
                "'END' PF key to abandon."
        "ISPEXEC SETMSG MSG(GC009)"
        alk32enq = 'A'
        "ISPEXEC VPUT (ALK32DSN ALK32ENQ) SHARED"
        "ISPEXEC SELECT PGM(ISRUDA) PARM(ISRUDA2)"
        alk32enq = ''
        alk32dsn = ''
        "ISPEXEC VPUT (ALK32DSN ALK32ENQ) SHARED"
        If SYSDSN(dsname) = 'OK' Then Do
            gc009 = "Dataset "dsname" reallocated."
            x = MSG('Off')
            Address TSO "DELETE '"jdsname".TEMP@#@#'"
        End
        Else Do
            gc009 = "Dataset "dsname" not reallocated."
            Address TSO "RENAME '"jdsname".TEMP@#@#' "qdsname
        End
        Signal errorfnd
    End

/*--------------------------------------------------------------------*/
/* Allocate dataset to DDNAME                                         */
/*--------------------------------------------------------------------*/
    If sel = 'AL' Then Do
          sdsname = "'"sdsname"'"
          If SYSDSN(sdsname) ¬= 'OK' Then Do
              gc009 = SYSDSN(sdsname)"."
              Signal errorfnd
            End
          reply  = 'Y'
          status = 'SHR'
          ddname = 'DDNAME01'
          "ISPEXEC DISPLAY PANEL(CSMDSNAL) CURSOR(DDNAME)"
          If rc ¬= 0 Then Do
              gc009 = "Dataset allocation abandoned."
              Signal errorfnd
          End
          x = MSG('On')
          x = OUTTRAP('line',5,'NOCONCAT')
          line1 = ''
          Address TSO "ALLOC f("ddname") DA("sdsname")" status reuse
          rc1 = rc
          x = OUTTRAP('Off')
          If line1 = '' Then ,
              gc009 = "Dataset allocated to ddname '"ddname"'."
          Else Do
              gc009 = line1
              morel = line0
          End
          Signal errorfnd
    End

/*--------------------------------------------------------------------*/
/* Use the REVIEW command against dataset                             */
/*--------------------------------------------------------------------*/
    If sel = 'RV' Then Do
review1:
        dsname = jdsname
/*      "ISPEXEC VPUT DSNAME SHARED"                                  */
/*      Address TSO "%CSMDSNRV "traceo                                */
        Address TSO "REV '"jdsname"'"
        "ISPEXEC CONTROL DISPLAY REFRESH"
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Re-link dataset                                                    */
/*--------------------------------------------------------------------*/
    If sel = 'RL' Then Do
        If sysrecfm ¬= 'U' Then Do
            gc009 = "You can only relink a RECFM=U dataset member."
            Signal errorfnd
        End
        "ISPEXEC VPUT DSNAME SHARED"
        gc009 = "Ensure link parameters are consistent with original!!!"
        "ISPEXEC SETMSG MSG(GC009)"
        Address TSO "%CSMDSNRL "traceo
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Move dataset using DFDSS                                           */
/*--------------------------------------------------------------------*/
    If sel = 'MV' Then Do
        "ISPEXEC VPUT DSNAME SHARED"
        Address TSO "%CSMDSNMV "traceo
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Use FIXPDS to restore deleted members in a PDS                     */
/*--------------------------------------------------------------------*/
    If sel='FX' Then Do
        panelinc=0;"ISPEXEC VPUT (PANELINC)"
        Address TSO "%FX '"jdsname"'"
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Basic file compare                                                 */
/*--------------------------------------------------------------------*/
    If sel = 'FC' Then Do
        If member ¬= '' Then csdsn00 = "'"jdsname"("member")'"
        Else                 csdsn00 = qdsname
        "ISPEXEC VPUT (F00 CSDSN00 ALKVOL) SHARED"
        Address TSO "%CSMDSNFC "traceo
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Super compare (ISPF option 3.12)                                   */
/*--------------------------------------------------------------------*/
    If sel='SK' Then Do
        alk32enq='SK'
        alk32dsn="'"jdsname"'"
        If sysdsorg='PO' Then Do
            If member='' Then member='*'
            Else If INDEX(member,'*')=0 Then Do
                     alk32dsn="'"jdsname"("member")'";member=
                 End
        End
        Else member=
        "ISPEXEC VPUT (MEMBER ALK32DSN ALK32ENQ) SHARED"
        "ISPEXEC SELECT PGM(ISRSEPRM)"
        Parse Value '' With alk32enq alk32dsn member
        "ISPEXEC VPUT (MEMBER ALK32DSN ALK32ENQ) SHARED"
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Invoke PDS routine off the CBT tape                                */
/*--------------------------------------------------------------------*/
    If sel='PD' Then Do
/*      If sysdsorg)='VS' Then Do                                     */
/*          gc009="Not against a VSAM dataset you wont."              */
/*          Signal errorfnd                                           */
/*      End                                                           */
        alk@pds='Y';alk@dsn=qdsname
        "ISPEXEC VPUT (ALK@DSN ALK@PDS ALKVOL) PROFILE"
        "ISPEXEC SELECT PANEL(PDS@PRIM)"
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Library (ISPF option 3.1)                                          */
/*--------------------------------------------------------------------*/
    If sel = 'LI' Then Do
          alk31enq = 'Y'
          alk31dsn = dsname
          "ISPEXEC VPUT (ALK31DSN ALK31ENQ) SHARED"
          "ISPEXEC SELECT PGM(ISRUDA) PARM(ISRUDA1)"
          alk31enq = ''
          alk31dsn = ''
          "ISPEXEC VPUT (ALK31DSN ALK31ENQ) SHARED"
          Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Copy/Move (ISPF option 3.3)                                        */
/*--------------------------------------------------------------------*/
    If sel = 'C' | sel = 'M' Then Do
          If parms ¬= '' Then alk33ds2 = parms
          Else Do
              If sdsname ¬= jdsname Then alk33ds3 = adsname
              Else                       alk33ds3 = qdsname
          End
          alk33ds2 = ''
          alk33opt = sel
          Signal movertn
    End

/*--------------------------------------------------------------------*/
/* Copy internal (copy into same PDS)                                 */
/*--------------------------------------------------------------------*/
    If sel = 'CI' Then Do
        If sdsname ¬= jdsname Then alk33ds2 = adsname
        Else                       alk33ds2 = qdsname
        alk33ds3 = ''
        alk33opt = 'C'
        Signal movertn
    End

/*--------------------------------------------------------------------*/
/* Copy/Move (ISPF option 3.3)                                        */
/*--------------------------------------------------------------------*/
    If sel = 'CA' | sel = 'MA' Then Do
        If  parms ¬= '' Then alk33ds2 = parms
        Else Do
            If sdsname ¬= jdsname Then alk33ds = adsname
            Else                       alk33ds3 = qdsname
        End
        dsname = "'"jdsname"(*)'"
        alk33ds2 = ''
        alk33opt = SUBSTR(sel,1,1)
        Signal movertn
    End

/*--------------------------------------------------------------------*/
/* ClOne dataset                                                      */
/*--------------------------------------------------------------------*/
    If sel = 'CO' Then Do
        "ISPEXEC VPUT (JDSNAME VOLUME) SHARED"
        If Index(parm#,'/BU')=0 Then,
             Address TSO "%CSMDSNCO" "'"jdsname"'" traceo
        Else Address TSO "%CSMDSNCO" "/BU" traceo
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* BackUP dataset                                                     */
/*--------------------------------------------------------------------*/
    If sel = 'BU' Then Do
        "ISPEXEC VPUT (JDSNAME VOLUME) SHARED"
        Address TSO "%CSMDSNBU" "'"jdsname"'" traceo
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Update From                                                        */
/*--------------------------------------------------------------------*/
    If sel = 'UF' Then Do
        Address TSO "%CSMDSNUF '"jdsname"'"
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Copy load modules                                                  */
/*--------------------------------------------------------------------*/
    If sel = 'CL' Then Do
        If volume ¬= '' Then  member = ''
        If parms1 ¬= '' Then  member = parms1
        If memall  = 'Y' Then member = '*'
        "ISPEXEC VPUT (ALKVOL JDSNAME MEMBER VOLUME) SHARED"
        Address TSO "%CSMDSNCL "traceo
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Copy changed members only (compares last update date + times       */
/*--------------------------------------------------------------------*/
/*  If sel = 'CH' Then Do                                             */
/*      csm = 'Y'                                                     */
/*      "ISPEXEC VPUT (ALKVOL JDSNAME CSM)"                           */
/*      Address TSO "%COPYCHGS " traceo                               */
/*      Signal reposit                                                */
/*  End                                                               */
/*                                                                    */
/*--------------------------------------------------------------------*/
/* Wildcarding dataset selection (ISPF option 3.4 interface)          */
/*--------------------------------------------------------------------*/
    If sel='34' | sel='DL' Then Do
        alk32enq='Y';alk32dsn=Strip(adsname,,"'");alk32vol=alkvol
        "ISPEXEC VPUT (ALK32DSN ALK32ENQ ALK32VOL) SHARED"
        "ISPEXEC SELECT PGM(ISRUDL) PARM(ISRUDLP)"
        alk32dsn=;alk32enq=;alk32vol=
        "ISPEXEC VPUT (ALK32DSN ALK32ENQ ALK32VOL) SHARED"
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Qualifir print in ISPF opt 3.4                                     */
/*--------------------------------------------------------------------*/
    If sel='QP' | sel='PQ' Then Do
        alk32enq="V";alk32dsn=STRIP(csdsn00,,"'");alk32vol=alkvol
        "VPUT (ALK32ENQ,ALK32VOL,ALK32DSN) SHARED"
        "CONTROL NONDISPL ENTER"
        "SELECT PGM(ISRUDL) PARM(ISRUDLP)"
        If rc=0 Then Do
            "VGET (ZLSTNAME) ASIS"
            "SELECT PGM(ISPLLP) PARM(LIST KEEP) SUSPEND SCRNAME(SETTINGS)"
            If rc=0 Then Do
                m#=Msg('Off')
                newname=$ZTEMPF('NAME')
                Address TSO "DELETE" newname
                Address TSO "RENAME '"zlstname"'" newname
                x=Msg(m#)
                zedlmsg='List dataset kept and renamed' newname'.',
                        'Use macro "DSS1" to summarise storage usage.'
                "SETMSG MSG(ISRZ001)"
                "VIEW DATASET(&NEWNAME)"
                x=$ztempf(newname,'/D')
            End
        End
        Parse Value '' With alk32dsn alk32enq alk32vol  .
        "VPUT (ALK32DSN,ALK32ENQ,ALK32VOL) SHARED"
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* XMit data across nodes                                             */
/*--------------------------------------------------------------------*/
    If sel = 'XM' Then Do
        If listdsi_rc ¬= 0 Then Do
            gc009 = listdsi_msg2
            Signal errorfnd
        End
        If member='' Then member=parm5
        "ISPEXEC VPUT (JDSNAME MEMBER ALKVOL) SHARED"
        "ISPEXEC SELECT CMD(%CSMDSNXM)"
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* eXecute As Command                                                 */
/*--------------------------------------------------------------------*/
    If sel='XC' | sel='XAC' Then Do
        "ISREDIT (line)=LINE .ZCSR";If rc/=0 Then Do
            zedsmsg=
            zedlmsg='Command "'sel'" must be a edit command.'
            "SETMSG MSG(ISRZ001)";Exit
        End
        Parse Var line line '/' .;Parse VAR line line '-' .
        If Word(line,1)='TSO' Then line=Subword(line,2)
        Interpret 'Address TSO "'Space(line)'"'
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* eXecute As Macro                                                   */
/*--------------------------------------------------------------------*/
    If sel='XM' | sel='XAM' Then Do
        "ISREDIT (line)=LINE .ZCSR";If rc/=0 Then Do
            zedsmsg=
            zedlmsg='Command "'sel'" must be a edit command.'
            "SETMSG MSG(ISRZ001)";Exit
        End
        Parse Var line line '/' .;Parse VAR line line '-' .
        "ISREDIT" Space(line)
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Operator Command JCL                                               */
/*--------------------------------------------------------------------*/
    If sel='OCJ' | sel='OCJS' Then Do
        "ISREDIT (lin#)=CURSOR";If rc/=0 Then Do
            zedsmsg=
            zedlmsg='Command "'sel'" must be a edit command.'
            "SETMSG MSG(ISRZ001)";Exit
        End
        "ISREDIT LINEMAC" lin#","lin#","sel
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* CICS Trace Print                                                   */
/*--------------------------------------------------------------------*/
    If sel='CTP' Then Do
        x=CTP(jdsname,'EDIT')
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Operator Command AK                                                */
/*--------------------------------------------------------------------*/
    If sel='CAK' Then Do
        "ISREDIT (lin#)=CURSOR";If rc/=0 Then Do
            zedsmsg=
            zedlmsg='Command "'sel'" must be a edit command.'
            "SETMSG MSG(ISRZ001)";Exit
        End
        "ISREDIT (oline)=LINE .ZCSR";w1=Word(oline,1)
        Select
            When w1='/*' Then Parse VAR oline '/*' data '*/'
            When w1='//*' Then Parse VAR oline '//*' data '*//'
            When w1='*' Then Parse VAR oline '*' data
            Otherwise Parse VAR oline data ' - '
        End
        Parse VAR data data '/CAK'
        x=$BR("%Consak "data"")
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Member Manager                                                     */
/*--------------------------------------------------------------------*/
    If sel='MM' Then Do
        If alkvol/='' Then xtra='='alkvol;Else xtra=
        x=Mm("'"jdsname"'"xtra)
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Wildcarding dataset using $DSNSEL                                  */
/*--------------------------------------------------------------------*/
    If sel='$D' | sel='DS' Then Do
        llq=Strip(Substr(jdsname,Lastpos('.',jdsname)+1),,"'")
        hlq=Strip(Substr(jdsname,1,Lastpos('.',jdsname)),,"'")
/*      If Length(llq)<8 Then llq=llq'*'                              */
/*      x=$dsnsel(hlq||llq'.**')                                      */
        x=$dsnsel(jdsname)
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Script (ISPF option 3.9 Interface)                                 */
/*--------------------------------------------------------------------*/
    If sel = 'SC' Then Do
        alk32enq = y
        alk32dsn = qdsname
        "ISPEXEC VPUT (ALK32DSN ALK32ENQ) SHARED"
        "ISPEXEC CONTROL ERRORS RETURN"
        "ISPEXEC SELECT PGM(ISRFPR) PARM((ISRFP09) 9)"
        alk32dsn = ''
        alk32enq = ''
        "ISPEXEC VPUT (ALK32DSN ALK32ENQ) SHARED"
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Trim unused space from dataset                                     */
/*--------------------------------------------------------------------*/
    If sel = 'TR' Then Do
        If parms ¬= '' Then trparm = 'Y'
        Else                trparm = 'N'
        If alkvol ¬= '' Then volume = alkvol
        Else                 volume = ''
        "ISPEXEC VPUT (ACCT JDSNAME VOLUME TRPARM PARMS PARMS1 JCLASS)",
                 "SHARED"
        Address TSO "%CSMDSNTR"
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Execute as a command                                               */
/*--------------------------------------------------------------------*/
testexec:
    If sel = 'EX' | sel = 'X' | sel = 'XT' Then Do
        If listdsi_rc ¬= 0 Then Do
            gc009 = listdsi_msg2
            Signal errorfnd
          End
        If sel = 'XT' Then tr = 'TRACE'
        Else               tr = ''
        Address TSO "EXEC '"sdsname"'" tr
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Test Whohas against dataset                                        */
/*--------------------------------------------------------------------*/
/*  If sel = 'W' Then Do                                              */
/*      Address TSO "%WHOHAS "dsname                                  */
/*      "ISPEXEC CONTROL DISPLAY REFRESH"                             */
/*      Signal reposit                                                */
/*  End                                                               */

/*--------------------------------------------------------------------*/
/* Test Whohas against dataset                                        */
/*--------------------------------------------------------------------*/
    If sel = 'W' | sel = 'EQ' Then Do
        Address TSO "%ENQINFO" jdsname
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Free dataset                                                       */
/*--------------------------------------------------------------------*/
    If sel = 'F' Then Do
        x = OUTTRAP('line',5,'NOCONCAT')
        Address TSO "FREE DA("dsname")"
        rc1 = rc
        x = OUTTRAP('Off')
        If trace = "Y" Then Trace R
        If rc1 = 0 Then gc009 = "Dataset "dsname" freed."
        Else Do
            gc009 = line1
            morel = line0
        End
        Signal errorfnd
    End

/*--------------------------------------------------------------------*/
/* ACF2 submit (Not at VR)                                            */
/*--------------------------------------------------------------------*/
    If sel = 'AS' Then Do
        Address TSO "%ACFSUB "dsname
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* DS Recovery                                                        */
/*--------------------------------------------------------------------*/
    If sel = 'DR' Then Do
       If SUBSTR(userid,1,sysprogl) = sysprog Then Do
           dataset = sdsname
           "ISPEXEC VPUT DATASET SHARED"
           Address TSO "%CSMDSNRC "traceo
           Signal reposit
       End
       Else Do
           gc009 = "You are not authorised to use this option."
           gotro errorfnd
       End
    End

/*--------------------------------------------------------------------*/
/* HSM backup                                                         */
/*--------------------------------------------------------------------*/
    If sel = 'HU' Then Do
        If alkvol ¬= '' Then Do
            frvolume = 'VOLUME('alkvol')'
            frunit   = 'UNIT('aunit')'
        End
        Else Do
            frvolume = ''
            frunit   = ''
        End
        x = OUTTRAP('line',1,'NOCONCAT')
        Address TSO "HBACKDS "qdsname frvolume frunit,
            "WAIT EXTENDRC"
        rc1 = rc
        x = OUTTRAP('Off')
        If rc1 = 0 Then gc009 = "Dataset has been backed up."
        Else Do
            gc009 = line1
            morel = line0
        End
        Signal errorfnd
    End

/*--------------------------------------------------------------------*/
/* HSM recover                                                        */
/*--------------------------------------------------------------------*/
    If sel = 'HR' Then Do
        If parms='' Then parms='RECOV#01'
        If parms='' Then todsn=qdsname'.'parms
        Else todsn="'"jdsname"."parms"'"
        frdsn="'"jdsname"'";frvol=alkvol
        csr1='TODSN';csrp=Index(todsn,'.TEMP')
        Parse Value '' With dd mm yy dowdate genr fdate parmxx
hsmpanel:
        "ISPEXEC DISPLAY PANEL(CSMDSPHR)  CURSOR(&CSR1) CSRPOS(&CSRP)"
        If rc/=0 Then Do
/*          gc009 = "HSM Recover abandoned."                          */
            gc009="Recover abandoned."
            Signal errorfnd
        End
        csrp=1
        If Substr(todsn,1,1)="'" Then stodsn=Strip(todsn,,"'")
        Else stodsn=userid"."todsn
        If volser/='' Then Do
            x=LISTDSI("'SYS1.LINKLIB' VOLUME("volser")")
            If sysreason=22 Then Do
                gc009="Volume not mounted or defined to the system."
                "ISPEXEC SETMSG MSG(GC009)"
                csr1='VOLSER'
                Signal hsmpanel
            End
            tovolume='TOVOLUME('volser') unit('aunit')'
        End
        Else tovolume=
        If jdsname/=stodsn Then parmxx="NEWNAME('"stodsn"')"
        If Sysdsn("'"stodsn"'")='OK' Then parmxx=parmxx" REPLACE"
        If dfdssrec='Y' Then Do
            vars='dfdssgdg frdsn frvol stodsn volser parmxx'
            "ISPEXEC VPUT (vars" vars") SHARED"
            x=Csmdsndr()                    /* DFDSS recover rtn      */
            Signal reposit
        End
        If gen/='' Then genr="GEN("gen")"
        If dowdate/='' Then Do
            Address TSO "%VALIDATE "dd mm yy traceo
            If rc ¬= 0 Then Do
                gc009 = "Invalid date format."
                "ISPEXEC SETMSG MSG(GC009)"
                Signal hsmpanel
            End
            "ISPEXEC VPUT (DOWDATE) SHARED"
            "ISPEXEC SELECT PGM(DDMM$DOW)"
            If rc ¬= 0 Then Do
                gc009 = "Invalid date format."
                "ISPEXEC SETMSG MSG(GC009)"
                Signal hsmpanel
            End
            "ISPEXEC VGET (DOW# DOW) SHARED"
            If dow# ¬= 7 Then Do
                gc009 = "Day is '"dow"'. Can only recover for Sundays",
                        "using date option."
                "ISPEXEC SETMSG MSG(GC009)"
                Signal hsmpanel
            End
            fdate = 'DATE('yy'/'mm'/'dd')'
        End
Say     Address TSO "HRECOVER "qdsname parmxx genr fdate tovolume
        x=Outtrap('line.',1,'NOCONCAT');#msg=Msg('on')
        Address TSO "HRECOVER "qdsname parmxx genr fdate tovolume
/*      Call sam_recover                                              */
        rc1 = rc
        x=Outtrap('Off')x=Msg(#msg)
        If rc1 = 0 Then gc009 = line.1 "to recover into '"stodsn"'."
        Else Do
            gc009 = line.1
            morel = line.0
        End
        Signal errorfnd
    End

/*--------------------------------------------------------------------*/
/* HSM backup delete                                                  */
/*--------------------------------------------------------------------*/
    If sel = 'HB' Then Do
        "ISPEXEC DISPLAY PANEL(CSMDSNHD)"
        If rc ¬= 0 Then Do
            gc009 = "HSM Backup deletion abandoned."
            Signal errorfnd
        End
        x = OUTTRAP('line',1,'NOCONCAT')
        Address TSO "HBDELETE" qdsname
        rc1 = rc
        x = OUTTRAP('Off')
        If rc1 = 0 Then gc009 = line1" to delete backups."
        Else Do
            gc009 = line1
            morel = line0
        End
        Signal errorfnd
    End

/*--------------------------------------------------------------------*/
/* HSM migration delete                                               */
/*--------------------------------------------------------------------*/
    If sel = 'HD' Then Do
        "ISPEXEC DISPLAY PANEL(CSMDSNHD)"
        If rc ¬= 0 Then Do
            gc009 = "HSM Migrate deletion abandoned."
            Signal errorfnd
        End
        x = OUTTRAP('line',1,'NOCONCAT')
        Address TSO "HDELETE" qdsname "PURGE NOWAIT"
        x = OUTTRAP('Off')
        gc009 = line1" to delete migrated dsn."
        Signal errorfnd
    End

/*--------------------------------------------------------------------*/
/* HSM reCall from migration                                          */
/*--------------------------------------------------------------------*/
    If sel = 'HC' Then Do
        x = OUTTRAP('line',1,'NOCONCAT')
        If volume ¬= '' Then unith  = 'UNIT('aunit')'
        Else                 unith  = ''
        Address TSO "HRECALL" qdsname volume unith "NOWAIT"
        x = OUTTRAP('Off')
        gc009 = line1" to recall dataset."
        Signal errorfnd
    End

/*--------------------------------------------------------------------*/
/* HSM Query                                                          */
/*--------------------------------------------------------------------*/
    If zcmd = 'HQ' Then Do
        Address TSO "HQUERY"
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* HSM list (parm of 'E' -> edit session other browse)                */
/*--------------------------------------------------------------------*/
    If sel='HL' Then Do
parms='V'
        If parms/='' Then Do
            If parms='V' Then action='VIEW';Else action='BROWSE'
            dsname=$ztempf()
            xtra="OUTDATASET('"dsname"')"
        End
        Else xtra=
        Address TSO "HLIST LEV("qdsname") BCDS" xtra
/*      Say Address TSO "HLIST LEV("qdsname") BCDS" xtra              */
/*      Address TSO "HLIST LEV("qdsname") BOTH" xtra                  */
        If xtra/='' Then Do
            "ISPEXEC &ACTION DATASET('&DSNAME')"
            x=$Ztempf(dsname,'/D')
        End
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* HSM Migrate                                                        */
/*--------------------------------------------------------------------*/
    If sel = 'HM' Then Do
        If parms = 1 Then ml2 = ''
        Else              ml2 = 'ML2'
        Address TSO "HMIG" qdsname "EXTENDRC" ml2
        If rc = 0 Then gc009 = "Dataset being migrated to level 2."
        Else           gc009 = "Migration of dataset failed."
        Signal errorfnd
    End

/*--------------------------------------------------------------------*/
/* Kill All sequential dataset or member                              */
/*--------------------------------------------------------------------*/
    If sel='KA' Then Do
        If Sysdsn("'"jdsname"'")/='OK' Then Do
            gc009="Dataset '"jdsname"' not found. Kill All abandoned."
            Signal errorfnd
        End
        zwinttl='Kill All Members'
        #popr=10;#popc=23
        rc1=4;member=
        Do While rc1=4
            "CONTROL DISPLAY SAVE"
            "ADDPOP ROW(&#POPR) COLUMN(&#POPC)"
            zcmd=
            "DISPLAY PANEL($MEMBDEL)";rc1=rc;"REMPOP"
            If rc1>4 Then Do
                gc009="Confirmation of member deletion abandoned."
                Iterate
            End
            If zcmd='BROWSE' Then Do
                "BROWSE DATASET('&JDSNAME')"
                "CONTROL DISPLAY REFRESH"
                rc1=4;Iterate
            End
            "CONTROL DISPLAY REFRESH"
        End
        "CONTROL DISPLAY REFRESH"

        If rc1=0 Then Do
            rc=Delallm("'"jdsname"'",,'SUPRESS_MSG','COMPRESS_AFTER')
            If rc=0 Then gc009="Dataset '"jdsname"' emptied of all members",
                               "and compressed for free."
            Else gc009="Dataset '"jdsname"' empty failed with RC="rc"."
        End
        Signal errorfnd
    End

/*--------------------------------------------------------------------*/
/* EnCrypt/decrypt dataset wildcard members                           */
/*--------------------------------------------------------------------*/
    If sel = 'EC' | sel = 'CR' Then Do
        zcode = ''
        Do Forever
            zcmd = ''
            "ISPEXEC DISPLAY PANEL(CSMDSNEC)"
            If rc ¬= 0 Then Do
                gc009 = "Encryption password entry abandoned."
                Signal errorfnd
            End
            If zcmd = "REMEMBER" Then Do
                "ISPEXEC VGET ECZCODER PROFILE"
                zcode = eczcoder
                Iterate
            End
            eczcoder = zcode
            "ISPEXEC VPUT ECZCODER PROFILE"
            If zcmd = 'PDS' | zcmd = '*' | zcode = '*' Then Do
                zcode = Substr(jdsname,Length(jdsname)-7,8,'?')
                Iterate
            End
            If zcode = '' Then Do
                gc009 = "Password cannot be blank."
                "ISPEXEC SETMSG MSG(GC009)"
                Iterate
            End
            If zcmd = '' | zcmd = 'EDIT' Then Leave
            Else Do
                gc009 = "Invalid command."
                "ISPEXEC SETMSG MSG(GC009)"
                Iterate
            End
        End
        jobdesc = 'ZAPIT'
        "ISPEXEC FTOPEN TEMP"
        "ISPEXEC FTINCL CSMDSNEC"
        "ISPEXEC FTCLOSE"
        "ISPEXEC VGET   ZTEMPF"
        If zcmd = 'EDIT' Then Do
            Address TSO "ALLOC DD(ZTEMPF) DS('"ztempf"') OLD REU"
            "ISPEXEC LMINIT DATAID(DATAID) DDNAME(ZTEMPF)"
            umodel = "NOTEZED"
            "ISPEXEC VPUT UMODEL SHARED"
            "ISPEXEC EDIT DATAID(&DATAID) MACRO(UMODEL)"
            "ISPEXEC LMFREE DATAID(&DATAID)"
            Address TSO "FREE DD(ZTEMPF)"
        End
        tempsub = ztempf
        "ISPEXEC VPUT (TEMPSUB) SHARED"
        Address TSO "%TEMPSUB"
        "ISPEXEC VGET (MESSAGE) SHARED"
        gc009 = message
        Signal errorfnd
    End

/*--------------------------------------------------------------------*/
/* Rename dataset                                                     */
/*--------------------------------------------------------------------*/
    If sel = 'R' Then Do
        If SYSDSN(dsname) ¬= 'OK' Then Do
            gc009 = SYSDSN(dsname)"."
            Signal errorfnd
        End
        ndsname = dsname
        "ISPEXEC DISPLAY PANEL(CSMDSNR) CURSOR(NDSNAME)"
        If rc ¬= 0 Then Do
            gc009 = "Rename abandoned."
            Signal errorfnd
        End
        If SUBSTR(ndsname,1,1) = "'" Then ,
             sndsname = SUBSTR(ndsname,2,LENGTH(ndsname)-2)
        Else sndsname = userid'.'ndsname
        Address TSO "RENAME '"sdsname"' '"sndsname"'"
        If rc = 0 Then Do
            gc009 = "'"sdsname"' renamed to '"sndsname"'."
            data = "CSD"p0" = ndsname"
            Interpret data
            "ISPEXEC VPUT (CSD&P0) PROFILE"
            xcsdsn00 = ndsname
        End
        Else gc009 = dsname" rename failed."
        "ISPEXEC VPUT (RCODE SDSNAME SNDSNAME) SHARED"
        Signal errorfnd
    End

/*--------------------------------------------------------------------*/
/* Test for copy of output                                            */
/*--------------------------------------------------------------------*/
    If sel = 'O' | sel = 'OO' Then Do
        class    = 'X'
        sdsfosel = ''
        If sel = 'OO' Then Do
            "ISPEXEC VGET (SDSFOSEL) PROFILE"
            "ISPEXEC DISPLAY PANEL(CSMDSNOO)"
            If rc ¬= 0 Then Signal reposit
            "ISPEXEC VPUT (SDSFOSEL) PROFILE"
          End
        "ISPEXEC TBCREATE DUMMY11 KEYS(JOBNAME) NAMES(STATUS) NOWRITE",
            "REPLACE"
        x = MSG('On')
        x = OUTTRAP('line',100,'NOCONCAT')
        Address TSO "STATUS "sdsfosel
        x = OUTTRAP('Off')
        x = MSG('Off')
        PARSE VAR line1 v1 v2 v3 v4
        If v3 = 'NOT' & v4 = 'FOUND' Then Do
            gc009 = line1
            morel = line0
            Signal errorfnd
        End
        If v2 = 'JOBS' & v3 = 'FOUND+' Then Do
            gc009 = line1
            morel = line0
            Signal errorfnd
        End
        Do i=1 Until i=line0
            job = VALUE('line'i)
            PARSE VAR job v1 jobname status
            "ISPEXEC TBMOD DUMMY11"
        End

        "ISPEXEC TBTOP DUMMY11"
        Do Forever
            sel  = ''
            zcmd = ''
            "ISPEXEC TBDISPL DUMMY11 PANEL(CSMDSNOL)"
            If rc ¬= 0 Then Signal exitout
            If sel = 'S' & status = 'EXECUTING' Then Do
                gc009 = "Cannot output an executing job."
                "ISPEXEC SETMSG MSG(GC009)"
                Iterate
            End
            If zcmd ¬= '' Then jobname = zcmd
            Leave
        End
        If sel ¬= 'D' Then keepj = 'HOLD KEEP'
        Else               keepj = ''
        If parms = 'MOD' | parms1 = 'MOD' | parms2 = 'MOD' Then Do
            If SYSDSN("'"sdsname"'") ¬= 'OK' Then Do
                gc009 = "Cannot use 'MOD' on a non existant dataset."
                    dataset.)
                Signal errorfnd
            End
            tempdsn = jdsname'.TEMPLIST'
            mod     = 'YES'
        End
        Else mod = 'NO'
        If parms = 'BIG' | parms1 = 'BIG' | parms2 = 'BIG' Then Do
            If SYSDSN(qdsname) = 'OK' & sysdsorg ¬= 'PS' Then Do
                gc009 = "Can only pass a 'BIG' parameter for a",
                        "sequential dataset."
                Signal errorfnd
            End
            size = 10
            If DATATYPE(parms1) = 'NUM' Then size = parms1
            If DATATYPE(parms2) = 'NUM' Then size = parms2
            prim = ((size * 1000) % 354)
            sec  = ((size * 1000) % 354) % 5
            If parms = 'MOD' | parms1 = 'MOD' | parms2 = 'MOD' Then Do
                If SYSDSN("'"tempdsn"'") = 'OK' Then ,
                    Address TSO "DELETE '"tempdsn"'"
                Address TSO "ALLOC DA('"tempdsn"') unit("work")",
                    "DSORG(PS) TRACKS SPACE("prim","sec") RECFM(F B A)",
                    "LRECL(133) BLKSIZE(23541)"
                Address TSO "FREE DA('"tempdsn"')"
            End
            Else Do
                If SYSDSN("'"sdsname"'") = 'OK' Then ,
                    Address TSO "DELETE '"sdsname"'"
                Address TSO "ALLOC DA('"sdsname"') unit("work")",
                    "DSORG(PS) TRACKS SPACE("prim","sec") RECFM(F B A)",
                    "LRECL(133) BLKSIZE(23541)"
                Address TSO "FREE DA('"sdsname"')"
            End
        End
        line1 = ''
        x = OUTTRAP('line',1,'NOCONCAT')
        If mod = 'YES' Then Do
            Address TSO "OUTPUT ("jobname") CLASS("class")",
                "PRINT('"tempdsn"') BEGIN "keepj
            "ISPEXEC SELECT CMD(%COPYMEMB &TEMPDSN &SDSNAME MOD",
                "&TRACEO)"
            Address TSO "DELETE '"tempdsn"'"
        End
        Else Address TSO "OUTPUT ("jobname") CLASS("class")",
                "PRINT('"sdsname"') BEGIN "keepj
        rc1 = rc
        x = OUTTRAP('Off')
        If line1 ¬= '' Then Do
            gc009 = line1
            morel = line0
            "ISPEXEC SETMSG MSG(GC009)"
        End
        Call ON ERROR NAME errbr1
        "ISPEXEC EDIT DATASET('&SDSNAME')"
        Call OFF ERROR
exitout:
        "ISPEXEC TBEND DUMMY11"
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* DElete dataset                                                     */
/*--------------------------------------------------------------------*/
    If sel = 'DE' | sel = 'D' Then Do
        If SYSDSN(dsname) ¬= 'OK' Then Do
            gc009 = SYSDSN(dsname)"."
            Signal errorfnd
        End
        If alkvol='' Then alkvol=sysvolume
        If sysdsorg = 'VS' Then Do
            gc009 = "Dataset is a VSAM dataset !!"
            "ISPEXEC SETMSG MSG(GC009)"
            vsamdel = 'CLUSTER PURGE'
            cdate   = '? VSAM ?'
        End
        Else Do
            vsamdel = ''
            cdate = syscreate
        End
        prot1 = 'OUTPUT'
        sel   = 'Delete'
        "ISPEXEC VPUT (alkvol) SHARED"
        "ISPEXEC DISPLAY PANEL(CSMDSNDE)"
        If rc ¬= 0  Then Do
            gc009 = "Delete "dsname" abandoned."
            Signal errorfnd
        End
        x = MSG('On')
        x = OUTTRAP('line',5,'NOCONCAT')
        Address TSO "DELETE" dsname vsamdel
        x = MSG('Off')
        gc009 = line1'.'
        morel = line0
        Signal errorfnd
    End

/*--------------------------------------------------------------------*/
/* UnCatalog dataset                                                  */
/*--------------------------------------------------------------------*/
    If sel = 'UC' Then Do
        dsname = "'"sdsname"'"
        If member ¬= '' Then Do
            gc009 = "Cannot uncatalog a member of a PDS."
            Signal errorfnd
        End
        If SYSDSN(dsname) ¬= 'OK' Then Do
            gc009 = SYSDSN(dsname)'.'
            Signal errorfnd
        End
        If alkvol ¬ = '' Then pack = alkvol
        Else                  pack = sysvolume
        cdate = syscreate
        sel   = 'Uncatalog'
        prot1 = 'OUTPUT'
        "ISPEXEC DISPLAY PANEL(CSMDSNDE)"
        If rc ¬= 0 Then Do
            gc009 = "Uncatalog "dsname" abandoned."
            Signal errorfnd
        End
        x = MSG('Off')
        Address TSO "DELETE" dsname "NOSCRATCH"
        If rc = 0 Then gc009 = "Dataset "dsname" uncataloged."
        Else           gc009 = "Uncatalog "dsname" failed."
        Signal errorfnd
    End

/*--------------------------------------------------------------------*/
/* ReCatalog dataset                                                  */
/*--------------------------------------------------------------------*/
    If sel = 'RC' Then Do
        dsname = qdsname
        If member ¬= '' Then Do
            gc009 = "Cannot re-catalog a member of a PDS."
            Signal errorfnd
        End
        If SYSDSN(dsname) = 'OK' Then Do
            gc009 = "Dataset "dsname" already cataloged."
            Signal errorfnd
        End
        sel   = 'Catalog'
        prot1 = 'INPUT'
        If alkvol ¬= '' Then Do
            pack = alkvol
            "ISPEXEC CONTROL NONDISPL ENTER"
        End
        Else Do
            gc009 = "Enter volume dataset resides on."
            "ISPEXEC SETMSG MSG(GC009)"
        End
        Do Forever
            "ISPEXEC DISPLAY PANEL(CSMDSNDE) CURSOR(PACK)"
            If rc ¬= 0 Then Do
                gc009 = "Recatalog "dsname" abandoned."
                Signal errorfnd
            End
            x = LISTDSI("'SYS1.LINKLIB' VOLUME("pack")")
            If sysreason = 22 Then Do
               gc009 = "Volume not mounted or defined to the system."
               "ISPEXEC SETMSG MSG(GC009)"
               Iterate
            End
            Leave
        End
        x = MSG('Off')
        Address TSO "DEFINE NONVSAM (NAME("dsname") DEVT("aunit")",
            "VOLUMES("pack"))"
        If rc = 0 Then gc009 = "Dataset "dsname" cataloged."
        Else           gc009 = "Cataloging of "dsname" failed."
        If SYSDSN(dsname) ¬= 'OK' Then Do
            Address TSO "DELETE "dsname" NOSCRATCH"
            gc009 = "Cataloging of "dsname" failed."
        End
        Signal errorfnd
    End

/*--------------------------------------------------------------------*/
/* Submit job (JCL)                                                   */
/*--------------------------------------------------------------------*/
    If sel = 'SU' | sel = 'J' Then Do
        If member ¬= '' Then tempsub = jdsname'('member')'
        Else                 tempsub = jdsame
        "ISPEXEC VPUT (TEMPSUB) SHARED"
        Address TSO "%TEMPSUB"
        "ISPEXEC VGET (MESSAGE) SHARED"
        gc009 = message'.'
        "ISPEXEC SETMSG MSG(GC009)"
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Concatenate number '/C'                                            */
/*--------------------------------------------------------------------*/
    If SUBSTR(sel,1,1) = 'C' & DATATYPE(SUBSTR(sel,2,1)) = "NUM" Then Do
        "ISPEXEC VGET (EBCONC#1 EBCONC#2 EBCONC#3 ",
                      "EBCONC#4 EBCONC#5 EBCONC#6",
                      "EBCONC#7 EBCONC#8 EBCONC#9) PROFILE"
        Do i=1 To 10
            var1 = VALUE('ebconc#'i)
            Interpret data
            If var1 = qdsname Then Do
                gc009 = qdsname "already in the concatenation."
                Signal errorfnd
            End
        End
        data = "ebconc#"SUBSTR(sel,2,1)" = qdsname"
        Interpret data
        "ISPEXEC VPUT (EBCONC#"SUBSTR(sel,2,1)") PROFILE"
        gc009 = qdsname "added to concatenation."
        Signal errorfnd
    End

/*--------------------------------------------------------------------*/
/* Test Concatenation action                                          */
/*--------------------------------------------------------------------*/
    If Substr(sel,1,1) = 'C' & ,
       Datatype(Substr(sel,3,1)) = 'NUM' Then Do
        suf = Right(Substr(sel,3,1),2,'0')
        vars = 'ebc$'suf'#1' 'ebc$'suf'#2' 'ebc$'suf'#3',
               'ebc$'suf'#4',
               'ebc$'suf'##'
        "ISPEXEC VGET ("vars") PROFILE"
        ccact = Substr(sel,2,1)
        If Value('ebc$'suf'##') = '' & ccact ¬= 'D' Then Do
            gc009 = "No datasets in concatenation '"suf"'.",
                    "Use 'CD' to display & correct."
            zcmd  = 'CD'suf+0
/*          p0    = '?'                                               */
            szcmd = zcmd
            f00   = zcmd
            "ISPEXEC CONTROL NONDISPL ENTER"
            Signal csmdsn
        End
/*--------------------------------------------------------------------*/
/* Test Concatenation Edit/Browse                                     */
/*--------------------------------------------------------------------*/
        If ccact = 'B' | ccact = 'E' Then Do
            If ccact = 'B' Then action = 'BROWSE'
            Else                action = 'EDIT'
            ebc$cat = ''
            Do i=1 To 4
                dsn = VALUE("ebc$"suf"#"i)
                If dsn = '' | dsn = "EBC$"suf"#"i Then Iterate
                If SYSDSN(dsn) ¬= 'OK' Then Do
                    gc009 = "Dataset "dsn" in concatenation is",
                          "uncatalogued. Use '/CD' to display &",
                          "correct."
                    zcmd  = 'CD'suf+0
                    szcmd = zcmd
                    "ISPEXEC CONTROL NONDISPL ENTER"
                    Signal csmdsn
                End
                Else ebc$cat = ebc$cat dsn
            End
            If ebc$cat = '' Then Do
                gc009 = "Must concatenate before you can '"zcmd"'."
                Signal errorfnd
            End
            ddname = '$$'Time('s')

            Address TSO "ALLOC F("ddname") DA("ebc$cat") SHR REU"
            "ISPEXEC LMINIT DATAID(DATA1) DDNAME(&DDNAME)"
            rc1 = rc
            If rc1 ¬= 0 Then Do
                Address TSO "FREE F("ddname")"
                "ISPEXEC SETMSG MSG(&ZERRMSG)"
                Signal reposit
            End
            Call ON ERROR NAME errbr1
            "ISPEXEC &ACTION DATAID(&DATA1)"
            Call OFF ERROR
            "ISPEXEC LMFREE DATAID(&DATA1)"
            Address TSO "FREE F("ddname")"
            Signal reposit
        End

/*--------------------------------------------------------------------*/
/* Concatenation Display                                              */
/*--------------------------------------------------------------------*/
        If ccact = 'D' Then Do
            Do i=1 To 4
                data = "ebconc#"i" = ebc$"suf"#"i
                Interpret data
            End
            curs = "ZCMD"
            Do Forever
                zcmd = ''
                "ISPEXEC DISPLAY PANEL(CSMDSNC#) CURSOR(&CURS)"
                If rc ¬= 0 Then Leave
                ctr = 0
                Do i=1 To 4
                    data = "ebc$"suf"#"i" = ebconc#"i
                    Interpret data
                    dsn = VALUE("ebc$"suf"#"i)
                    If dsn = '' | dsn = "EBC$"suf"#"i Then Iterate
                    If SYSDSN(dsn) ¬= 'OK' Then Do
                        gc009 = SYSDSN(dsn)'.'
                        "ISPEXEC SETMSG MSG(GC009)"
                        curs  = 'EBCONC#'i
                        Leave
                    End
                    ctr = ctr + 1
                End
                data = 'ebc$'suf'## = ctr'
                Interpret data
            End
            "ISPEXEC VPUT ("vars") PROFILE"
            Signal reposit
        End

/*--------------------------------------------------------------------*/
/* Concatenation Clear                                                */
/*--------------------------------------------------------------------*/
        If ccact = 'C' Then Do
            Do i=1 To 4
                data = "ebconc#"i" = ebc$"suf"#"i
                Interpret data
            End
            gc009 = "Hit <ENTER> to confirm clearance or END PF key to",
                    "abandon."
            "ISPEXEC DISPLAY PANEL(CSMDSNC#) CURSOR(ZCMD) MSG(GC009)"
            If rc = 0 Then Do
                Do i=1 To 4
                    data = "ebc$"suf"#"i" = ''"
                    Interpret data
                End
                "ISPEXEC VPUT ("vars") PROFILE"
                gc009 = "Concatenation group '"suf"' cleared."
            End
            Else ,
                gc009 = "Concatenation group '"suf"' clearance aborted."
            Signal errorfnd
        End

/*--------------------------------------------------------------------*/
/* COncatenate dataset                                                */
/*--------------------------------------------------------------------*/
        If ccact = 'O' Then Do
            update = 'N'
            Do i=1 To 4
                var1 = Value('ebc$'suf'#'i)
                If var1 = qdsname Then Do
                    gc009 = qdsname" already in concatenation for",
                            "group '"suf"'."
                    Signal errorfnd
                End
                If var1 = '' | var1 = "EBC$"suf"#"i Then Do
                    data = "ebc$"suf"#"i" = "qdsname
                    Interpret data
                    update = 'Y'
                End
            End
            If update = 'N' Then ,
                gc009 = "Already 4 datasets concatenated."
            Else Do
                "ISPEXEC VPUT ("vars") PROFILE"
                gc009 = qdsname" added to concatenation."
            End
            Signal errorfnd
        End


        gc009 = "Invalid 'Cxx' option."
        Signal errorfnd

    End
/*--------------------------------------------------------------------*/
/* SMP/E maintenance                                                  */
/*--------------------------------------------------------------------*/
    If sel = 'SM' &  SUBSTR(userid,1,sysprogl) = sysprog Then Do
        If listdsi_rc ¬= 0 Then Do
            gc009 = listdsi_msg2
            Signal errorfnd
        End
        dsname = jdsname
        "ISPEXEC VPUT (DSNAME F00) SHARED"
        Address TSO "%SMPEMAIN "traceo parms
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* DataSet information                                                */
/*--------------------------------------------------------------------*/
    If sel = 'DI' Then Do
        Address TSO "%DSINFOR" qdsname alkvol
        "ISPEXEC CONTROL DISPLAY REFRESH"
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Search For string (ISPF option 3.14)                               */
/*--------------------------------------------------------------------*/
    If sel = 'SF' Then Do
        alk32enq = 'SF'
        alk32dsn = "'"jdsname"(*)'"
        "ISPEXEC VPUT (PARMS ALK32DSN ALK32ENQ) SHARED"
/*      "ISPEXEC CONTROL DISPLAY ENTER"                               */
        "ISPEXEC SELECT PGM(ISRSFM)"
        alk32enq = ''
        alk32dsn = ''
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* ZAP dataset                                                        */
/*--------------------------------------------------------------------*/
    If sel = 'ZA' Then Do
        Address TSO zap qdsname volume
        "ISPEXEC CONTROL DISPLAY REFRESH"
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Zap Vtoc                                                           */
/*--------------------------------------------------------------------*/
    If sel = 'VZ' Then Do
        Address TSO "%VZ" qdsname alkvol
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* PC transfer                                                        */
/*--------------------------------------------------------------------*/
    If sel = 'PC' Then Do
        Address TSO "%PCTRAN" jdsname parms parm1 parm2
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* List Modified Dates                                                */
/*--------------------------------------------------------------------*/
    If sel = 'LM' Then Do
        If listdsi_rc ¬= 0 Then Do
            gc009 = listdsi_msg2
            Signal errorfnd
        End
        "ISPEXEC SELECT CMD(%LMD "qdsname")"
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* ASM2 Arhive or Backup                                              */
/*--------------------------------------------------------------------*/
    If sel = 'BI' | sel = 'AI' Then Do
        If sel = 'AI' Then aiv = volume
        Else               aiv = ''
        Address TSO "CLEAR"
        Address TSO "$"sel "DSNAME("qsname")" aiv
        "ISPEXEC CONTROL DISPLAY REFRESH"
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* ASM2 Restore Arhive or Backup                                      */
/*--------------------------------------------------------------------*/
    If sel = 'RB' | sel = 'RA' Then Do
        csr1 = 'VER'
        volser = alkvol
        ver = 0
        unq = 'Y'
        If sel = 'RB' Then Do
            action  = 'Restore from backup'
            ndsname = "'"jdsname".TEMP'"
        End
        Else Do
            action  = 'Reload from archive'
            ndsname = ''
        End
        gc009 = "Change version number if different version required."
        "ISPEXEC SETMSG MSG(GC009)"
        Do Forever
            zcmd = ''
            "ISPEXEC DISPLAY PANEL(CSMDSNRA) CURSOR(&CSR1)"
            If rc ¬= 0 Then Do
                gc009 = "'"sel"' option abandoned."
                Signal errorfnd
            End
            If volser ¬= '' Then Do
                x = LISTDSI("'SYS1.LINKLIB' VOLUME("volser")")
                If sysreason = 22 Then Do
                   gc009 = "Volume not mounted or defined to the",
                           " system."
                   "ISPEXEC SETMSG MSG(GC009)"
                   csr1 = 'VOLSER'
                   Iterate
                End
                newvol = 'NEWVOL('volser')'
            End
            Leave
        End
        newvol = ''
        If ndsname ¬= '' Then Do
            If SUBSTR(ndsname,1,1) = "'" Then ,
                 ndsname = SUBSTR(ndsname,2,LENGTH(ndsname)-2)
            Else ndsname = userid'.'ndsname)
            newname = "NEWNAME('"ndsname"')"
        End
        Else newname = ''
        If rep = 'Y' Then force = 'FORCE'
        Else              force = ''
        If ver ¬= 0  Then ver   = '('ver')'
        Else              ver   = ''
        If &zcmd = 'EDIT' Then Do
          Say "$R"asm2o" DSNAME('"jdsname||ver"')" newname newvol force
          Say "Enter 'N' if you do not want command executed >"
          Pull ans
          "ISPEXEC CONTROL DISPLAY REFRESH"
          If ans = 'N' Then Do
             gc009 = "Operation abandoned"
             Signal errorfnd
          End
        End
        Address TSO ,
            "$R"asm2o" DSNAME('"jdsname||ver"')" newname newvol force
        If unq = 'Y' Then Do
            x = OUTTRAP('line',1,'NOCONCAT')
            Address TSO "Q"asm2o
            x = OUTTRAP('Off')
            gc009 = line1
            morel = line0
        End
        Else gc009 = ''
        "ISPEXEC CONTROL DISPLAY REFRESH"
        Signal errorfnd
    End

/*--------------------------------------------------------------------*/
/* Execute as a Tso command                                           */
/*--------------------------------------------------------------------*/
    If sel = 'T' Then Do
        Address TSO dsname traceo parms
        Signal reposit
    End

/*--------------------------------------------------------------------*/
/* Signal as an invalid option                                        */
/*--------------------------------------------------------------------*/
    gc009 = "Invalid option '"sel"'."
    retcode = 4
    Signal errorfnd


errorfnd:
    "ISPEXEC SETMSG MSG(GC009)"

reposit:
/*  Trace off                                                         */

    If retlab = 'RETURN' Then Return retcode
    data = "Signal "retlab
    Interpret data

notatsit:
    gc009 = "'"sel"' inv at "site"."
    Signal errorfnd

invstmgr:
    gc009 = "'"sel"' inv at "site" as '"stmgr"' job not executing."
    Signal errorfnd

/*--------------------------------------------------------------------*/
/* Commond find routine to find an entry in the Multi-Procs panels    */
/*--------------------------------------------------------------------*/
find1:
    "ISPEXEC VPUT (STRING CSMPAN# PARMS NOOFPANS CSDFLD&CSMPAN) SHARED"
    Address TSO "%CSMDSNFD" traceo
    "ISPEXEC VGET (DSNAME RCODE CSMPAN# LINE# SUFF#) SHARED"
    If rcode = 0 Then Do
        If csmdsncp = "ASIS" Then fcsr = "F"line#
        csmpan = SUBSTR(string,csmpan#,1)
        data = "csdfld"csmpan "= suff#"
        Interpret data
        "ISPEXEC VGET (CSD&SUFF#) PROFILE"
        xcsdsn00 = dsname
        msg1     = ''
    End
    Else msg1 = "Not "
    gc009 = "String '"parms"' "||msg1||"found."
    Signal ret9

/*--------------------------------------------------------------------*/
/* Common move routine                                                */
/*--------------------------------------------------------------------*/
movertn:
    If sysdsorg = 'VS' | sysdsorg = 'PS' Then Do
        If sel = 'M' | sel = 'MA' Then Do
            gc009 = "Invalid DSORG for move operation."
            Signal errorfnd
        End
        If sysdsorg = 'VS' Then Do
            "ISPEXEC VPUT (JDSNAME SEL) SHARED"
            Address TSO "%CSMDSNCV "traceo
            Signal reposit
        End
    End
    alk33enq = 'Y'
    alk33ds1 = dsname
    "ISPEXEC VPUT (ALK33DS1 ALK33DS2 ALK33DS3 ALK33OPT ALK33ENQ) SHARED"
    "ISPEXEC SELECT PGM(ISRUMC)"
    rc1 = rc
    alk33opt = ''
    alk33enq = ''
    alk33dsn = ''
    alk33dsn = ''
    "ISPEXEC VPUT (ALK33DS1 ALK33DS2 ALK33DS3 ALK33OPT ALK33ENQ) SHARED"
    Signal reposit

/*====================================================================*/
errbr1:
    rc1 = rc
    Call OFF ERROR
    If zerrsm = "INVALID TYPE OF DATA SET" & ,
        sel = "B" Then Signal review1
    If rc1 > 4 Then "ISPEXEC SETMSG MSG(&ZERRMSG)"
    Else rc1 = 0
    Return
/*====================================================================*/

Sam_recover:
    Address TSO
    'NEWSTACK'

    test = 'N'

    Queue '//TSGAKX JOB ,SAMS,MSGCLASS=X,'
    Queue '//         NOTIFY=&SYSUID'
    Queue '//         EXEC  RESTORE,'
    Queue "//           S='*'"
    Queue '//SYSIN  DD  *'
    Queue ' RESTORE DSN='jdsname','
    If gen > 0 Then,
        Queue '     VERSION='gen','
    If volser /= '' Then,
    Queue '     VOLUME='volser','
    If jdsname /= stodsn Then,
        Queue '     NEWNAME='stodsn
    Queue "/*"
    Queue "ZZ"

    If test /= 'N' Then Do
        k = Queued()
        Do i=1 to k
            PARSE PULL line
            Say SUBSTR(line,1,79)
        End
        'DELSTACK'
        Address ISPEXEC
        Return 0
    End

    x = Msg('On')
    x = Outtrap('line.',5,'NOCONCAT')
    Address TSO "SUBMIT * JOBCHAR("id") END(ZZ)"
    'DELSTACK'
    x = Msg('Off')
    Address ISPEXEC
    line.1 = line.2
    line.2 = line.3
    line.3 = line.4
    line.4 = line.5

    Return 0
