/*--------------------------ooo00 REXX 00ooo--------------------------*/
/*                                                                    */
/* Move dataset to a different volume.                                */
/*                                                                    */
/* Parameters:                                                        */
/* Keyword:                                                           */
/*   /R        - Rename                                               */
/* Positional:                                                        */
/*   dsname    - Dataset name                                         */
/*                                                                    */
/*--------------------------------------------------------------------*/
CSMDSNMV:csmdsnmv_ver='2.02'
    ARG dfdss;Address ISPEXEC;"CONTROL ERRORS RETURN"


ini1:
    "CONTROL ERRORS CANCEL"
    Parse Upper VAR dfdss parm#
    Call parse_parms
    If Wordpos(Word(dfdss,1),'/H HELP /? ?')>0 Then Do
        "SELECT PGM(ISPTUTOR) PARM(HNOHELP)"
        Exit
    End

    dfdss=parm#
    If dfdss='' Then dfdss='N'
    "VGET dsname SHARED";"VGET (mvpkvol mvdfdss) PROFILE"
    If mvdfdss='' Then mvdfdss='N'

    hlq=$alkhlq();userid=Userid()
    volume=mvpkvol;csr1='VOLUME'
/*  unit='SYSALLDA'                                                   */
/*  stc='NSC'                                                         */
/*  mgc='NMC'                                                         */
    stc=$ALKUVOL('STC')
    mgc=$ALKUVOL('MGC')
    unit=$ALKUVOL('UNIT')
    Parse Value 'Y N N N' With catit edjcl lookvsam gdgdsn msg
    v1='def_ex def_hd def_ac def_bb def_vm'
    Interpret "Parse Value $alkjc(v1) With xcl mcl acct ."
    gdgpat=hlq'.GDG.PATTERN'
    If Sysdsn(dsname)/='OK' Then Do
        zedlmsg=Sysdsn(dsname)'.'
        Signal exi1
    End
    If Substr(dsname,1,1)="'" Then,
        dsn=Strip(dsname,,"'");Else dsn=userid'.'dsname
    dsno=dsn'.TEMP';sdsno=dsno
    dsno="'"dsno"'";dsn="'"dsn"'"
    If Sysdsn(dsno)='OK' Then Do
        exist='Y';msg='GC001'
    End
    Else exist='N'
    If rename Then exist='Y'
    If Length(dsno)>46 Then msg='GC002'
    x=Listdsi(dsn "DIRECTORY")
    ovolume=sysvolume;nunit=sysunit;devt=sysunit

scr1:
    zcmd=
    "ISPEXEC DISPLAY PANEL(CSMDSNMP) CURSOR(&CSR1)"
    If rc/=0 Then Exit
    If zcmd='PERM' | volume='PERM' Then Do
        volume=$alkuvol('PDV')
        zedlmsg="Volume '"volume"' set with PERM command."
        "ISPEXEC SETMSG MSG(ISRZ001)"
        csr1='VOLUME'
        Signal scr1
    End
    msg=
    If Substr(dsno,1,1)="'" Then dsno=Strip(dsno,,"'")
    Else dsno=userid'.'dsno
    If sdsno/=dsno Then Do
        If Sysdsn("'"dsno"'")='OK' Then Do
            exist='Y'
            csr1='FILEB'
            sdsno=dsno
            msg='GC001'
            Signal scr1
        End
    End
    If Index(dsn,'(')>0 Then Do
        zedlmsg="Cannot move member to new pack."
        Signal exi1
    End

    x=Listdsi("'SYS1.LINKLIB' VOLUME("volume")")
    If sysreason=22 Then Do
        zedlmsg="Volume '"volume"' not mounted or defined to the system."
        "ISPEXEC SETMSG MSG(ISRZ001)"
        csr1='VOLUME'
        Signal scr1
    End
    If mvdfdss='Y' Then Do
        If sysdsorg/='VS' Then catalog="RECATALOG(*)"
        Else catalog="CATALOG"
        Signal vsamreta
    End

vsamreta:
    prsys1=
    Parse VAR dsn "'" pref '.' rest "'"
    If pref='SYS1' Then prsys1="PROCESS(SYS1)                -"
    odsn=pref'.'rest
    prognm='PACK MOVE'
    Signal on Syntax Name error_off_alkjcpg
    x=$Alkjcpg(prognm);If x/='' Then prognm=x
error_off_alkjcpg:Signal off Syntax
    fileb=Strip(fileb,,"'")
    ztempf=$ztempf(,,'/FT')
    "ISPEXEC FTOPEN"
    "ISPEXEC FTINCL CSMDSNMS"
    "ISPEXEC FTCLOSE"

    If Wordpos(zcmd,'EDIT ED E /EDIT /E')>0 Then Do
        Address TSO "ALLOC DD(ZTEMPF) DS('"ztempf"') OLD REU"
        "LMINIT DATAID(DATAID) DDNAME(ZTEMPF)"
        umodel='NOTEZED'
        "VPUT UMODEL SHARED"
        "EDIT DATAID(&DATAID) MACRO(UMODEL)"
        "LMFREE DATAID(&DATAID)"
        Address TSO "FREE DD(ZTEMPF)"
    End

    tempsub=ztempf
    "VPUT (TEMPSUB) SHARED"
    Address TSO "%TEMPSUB"
    "ISPEXEC VGET (JOBNUMB JOBNAME MESSAGE) SHARED"
    x=$ztempf(ztempf,'/D','FT')
    zedlmsg=message'.'

exi1:
    "SETMSG MSG(ISRZ001)"
    mvpkvol=volume
    "VPUT (MVPKVOL MVDFDSS) PROFILE"
    Exit

/*--------------------------------------------------------------------*/
/* Parse parameters                                                   */
/*--------------------------------------------------------------------*/
parse_parms:

    #tr=parse_cons('TRACE','R','O')
    If #tr='O' Then #tr=parse_cons('/T','R','O',2)
    x=Trace(#tr)

    px=parse_varb('/B','???');If px='???' Then px=default
    keep=parse_cons('/K','*','NULL')
    nonx=parse_cons('/X','*','/NX')
    rename=parse_cons('/R',1,0)

    Parse VAR parm# parm# parm#_rest

    Return 0

err01:
    Address ISPEXEC "SETMSG MSG(ISRZ001)";Exit 8

/*--------------------------------------------------------------------*/
/* Parse string 'parm#' with 'mask'. Result set to 'N' if mask not    */
/* found or set to 'Y' if found. Can pass positive/negative result    */
/* substitution as the 2 and 3 parameter. Defaults are Y and N.       */
/* Can set null return value for either by passing 'NULL'. Can set    */
/* either to the original mask by entering '*' (suggest 'NULL' for the*/
/* other value).                                                      */
/* Can pass a mask length as fourth parameter. Comma delimit to pad   */
/* out if prior parameters are not supplied.                          */
/* Can pass 'WORD' as fourth parameter to return the word that        */
/* contain that mask (word does not need to start with mask).         */
/*--------------------------------------------------------------------*/
parse_cons: Procedure Expose parm#;Arg mask,posr,negr,maskl
    If posr=''     Then posr='Y' ;If negr=''     Then negr='N'
    If posr='NULL' Then posr=''  ;If negr='NULL' Then negr=''
    If posr='*'    Then posr=mask;If negr='*'    Then negr=mask
    Select
        When (maskl='WORD') Then Do
            y#=0;xxx=parm#
            Do i=1 To Words(xxx)
                Parse VAR xxx x_x xxx
                If Index(x_x,mask)>0 Then Do;y#=i;posr=x_x;Leave;End
            End
        End
        When (Datatype(maskl,'W')) Then Do
            y#=0;xxx=parm#
            Do i=1 To Words(xxx)
                Parse VAR xxx x_x xxx
                If Substr(x_x,1,maskl)=Substr(mask,1,maskl) Then Do
                    y#=i;Leave
                End
            End
        End
        Otherwise y#=Wordpos(mask,parm#)
    End
    If y#>0 Then Do;parm#=Delword(parm#,y#,1);Return posr;End
    Return negr

/*--------------------------------------------------------------------*/
/* Parse string 'parm#' with 'mask'. Result set to 'N' if mask not    */
/* found or set to next space delimeted value immediately following   */
/* the mask (NULLs is a valid value).                                 */
/* Can pass positive/negative result substitution as the 2 parameter. */
/* Can pass 'NUM' as third parameter to check for numerics and return */
/* negative result if not numeric.                                    */
/*--------------------------------------------------------------------*/
parse_varb: Procedure Expose parm#;Arg mask,negr,dt
    If negr='' Then negr='N'
    parm##=' 'parm#;m#=' 'mask;y#=Index(parm##,m#)
    If y# > 0 Then Do
        If Substr(parm##,y#+Length(m#),1)='' Then Do
            px='';data="Parse VAR parm## p1 '"m#"' p2"
        End
        Else data="Parse VAR parm## p1 '"m#"' px p2"
        Interpret data
        parm#=Strip(p1) Strip(p2)
        If dt='NUM' & Datatype(px)/='NUM' Then Return negr
        Else                                   Return px
    End
    Return negr

