/*--------------------------ooo00 REXX 00ooo--------------------------*/
/*                                                                    */
/*  Generate JCL to delete/create a VSAM dataset from a supplied      */
/*  model.                                                            */
/*  Parameters may be changed through screen displays or during edit  */
/*  session of the JCL.                                               */
/*  There is an option to copy all or part of the model dataset into  */
/*  the new dataset.                                                  */
/*                                                                    */
/*--------------------------------------------------------------------*/
    Address ISPEXEC;"CONTROL ERRORS RETURN";ima_macro=0
    Arg parm#;If parm#/='' Then Signal byp1
    "ISREDIT MACRO (parm#) NOPROCESS";If rc=0 Then ima_macro=1

byp1:
/*  "CONTROL ERRORS CANCEL"                                           */

ini1:
    zedsmsg=
    "VGET (csmvcmac) SHARED"
    If csmvcmac=1 Then Signal Macro_1

    usemodel='Y'

    Parse Upper VAR parm# parm1 parm2 parm3;Parse SOURCE . . xcmd .
    userid=Userid()
    hlq0=$alkhlq();hlq1=hlq0
    unit='SYSALLDA';sysda='SYSDA'
    loadlib=$alkload()
    dataset=$ztempf('NAME');x_x=Time('s');dd='$D'x_x
    Address TSO "ALLOC F("dd") DA('"dataset"') NEW SPACE(5,5)",
                "RECFM(V B) LRECL(125) BLKSIZE(19029) TRACKS",
                "UNIT("sysda") CATALOG REUSE"
    "VGET (RMODEL RDSNAME ROPDS RIPDS RVOLUME) PROFILE"
    "VGET (DSNAME F00 JDSNAME) SHARED"
    If f00='' Then Do
        sdsname=rdsname;smodel=rmodel
    End
    Else Do
        If Substr(dsname,1,1)/="'" Then sdsname=dsname'.NEW'
        Else
             sdsname = "'"Strip(dsname,,"'")".NEW'"
        If f00='VC' Then smodel=dsname
        If f00='CV' Then smodel=jdsname
    End
    sopds   =ropds
    volume  =rvolume
    csr1    ='SDSNAME'
    cpo1    =Length(sdsname)-3
    replace ='N'
    genunit ='N'
    fulljcl ='J'
    repro   ='ALL'
    ndevt   =
    volume  =
    dsntype =
    mcl     ='X'
    xcl     ='A'
    prot3   ='INPUT'
    If smodel/='' Then flatdsn="'"Strip(smodel,,"'")".FLAT'"

scr1:zcmd=
    "DISPLAY PANEL(VSAMCRE) CURSOR(&CSR1) CSRPOS(&CPO1)"
    If rc/=0 Then Signal ext1
    csr1=;cpo1=1

con1:
    If zcmd='TRACE' Then Do
        If zcmd1='OFF' Then Do;trace='N';Trace Off;End
        Else Do;trace='Y';Trace R;End
        Signal scr1
    End
    opds=sopds
    If opds/='' Then Do
        If Substr(opds,1,1)="'" Then opds=Strip(opds,,"'");Else opds=hlq1'.'opds
        If Sysdsn("'"opds"'")/='OK' Then Do
            zedlmsg="'"opds"' dataset not found."
            "SETMSG MSG(ISRZ001)"
            csr1='SOPDS'
            Signal scr1
        End
    End
    If zcmd='EP' Then Do
        "EDIT DATASET('&OPDS')"
        Signal scr1
    End
    If zcmd='EM' Then Do
        If member='' Then Do
            zedlmsg="Member name must be entered for 'EM' option."
            "SETMSG MSG(ISRZ001)"
            csr1='MEMBER'
            Signal scr1
        End
        "EDIT DATASET('&OPDS(&MEMBER)')"
        Signal scr1
    End

    dsname=sdsname
    If Substr(dsname,1,1)="'" Then dsname=Strip(dsname,,"'")
    Else dsname=hlq1'.'dsname

    If volume='' Then ndevt=
    Else Do
        If genunit='N' Then Do
            x=Listdsi("'SYS1.LINKLIB' VOLUME("volume")")
            If sysreason=22 Then Do
                zedlmsg="Volume '"volume"' not mounted or defined to",
                        "the system."
                "SETMSG MSG(ISRZ001)"
                csr1='VOLUME'
                Signal scr1
            End
        End
        ndevt=unit
    End

    If smodel='' Then smodel=dsname
    model=smodel
    If Substr(model,1,1)/="'" Then model="'"hlq1"."model"'"
    If Sysdsn(model)/='OK' Then Do
        zedlmsg=smodel"dataset not found."
        "SETMSG MSG(ISRZ001)"
        csr1='SMODEL'
        Signal scr1
    End
    If model=dsname & repro/=0 Then Do
        zedlmsg="Cannot copy data as created datest is same as the",
                "model."
        "SETMSG MSG(ISRZ001)"
        csr1='REPRO'
        Signal scr1
    End
    If member/='' Then ,
        If Sysdsn("'"opds"("member")'") = 'OK' & replace='N' Then Do
            zedlmsg="Member exists. Mmust specify replace=Y to",
                    "continue."
            "SETMSG MSG(ISRZ001)"
            csr1='REPLACE'
            Signal scr1
        End
    If zcmd='DM' Then Do
        If dmc='Y' Then Signal dmc1
        Else Do
            zedlmsg="You have not processed a dataset to re-display",
                    "model panel."
            "SETMSG MSG(ISRZ001)"
            Signal scr1
        End
    End

    If dsntype='P' Then Signal path
    If dsntype='B' Then Signal path

    x=Msg('On')
    Parse VAR dsname alias '.' .
    adsn="'"alias'.$'x_x'$.$'x_x'$.$'x_x'$'"'"
    If Sysdsn(adsn)/='OK' Then Do
        Address TSO "ALLOC DSN("adsn") NEW CATALOG TRACKS SPACE(0,0)",
            "UNIT(SYSALLDA)"
        delafta='Y'
    End
    Else delafta='N'

    x=Msg('On');x=Outtrap('line.',2,'NOCONCAT')
    Address TSO "LISTC ENT("adsn")";rc1=rc
    x=Outtrap('Off');x=Msg('Off')

    PARSE VAR line.2 v1 v2 catname .
    catname="'"catname"'"
    If delafta='Y' Then Do
        Address TSO "FREE DSN("adsn")"
        Address TSO "DELETE" adsn
    End

    x=Msg('On');x=Outtrap('line',5,'NOCONCAT')
    Address TSO "LISTC ENT("model") OFILE("dd") ALL";rc2=rc
    x=Outtrap('Off');x=Msg('Off')
/*
    If rc2 > 0 Then Do
        zedlmsg = "LISTCAT returned RC="rc2". Look at listcat output",
                "more carefully."
        "SETMSG MSG(ISRZ001)"
        "EDIT DATASET('&DATASET')"
    End
*/
    If zcmd='LC' Then Do
        "EDIT DATASET('&DATASET')"
        Signal scr1
    End

prs1:
    e_ass='N'
    "VPUT (NDEVT) SHARED"
    "EDIT DATASET('&DATASET') MACRO(VSAMCRM1)"
    "VGET (VSAMVAR) SHARED";"VGET (&VSAMVAR) SHARED"

    sdshro=dshro
    sishro=ishro
    orecsz='('darecl dmrecl')'
    okeys ='('dkeyl dkeyp')'
    dfree ='('dfreei dfreea')'

dmc1:
    If volume='' Then volume=ovolume
    Else Do
        devt=ndevt
        dvolume=volume;ivolume=volume
    End

    dataname="'"dsname".DATA'"
    otype2='(DATA)'
    dshro=sdshro
    If index='Y' Then Do
        ishro    =sishro
        indxname ="'"dsname".INDEX'"
        otype3   ='(INDEX)'
    End
    Else Do
        indxname=
        otype3  =
        ishro   =
    End
    dsname="'"dsname"'"

    dsplit='('dcaspl'/'dcispl')'
    isplit='('icaspl'/'icispl')'
    If ass0/='' Then asscnt = asscnt
    csr2=
    zedlmsg="Hit <ENTER> to generate JCL or END PF key to bypass",
            "JCL generation......... If you change any parameters, ensure",
            "you set 'Use it = N' next to the model before hitting",
            "<ENTER>."
    "SETMSG MSG(ISRZ001)"

scr2:
    prot1='INPUT'
    "DISPLAY PANEL(VSAMCRE1) CURSOR(&CSR2)"
    rc1=rc
    dmc='Y'
    If rc1/=0 Then Do
        zedlmsg="Previous screen abandoned, JCL not generated."
        "SETMSG MSG(ISRZ001)"
        Signal scr1
    End
    If zcmd/='A' Then Signal path

scr3:
    zcmd=
    If e_ass/='Y' Then Do
        Call build_ass
        e_ass='Y'
    End
    "DISPLAY PANEL(VSAMCREA)"
    Signal scr2

path:
    If dcisz='' Then xcisz=0;Else xcisz=dcisz
    rem=xcisz//512
    If rem/=0 Then csr2='DCISZ'
    If rem=0 Then Do
        If icisz='' Then xcisz=0;Else xcisz=icisz
        rem=xcisz//512
        If rem/=0 Then csr2='ICISZ'
    End
    If rem/=0 Then Do
       If zcmd/='FORCE' Then Do
          "SETMSG MSG(zedlmsgC)"                      /* SET IN PANEL */
          Signal scr2
        End
    End
    If genunit/='Y' Then Do
        x=Listdsi("'SYS1.LINKLIB' VOLUME("volume")")
        If sysreason=22 Then Do
            zedlmsg="Volume '"volume"' not mounted or defined to the",
                    "system."
           "SETMSG MSG(ISRZ001)"
           csr2='VOLUME'
           Signal scr2
        End
    End
    If rc2>0 Then Do
        zedlmsg="LISTCAT returned RC="rc2". look at 'LISTCAT'",
                    "output more carefully."
        "SETMSG MSG(ISRZ001)"
        rc2=0
    End
    csr2=;sysuid=userid
    dsname=Strip(dsname,,"'")
    dataname=Strip(dataname,,"'")
    indxname=Strip(indxname,,"'")
    modeluq=Strip(model,,"'")
    If flatfile='Y' Then DO
        flatdsnu=Strip(flatdsn,,"'")
        usemodel='N'
    End
    If member/='' Then Do
        Address TSO "ALLOC F(ISPFILE) DA('"opds"') SHR REUSE"
        "FTOPEN"
        "FTINCL VSAMCRES"
        "FTCLOSE NAME(&MEMBER)"
        "EDIT DATASET('&OPDS(&MEMBER)')"
    End
    Else Do
        "FTOPEN TEMP"
        "FTINCL VSAMCRES"
        "FTCLOSE"
        "VGET ZTEMPF"
        Address TSO "ALLOC DD(ZTEMPF) DS('"ztempf"') OLD REU"
        "LMINIT DATAID(DATAID) DDNAME(ZTEMPF)"
        csmvcmac=1
        "VPUT (csmvcmac) SHARED"
        "EDIT DATAID(&DATAID) MACRO("xcmd")"
        "LMFREE DATAID(&DATAID)"
        Address TSO "FREE DD(ZTEMPF)"
    End
    Signal scr1

ext1:
    Address TSO "FREE F(ISPFILE "dd")"
    Address TSO "DELETE '"dataset"'"
    rdsname=sdsname
    ropds  =sopds
    rvolume=volume
    rmodel =smodel
    "VPUT (RMODEL RDSNAME ROPDS RIPDS RVOLUME) PROFILE"
    Return 0

build_ass:
    @_ass=ass1 ass2 ass3 ass4 ass5 ass6 ass7 ass8 ass9 ass10
    i=1
    x=Msg('On');x=Outtrap('line.',500,'NOCONCAT')
    Do Forever
        Parse VAR @_ass ass @_ass
        x=Listdsi("'"dsname"' NORECALL")
        x='00'x || Substr(ass,1,47) sysvolume,
          '      ' sysunit
        Interpret 'ass'i '= x'
        Parse VAR ass 'AIX------' dsname .
        Address TSO "LISTC ENT('"dsname"')"
        Do j=1 To line.0
            Parse VAR line.j v1 .
            If v1='PATH' Then Do
                i=i+1
                Parse VAR line.j . . path
                x=Listdsi("'"path"' NORECALL")
                x='00'x || Substr('PATH----'path,1,47) sysvolume,
                  '      ' sysunit
                Interpret 'ass'i '= x'
                Leave
            End
        End
        If @_ass='' Then Leave
        i=i+1
    End
    x=Msg('Off');x=Outtrap('Off')
    asscnt=i

    Return 0

Macro_1:
    csmvcmac=
    "VPUT (csmvcmac) SHARED"
n_st=mark(2)                                /* Mark next line         */
/*
    Hello &CNAME..

    VSAM create utility:

     This is either the JCL required to create the dataset or the
     SYSIN parameter required to create the dataset.
     If it's the full JCL, you may create the dataset by entering
     SUBMIT on the command line and hitting <ENTER>.
     If it's the SYSIN parameters only, suggest you copy this into
     a PDS as it's useless on it's own.
     In either case, the data will be lost when you end this edit
     session.

     If the "flat file" option was used, break the JCL up into backup
     and recreate funtions. This option will not use the model to
     define so that it can be 'manually' defined.

     (Enter RESET on the command line to remove these notes.)

  --------------------------------------------------------------------*/
n_en=mark(-2)                               /* Mark prev 2 line       */

Macro_1_Instructions:
    chgchar='&'
    cname='there';Signal on Syntax Name error_off_$WHOAMI;cname=$Whoami('C')
error_off_$WHOAMI:Signal Off Syntax
    Address ISREDIT
    "(caps)=CAPS";"CAPS=OFF";msgt='NOTELINE'
    x=nl_h('*'Centre('ooo000OOOO000ooo',70,'-')'*')
    Do i=n_st To n_en
        line=Sourceline(i)
        Do While Index(line,chgchar)>0
            Interpret "Parse VAR line p1 '"chgchar"' var '.' p2"
            If Index(var,'(')>0 Then Do
                Parse VAR var var '(' vl ')'
                If ¬Datatype(vl,'W') Then vl=Length(var)
                Interpret 'line=p1||Substr('var',1,vl)||p2'
            End
            Else Interpret 'line=p1||'var'||p2'
        End
        x=nl_h('*'Substr(line,1,70)'*')
    End
    x=nl_h('*'Copies('-',70)'*')
    "CAPS=(caps)"
    Exit

nl_h:Parse Arg n#;"LINE_BEFORE .ZFIRST = &MSGT (n#)";Return 0
Mark: Arg diff;If Datatype(diff)/='NUM' Then diff=1;Return sigl+diff
