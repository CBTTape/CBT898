/*            REXX                                                    */
/**********************************************************************/
/*    TRACE r                                                         */
/*--------------------------------------------------------------------*/
/*                                                                    */
/* Routine to edit/browse a VSAM dataset.                             */
/* If the default entry screen is invoked, you may optionaly backup   */
/* or restore the dataset.                                            */
/* For various options, invoke the routine and use the HELP PF key.   */
/*                                                                    */
/*--------------------------------------------------------------------*/
    PARSE UPPER ARG parm1 parm2 parm3 parm4 parm5 parm6 parm7 parm8

byp1:
    cactn = "RETURN"
/*  cactn = "CANCEL"                                                  */
    "ISPEXEC CONTROL ERRORS" cactn

ini1:
    unit  = 'SYSDA'
    dsorg = 'VS'

    Call parse_parms

    "ISPEXEC VGET (ALKVOL) SHARED"
    If alkvol = '' Then volume = ''
    Else                volume = 'VOLUME('alkvol')'
    "ISPEXEC VPUT (DSORG) SHARED"
    If dump = 'Y' Then Do                     /*  <==== test only     */
        keypos = 'TEST'                       /*  <==== test only     */
        "ISPEXEC VPUT KEYPOS SHARED           /*  <==== test only     */"
    End                                       /*  <==== test only     */

    If prog = 'EXTEVSAM' & bypass = 'N' Then Do
        "ISPEXEC VGET (EXTEBYPD) PROFILE"
        If extebypd ¬= 'Y' | none = 'N' Then Do
            bdsname = "'"jdsname".BACKUP'"
            "ISPEXEC VGET (EXTEDEFT EXTEVBUP EXTECONT) PROFILE"
            "ISPEXEC VGET (&EXTEDEFT) PROFILE"
            csr1 = 'EXTEBKUP'
scr1:
            gc009 = ''
            zcmd  = ''
            "ISPEXEC DISPLAY PANEL(EXTEDEFP) CURSOR(&CSR1)"
            If rc ¬= 0 Then Do
                gc009 = "Extended edit/browse abandoned."
                Signal erx1
            End
            If zcmd ¬= 'CAN' Then Do
                If c = 'X' extecont ¬= exteconx Then Do
                     extecont = X2C(exteconx)
                     "ISPEXEC VPUT (EXTECONT) PROFILE"
                End
                If c = 'C' & extecont ¬= exteconc Then Do
                     extecont = exteconc
                     "ISPEXEC VPUT (EXTECONT) PROFILE"
                End
                extedlen = RIGHT(extedlen,3,'0')
                "ISPEXEC VPUT (&EXTEDEFT) PROFILE"
            End
        End
    End

con1:
    dsvsam = jdsname
    time = SUBSTR(TIME(),1,2)||,
           SUBSTR(TIME(),4,2)||,
           SUBSTR(TIME(),7,2)
    ddvsam   = 'DD'time
    vsambkup = 'BU'time
    If trace = 'Y' Then Trace r
    x = MSG('On')
    x = OUTTRAP('line',20,'NOCONCAT')
    If prog = 'EXTEVSAM' Then ,
        Address TSO "ALLOC DD("ddvsam") DA('"dsvsam"') OLD REU"
    Else ,
        Address TSO "ALLOC DD("ddvsam") DA('"dsvsam"') SHR REU"
    rc1 = rc
    x = OUTTRAP('Off')
    If rc1 ¬= 0 Then Signal allocer
    If extebkup = 'Y' Then Do
        csr1 = bdsname
        If SUBSTR(bdsname,1,1) ¬= "'" Then ,
            bdsname = "'"USERID()"."bdsname"'"
        If SYSDSN(bdsname) ¬= 'OK' Then Address TSO,
            "ALLOC F("vsambkup") DA("bdsname") NEW SPACE(20,20)",
                 "TRACKS UNIT("unit") CATALOG  REUSE RELEASE",
                 "RECFM(V B) BLKSIZE(23476)"
        Else ,
            Address TSO "ALLOC F("vsambkup") DA("bdsname") OLD REU"
        x = MSG('On')
        x = OUTTRAP('line',20,'NOCONCAT')
        Address TSO "REPRO INFILE("ddvsam") OUTFILE("VSAMBKUP") REUSE",
              "REPLACE "count
        rc1 = rc
        x = OUTTRAP('Off')
        Address TSO "FREE F("vsambkup")"
        gc009 = line1"."
        If rc1 ¬= 0 Then Signal err1
    End

    If extebkdn = 'Y' Then Do
        csr1 = 'BDSNAME'
        If SUBSTR(bdsname,1,1) ¬= "'" Then ,
            bdsname = "'"USERID()"."bdsname"'"
        If SYSDSN(bdsname) ¬= 'OK' Then Do
            gc009 = SYSDSN(bdsname)"."
            Signal err1
        End
        Else Address TSO "ALLOC F("vsambkup") DA("bdsname") OLD REU"

        x = MSG('On')
        x = OUTTRAP('line',20,'NOCONCAT')
        Address TSO "REPRO INFILE("vsambkup") OUTFILE("ddvsam") REUSE",
              "REPLACE" count
        rc1 = rc
        x = OUTTRAP('Off')
        Address TSO "FREE F("vsambkup")"
        gc009 = line1"."
        If rc1 ¬= 0 Then Signal err1
    End

/*-------------------------------------------------------------------*/
/* Establish RECFM of dataset                                        */
/*-------------------------------------------------------------------*/
    If prog ¬= 'EXTEVSAM' Then Signal endrecfm
    x = MSG('On')
    x = OUTTRAP('line.',1000,'NOCONCAT')
    Address TSO "LISTC ENT('"jdsname"') ALL"
    x = OUTTRAP('Off')
    Do i=1 By 1 Until i>=line.0
        var = line.i
        If indata = 'N' Then Do
            data = SUBSTR(var,5,5)
            If data = 'DATA' Then indata = 'Y'
        End
        Else Do
            If LENGTH(var) > 43 Then Do
                avg = SUBSTR(var,37,8)
                If avg = 'AVGLRECL' Then Do
                    Parse VAR var 'AVGLRECL' avg .
                    lp  = Lastpos('-',avg)
                    avg = Substr(avg,lp+1)
                    i = i + 1
                    var = line.i
                    Parse VAR var 'MAXLRECL' max .
                    lp  = Lastpos('-',max)
                    max = Substr(max,lp+1)
                    Signal exl1
                End
            End
        End
    End

exl1:
    If max ¬= avg Then exterecf = 'V'
    Else               exterecf = 'F'
    extearec = avg
    extemrec = max
/*-------------------------------------------------------------------*/

endrecfm:
    "ISPEXEC VPUT (DSVSAM DDVSAM DSORG EXTBSORT",
                 "EXTERECF EXTEAREC EXTEMREC) SHARED"
    "ISPEXEC SETMSG MSG(GC009)"
    "ISPEXEC SELECT PGM(&PROG)"
    "ISPEXEC LIBDEF ISPSLIB"
    Signal exi1

erx1:
    "ISPEXEC SETMSG MSG(GC009)"

exi1:
    "ISPEXEC VPUT (EXTEVBUP) PROFILE"
    x = MSG('Off')
    Address TSO "FREE DD("ddvsam vsambkup")"
    Exit

allocer:
    gc009 = VALUE('line'1)
    Signal erx1

err1:
    gc009t = gc009" Use HELP PF key for more info."
    h009t  = 'HSYSOUTL'
    "ISPEXEC SETMSG MSG(GC009T)"
    Do i=1 To line0
        data = "soline"i" = line"i
        INTERPRET data
    End
    "ISPEXEC VPUT (SOLINE1 SOLINE2 SOLINE3 SOLINE4",
                "SOLINE5 SOLINE6 SOLINE7 SOLINE8",
                "SOLINE9 SOLINE10 SOLINE11 SOLINE12",
                "SOLINE13 SOLINE14 SOLINE15 SOLINE16",
                "SOLINE17 SOLINE18 SOLINE19 SOLINE20)",
                "SHARED"
    Signal scr1
    End

/*--------------------------------------------------------------------*/
/* Parse parameters                                                   */
/*--------------------------------------------------------------------*/
parse_parms:
    extbsort = 'N'
    bypass   = 'N'
    dump     = 'N'
    none     = 'N'
    edit     = 'N'
    test     = 'N'
    trace    = 'N'
    parml    = 8
    Data     = "parm"parml+1" = ''"
    Interpret data

    Do i=1 To parml
        x = VALUE("parm"i)
        If x = "" Then Leave
        If x = 'SORT' Then Do

            extbsort = 'Y'

            Do i=i To parml
                Data = "parm"i" = parm"i+1
                Interpret data
            End
        End
    End

    Do i=1 To parml
        x = VALUE("parm"i)
        If x = "" Then Leave
        If x = 'DUMP' Then Do

            dump = "Y"

            Do i=i To parml
                Data = "parm"i" = parm"i+1
                Interpret data
            End
        End
    End

    Do i=1 To parml
        x = VALUE("parm"i)
        If x = "" Then Leave
        If x = 'NONE' Then Do

            none = "Y"

            Do i=i To parml
                Data = "parm"i" = parm"i+1
                Interpret data
            End
        End
    End

    Do i=1 To parml
        x = VALUE("parm"i)
        If x = "" Then Leave
        If x = 'EDIT' Then Do

            edit = "Y"

            Do i=i To parml
                Data = "parm"i" = parm"i+1
                Interpret data
            End
        End
    End

    Do i=1 To parml
        x = VALUE("parm"i)
        If x = "" Then Leave
        If x = 'TEST' Then Do

            test = "Y"

            Do i=i To parml
                Data = "parm"i" = parm"i+1
                Interpret data
            End
        End
    End

    Do i=1 To parml
        x = VALUE("parm"i)
        If x = "" Then Leave
        If x = 'TRACE' Then Do

            trace = "Y"

            Do i=i To parml
                Data = "parm"i" = parm"i+1
                Interpret data
            End
        End
    End

    Do i=1 To parml
        x = VALUE("parm"i)
        If x = "" Then Leave
        If SUBSTR(x,1,3) = "BYP" Then Do

            bypass = "Y"

            Do i=i To parml
                Data = "parm"i" = parm"i+1
                Interpret data
            End
        End
    End

    jdsname = parm1
    prog    = parm2

    Return 0
