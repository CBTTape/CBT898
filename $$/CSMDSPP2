)ATTR
    _ TYPE(&IN1) INTENS(HIGH) COLOR(&CLR1) CAPS(ON) HILITE(USCORE)
    ` TYPE(&IN2) INTENS(HIGH) COLOR(&CLR2) CAPS(&POCAPS)
    ¢ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
    $ TYPE(OUTPUT) INTENS(HIGH)
    @ TYPE(TEXT) INTENS(HIGH) COLOR(green)
    } TYPE(TEXT) INTENS(HIGH) COLOR(TURQ)
    { TYPE(OUTPUT) INTENS(HIGH) COLOR(GREEN) CAPS(OFF)
    ~ TYPE(TEXT) INTENS(HIGH) SKIP(ON)
    + TYPE(TEXT) INTENS(LOW)  SKIP(ON)
    ? AREA(DYNAMIC) SCROLL(ON)
)BODY EXPAND (\\)
¢&TIME¢\-\ Online PDSEDIT - Entry panel \-\ &POVER
¢&SID%===>_ZCMD          \ \ +
%
+Data set name where input members reside: &#MEMBERO                  ?A2345678?
+   Data set%===>_IDSNAME                                       ~<=>_ALKVOL~<=
+Data set name where output members are to be copied to (optional):
+   Data set%===>_ODSNAME                                       ~<=
+Hits only  %===>_L~<=+ (Y/N)          +PDSEDIT delimiter%===>_D~<=+U/C%=>_Z~<=
+Data set name where to store edit macro:                   Keep output%=>_Z~<=
+   Data set%===>_EDSNAME                                     }Column boundaries
+Enter FIND/CHANGES, format:{OSTRNG1      +or{OSTRNG2   }Default~=>_Z  ~:_Z  ~<=
+ Cmd%==>`CHANGE1                                              ~<=>_Z  ~:_Z  ~<=
+ Cmd%==>`CHANGE2                                              ~<=>_Z  ~:_Z  ~<=
+ Cmd%==>`CHANGE3                                              ~<=>_Z  ~:_Z  ~<=
+ Cmd%==>`CHANGE4                                              ~<=>_Z  ~:_Z  ~<=
+ Cmd%==>`CHANGE5                                              ~<=>_Z  ~:_Z  ~<=
+ Cmd%==>`CHANGE6                                              ~<=>_Z  ~:_Z  ~<=
+ Cmd%==>`CHANGE7                                              ~<=>_Z  ~:_Z  ~<=
+ Cmd%==>`CHANGE8                                              ~<=>_Z  ~:_Z  ~<=
+ Cmd%==>`CHANGE9                                              ~<=>_Z  ~:_Z  ~<=
+ Cmd%==>`CHANGE10                                             ~<=>_Z  ~:_Z  ~<=
+ Cmd%==>`CHANGE11                                             ~<=>_Z  ~:_Z  ~<=
+ Cmd%==>`CHANGE12                                             ~<=>_Z  ~:_Z  ~<=
+ Cmd%==>`CHANGE13                                             ~<=>_Z  ~:_Z  ~<=
+ Cmd%==>`CHANGE14                                             ~<=>_Z  ~:_Z  ~<=
+ Cmd%==>`CHANGE15                                             ~<=>_Z  ~:_Z  ~<=
+ Cmd%==>`CHANGE16                                             ~<=>_Z  ~:_Z  ~<=
+ Cmd%==>`CHANGE17                                             ~<=>_Z  ~:_Z  ~<=
+ Cmd%==>`CHANGE18                                             ~<=>_Z  ~:_Z  ~<=
+ Cmd%==>`CHANGE19                                             ~<=>_Z  ~:_Z  ~<=
+ Cmd%==>`CHANGE20                                             ~<=>_Z  ~:_Z  ~<=
+Select/Exclude members, format:@S/E(M1,M2,M3,M4)
+  S/E%===>_SORE




)INIT
 &SID  = &ZSYSID
 &TIME = &ZTIME
 .HELP = HPDSED95
 &VARS1 = 'PDSUCASE PDSEKEEP'
 &VARS2 = 'S0 E0 S1 E1 S2 E2 S3 E3 S4 E4 S5 E5 S6 E6 S7 E7 S8 E8 S9 E9 S10 E10'
 &VARS3 = 'S11 E11 S12 E12 S13 E13 S14 E14 S15 E15'
 &VARS4 = 'S16 E16 S17 E17 S18 E18 S19 E19 S20 E20'
 .ZVARS = '(&VARS1 &VARS2 &VARS3 &VARS4)'
 &GC001 = 'FIELD MUST BE ENTERED.'
 &GC002 = 'ENTRY NOT AS SPECIFIED.'
 &GC003 = 'CONSTRUCTION OF DSNAME DOES NOT CONFORM TO STANDARDS.'
 &GC004 = '&D ALONE IS INSUFFICIENT.'
 &GC005 = 'PFK MUST BE IN THE RANGE 1 - 24.'
 &GC006 = 'CONSTRUCTION OF VOLID DOES NOT CONFORM TO STANDARDS.'
 IF (&PDSUCASE = &Z) &PDSUCASE = 'Y'
 IF (&IN2 = &Z) &IN2 = 'OUTPUT'
 IF (&IN2 = 'INPUT')
    &CLR2 = 'RED'
 ELSE
    &CLR2 = 'WHITE'
 &POCAPS = TRANS(TRUNC(&PDSUCASE,1) Y,ON N,OFF)
 &OSTRNG1 = '&D.find-string&D.'
 &OSTRNG2 = '&D.from-string&D.to-string&D.'
)REINIT
 &POCAPS = TRANS(TRUNC(&PDSUCASE,1) Y,ON N,OFF)
)PROC
 REFRESH(ZCMD,CHANGE1,CHANGE2,CHANGE3,CHANGE5,CHANGE6,CHANGE7,CHANGE8)
 REFRESH(CHANGE9,CHANGE10,PDSUCASE)
 VER (&PDSUCASE,NB,LIST,N,Y)
 &POCAPS = TRANS(TRUNC(&PDSUCASE,1) Y,ON N,OFF)
 VER (&IDSNAME,NONBLANK,MSG=GC001)
 &XXX = TRUNC(&IDSNAME,1)
 IF (&XXX ¬= '?')
     VER (&IDSNAME,DSNAME,MSG=GC003)
 VER (&ALKVOL,NAME,MSG=GC006)
 &XXX = TRUNC(&ODSNAME,1)
 IF (&XXX ¬= '?')
     VER (&ODSNAME,DSNAME,MSG=GC003)
 &XXX = TRUNC(&EDSNAME,1)
 IF (&XXX ¬= '?')
     VER (&EDSNAME,DSNAME,MSG=GC003)
 &PART1A = TRUNC(&ZCMD,' ')
 &PART1B = TRUNC(&ZCMD,1)
 IF (&PART1A ¬= COPY)
   IF (&PART1B ¬= E)
     VER (&L,NONBLANK,MSG=GC001)
     VER (&L,LIST,Y,N,MSG=GC001)
     VER (&D,NONBLANK,MSG=GC001)
     VER (&PDSEKEEP,NB,LIST,Y,N,MSG=GC002)
     VER (&CHANGE1,NONBLANK,MSG=GC001)
     IF (&CHANGE1 = &D) VER(&CHANGE1,LIST,X&CHANGE1,MSG=GC004)
     VER (&PDSEDPF,NUM,MSG=GC001)
     VER (&PDSEDPF,RANGE,1,24,MSG=GC001)
 IF (&S0  ¬= &Z) &COLDEL = 'Col_Del_Set'
 IF (&S1  ¬= &Z) &COLDEL = 'Col_Del_Set'
 IF (&S2  ¬= &Z) &COLDEL = 'Col_Del_Set'
 IF (&S3  ¬= &Z) &COLDEL = 'Col_Del_Set'
 IF (&S4  ¬= &Z) &COLDEL = 'Col_Del_Set'
 IF (&S5  ¬= &Z) &COLDEL = 'Col_Del_Set'
 IF (&S6  ¬= &Z) &COLDEL = 'Col_Del_Set'
 IF (&S7  ¬= &Z) &COLDEL = 'Col_Del_Set'
 IF (&S8  ¬= &Z) &COLDEL = 'Col_Del_Set'
 IF (&S9  ¬= &Z) &COLDEL = 'Col_Del_Set'
 IF (&S10 ¬= &Z) &COLDEL = 'Col_Del_Set'
 IF (&E0  ¬= &Z) &COLDEL = 'Col_Del_Set'
 IF (&E1  ¬= &Z) &COLDEL = 'Col_Del_Set'
 IF (&E2  ¬= &Z) &COLDEL = 'Col_Del_Set'
 IF (&E3  ¬= &Z) &COLDEL = 'Col_Del_Set'
 IF (&E4  ¬= &Z) &COLDEL = 'Col_Del_Set'
 IF (&E5  ¬= &Z) &COLDEL = 'Col_Del_Set'
 IF (&E6  ¬= &Z) &COLDEL = 'Col_Del_Set'
 IF (&E7  ¬= &Z) &COLDEL = 'Col_Del_Set'
 IF (&E8  ¬= &Z) &COLDEL = 'Col_Del_Set'
 IF (&E9  ¬= &Z) &COLDEL = 'Col_Del_Set'
 IF (&E10 ¬= &Z) &COLDEL = 'Col_Del_Set'
)END
