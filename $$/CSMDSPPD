)ATTR DEFAULT(%+_)
  ¢ AREA(DYNAMIC)
  ` AREA(DYNAMIC) SCROLL(ON)    EXTEND(ON) USERMOD(AA)
 01 TYPE(DATAIN)  COLOR(RED)    CAPS(ON)
 02 TYPE(DATAIN)  COLOR(BLUE)   CAPS(ON)
 03 TYPE(DATAIN)  COLOR(YELLOW) CAPS(ON)
 04 TYPE(DATAIN)  COLOR(GREEN)  CAPS(ON)
 05 TYPE(DATAIN)  COLOR(TURQ)   CAPS(ON)
 06 TYPE(DATAIN)  COLOR(PINK)   CAPS(ON)
 07 TYPE(DATAIN)  COLOR(WHITE)  CAPS(ON)
 08 TYPE(DATAOUT) COLOR(RED)    CAPS(OFF) SKIP(ON)
 09 TYPE(DATAOUT) COLOR(BLUE)   CAPS(OFF) SKIP(ON)
 0A TYPE(DATAOUT) COLOR(YELLOW) CAPS(OFF) SKIP(ON)
 0B TYPE(DATAOUT) COLOR(GREEN)  CAPS(OFF) SKIP(ON)
 0C TYPE(DATAOUT) COLOR(TURQ)   CAPS(OFF) SKIP(ON)
 0D TYPE(DATAOUT) COLOR(PINK)   CAPS(OFF) SKIP(ON)
 0E TYPE(DATAOUT) COLOR(WHITE)  CAPS(OFF) SKIP(ON)
 11 TYPE(DATAIN)  COLOR(RED)    CAPS(ON)           HILITE(REVERSE)
 12 TYPE(DATAIN)  COLOR(BLUE)   CAPS(ON)           HILITE(REVERSE)
 13 TYPE(DATAIN)  COLOR(YELLOW) CAPS(ON)           HILITE(REVERSE)
 14 TYPE(DATAIN)  COLOR(GREEN)  CAPS(ON)           HILITE(REVERSE)
 15 TYPE(DATAIN)  COLOR(TURQ)   CAPS(ON)           HILITE(REVERSE)
 16 TYPE(DATAIN)  COLOR(PINK)   CAPS(ON)           HILITE(REVERSE)
 17 TYPE(DATAIN)  COLOR(WHITE)  CAPS(ON)           HILITE(REVERSE)
 18 TYPE(DATAOUT) COLOR(RED)    CAPS(OFF) SKIP(ON) HILITE(REVERSE)
 19 TYPE(DATAOUT) COLOR(BLUE)   CAPS(OFF) SKIP(ON) HILITE(REVERSE)
 1A TYPE(DATAOUT) COLOR(YELLOW) CAPS(OFF) SKIP(ON) HILITE(REVERSE)
 1B TYPE(DATAOUT) COLOR(GREEN)  CAPS(OFF) SKIP(ON) HILITE(REVERSE)
 1C TYPE(DATAOUT) COLOR(TURQ)   CAPS(OFF) SKIP(ON) HILITE(REVERSE)
 1D TYPE(DATAOUT) COLOR(PINK)   CAPS(OFF) SKIP(ON) HILITE(REVERSE)
 1E TYPE(DATAOUT) COLOR(WHITE)  CAPS(OFF) SKIP(ON) HILITE(REVERSE)
 21 TYPE(DATAIN)  COLOR(RED)    CAPS(ON)           HILITE(USCORE)
 22 TYPE(DATAIN)  COLOR(BLUE)   CAPS(ON)           HILITE(USCORE)
 23 TYPE(DATAIN)  COLOR(YELLOW) CAPS(ON)           HILITE(USCORE)
 24 TYPE(DATAIN)  COLOR(GREEN)  CAPS(ON)           HILITE(USCORE)
 25 TYPE(DATAIN)  COLOR(TURQ)   CAPS(ON)           HILITE(USCORE)
 26 TYPE(DATAIN)  COLOR(PINK)   CAPS(ON)           HILITE(USCORE)
 27 TYPE(DATAIN)  COLOR(WHITE)  CAPS(ON)           HILITE(USCORE)
 28 TYPE(DATAOUT) COLOR(RED)    CAPS(OFF) SKIP(ON) HILITE(USCORE)
 29 TYPE(DATAOUT) COLOR(BLUE)   CAPS(OFF) SKIP(ON) HILITE(USCORE)
 2A TYPE(DATAOUT) COLOR(YELLOW) CAPS(OFF) SKIP(ON) HILITE(USCORE)
 2B TYPE(DATAOUT) COLOR(GREEN)  CAPS(OFF) SKIP(ON) HILITE(USCORE)
 2C TYPE(DATAOUT) COLOR(TURQ)   CAPS(OFF) SKIP(ON) HILITE(USCORE)
 2D TYPE(DATAOUT) COLOR(PINK)   CAPS(OFF) SKIP(ON) HILITE(USCORE)
 2E TYPE(DATAOUT) COLOR(WHITE)  CAPS(OFF) SKIP(ON) HILITE(USCORE)
 31 TYPE(DATAIN)  COLOR(RED)    CAPS(ON)           HILITE(BLINK)
 32 TYPE(DATAIN)  COLOR(BLUE)   CAPS(ON)           HILITE(BLINK)
 33 TYPE(DATAIN)  COLOR(YELLOW) CAPS(ON)           HILITE(BLINK)
 34 TYPE(DATAIN)  COLOR(GREEN)  CAPS(ON)           HILITE(BLINK)
 35 TYPE(DATAIN)  COLOR(TURQ)   CAPS(ON)           HILITE(BLINK)
 36 TYPE(DATAIN)  COLOR(PINK)   CAPS(ON)           HILITE(BLINK)
 37 TYPE(DATAIN)  COLOR(WHITE)  CAPS(ON)           HILITE(BLINK)
 38 TYPE(DATAOUT) COLOR(RED)    CAPS(OFF) SKIP(ON) HILITE(BLINK)
 39 TYPE(DATAOUT) COLOR(BLUE)   CAPS(OFF) SKIP(ON) HILITE(BLINK)
 3A TYPE(DATAOUT) COLOR(YELLOW) CAPS(OFF) SKIP(ON) HILITE(BLINK)
 3B TYPE(DATAOUT) COLOR(GREEN)  CAPS(OFF) SKIP(ON) HILITE(BLINK)
 3C TYPE(DATAOUT) COLOR(TURQ)   CAPS(OFF) SKIP(ON) HILITE(BLINK)
 3D TYPE(DATAOUT) COLOR(PINK)   CAPS(OFF) SKIP(ON) HILITE(BLINK)
 3E TYPE(DATAOUT) COLOR(WHITE)  CAPS(OFF) SKIP(ON) HILITE(BLINK)
  } TYPE(INPUT)   INTENS(HIGH)  COLOR(RED)         JUST(RIGHT)
  ~ TYPE(TEXT)    INTENS(HIGH)  COLOR(TURQ)
  ¬ TYPE(TEXT)    INTENS(HIGH)  COLOR(GREEN)       HILITE(REVERSE)
)BODY EXPAND(\\)
¢HEADLINE                                                                      ¢
%&SID ===>_ZCMD                                               %Scroll ===>_Z   +
¢SUBHEAD1                                                                      ¢
¢SUBHEAD2                                                                      ¢
`DA1                                                                           `
+
)INIT
/* .HELP  = HPDSED40                                                  */
 .ZVARS = '(ZSCROLLD)'
 IF (&ZSCROLLD = &Z) &ZSCROLLD = CSR
 &#SCROLLD = &ZSCROLLD
 &ZSCROLLD = TRANS(TRUNC(&ZSCROLLD,1)
             M,MAX H,HALF P,PAGE C,CSR D,DATA *,*)
 IF (&ZSCROLLD ¬= MAX,HALF,PAGE,CSR,DATA) &ZSCROLLD = &#SCROLLD
 VGET ZSYSID ASIS
 &SID = &ZSYSID
 &ZCMD = ' '
 &SEL  = ' '
 &GC001 = 'Invalid SORT parameter. Call up tutorial for valid parameters.'
 &GC002 = 'Invalid FR/LA parameter. Call up tutorial for valid parameters.'
 &GC003 = 'Invalid command entered.'
 &GC004 = 'Invalid selection. Valid selections are ''S'', ''V'' or ''X''.'
 &GC005 = 'Locate needs a SORT dependant parameter.'
 &GC006 = 'Can only issue the L command when sorting on ''VOL'' or ''UCB''.'
)PROC
 &#SCROLLD = &ZSCROLLD
 &ZSCROLLD = TRANS(TRUNC(&ZSCROLLD,1)
             M,MAX H,HALF P,PAGE C,CSR D,DATA *,*)
 IF (&ZSCROLLD ¬= MAX,HALF,PAGE,CSR,DATA) &ZSCROLLD = &#SCROLLD
 IF (&ZCMD ¬= &Z,'*')
   &PARM1 = TRUNC(&ZCMD,' ')
   &PARM2 = .TRAIL
   &PARM2 = TRUNC(&PARM2,' ')
   IF (&SUBS = &Z) &SUBS = 'VOL,C,A'
   &PARM3 = .TRAIL
   IF (&PARM1 = '/SORT')
      &PARM2 = TRUNC(&PARM2,2)
      IF (&PARM2 = &Z)
        VER(&ZCMD,LIST,'X&ZCMD',MSG=GC001)
      IF (&PARM2 ¬= UC,VO,FS,LE,MA,AS,DS,NE,DT)
        VER(&ZCMD,LIST,'X&ZCMD',GC001)
      IF (&PARM2 = FS,LE,NE)
        IF (&PARM3 = &Z) &PARM3 = D
        IF (&PARM3 ¬= A,D)
           VER(&ZCMD,LIST,'X&ZCMD'GC002)
      IF (&PARM2 = UC)
         &SP   = 'UCB#,C,A'
         &SUBS = &SP
      IF (&PARM2 = VO)
         &SP = 'VOL,C,A'
         &SUBS = &SP
      IF (&PARM2 = NE) &SP = 'EX,C,&PARM3,&SUBS'
      IF (&PARM2 = FS) &SP = 'FS,C,&PARM3'
      IF (&PARM2 = LE) &SP = 'LE,C,&PARM3'
      IF (&PARM2 = MA) &SP = 'MA,C,A,&SUBS'
      IF (&PARM2 = AS) &SP = 'AS,C,A,&SUBS'
      IF (&PARM2 = DS) &SP = 'DS,C,A,&SUBS'
      IF (&PARM2 = DT) &SP = 'DT,C,D,&SUBS'
   IF (&PARM1 = '/L')
      IF (&PARM2 = &Z)
        VER(&ZCMD,LIST,'X&ZCMD',MSG=GC005)
      IF (&SP = 'UCB#,C,A')
         &AP   = 'UCB,GE'
         &UCB$ = TRUNC(&PARM2,3)
         &VOL$ = ''
      ELSE
         IF (&SP = 'VOL,C,A')
            &AP   = 'VOL,GE'
            &VOL$ = TRUNC(&PARM2,6)
            &UCB$ = ''
         ELSE
            VER(&ZCMD,LIST,'X&ZCMD',MSG=GC006)
)END
