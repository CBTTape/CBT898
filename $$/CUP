/*--------------------------ooo00 REXX 00ooo--------------------------*/
/*                                                                    */
/* Macro to process CICS message log and calculate the duration the   */
/* region has been/is up and notify operator on the ISPF message      */
/* line.                                                              */
/*                                                                    */
/* Either get the output using the TSO OUTPUT command or use the      */
/* following SDSF PRINT commands to a predefined dataset:             */
/*       PRINT ODSN $SDSF.OUTPUT * SHR                                */
/*       PRINT 1 999999                                               */
/*       PRINT CLOSE                                                  */
/*       TSO EOSDSF                                                   */
/* or if at the right release of SDSF select using the 'SE/SV'        */
/* command:                                                           */
/*                                                                    */
/*--------------------------------------------------------------------*/
    Arg parm#;Address ISPEXEC;"CONTROL ERRORS RETURN";ima_macro=0
    If parm#/='' Then Signal byp1
    "ISREDIT MACRO (parm#)"
    If rc=0 Then ima_macro=1

byp1:
/*  "CONTROL ERRORS CANCEL"                                           */

ini1:
    Parse Upper VAR parm# parm1 parm2 parm3
    If Wordpos(parm1,'HELP ?')>0 Then Do
        "SELECT PGM(ISPTUTOR) PARM(HNOHELP)"
        Exit
    End
    "ISREDIT (status)=USER_STATE"

pro1:
    "ISREDIT FIND 'VERSION' FIRST"
    "ISREDIT (line)=LINE .ZCSR"
    Parse UPPER VAR line . 'VERSION' cicsver .
    Parse VAR cicsver cicsver '.' .
    cicsver = Strip(cicsver)
    Select
        When (cicsver = 4) Then e_c = 'CICS time altered from 24.00.000'
        Otherwise  e_c = 'C.I.C.S. TIME ALTERED FROM 24.00.000'
    End
    "ISREDIT FIND '"e_c"' ALL"
    "ISREDIT (disp) = FIND_COUNTS"
    "ISREDIT FIND '/' 4 FIRST"
    If rc = 0 Then Do
        "ISREDIT (line) = LINE .ZCSR"
        Parse Var line date .
        date = Substr(date,2)
    End
    Else Do
        "ISREDIT FIND ' IEF403I ' FIRST"
        If rc ¬= 0 Then Do
            gc009 = 'Cannot find startup date???'
            Signal exi1
        End
        "ISREDIT (line) = LINE .ZCSR"
        Parse Var line . '- STARTED -' date '=' stime .
        date = DateMan('J2E',date,2)
    End
    disp  = disp + 0
    disp  = "+"disp
    dates = date
    datee = DateMan('E-N',date,disp,2)
    days  = disp + 1

    "ISREDIT FIND '1 //' 10 FIRST"
    If rc ¬= 0 Then "ISREDIT CURSOR = .ZLAST"
    "ISREDIT FIND ' $HASP395 ' PREV"
    If rc /= 0 Then verb = 'has been'
    Else Do
        "ISREDIT (line) = LINE .ZCSR"
        Parse Var line time stc# jesmsg stc endmsg
        If endmsg = 'ENDED' Then verb = 'was'
        Else                     verb = 'has been'
    End

    GC009 = "Region started" dates "and" verb "up for" days "days",
            "("datee")."
    "ISREDIT USER_STATE = (status)"

exi1:
    "ISPEXEC SETMSG MSG(GC009)"
    Exit
