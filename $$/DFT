/******************************** REXX *************************************/
/*                                                                    */
/* DFT: DFdss Toggler.                                                */
/*                                                                    */
/* This routine will use DFDSS to backup a dataset (any).             */
/* Use parameter of '/R' to restore from DFDSS backup.                */
/*                                                                    */
/* Use parameter of '?' for help.                                     */
/*                                                                    */
/*--------------------------------------------------------------------*/
DFT:dft_ver='1.09'
    Address ISPEXEC;"CONTROL ERRORS RETURN";ima_macro=0
    Arg parm#;If parm#/='' Then Signal byp1
    "ISREDIT MACRO (parm#) NOPROCESS";If rc=0 Then ima_macro=1
    If rc=0 Then Do;ima_macro=1;"ISREDIT (status)=USER_STATE";End

byp1:
/*  "CONTROL ERRORS CANCEL"                                           */

ini1:
    Parse Upper VAR parm# parm#
    restore=0;replace=1
    If Index(Translate(' 'parm#),' /Q(')>0 Then Do
        Parse Value Translate(parm#) With p1 '/Q(' qual ')' p2
            parm#=Space(p1 p2);If \Datatype(qual,'W') Then qual=0
    End;Else qual=0
    If Wordpos('/TRACE',parm#)>0 Then Do
        Trace r;parm#=Delword(parm#,Wordpos('/TRACE',parm#),1)
    End
    If Wordpos('/T',parm#)>0 Then Do
        tape=1;rtd=120;parm#=Delword(parm#,Wordpos('/T',parm#),1)
    End;Else Do;tape=0;rtd=;End
    If Wordpos('/NE',parm#)>0 Then Do
        tape=1;rtd='*';parm#=Delword(parm#,Wordpos('/NE',parm#),1)
    End
    If Wordpos('/B',parm#)>0 Then Do
        restore=0;parm#=Delword(parm#,Wordpos('/B',parm#),1)
    End
    If Wordpos('/O',parm#)>0 Then Do
        overwrite=1;parm#=Delword(parm#,Wordpos('/O',parm#),1)
    End;Else overwrite=0
    If Wordpos('/D',parm#)>0 Then Do
        parm#=Delword(parm#,Wordpos('/D',parm#),1)
        Parse Value Date('e') With dd '/' mm '/' yy;dsuff='.D'yy||mm||dd
    End;Else dsuff=
    If Wordpos('/ME',parm#)>0 Then Do
        myhlq=1;parm#=Delword(parm#,Wordpos('/ME',parm#),1)
    End;Else myhlq=0
    If Wordpos('/A',parm#)>0 Then Do
        If \ima_macro Then Do
            zedlmsg='Must be in view/edit session of DFDSS output from',
                    'simulated run to restore with apply.'
            Address ISPEXEC "SETMSG MSG(ISRZ001)";Exit
        End
        apply=1;parm#=Delword(parm#,Wordpos('/A',parm#),1)
        restore=1
    End
    Else Do
        apply=0
        If Wordpos('/R',parm#)>0 Then Do
            restore=1;parm#=Delword(parm#,Wordpos('/R',parm#),1)
        End;Else restore=0
    End
    If Wordpos('/#',parm#)>0 Then Do
        addpop=1;parm#=Delword(parm#,Wordpos('/#',parm#),1)
    End;Else addpop=0
    Parse VAR parm# ifil ofil oper prim sec vol wmWM
    Select
      When Index(ifil,',')>0 Then Parse VAR parm#,
        ifil','ofil','oper','prim','sec','vol','wmWM
      When ofil='' Then Parse VAR parm#,
        ifil,ofil,oper,prim,sec,vol,wmWM
      Otherwise Nop
    End

    Address TSO
    Signal On Error  Name help_me
    Parse Source . . xcmd .
    If ifil='' & \apply Then ifil='?'
    If Oper/='' Then Do
        If Substr(oper,1,1)='R' Then restore=1;Else restore=0
    End
    If ifil='?' Then Signal on Syntax Name Help_me
    If ifil='?'  Then Do;'%BR' xcmd '??';Return 0;End
    Signal Off Error
    If ifil='??' Then Signal help_me

    ispf=Sysvar(Sysispf)

    Signal On Error Name error_trap_#1;Signal On Syntax Name error_trap_#1
    v1='def_ex def_hd def_bb def_vm def_ac def_tp'
    Interpret "Parse Value 'A X Z X,O,H () 3480' With" v1
    Interpret "Parse Value $alkjc(v1) With" v1
error_trap_#1: Signal Off Error;Signal Off Syntax
    spref=Sysvar(syspref)
    ifil=Strip(ifil);ofil=Strip(ofil)
    If ifil="." | ifil="" Then NOP;Else Do
        If Substr(ifil,1,1)/="'" Then ifil="'"spref"."ifil"'"
    End
    If qual>0 Then Do
        xxx=Strip(ifil,,"'");ifil=
        Do qual
            Parse VAR xxx xx '.' xxx
            ifil=ifil xx;If xxx='' Then Leave
        End
        ifil="'"Translate(Space(ifil),'.',' ')"'"
    End
    If ofil="." | ofil="" Then NOP;Else Do
        If Substr(ofil,1,1)/="'" Then ofil="'"spref"."ofil"'"
    End
    If restore & apply Then Do
        "ISREDIT (line)=LINE .ZCSR"
        If Index(line,'.')=0 Then Do
            zedlmsg='Doen not seem to have a dataset name on line. No',
                    '"." qualifier seperators.'
            Address ISPEXEC "SETMSG MSG(ISRZ001)";Exit
        End
        rdsn="'"$wordat(line,Index(line,'.'))"'"
        "ISREDIT SEEK 'DSN=' prev"
        If rc=0 Then Do
            "ISREDIT (line)=LINE .ZCSR"
            Parse VAR line 'DSN='ifil .;Parse VAR ifil ifil ',' .
            ifil="'"ifil"'"
        End
        sys_rc=Sysdsn(ifil)
        If rc/=0 | sys_rc/='OK' Then Do
            If sys_rc/='VOLUME NOT ON SYSTEM' Then Do
                zedlmsg='Could not extract source dataset name from',
                        'session. Is this a valid SDSF full output',
                        '(not just SYSPRINT)?'
                Address ISPEXEC "SETMSG MSG(ISRZ001)";Exit
            End
        End
        addpop=1
        If first_time/='N' Then Do
            Call build_panel
            first_time='N';zwinttl='DFDSS Toggler';#popr=6;#popc=12
        End
        Address ISPEXEC
        zcmd=;"SETMSG MSG(ISRZ001)"
        imask=Strip(rdsn,,"'")
        Parse VAR imask . '.' ofil;ofil="'"spref'.'ofil"'"
        If vol='' Then Do;csr1='OFIL';csp1=2;End
        Else Do;csr1='VOL';csp1=1;End
scr1:
        If tape Then vol=def_tp
        "ADDPOP ROW(&#POPR) COLUMN(&#POPC)"
        "DISPLAY PANEL(DFPM) CURSOR(&CSR1) CSRPOS(&CSP1)";rc1=rc;"REMPOP"
        If rc1/=0 Then Do
            zedlmsg="Parameter entry screen abandoned."
            "SETMSG MSG(ISRZ001)"
            Signal ext1
        End
        If zcmd='?' Then Do;"%"xcmd "?";Signal scr1;End
        Address
        rdsn=imask
        If vol/=def_tp Then tape=0
    End
    If \restore Then Do
        If ofil='.' Then ofil=
        If prim='.' Then prim=
        If sec='.' Then sec=
        If vol='.' Then vol=
        If prim=''  Then prim=750
        If sec=''  Then sec=750
        If vol/=''  Then vol='VOLUME('vol')'
        If myhlq Then Do
            Parse VAR ifil . '.' ofil
            ofil="'"spref'.'ofil"'"
        End
        Else If ofil=''  Then ofil=Strip(Strip(ifil,'T',"'"))".DFDSSBU'"
    End
    If qual=0 Then Do
        xx=Listdsi(ifil)
        If xx<5 | Wordpos(sysreason+0,'9 19 25')>0 Then Nop;Else Do
            zedlmsg="Dataset "ifil" not found."
            Call put_message;Return 8
        End
    End
    userid=Userid();Parse Value '' With zedsmsg zedlmsg csr1;rc1=0
    If ofil/='' Then ofil=Strip(ofil,'T',"'")||dsuff"'"
    If Length(ofil)>46 Then Do
        zedlmsg='Output filename has been truncated from "ofil".',
                'Please ensure it is what you want.'
        ofil=Substr(ofil,1,45)"'";addpop=1;csr1='OFIL'
    End
    csp1=Lastpos('.',ofil)+1;csr1='OFIL'
scr2:
    If addpop & \restore Then Do
        If first_time/='N' Then Do
            Call build_panel
            first_time='N';zwinttl='DFDSS Toggler';#popr=6;#popc=12
        End
        Address ISPEXEC
        zcmd=;"SETMSG MSG(ISRZ001)"
        "ADDPOP ROW(&#POPR) COLUMN(&#POPC)"
/*      "CONTROL ERRORS CANCEL"                                       */
        If tape Then vol=def_tp
        "DISPLAY PANEL(DFP) CURSOR(&CSR1) CSRPOS(&CSP1)";rc1=rc;"REMPOP"
        If rc1/=0 Then Do
            zedlmsg="Parameter entry screen abandoned."
            "SETMSG MSG(ISRZ001)"
            Signal ext1
        End
        csp1=1
        Address
        If zcmd='?' Then Do;"%"xcmd "?";Signal scr2;End
        If vol/=def_tp Then tape=0
    End
    Signal batch_JCL
ext1:
    If ima_macro Then "ISREDIT USER_STATE=(status)"
    Address TSO "DELSTACK"
    If addpop Then Address ISPEXEC "LIBDEF ISPPLIB"
    Return rc1

put_message:
    zedsmsg=
    If ispf='ACTIVE' Then Address ispexec "SETMSG MSG(ISRZ001)";Else Say zedlmsg
    Return 0

batch_JCL:
    Prognm='Batch DFDSS'
    Signal on Syntax Name error_off_alkjcpg
    x=$Alkjcpg(prognm);If x/='' Then prognm=x
error_off_alkjcpg:Signal off Syntax
    "DELSTACK";"NEWSTACK"
    If Index(ofil,'*')>0 Then filetype=
    Else Do
    xx=Listdsi(ofil)
        If xx<5 | sysreason=9 | sysreason=25 Then Do
            If sysdsorg='VS' Then filetype='CLUSTER'
            Else filetype='NONVSAM'
        End
        Else filetype=
    End
    If restore Then j_id='R';Else j_id='B'
    Queue "//"userid||j_id" JOB "def_ac",'"prognm"',"
    Queue '//             CLASS='def_ex',COND=(4,LT),'
    Queue '//             MSGCLASS='def_hd',TIME=1440,'
    Queue '//             NOTIFY=&SYSUID'
    Queue '//*'
    Queue "//* Gen'd from """xcmd""" command. Parameters:"
    Queue "//*   ifil ofil oper prim sec vol"
    Queue '//*'
    ifil=Strip(ifil,,"'");
    If qual>0 & \restore Then ifil=ifil'.**'
    ofil=Strip(ofil,,"'");
    rdsn=Strip(rdsn,,"'");
    imask=Strip( imask,,"'");
/*
    If apply Then Do;simulate='*IMULATE ';report='EXECUTE  ';End
    Else Do;simulate='SIMULATE ';report='*XECUTE  ';rdsn='**'  ;End
*/
    Queue Substr('//*',1,70,'-')'*'
/*  Queue "//"simulate"SET ADRDPARM=',PARM=''TYPRUN=NORUN'''"         */
/*  Queue "//"report"SET ADRDPARM="                                   */
    If tape Then vol=
    Queue "//         SET UNIT=SYSALLDA,PPVOL="vol
    Queue '//*'
    Queue Substr('//*',1,70,'-')'*'
    If overwrite Then Do
        Queue '//DELETE  EXEC PGM=IEFBR14'
        Queue '//OUTDATA1 DD DSN='ofil','
        Queue '//            DISP=(MOD,DELETE,DELETE),'
        Queue '//            UNIT=3390,SPACE=(TRK,(0,0))'
        Queue Substr('//*',1,70,'-')'*'
    End
    If replace & restore Index(ofil,'*')=0 Then Do
        Queue '//RESTORE  EXEC PGM=IDCAMS,REGION=5000K'
        Queue '//SYSPRINT DD SYSOUT=*'
        Queue '//SYSIN    DD *'
        Queue ' DELETE' ofil filetype
        Queue ' IF MAXCC<9 THEN SET MAXCC=0'
        Queue '/*'
        Queue '//*'
        Queue Substr('//*',1,70,'-')'*'
    End
    If restore Then Do
        If apply Then Queue '//RESTORE  EXEC PGM=ADRDSSU,REGION=3M'
        Else Do
            Queue "//SIMULATE EXEC PGM=ADRDSSU,REGION=3M,PARM='TYPRUN=NORUN'"
            rdsn='**'
        End
    End
    Else Queue '//DUMP1    EXEC PGM=ADRDSSU,REGION=3M'
    Queue '//SYSPRINT DD SYSOUT=*'
    If restore Then Queue '//INDATA1  DD DISP=SHR,DSN='ifil
    Else Do
        Queue '//OUTDATA1 DD DSN='ofil','
        Queue '//            DISP=(NEW,CATLG,DELETE),'
        If rtd/='' Then Do
            If rtd='*' Then Queue '//            EXPDT=99365,'
            Else            Queue '//            RETPD='rtd','
        End
        If tape Then Queue '//            UNIT='def_tp',LABEL=(1,SL)'
        Else Queue '//            UNIT=3390,SPACE=(TRK,('prim','sec'),RLSE)'
    End
    If vol/='' Then Queue '//DD1      DD  VOL=SER=&PPVOL,UNIT=&UNIT,DISP=SHR'
    Queue '//SYSIN    DD  *'
    If restore Then Do
        Queue ' RESTORE DATASET(INCLUDE( -'
        Queue '                         'rdsn' -'
        Queue '                        ) -'
        Queue '                ) -'
        If apply & ofil/='*' Then Do
            Queue '         RENUNC( -'
            Queue '                  ('imask', -'
            Queue '                   'ofil') -'
            Queue '               ) -'
        End
        If vol/='' Then Queue '      OUTDDNAME(DD1) -'
        Queue '      CANCELERROR -'
        Queue '      RECATALOG(*)                             -'
        Queue '      SPHERE                         -'
        If vol/='' Then Queue '      NSC NMC  -'
        Queue '      INDDNAME(INDATA1) REPLACE'
    End
    Else Do
        Queue '  DUMP -'
        Queue '        DATASET( -'
        Queue '            INCLUDE( -'
        Queue '                   'ifil' -'
        Queue '                   ) -'
        Queue '                 ) -'
        Queue '        OUTDDNAME(OUTDATA1) -'
        Queue '        TOLERATE(ENQFAILURE) -'
        Queue '        ALLDATA(*) ALLEXCP'
    End
    Queue '/*'
    Queue '//'
    Queue ''
    dd='TT'Time('s')
    Address ISPEXEC "VGET ZTEMPF"
    "ALLOC DD("dd") DS('"ztempf"') SHR REU"
    "EXECIO * DISKW" dd "(FINIS"
/*  "DELSTACK"                                                        */
    Address ISPEXEC "LMINIT DATAID(DATAID) DDNAME("dd")"
    zedlmsg="Modify to your liking and submit manually. END PF key",
            "without submission will do nothing."
    Call put_message
    Address ISPEXEC "SETMSG MSG(ISRZ001)"
    Address ISPEXEC "EDIT DATAID(&DATAID)"
    Address ISPEXEC "LMFREE DATAID(&DATAID)"
    "FREE DD("dd")"
    Signal ext1

help_me:
ms=mark(2)
/*

   DF: DFDSS Toggler.
       --------------

   This routine will use DFDSS to either backup or restore a dataset.

   To backup a dataset (or a goroup of datasets), under ISPF option 3.4,
   enter the following against a dataset depending on the granularity
   (number of qualifiers) you wish for the backup,
       DF / /D /Q(3)
   Which will backup the first 3 qualifiers wildcarded.

   Restoration consists of two stages:
     1. Get a listing of datasets on the DFDSS dump dataset.
     2. Using the above listing restore the dataset(s).

   To get a listing of datasets on a DFDSS dump dataset, under ISPF
   option 3.4, enter the following against the dataset,
       DF / /R
   This will generate a listing that can then be used as input to the
   dataset restore job.

   To restore a dataset one at a time (or manually modify the JCL
   generated by adding extra datasets) you must be in view/edit mode of
   the SDSF held output. Enter DF on the command line and place the
   cursor on the dataset to be restored.  You will be given a rename
   (mask) screen. Either enter a newname as output and leave the
   'Inmask' field alone or change both field to a mask for restore and
   unconditional rename.  The routine will extract the backup dataset
   name from the held output.
   Notes:
     1. DO NOT try to restore a dataset from a DSLIST listing.
     2. Replace option is not used (no delete step generated) for
        wildcarded restore as the system does not readily know all
        the datasets that will be restored.
     3. If adding datasets manually for multiple restores and you
        set the relplace dataset to 'Y', don't forget to add the
        'added' dataset(s) to the delete list.

   Parameters, positional (space or comma seperated):
    Pos : 1    2    3    4    5    6    7    8    9   10  11   12
    Parm: ifil ofil oper prim sec vol wmWM

     1. - ifil -
        Input dataset (Fully Qualified and quoted (FQQ)).
        DD(INFILE). This parameter is mandatory. PDS is OK.
        Do not use a member.  It will work but you work out the
        result....
     2. - ofil -
        Output dataset (FQQ). Allocated to DD(OUTFILE).
        Use value of "*" to us original name (RENUNC parameter omitted).
     3. - oper -
        Explicit operation. If passed, must be Dump/Restore (Dump is the
        default).
     4. - prim -
        Primary allocation (in tracks) for dump dataset.  Redundant for
        a restore job.
     5. - sec -
        Secondary allocation (in tracks) for dump dataset.  Redundant
        for a restore job.
     6. - vol -
        Output volumefor dump dataset.  Redundant for a restore job.
    Else
        (for whatchamean WhiteMan).
   Parameters, keyword:
    /# -Pop up a parameter entry/verification panel. This parameter will
        create a temporary dataset 'syspref{.userid}.$$$TEMP.DFPANEL'
        to store panels DFP and DFPM
        and will be deleted at end of processing.
    /A -Apply the restore dataset.  You must be in view/edit mode of the
        SDSF held output. Enter DF on the command line and place the
        cursor on the dataset to be restored.  You will be given a
        rename (mask) screen. Either enter a newname as output and leave
        the 'Inmask' field alone or change both field to a mask for
        restore and unconditional rename. This parameter will force the
        '/R' parameter.
    /B -Backup operation. Create a DFDSS backup.
    /D -Append todays date in the format of '.Dyymmdd'. Use this parm
        for periodic unique tersing.
    /ME-Replace the hlq of output dataset with my 'prefix'.
    /NE-No Expiry. Sets retention period to '*' and sets JCL retention
        parameter to 'EXPDT=99365' (instead of RETPD=....).
        Will force tape output ('/T' parameter unnecessary).
    /O -Overwrite. Replace dataset ('/R' already takents JCL retention
        parameter to 'EXPDT=99365' (instead of RETPD=....).
        Will force tape output ('/T' parameter unnecessary).
    /Q(n)
       -Number of qualifiers to use for hlq wildcarding. Should be
        numeric and recommend 2 or 3. The default value is 0 and any
        non-numeric value of 'n' will use the full dataset name (default
        value of 0).
    /R -Restore operation.  Without the '/A' parameter, this will
        generate a listing of what is in the DFDSS backup dataset when
        issued against a dataset name.
        View it under SDSF.
        Note, If issued against the viewed member without the '/A'
        parameter, this tutorial will be displayed.
    /T -Tape.  Output to tape (default is DASD). This parameter will
        set a default retention period of "RETPD=120".
    /TRACE
        Trace. For debuging.

   Parameter notes:
     1. Defaulted positonal parameters may be represented by a "."
        placeholder IF space seperated option is used.
     2. You have the option to TERSE backup datasets.
     3. Can only be executed in batch.
     4. The defaults are set to be invoked from ISPF 3.4 with the
        minimum of parameters.  You may fine tune this by using '.'
        placeholders or alternatively call from a REXX routine using the
        following values:
        Defaults are (variable names)
           prim - 750 (primary)
           sec  - 750 (secondary)
        While the space allocations are over generous theys are designed
        for a generic solution. Allocation is made in tracks and
        released after completion. Unfortunately the number of directory
        blocks are your concern. (If this is an issue, pass 'LIBrary' as
        parameter 10; has been catered for but gives RC=40.)
     5. 'R' and/or 'A' operations are only meaningfull under view/edit
        session in SDSF.
     6. Parameters 9 onwards are ignored.

   Sample ISPF 3.4 invocation:
      DF / AKOS.$LOAD.DFDSSOR RESTORE .
      SF /,AKOS.$LOAD.DFDSSOR,RESTORE,.

    This command will force an unpack operation against selected dataset
    and output to 'AKOS.$LOAD.DFDSSORD' with JCL presented for batch
    submission.

   Sample REXX invocation:
      /* REXX */
      infile   = 'AKOS.$LOAD'
      outfile  = 'AKOS.$LOAD.DFDSSBU'
      oper     = 'BACKUP'
      prim     = '.'
      sec      = '.'
      vol      = 'ALEX02'
      xx=DF(infile outfile oper batch prim sec vol)
                     - or -
      xx=DF(infile,outfile,oper,batch,,,vol)
      If outfile/='' Then,
         If xx=0 Then Address ISPEXEC "BROWSE DATASET('"outfile"')"
      Exit

   Packaging (members marked with 'o' seperator are optional):
      REXX:
        BR       o PUTLINE browser for help. Without this member, you
                   get an error message and a heap of non-scrollable red
                   screen.
        DF       - Main driver.

                           *****

*/
me=mark(-2)
Do i=ms To me
    Say Substr(Sourceline(i),1,79)
End
Exit 0
Mark:If Datatype(Arg(1))/='NUM' Then Arg(1)=1;Return sigl+Arg(1)
/*--------------------------------------------------------------------*/
/* Allocate panel                                                     */
/*--------------------------------------------------------------------*/
build_panel:
    u=Sysvar(Sysuid);p=spref;If u/=p&p/='' Then u=p'.'u;hlq=u
    dsn= hlq'.$$$TEMP.DFPANEL'
    #msg=Msg('Off')
    Address TSO
    "DELETE '"dsn"'"
    "ALLOC DA('"dsn"') NEW CATALOG TRACK SPACE(1,1)",
       "DSORG(PO) LRECL(80) BLKSIZE(0) UNIT(SYSALLDA) DIR(1)",
       "RECFM(F B) REU"
    "FREE DA('"dsn"')"
    "NEWSTACK"
    Call make_mem_1;#tr=Trace('o')
    Do i=n_st To n_en;Queue Sourceline(i);End;Queue ''
    x=Trace(#tr);dd='TT'Time('s')
    "ALLOC F("dd") DA('"dsn"(DFP)') SHR REU"
    "EXECIO * DISKW "dd" (FINIS"
    "FREE  F("dd")"
    Call make_mem_2;#tr=Trace('o')
    Do i=n_st To n_en;Queue Sourceline(i);End;Queue ''
    x=Trace(#tr);dd='TT'Time('s')
    "ALLOC F("dd") DA('"dsn"(DFPM)') SHR REU"
    "EXECIO * DISKW "dd" (FINIS"
    "FREE  F("dd")"
    Address
    Address ISPEXEC "LIBDEF ISPPLIB DATASET ID('&DSN') STACK"
    x=Msg(#msg)
    Return 0

/*--------------------------------------------------------------------*/
/* Create help panel(s) from sourcelines between the '/* */'          */
/*--------------------------------------------------------------------*/
make_mem_1:
    n_st = mark(2)                          /* Mark start of data     */
/*
)ATTR DEFAULT(%+_)
    _ TYPE(INPUT)   INTENS(HIGH) COLOR(RED)    HILITE(USCORE)
    @ TYPE(TEXT)    INTENS(HIGH) COLOR(YELLOW)
    + TYPE(TEXT)    INTENS(LOW)  COLOR(GREEN)
    $ TYPE(TEXT)    INTENS(LOW)  COLOR(TURQ)
    ~ TYPE(TEXT)    INTENS(LOW)  COLOR(BLUE)
    ! AREA(DYNAMIC)
    w TYPE(CHAR) COLOR(WHITE)
    W TYPE(CHAR) COLOR(WHITE) HILITE(USCORE)
    y TYPE(CHAR) COLOR(YELLOW)
    b TYPE(CHAR) COLOR(BLUE)
    B TYPE(CHAR) COLOR(BLUE) HILITE(USCORE)
    r TYPE(CHAR) COLOR(RED)
    t TYPE(CHAR) COLOR(TURQ)
    g TYPE(CHAR) COLOR(GREEN)
)BODY EXPAND(\\) WINDOW(59,19)
%&SID%=>_ZCMD                                             +
+
+Enter parameters below:
+Infile....$&IFIL
+Outfile..._OFIL                                          +
+Operat'n.._Z+       !DYNA01,SHAD01            !
+Primary..._PRIM +   (in Tracks)
+Scondary.._SEC  +   (in Tracks)
+Volume  .._VOL   +Retain..._RTD+Number of days (or@*+)
+
+Press@ENTER+to use above parameters
+or@END/CANCEL+to abandon.
+Enter@?+for tutorial.
)INIT
 &DYNA01='Dump or Restore'
 &SHAD01='ygggggggygggggg'
 &SID=&ZSYSID
 .ZVARS='(OPER)'
 &OPER=TRANS(&RESTORE 1,R 0,D)
)PROC
 VER(&IFIL,NB,DSNAMEQ)
 VER(&OFIL,NB,DSNAMEQ)
 VER(&OPER,NB,LIST,D,R)
 &RESTORE=TRANS(&OPER R,1 D,0 *,0)
 IF (&OPER = D)
    VER(&PRIM,NB,NUM)
    VER(&SEC,NB,NUM)
    VER(&VOL,NAME)
    If (&VOL=CART,TAPE)
       VER(&RTD,NB)
    If (&RTD ¬= '*')
       VER(&RTD,NUM)
)END
*/
    n_en = mark(-2)                         /* Mark end of data       */
    Return 0

make_mem_2:
    n_st = mark(2)                          /* Mark start of data     */
/*
)ATTR DEFAULT(%+_)
    _ TYPE(INPUT)   INTENS(HIGH) COLOR(RED)    HILITE(USCORE)
    @ TYPE(TEXT)    INTENS(HIGH) COLOR(YELLOW)
    + TYPE(TEXT)    INTENS(LOW)  COLOR(GREEN)
    $ TYPE(TEXT)    INTENS(LOW)  COLOR(TURQ)
    ~ TYPE(TEXT)    INTENS(LOW)  COLOR(BLUE)
)BODY EXPAND(\\) WINDOW(59,13)
%&SID%=>_ZCMD
+
+Enter rename (mask) below:
+Infile....$&RDSN
+Inmask...._IMASK                                         +
+Outmask..._OFIL                                          +
+OutVolume._VOL   +
+Relpace output dataset if it exists:                   +
+          _Z+@Y+or@N                                   +
+
+Press@ENTER+to use above parameters
+or@END/CANCEL+to abandon.
+Enter@?+for tutorial.
)INIT
 &SID=&ZSYSID
 .ZVARS='(REPLACE)'
 &REPLACE=TRANS(&REPLACE 1,Y 0,N)
)PROC
 VER(&IMASK,NB,DSNAMEF)
 VER(&OFIL,NB,DSNAMEF)
 VER(&REPLACE,NB,LIST,Y,N)
 &REPLACE=TRANS(&REPLACE Y,1 N,0)
 VER(&VOL,NAME)
)END
*/
    n_en = mark(-2)                         /* Mark end of data       */
    Return 0

/*--------------------------------------------------------------------*/
/* Copy member TTL$ after here if required                            */
/*--------------------------------------------------------------------*/
tt_End:
