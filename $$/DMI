/*--------------------------ooo00 REXX 00ooo--------------------------*/
DMI:dmi_ver='1.03'
    n_st=mark(1)                            /* Mark Start

    DMI: DumpMaster Import [V&DMI_VER.]
    ----

    This function generates JCL to import a SVC dump into DUMPMSTR.

    Execute against a ISPF 3.4 listing.
    May be executed out of an IPCS dump listing.  Do not supply a
    parameter but rather place the cursor on the "PROBLEM:" number
    (the actual number).
    For this feature ensure member DMI$'s variable "dmipref" is set
    up with the site's default dump prefix.

    The routine will use your Userid for varaiable "DDIRIDX" that will
    be used to create temporary VSAM datasets.

    REXX:
      $WORDAT  o Used to extract the problem number when used in an
                 IPCS dump listing summary.
      $ZTEMPF  o Allocate temporary file.  This is used to circumvent
                 sites' temporary file limitations.
      DMI      - Duh!!
      DMI$     - Site custimisation module.
      JC       o Generate site customised JCL jobcard.  Without this
                 routine you may need to manually edit the JOBCARD
                 statements as some sites DO NOT like,
                   ex_class=A and hold_class=X
    PROC:
      M4DMCSYD - Proc to execute IPCS in batch to import the SVC
                 dump. Source dataset must be set up in DMI$ unsed
                 variable "dmijcl" if not in the JES concatenation.

*/
    n_en=mark(-1)                           /* Mark End               */
DMI:dmi_ver='1.03'
    Address ISPEXEC;"CONTROL ERRORS RETURN";ima_macro=0
    Arg parm#;If parm#/='' Then Signal byp1
    "ISREDIT MACRO (parm#) NOPROCESS";If rc=0 Then ima_macro=1

byp1:
/*  "CONTROL ERRORS CANCEL"                                           */

ini1:
    Parse Upper VAR parm# dsname .;Userid=Userid()
    If Wordpos(dsname,'? ??')>0 Then Do
        If dsname='??' Then Signal Help_me
        Signal on Syntax Name Help_me
        x=$br('DMI ??');Exit
    End

    If dsname='' Then Do
        "VGET (zscreenc)";zscreeni=$Screenc()
        dsuff=$wordat(zscreeni,zscreenc)
        dsname=dmi$('dmipref')"."dsuff
    End
    #m1=Msg('On');x=Outtrap('line.',500,'NOCONCAT')
    xx=Listdsi("'"dsname"' NORECALL")
    x=Outtrap('Off');x=Msg(#m1)
    If xx<5 | sysreason=9 | sysreason=25 Then Nop;Else Do
        zedlmsg="'"dsname"' not found. LISTDSI RC="xx",Reason="sysreason".",
        SYSMSGLVL1,
        SYSMSGLVL2
        "SETMSG MSG(ISRZ001)"
        Exit
    End

    vars='DMIACC DMIPRG DMIXCL DMIHCL DMISITE DMIJCL'
    Interpret "Parse Value '(ACCOUNT) DUMP-IMP A X Default' With" vars
    xx=dmi$(vars);Interpret "Parse VAR xx" vars
Report_JCL:
    Address TSO 'NEWSTACK'
    Signal on Syntax Name error_on_JC
    x=JC('L /Q /9');Signal error_off_JC     /* Put JOB card to Queue  */
error_on_JC:
Queue "//"userid"L JOB "dmiacc",'"dmiprg"',"
Queue '//             CLASS='dmixcl',COND=(4,LT),'
Queue '//             MSGCLASS='dmihcl',TIME=1440,REGION=0M,'
Queue '//             NOTIFY=&SYSUID,LINES=9999'
error_off_JC:Signal off Syntax
Queue '//JCL1    JCLLIB ORDER=('dmijcl')      'dmisite
Queue '//*********************************************************************'
Queue '//*                                                                   *'
Queue '//* You may need to alter the "DDIRIDX" prefix.                       *'
Queue '//*                                                                   *'
Queue '//*********************************************************************'
Queue '//*                                                                   *'
Queue '//* Dumpmaster CICS System Dump capture procedure.                    *'
Queue '//*                                                                   *'
Queue '//* Items requiring change in the proc are in lower case and are :    *'
Queue "//*       'dumpds' = SVC dump dataset.  Must be cataloged.            *"
Queue "//*       'ddiridx'= hlq(s) of IPCS DDIR.  hlq extracted will be used *"
Queue '//*                  to create temp VSAM transition dataset.          *'
Queue "//*       'clear'  = when to clear SYS1.DUMPnn (ie delete dump)       *"
Queue '//*                = blank - Capture from SYS1.DUMPnn but do NOT      *'
Queue '//*                          clear SYS1.DUMPnn dataset after capture  *'
Queue '//*                = CLEAR - Clear SYS1.DUMPnn dataset after capture  *'
Queue '//*                = FAST  - Copy SYS1.DUMPnn to a temporary dataset  *'
Queue '//*                          then capture from the temporary dataset  *'
Queue '//*                = FAST CLEAR - Copy SYS1.DUMPnn to a temporary     *'
Queue '//*                               dataset then clear SYS1.DUMPnn      *'
Queue '//*                               before capture from temp dataset    *'
Queue '//*                                                                   *'
Queue '//*                                                                   *'
Queue '//*                   W A R N I N G                                   *'
Queue '//*                                                                   *'
Queue '//* If this job is used with FAST and CLEAR keywords, and             *'
Queue '//* dump capture fails, the dump file contents will have been         *'
Queue '//* lost as the file will already have been cleared.                  *'
Queue '//*                                                                   *'
Queue '//*********************************************************************'
Queue '//M4DMCSYD EXEC M4DMCSYD,'
Queue '//             DUMPDS='dsname','
Queue '//             DUMPTP=@,                   * Dump type'
Queue '//             DUMPCD=@,                   * Dump code'
Queue '//             DUMPPG=@,                   * Dump requesting program'
Queue "//             CLEAR='NO',                 * YES or NO"
Queue '//             FULLAS=NO,                  * FULLAS=YES/NO'
Queue "//             DDIRIDX='"userid".DDIR',    * DSN prefix for IPCS DDIR"
Queue '//*            DDIRSCLS=DEFAULT,           * SMS STORCLAS for DDIR'
Queue '//*            DDIRVOL=,                   * DDIR volume'
Queue '//*            COPY=NO,                    * Copy YES/NO'
Queue "//*            COPYIDX='hlq.copy',         * Copy index(es)"
Queue '//*            COPYSCLS=DEFAULT,           * Copy SMS storage class'
Queue '//*            COPYVOL=,                   * Copy volume (non SMS)'
Queue '//*            COPYUNIT=                   * Copy unit (non SMS)'
Queue '//             DEBUG=                      * DEBUG Option'
Queue '//*'
    Queue ''
    dd='LG'Time('s')
    Signal on Syntax Name error_on_$ZTEMPF1
    ztempf=$ztempf();Signal error_off_$ZTEMPF1
error_on_$ZTEMPF1:
    Address ISPEXEC "VGET ZTEMPF"
error_off_$ZTEMPF1:Signal off Syntax
    zedlmsg='You will have to manually submit this JCL or forever',
            'loose it to the bit bucket.'
    Address ISPEXEC "SETMSG MSG(ISRZ001)"
    Address TSO "ALLOC F("dd") DSN('"ztempf"') SHR REU"
    Address TSO "EXECIO * DISKW "dd" (FINIS"
    Address ISPEXEC "LMINIT DATAID(DATAID) DDNAME("dd")"
    Address ISPEXEC "EDIT DATAID(&DATAID)"
    Address ISPEXEC "LMFREE DATAID(&DATAID)"
    Signal on Syntax Name error_on_$ZTEMPF2
    Address TSO "FREE F("dd")";xx=$ztempf(ztempf,'/D')
error_on_$ZTEMPF2:Signal off Syntax
    Exit

Help_me:
    chgchar='&'
    Do i=n_st To n_en
        line=Sourceline(i)
        Do While Index(line,chgchar)>0
            Interpret "Parse VAR line p1 '"chgchar"' var '.' p2"
            If Index(var,'(')>0 Then Do
                Parse VAR var var '(' vl ')'
                If Â¬Datatype(vl,'W') Then vl=Length(var)
                Interpret 'line=p1||Substr('var',1,vl)||p2'
            End
            Else Interpret 'line=p1||'var'||p2'
        End
        x=nl_h(Substr(line,1,79))
    End
    Exit

nl_h:Parse Arg n#
    If ima_macro Then "LINE_BEFORE .ZFIRST=NOTELINE (n#)";Else Say n#
    Return 0
Mark:Arg diff;If \Datatype(diff,'W') Then diff=1;Return sigl+diff
