/******************************** REXX ********************************/
/**********************************************************************/
/* TRACE r                                                            */
/*--------------------------ooo000OOOO000ooo--------------------------*/
/*                                                                    */
/* Map dump output to a DSECT.                                        */
/* This routine will take the specified lines (identified by a block  */
/* CC or Cnnn line commands), build them into one contiguous string   */
/* and pass it on to routine SHOWDASM to show DSECT.                  */
/*                                                                    */
/* Assumes starts in Col 2 and has the following format:              */
/*    Word 1  - Address or offset in block. Only word 1 of the first  */
/*              line will be processed and it will be ignored on      */
/*              subsequent lines. (Use this feature to fudge starting */
/*              displacement.                                         */
/*    Word 2 to Word 9                                                */
/*            - 8 blocks of 4 bytes in 8 character HEX representation */
/*    Word 10 onwards                                                 */
/*            - who cares                                             */
/*                                                                    */
/* Any non HEX values found in cols 2 onwards in word 1 of the line   */
/* will make the line be ignored.                                     */
/*                                                                    */
/* You need to pass a parameter of the DSECT name from DSECT dataset. */
/* (Refer to SHOWMEM member for details of this dataset.)             */
/*                                                                    */
/* Members required to package this product:                          */
/*   REXX:                                                            */
/*     SHOWSTOR - This driver and it's related packaging.             */
/*                                                                    */
/*--------------------------------------------------------------------*/
    Address ISPEXEC
    "ISREDIT MACRO (parm#) NOPROCESS"

byp1:
    cactn = "RETURN"
/*  cactn = "CANCEL"                                                  */
    "CONTROL ERRORS" cactn

ini1:
    Parse Upper VAR parm# parm#
    Parse VAR parm# parm1 parm2 parm3 parm4

    "ISREDIT (status) = USER_STATE"

    If Index(parm#,'ALL') > 0 Then Do
        "ISREDIT (labf) = LINENUM .ZFIRST"
        "ISREDIT (labt) = LINENUM .ZLAST"
    End
    Else Do
        "ISREDIT PROCESS RANGE C M"
        "ISREDIT (cmd) = RANGE_CMD"
        If cmd = 'C' Then Do
            "ISREDIT (labf) = LINENUM .ZFRANGE"
            "ISREDIT (labt) = LINENUM .ZLRANGE"
        End
        Else Do
            Call eval_data
            If labf = 0 Then Do
                gc009 = "Missing range block command 'CC/Cnnn'.",
                        "Please re-enter."
                Signal msg_exit
            End
        End
    End

    code = ''

    "ISREDIT (line) = LINE" labf
    Parse VAR line 2 offs_x .
    Do i=labf To labt
        "ISREDIT (line) = LINE" i
        Parse VAR line line '*' .
        Parse VAR line w1 p1 p2 p3 p4 p5 p6 p7 p8 .
        If Verify(Substr(w1,2),'0123456789ABCDEF') > 0 Then Iterate
        If w1 = '' Then Iterate
        code = code || p1 || p2 || p3 || p4 || p5 || p6 || p7 || p8
    End

/*  Address TSO "SHOWSTOR DSECT" parm1 0 code                         */
    x = Showstor('DSECT' parm1 0 code)
    Signal jst_exit


msg_exit:
    "SETMSG MSG(GC009)"
jst_exit:
    "ISREDIT USER_STATE = (status)"

    Exit

eval_data:
    labf = 0
/*  Return 0                                                          */
    string =,
            'EIBX:EXEC INTERFACE BLOCK:',
            'EIB:EXEC INTERFACE BLOCK:',
            'TCAS:TASK CONTROL AREA (SYSTEM AREA):',
            'TCAU:TASK CONTROL AREA:',
            'TCTTE:TERMINAL CONTROL TABLE:',
            ''
    labf = Index(string,parm1':')
    If labf = 0 Then Return 4
    ns = Substr(string,labf)
    Parse VAR ns . ':' text ':' .
    "ISREDIT CURSOR = 1 0"
    Do Forever
        "ISREDIT F '&TEXT'"
        If rc /= 0 Then Leave
        "ISREDIT (line) = LINE .ZCSR"
        Parse VAR line line ' ADDRESS ' .
        If Length(Strip(text)) /= Length(Strip(line)) Then Iterate
        "ISREDIT (labf) = LINENUM .ZCSR"
        Leave
    End
    labt = 0
    Do i=labf+1 To labf+200
        "ISREDIT (line) = LINE &I"
        Parse VAR line p1 p2 p3
        If p2 = 'LINES' & p3 = 'TO' Then Leave
        If Substr(Strip(p1),1,1) /= '0' Then Leave
    End
    labt = i
    Return 0
