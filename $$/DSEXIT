/*--------------------------ooo00 REXX 00ooo--------------------------*/
/*                                                                    */
/*  DSEXIT:                                                           */
/*                                                                    */
/*  This routine is the control exit to the the DASD space routine    */
/*  controlled by program DASDSPC.                                    */
/*  This routine is invoked whenever a selection is made agains a     */
/*  line entry that is not covered in the main program. This EXEC     */
/*  provides an exit to add more functionality without having to      */
/*  modify the program.                                               */
/*     The following selections are provided for in this exit (for    */
/*     more details refer to the tutorial):                           */
/*        V - VTOC map invocation                                     */
/*        S - ISPF 3.4                                                */
/*                                                                    */
/*  This routine provides for a user exit to this exit. The user      */
/*  exit must be called 'DSUSERXT' and included in your SYSPROC or    */
/*  SYSEXEC concatenation. It will be invoked if any of the non       */
/*  standard selections are made with the selection placed in the 1   */
/*  byte ISPF variable 'SEL' and placed in the SHARED subpool prior   */
/*  to invoking 'DSUSEREXT'. If you return a non-zero return code,    */
/*  subsequent processing of additional selections will be            */
/*  terminated.                                                       */
/*                                                                    */
/*  The following table details are available to the user exit after  */
/*  issuing the following command:                                    */
/*            "ISPEXEC TBSKIP DSPACE NUMBER(0)"                       */
/*                                                                    */
/*      Table name:                                                   */
/*          DSPACE                                                    */
/*      Keys:                                                         */
/*          Name Length Contents                                      */
/*          ~~~~ ~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  */
/*          UCB#  2     UCB in HEX (used for sorting)                 */
/*          VOL   6     Volume                                        */
/*          IX    2     Indexec VTOC indicator (value IX/blank)       */
/*          UCB   3     UCB in characters                             */
/*          FS    9     Free space                                    */
/*          EX    4     Number of extents                             */
/*          LE    9     Largest extent                                */
/*          DT    8     Device type                                   */
/*          MA    9     Mount attribute                               */
/*          AS    6     Allocation status                             */
/*          DS    6     Device status                                 */
/*                                                                    */
/*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*/
dsexit:dsexit_ver='2.03'
    Address ISPEXEC;"CONTROL ERRORS RETURN";ima_macro=0
    Arg parm#;If parm#/='' Then Signal byp1
    "ISREDIT MACRO (parm#) NOPROCESS";If rc=0 Then ima_macro=1

byp1:
    "CONTROL ERRORS CANCEL"

ini1:
    Parse Upper ARG dstable,zcmd,parm3
    zedsmsg=
    If dstable='' Then "VGET (ZCMD SEL DSTABLE) SHARED"
    Else Do
        If zcmd='' Then Do
            Parse Upper VAR parm# dstable zcmd parm3
            If zcmd='' Then Parse Upper VAR parm# dstable ',' zcmd ',' parm3
        End
    End
    "TBSKIP &DSTABLE NUMBER(0)"
    If rc>8 Then Do
        zedlmsg='Table "'dstable'" could not be processed (SKIP).'
        "SETMSG MSG(ISRZ001"
        Return 8
    End
    If parm3='/T' Then Trace r
    rcode=0

/*--------------------------------------------------------------------*/
/* Valid common Commands                                              */
/*--------------------------------------------------------------------*/
    Parse VAR zcmd zcmd p1 r1
    If zcmd="/EDT"    Then Signal cmd_edt
    If zcmd="/TOTF"   Then Signal cmd_totf
    If zcmd="/TOTFR"  Then Signal cmd_totf    /* and return totals    */
    If zcmd="/TOTS"   Then Signal cmd_tots
    If zcmd="/PRINT"  Then Signal cmd_print
    If zcmd="/CONFIG" Then Signal cmd_config

/*--------------------------------------------------------------------*/
/* Valid common selections                                            */
/*--------------------------------------------------------------------*/
    If sel="P" Then Signal opt_p
    If sel="S" Then Signal opt_s
    If sel="V" Then Signal opt_v
    If sel="FB" Then Signal opt_fb

/*--------------------------------------------------------------------*/
/* User defined selections                                            */
/*--------------------------------------------------------------------*/
    #m=Msg('Off')
    "SELECT CMD(%DSUSERXT)";rcode=rc
    x=Msg(#m)
    Signal ext1

/*--------------------------------------------------------------------*/
/* Command 'EDT'                                                      */
/*--------------------------------------------------------------------*/
cmd_edt:
/*  "CONTROL DISPLAY SAVE"                                            */
/*  "SELECT PGM(DASDEDTL)"                                            */
/*  "CONTROL DISPLAY RESTORE"                                         */
    x=EDTLR#()
    Signal ext1

/*--------------------------------------------------------------------*/
/* Command 'TOTF' (total Free space)                                  */
/*--------------------------------------------------------------------*/
cmd_totf:
cmd_totfr:
    If zcmd='/TOTFR' Then return_data=1;Else return_data=0
/*--------------------------------------------------------------------*/
/*            Device  Cyl  Bytes/trk                                  */
/*            ------  ---- ---------                                  */
    string  = "3380/S  0885,047476"||,
              "3380/D  1770,047476"||,
              "3380/T  2655,047476"||,
              "3390/S  1113,056664"||,
              "3390/D  2226,056664"||,
              "3390/T  3339,056664"||,
              "3390/5  5565,849960"||,
              "3390/9 10017,056664"
    stringl = Length("3380/T  2655,047476")
    Numeric Digits 20
    "TBTOP &DSTABLE"
    totf=0;tota=0
    n.=0;t.=0;tc.=0;tt.=0;t_c=0;t_t=0
    n.0=8
    Do Forever
        "TBSKIP &DSTABLE";If rc/=0 Then Leave
        x   =Index(string,dt)
        cyl =Substr(string,x+7,5)
        byte=Substr(string,x+13,6)
        i   =(x-1)/stringl+1
        n.i=n.i+1
        If fs/='' Then Do
            Parse VAR fs f_c '/' f_t;Parse VAR f_t 2 f_t
            xx=f_c+(f_t%15);t_c=t_c+xx;t_t=t_t+(xx*15)
            tc.i=tc.i+xx;tt.i=tt.i+(xx*15)
            ftrk=(f_c*15)+f_t
            t.i=t.i+(ftrk*byte)
            tota=tota+(ftrk*byte)
        End
    End
    "CONTROL DISPLAY REFRESH"
    gb  = Format((tota / 1073741824),,5)
    gbp = Format((tota / 1000000000),,5)
    tots=0;totf=0
    Do i=1 To n.0
        xx = Substr(string,(i-1)*stringl+1,stringl)
        Parse VAR xx dt cyl ',' bpc .
        x='    {'dt'  'Right(n.i,5)'   ',
          Right(Format(t.i/(1024*1024*1024),,5),14)
        If n.i=0 Then pck=0.00;Else pck=100*t.i/(n.i*15*cyl*bpc)
        tots = tots + (n.i*15*cyl*bpc)
        totf = totf + t.i
        pck = Right(Format(pck,,2),9)
        y = Right(Format(t.i/(1000*1000*1000),,5),14)
        xx=Right(tc.i,6)'/'Right(tt.i,7)
        data = 'line'i*2+2' = x y pck xx'
        Interpret data
    End
    If tots>0 Then pct=100*totf/tots;Else pct='0.00'
    If return_data Then,
        Return Format(gb,,5) Format(gbp,,5) Format(pct,,2) t_c"/"t_t
    data='line'i*2+1' = "'Right(Copies('=',14),36),
         Copies('=',14)'   ',
         Copies('=',6),
         Copies('=',14)'"'
    Interpret data
    data='line'i*2+2' = " Total (in GB.)'Right(Format(gb,,5),21),
         Right(Format(gbp,,5),14),
         Right(Format(pct,,2),9),
         Right(t_c,6)"/"Right(t_t,7)'"'
    Interpret data
    zedlmsg='Total space available is' gb 'GB. in' t_c 'Cylinders',
            '('t_t 'tracks).'
    "SETMSG MSG(ISRZ001)"
    lineh='¢'Centre(' DASD free space ',78,'-')
    linec=
    line1="{"Right('KKK',35)"            MMM         %    Cyl/Tracks"
    line2="{"Right(Copies('-',14),35) Copies('-',14)"   ",
                     Copies('-',6) Copies('-',14)
    Do while rc=0
        "DISPLAY PANEL(DYNAMIC$)"
        If Substr(linec,15,5)="/TOTS" Then Signal cmd_tots
    End
    Signal ext1

/*--------------------------------------------------------------------*/
/* Command 'TOTS' (total space)                                       */
/*--------------------------------------------------------------------*/
cmd_tots:
/*            Device  Cyl  Bytes/cyl                                  */
/*            ------  ---- ---------                                  */
    string  = "3380/S  0885,712140"||,
              "3380/D  1770,712140"||,
              "3380/T  2655,712140"||,
              "3390/S  1113,849960"||,
              "3390/D  2226,849960"||,
              "3390/T  3339,849960"||,
              "3390/5  5565,849960"||,
              "3390/9 10017,849960"
    stringl = Length("3380/T  2655,712140")
    Numeric Digits 15
    "TBTOP &DSTABLE"
    n.=0;t.=0;n.0=8
    Do Forever
        "TBSKIP &DSTABLE";If rc/=0 Then Leave
        x=Index(string,dt)
        i=(x-1)/stringl+1
        n.i=n.i+1
    End
    "CONTROL DISPLAY REFRESH"
    linec=
    lineh='¢'Centre(' DASD used ',78,'-')
    line1="{"Right('KKK',37)"            MMM"
    line2="{"Right(Copies('-',14),37) Copies('-',14)
    rc1 = 0
    Do While rc1=0
        tota=0
        Do i=1 To n.0
            x=(i-1)*stringl+1
            dt=Substr(string,x,7)' '
            If n.i/=0 Then Do
                cyl  = Substr(string,x+7,5)
                byte = Substr(string,x+13,6)
            End
            Else Do
                cyl=0;byte=0
            End
            t.i=n.i*(cyl*byte)
            tota=tota+t.i
            x='    {'dt' ~'Right(n.i,5)'  {',
              Right(Format(t.i/(1024*1024*1024),,5),14)
            y=Right(Format(t.i/(1000*1000*1000),,5),14)
            Interpret 'line'i*2+2' = x y'
        End
        gb  =Format((tota / 1073741824),,2)
        gbp =Format((tota / 1000000000),,2)
        data='line'i*2+1' = "'Right(Copies('=',14),38),
             Copies('=',14)'"'
        Interpret data
        data='line'i*2+2' = " Total (in GB.)'Right(Format(gb,,5),23),
             Right(Format(gbp,,5),14)'"'
        Interpret data
        zedlmsg="Total space available is" Format(gb,,5) "GB."
        rc2=4
        Do While rc2=4
            "SETMSG MSG(ISRZ001)"
            "DISPLAY PANEL(DYNAMIC$)"
            rc1=rc
            If Substr(linec,15,5)="/TOTF" Then Signal cmd_totf
            If rc1/=0 Then Leave
            Do i=1 To n.0
                n.i=Strip(Substr(Value('line'i*2+2),17,3))
                If \Datatype(n.i,'w') Then Do
                    dynline=i*2+2
                    dyncol=17
                    zedlmsg="Invalid value. Must be numeric."
                    Leave
                End
            End
            rc2=0
        End
    End
    Signal ext1

/*--------------------------------------------------------------------*/
/* Command 'PRINT'                                                    */
/*--------------------------------------------------------------------*/
cmd_print:
    Address TSO "NEWSTACK"
    Queue '            S      Free spce # of Lgst ext  Device  Alloc  ',
          '  Mount   Device'
    Queue 'Volser UCB  M VTOC Cyls/Trks Exts Cyls/trks  Type   Status ',
          'Attribute Status'
    Queue '------ ---- - ---- --------- ---- --------- ------- -------',
          '--------- ------'
    "TBTOP &DSTABLE"
    #tr=Trace('o')
    Do While rc=0
        "TBSKIP &DSTABLE"
        If rc/=0 Then Leave
        If fs/='' Then Do
            Parse VAR fs fs1 '/' fs2;Parse VAR le le1 '/' le2
            fs=Right(fs1+0,5) Right(fs2+0,3);le=Right(le1+0,5) Right(le2+0,3)
            ex=Right(ex+0,4)
        End
        Else Do
            fs=Substr(fs,1,9);le=Substr(le,1,9)
            ex=Substr(ex,1,4)
        End
        Queue Substr(vol,1,6) Substr(ucb,1,4) Substr(smsfl,1,1)' ',
              Substr(ix,1,3) fs ex le,
              Substr(dt,1,7) Substr(as,1,7) Substr(ma,1,9) Substr(ds,1,6)
    End
    If Verify(#tr,'NO')>0 Then x=Trace('r')
    Queue ''
    dd='EI'Time('s')
    "VGET ZTEMPF"
    Address TSO "ALLOC F("dd") DSN('"ztempf"') SHR REU"
    Address TSO "EXECIO * DISKW "dd" (FINIS"
    "LMINIT DATAID(DATAID) DDNAME("dd")"
    zedlmsg = 'Use your favourite print routine prior to ending edit',
            'session.'
    "SETMSG MSG(ISRZ001)"
    "EDIT DATAID(&DATAID)"
    "LMFREE DATAID(&DATAID)"
    Address TSO "FREE F("dd")"
    Signal ext1

/*--------------------------------------------------------------------*/
/* Command 'CONFIG'                                                   */
/*--------------------------------------------------------------------*/
cmd_config:
    "SELECT CMD(%DSCF)"
    Signal ext1

/*--------------------------------------------------------------------*/
/* Selection 'P'                                                      */
/*--------------------------------------------------------------------*/
opt_p:
    alk32dsn=                               /* initialise enq flag    */
    alk32enq="V"                            /* initialise enq flag    */
    alk32vol=vol                            /* initialise enq flag    */
    "VPUT (ALK32ENQ,ALK32VOL,ALK32DSN) SHARED"
    "CONTROL NONDISPL ENTER"
    "SELECT PGM(ISRUDL) PARM(ISRUDLP)"
    If rc=0 Then Do
        "VGET (ZLSTNAME) ASIS"
        "SELECT PGM(ISPLLP) PARM(LIST KEEP) SUSPEND SCRNAME(SETTINGS)"
        If rc=0 Then Do
            m#=Msg('Off')
            newname="'"Userid()".#VOLUME."vol".LIST'"
            Address TSO "DELETE" newname
            Address TSO "RENAME '"zlstname"'" newname
            If rc/=0 Then Do
                newname="'"zlstname"'"
                zedlmsg='List dataset kept but could not be renamed.',
                    'Use macro "DSS1" to summarise storage usage',
                    'or take a copy before subsequent processing.',
                    'Note:- There may be residual data at top of list',
                    'dataset from previous usage.'
            End
            Else zedlmsg='List dataset kept and renamed' newname'.',
                         'Use macro "DSS1" to summarise storage usage.'
            x=Msg(m#)
            "SETMSG MSG(ISRZ001)"
            "VIEW DATASET(&NEWNAME)"
        End
    End
    Parse Value '' With alk32dsn alk32enq alk32vol .
    "VPUT (ALK32DSN,ALK32ENQ,ALK32VOL) SHARED"
    Signal ext1

/*--------------------------------------------------------------------*/
/* Selection 'S'                                                      */
/*--------------------------------------------------------------------*/
opt_s:
    "VGET (ZDLDSNLV ZDLPVL) PROFILE"
    var1 = zdldsnlv                         /* save original value    */
    var2 = zdlpvl                           /* save original value    */
    alk32enq = "VT"                         /* initialise enq flag    */
    zdldsnlv = ""                           /* initialise dataset name*/
    zdlpvl   = vol                          /* set volume selected    */
    "VPUT (ZDLDSNLV ZDLPVL) PROFILE"
    "VPUT (ALK32ENQ) SHARED"
    "CONTROL NONDISPL ENTER"
    "SELECT PGM(ISRUDL) PARM(ISRUDLP)"
    zdldsnlv = var1                         /* restore saved value    */
    zdlpvl   = var2                         /* restore saved value    */
    "VPUT (ZDLDSNLV ZDLPVL) PROFILE"
    rcode = rc
    Signal ext1

/*--------------------------------------------------------------------*/
/* Selection 'V'                                                      */
/*--------------------------------------------------------------------*/
opt_v:
    "SELECT CMD(%DSVTOC VOLSER(&VOL)"
    rcode = rc
    Signal ext1

/*--------------------------------------------------------------------*/
/* Selection 'FB' (Free Bytes)                                        */
/*--------------------------------------------------------------------*/
opt_fb:
    string = "3380/T  2655  47476 "||,
             "3380/D  1770  47476 "||,
             "3380/S   885  47476 "||,
             "3390/9 10017  56664 "||,
             "3390/T  3339  56664 "||,
             "3390/D  2226  56664 "||,
             "3390/S  1113  56664 "

    Numeric Digits(15)
    fc = Substr(fs,1,Index(fs,'/')-1)
    ft = Substr(fs,Index(fs,'/')+1)
    x  = Substr(string,Index(string,dt),20)
    Parse VAR x . #cyl bpt .
    totf = (fc * bpt * 15) + (ft * bpt)
    pc   = Format(100*(totf/(#cyl*15*bpt)),,2)'%'
    zedlmsg = "Total free space for "vol" is "totf" bytes",
            "("Format(totf/(1024*1024*1024),,5) "MB.) -",
            pc"."
    "SETMSG MSG(ISRZ001)"
    Signal ext1

ext1:
    If rcode ¬= 0 Then rcode = 8
    "VPUT RCODE SHARED"
    Exit
