)ATTR
  $ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
  @ TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW) JUST(RIGHT)
  # TYPE(OUTPUT) INTENS(low) COLOR(blue)
  ~ TYPE(&TYP1)  COLOR(RED) COLOR(&COL1)
)BODY EXPAND(\\)
$&OTIM\-\ Dataset Information \-\-----
%&SID ===>_ZCMD                                                                +
%
+Dataset name:$&FILE
+
+General Data:
+   Volume serial     %===>~ZALVOL+          Current allocation:
+   Generic unit      %===>~ZALUNIT +           Allocated#SPCUC0    @TOTA  +
+   Space units       %===>~ZALSPC +            Allocated extents:  @EXTA  +
+   Primary quantity  %===>~ZAL1EX+             Maximum dir. blocks:@ALDIR +
+   Secondary quantity%===>~ZAL2EX+
+   Directory blocks  %===>~ZALDIR+          Current utilisation:
+   Record format     %===>~ZALRF +             Used#SPCUC1    +    @TOTU  +
+   Record length     %===>~ZALLREC+            Used extents:       @EXTU  +
+   Block size        %===>~ZALBLK+             Used dir. blocks:   @DIRU  +
+   Expiration date   %===>~ZALEXD  +           Number of members:  @NRMEM +
+
+Use%END+PF key to abandon screen.
)INIT
 &SID=&ZSYSID
 &OTIM=&ZTIME
 .HELP = HCOMP20
 IF (&TYP1 = &Z,INPUT)
   &TYP1 = INPUT
   &COL1 = RED
 ELSE
   &TYP1 = OUTPUT
   &COL1 = GREEN
 &GC001 = 'Field must be entered.'
 &GC002 = 'Entry not as specified.'
 &GC003 = 'Construction od DSNAME does not conform to standards.'
 &GC004 = 'Must be blank as record format is "U".'
 &GC005 = 'Entry out of range. For more information use help PF key.'
 &HGC005 = HCOMP23
 &GC006 = 'Entry must be numeric.'
 &GC007 = 'Entry must be BLK, TRK or CYL.'
 &GC008 = 'Must be > 0 for PDS.'
 &ALDIR = &ZALDIR
 &ZALSPC = TRANS( TRUNC (&SPCUC0,1)
          '&Z',BLK b,BLK B,BLK t,TRK T,TRK c,CYL C,CYL)
)PROC
     VER (&ZALVOL,NONBLANK,MSG=GC001)
     VER (&ZALSPC,NONBLANK,MSG=GC001)
     &ZALSPC = TRANS( TRUNC (&ZALSPC,1)
              b,BLK B,BLK t,TRK T,TRK c,CYL C,CYL MSG=GC007)
     VER (&ZAL1EX,NONBLANK,MSG=GC001)
     VER (&ZAL1EX,NUM,MSG=GC006)
     VER (&ZAL2EX,NONBLANK,MSG=GC001)
     VER (&ZAL2EX,NUM,MSG=GC006)
     IF (&DEVT = 3350)
        IF (&ZALSPC = TRK,TRKS)
           VER(&ZAL1EX,RANGE,1,16650)
           VER(&ZAL2EX,RANGE,0,16650)
        IF (&ZALSPC = CYL,CYLS)
           VER(&ZAL1EX,RANGE,1,555)
           VER(&ZAL2EX,RANGE,0,555)
     IF (&DEVT = 3380)
        IF (&ZALSPC = TRK,TRKS)
           VER(&ZAL1EX,RANGE,1,13275)
           VER(&ZAL2EX,RANGE,0,13275)
        IF (&ZALSPC = CYL,CYLS)
           VER(&ZAL1EX,RANGE,1,885)
           VER(&ZAL2EX,RANGE,0,885)
        VER (&ZALDIR,NONBLANK,MSG=GC001)
        VER (&ZALDIR,NUM,MSG=GC006)
/*   IF  (&ZALDIR = 0)                             */
/*       VER (&ZALDIR,LIST,XXXX,MSG=GC008)         */
     VER (&ZALDIR,RANGE,0,999,MSG=GC005)
     VER (&ZALRF,NONBLANK,MSG=GC001)
     VER (&ZALRF,LIST,F,V,U,FB,VB,FBA,VBA,MSG=GC002)
     IF  (&ZALRF ¬= U)
         VER (&ZALLREC,NONBLANK,MSG=GC001)
         VER (&ZALLREC,RANGE,0,32760)
         &LRECL = 'LRECL=&ZALLREC,'
     IF  (&ZALRF = U)
         &LRECL = &Z
     VER (&ZALBLK,NONBLANK,MSG=GC001)
     IF (&ZALBLK ¬= 0)
         VER (&ZALBLK,RANGE,1,32760)
     VPUT( ZALVOL ZALSPC ZAL1EX ZAL2EX ZALDIR ZALRF ZALLREC ZALBLK ) PROFILE
)END
