/*--------------------------ooo00 REXX 00ooo--------------------------*/
FDRR_ver='1.02'

n_st=mark(1)                                /* Mark Start

   FDRR: FDR Restore [&FDRR_VER.].
   -----

   Resore a dataset from the weekly pack backup at ETS.  This routine
   is designed to run from ISPF 3.4 listing against individual
   datasets and is based on pack (volume) backups.

   The dataset will be restored to original name suffixed by
   "T#tapeno" ("T#" literal followed by the tape volser).  You are
   allowed to rename it afterward.
   Watch this as existing datasets will be creamed (overwritten).

   Parameters positional:
     1. Dataset name (automatically supplied by ISPF under 3.4).
     2. "GDG" if not 0 (latest).  To use this parameter, you must
        supply a dataset placeholder of "/" for ISPF to substitute
        the dataset name.
   Keywords:
     /L  - List the backups for the volume.
     /LV - List VTOC of the backup for the volume.
           Note: For this feature you should be executing this routine
           against a '&DSNWILD.' dataset list (one of the datasets from
           Use this parameter with the GDG to get a listing of the
           contents of the tape. (To get a listing of a backup tape,
           pick any dataset on the volume and use this parameter against
           it.)
     the above "/L" list.
         - Volume if dataset is not cataloged, migrated or deleted.
           (No volume no restore.)

   Packaging:
    REXX:
     $ALKACCT, $ALKJC, $ALKJCPGM, $ALKUJBS
              - Return site cutomisations for jobcard.
     $DATEMAN - Convert Julian date to 'European'. (American version
                sucks.)
     $WILD    - Routine to do wildcard compares with returned dataset
                names.
     FDRR     - Duh!!
     FDRR$    - Site customiser for backup dataset name.
     JC       - Generate site customised JCL jobcard.  Without this
                routine you may need to manually edit the JOBCARD
                statements as some sites DO NOT like,
                  ex_class=A and hold_class=X

                              *****
*/
n_en=mark(-2)                               /* Mark End               */
    ARG parm#;Address ISPEXEC;"CONTROL ERRORS RETURN";ima_macro=0
    If parm#/='' Then Signal byp1
    "ISREDIT MACRO (parm#) NOPROCESS";If rc=0 Then ima_macro=1
byp1:
/*  "CONTROL ERRORS CANCEL"                                           */

ini1:
    Parse VAR parm# dsnold gen .;dsnold=Strip(dsnold,,"'")
    Parse SOURCE . . xcmd .
    If Wordpos(dsnold,'? ??')>0 Then Do
        If dsnold='??' Then Signal Help_me
        Signal on Syntax Name Help_me
        x=$br(xcmd '??');Exit
    End
    If Wordpos('/L',Translate(parm#))>0 Then Do
        parm#=Delword(parm#,Wordpos('/L',Translate(parm#)),1)
        xx='Address TSO "%'xcmd parm# '/JL"'
        x=$BR(xx);Exit
    End
    If Wordpos('/LV',Translate(parm#))>0 Then Do
        parm#=Delword(parm#,Wordpos('/LV',Translate(parm#)),1)
        list_vtoc=1
    End;Else list_vtoc=0
    If Wordpos('/JL',Translate(parm#))>0 Then Do
        j_list=1;parm#=Delword(parm#,Wordpos('/JL',Translate(parm#)),1)
    End;Else j_list=0
    "VGET (ZDLVOL) SHARED";volume=zdlvol
    If Index(parm#,'V=')>0 Then Do
        Parse VAR parm# p1 'V='volume p2
        parm#=Space(p1 p2);volume=Strip(volume)
    End
    If volume='' Then Do
        #m1=Msg('On');x=Outtrap('line.',500,'NOCONCAT')
        xx=Listdsi("'"dsnold"' NORECALL")
        x=Outtrap('Off');x=Msg(#m1)
        If xx<5 Then volume=sysvolume
        Else Do
            zedlmsg="'"dsnold"' not found. LISTDSI RC="xx",Reason=" ||,
                    sysreason,
                    SYSMSGLVL1,
                    SYSMSGLVL2
            "SETMSG MSG(ISRZ001)"
            Exit
        End
    End
    dsnwild=FDRR$(volume)
    If Index(dsnwild,'*')>0 Then Do
        dsnlevl=Substr(dsnwild,1,Index(dsnwild,'*')-1)
        dsnlevl=Substr(dsnlevl,1,Lastpos('.',dsnlevl)-1)
    End
    #m1=Msg('On');x=Outtrap('line.',5000,'NOCONCAT')
    Address TSO "LISTCAT LEV('"dsnlevl"') ALL"
    x=Outtrap('Off');x=Msg(#m1)
    If rc/=0 Then Do
        zedlmsg='LISTCAT output:'
        Do i=1 To line.0;zedlmsg=Space(zedlmsg line.i);End
        "SETMSG MSG(ISRZ001)"
        Exit
    End
    dsnlist=
    Do i=1 To line.0
        If Word(line.i,1)/='NONVSAM' Then Iterate
        Parse VAR line.i . . dsname .
        If $Wild(dsnwild,dsname)/='OK' Then Iterate
        j=i+3;Parse Var line.j . crdate .
        Parse Value Translate(crdate,' ','-') With . crdate
        j=i+6;Parse Var line.j tape .
        Parse Value Translate(tape,' ','-') With . tape
        dsnlist=dsname $dateman('j2e',crdate) tape dsnlist
    End
    dsnlist=Space(dsnlist)
    If j_list Then Do
        "CONTROL DISPLAY SAVE"
        Address TSO "CLEARSCR"
        Say "  Backups for '"dsnold"' on the following files:"
        Say '  Date       Gen Dataset                                    '
        Say '  ---------- --- -------------------------------------------'
        i=0
        Do While dsnlist/=''
            Parse VAR dsnlist dsname crdate tape dsnlist
            Say ' ' crdate Right(i*-1,3) dsname;i=i+1
        End
        Say ' ';Say Centre('***',72)
        "CONTROL DISPLAY RESTORE"
        Return 0
    End
    If \Datatype(gen,'w') Then gen=0
    If Abs(gen)>Words(dsnlist)%3 Then gen=0
    gen=Abs(gen)
    data=Subword(dsnlist,(gen)*3+1,3)
    Parse VAR data dsname crdate tape
Report_JCL:
/*--------------------------------------------------------------------*/
    #m1=Msg('On');x=Outtrap('line.',500,'NOCONCAT')
    Address TSO "STATUS"
    x=Outtrap('Off');x=Msg(#m1);list=
    Do i=1 To line.0
        Parse VAR line.i . id act .
        If Wordpos(act,'EXECUTING WAITING')>0 Then Do
            Interpret "Parse VAR id '"Userid()"' suf '('"
            list=list suf
        End
    End
    nat='ABCDEFGHIJKLMNOPQRSTUVWXYZ01234567890@#$';id='A'
    Do i=1 to Length(nat)
        suf=Substr(nat,i,1)
        If Wordpos(suf,list)>0 Then Iterate
        id=suf;Leave
    End
/*--------------------------------------------------------------------*/
    sep=Substr('//*',1,70,'-')'*'
    Address TSO 'NEWSTACK'
    Signal on Syntax Name error_on_JC
    pgmn=xcmd;pgmn=$alkjcpg(xcmd)
    x=JC(id '/Q /9');Signal error_off_JC
error_on_JC:
    Queue "//"userid()||id "JOB (2567,ALK),'"pgmn"',"
    Queue '//             CLASS=A,COND=(4,LT),'
    Queue '//             MSGCLASS=X,TIME=1440,REGION=0M,'
/*  Queue '//             NOTIFY=&SYSUID,LINES=9999'                  */
    Queue '//             NOTIFY=,LINES=9999'
    Queue sep
    Queue '//*'
    Queue '//* Check the default JOB card generated above........'
    Queue '//*'
error_off_JC:Signal off Syntax
    If list_vtoc Then Signal L_list_vtoc
    Queue sep
    Queue "//* Restoring from generation -"gen" made on" crdate"."
    Queue sep
    Queue '//RESTORE  EXEC PGM=FDRDSF'
    Queue '//SYSUDUMP DD SYSOUT=*'
    Queue '//SYSPRINT DD SYSOUT=*'
    Queue "//*"
    Queue '//DISK1    DD UNIT=3390,DISP=SHR,VOL=SER='volume
    Queue '//*'
    Queue '//TAPE1    DD DISP=OLD,DSN='dsname

    Queue '//SYSPRIN1  DD  SYSOUT=*'
    Queue '//*'
    Queue '//SYSIN DD *'
    Queue '  RESTORE TYPE=DSF'
    Queue '    SELECT  DSN='dsnold','
    Queue '            NEWNAME='dsnold'.T#'tape
    Signal Finish_JCL
L_list_vtoc:
    Queue '//PRINT    EXEC PGM=FDRABRP'
    Queue '//SYSPRINT DD SYSOUT=*'
    Queue '//ABRMAP   DD SYSOUT=*'
    Queue '//VSAMPRT  DD SYSOUT=*'
    Queue '//SYSUDUMP DD SYSOUT=*'
    Queue '//*'
    Queue '//TAPE001  DD DISP=OLD,DSN='dsname
    Queue '//*'
    Queue '//SYSIN DD *'
    Queue ' PRINT   TVTOC'
Finish_JCL:
    Queue '/*'
    Queue ''
    dd='HR'Time('s')
    Signal on Syntax Name error_on_$ZTEMPF1
    ztempf=$ztempf();Signal error_off_$ZTEMPF1
error_on_$ZTEMPF1:
    Address ISPEXEC "VGET ZTEMPF"
error_off_$ZTEMPF1:Signal off Syntax
    zedlmsg='You will have to manually submit this JCL or forever',
            'loose it to the bit bucket.'
    Address ISPEXEC "SETMSG MSG(ISRZ001)"
    Address TSO "ALLOC F("dd") DSN('"ztempf"') SHR REU"
    Address TSO "EXECIO * DISKW "dd" (FINIS"
    Address ISPEXEC "LMINIT DATAID(DATAID) DDNAME("dd")"
    Address ISPEXEC "EDIT DATAID(&DATAID)"
    Address ISPEXEC "LMFREE DATAID(&DATAID)"
    Signal on Syntax Name error_on_$ZTEMPF2
    Address TSO "FREE F("dd")";xx=$ztempf(ztempf,'/D')
error_on_$ZTEMPF2:Signal off Syntax
    Return 0


Signal get_out

Get_out:Exit
Help_me:
    chgchar='&'
    dsnwild=FDRR$(volume);dsnwild=$Cstring(dsnwild,'VOLUME','volume')
    Do i=n_st To n_en
        line=Sourceline(i)
        Do While Index(line,chgchar)>0
            Interpret "Parse VAR line p1 '"chgchar"' var '.' p2"
            If Index(var,'(')>0 Then Do
                Parse VAR var var '(' vl ')'
                If Â¬Datatype(vl,'W') Then vl=Length(var)
                Interpret 'line=p1||Substr('var',1,vl)||p2'
            End
            Else Interpret 'line=p1||'var'||p2'
        End
        x=nl_h(Substr(line,1,79))
    End
    Exit

nl_h:Parse Arg n#
    If ima_macro Then "LINE_BEFORE .ZFIRST=NOTELINE (n#)";Else Say n#
    Return 0
Mark:Arg diff;If \Datatype(diff,'W') Then diff=1;Return sigl+diff
