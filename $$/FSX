/*--------------------------ooo00 REXX 00ooo--------------------------*/
/* FSX: Files Stats Extract.                                          */
/*                                                                    */
/* Process the output from a CICS stats report and extract the FILE   */
/* details 'PZUS.DFHSTUP'.                                            */
/*                                                                    */
/* Parameters:                                                        */
/*   /E | /V | /B                                                     */
/*     - Action on the extraction.  Use /V if it is to exported to a  */
/*       permanent file.                                              */
/*   /R(applid)                                                       */
/*     -                                                              */
/*                                                                    */
/*--------------------------------------------------------------------*/
tsx:tsx_ver='1.03'
    ARG parm#;Address ISPEXEC;"CONTROL ERRORS RETURN";ima_macro=0
    If parm#/='' Then Signal byp1
    "ISREDIT MACRO (parm#) NOPROCESS"
    If rc=0 Then ima_macro=1

byp1:
/*  "CONTROL ERRORS CANCEL"                                           */

ini1:
    If Index(Translate(' 'parm#),' /R(')>0 Then Do
        Parse Value Translate(parm#) With p1 '/R(' xxx ')' p2
        If xxx/='' Then Do
            parm#=Space(p1 p2)
            parm_var=Translate(xxx,' ',',')
        End
    End;Else parm_var=
    If Wordpos('/E',Translate(parm#))>0 Then Do
        act='EDIT';parm#=Delword(parm#,Wordpos('/E',Translate(parm#)),1)
    End;Else act='BROWSE'
    If Wordpos('/V',Translate(parm#))>0 Then Do
        act='VIEW';parm#=Delword(parm#,Wordpos('/V',Translate(parm#)),1)
    End
    If ima_macro Then Do
        "ISREDIT (line)=LINE 1"
        If Word(line,1)/='Processing:' Then Do
            zedlmsg='Does not seem to be an "FSX" extract from the',
                    'CICS stats report dataset. Processing terminated.'
            "SETMSG MSG(ISRZ001)"
            Exit
        End
        If parm_var='' Then Do
            zedlmsg='You need to enter a CICS region (or a comma',
                    'seperated list) in the format',
                    '"/R(reg1{,reg2,...regn})" where regions are',
                    'fully qualified "CICSreg".'
            "SETMSG MSG(ISRZ001)"
            Exit
        End
        Address ISREDIT;"(last)=LINENUM .ZLAST"
        region=;extract=1;rr=0
        #tr=Trace('o')
        Do i=1 To last
            "(line)=LINE &I"
            If Substr(line,1,4)='CICS' Then region=Word(line,1)
            If Wordpos(region,parm_var)>0 Then x=Say_it(line)
        End
        Signal Write_files
    End;Else extract=0

    Parse VAR parm# infile . .
    If infile='' Then infile=0
    If Datatype(infile)='NUM' Then infile='PZUS.DFHSTUP('infile')'
    infile=Strip(infile,,"'")
    r_sy5=CICU$('SY5')
    r_sy8=CICU$('SY8')
    Parse VAlue '0 0' With t_sy5 t_sy8
    dd='EI'Time('s')
    If Index(infile,'(')=0 Then goovoo=infile;Else goovoo=$gdg(infile)
    If goovoo='Error' Then Do
        zedlmsg="Invalid generation '"infile"' passed."
        Address ISPEXEC "SETMSG MSG(ISRZ001)"
        Exit
    End
    x=Listdsi("'"goovoo"'")                 /* To return file's LRECL */
    Address TSO "ALLOC F("dd") DA('"goovoo"') SHR REU"

    Address TSO "NEWSTACK"
    dater=$Dateman('J2E',Translate(syscreate,'.','/'))
    dater=$Dateman('E-N',dater,'-1')'.'
    x=Say_it("Processing: '"goovoo"' from" dater)

    msz=4*(1024*1024)                       /* Memory for read        */
    #pr=msz%syslrecl                        /* No. records per read   */
    strt=1                                  /* Start read at          */
    #sta=strt                               /* Preserve Start read at */
    totr=strt-1                             /* Total records read     */
    totr=0                                  /* Total records accum    */
    outc=0                                  /* Output line counter    */
    eof=0                                   /* Enf of file (no)       */
/*  x=Say_it('  Region   No. of trans')                               */
/*  x=Say_it('  -------  ------------')                               */
    x=Say_it(' ');x=Say_it(' ')
    buffered=0;rr=0
    region_list=
Get_2_files:
    hit_files_part=0
    end_files_part=0
    #tr=Trace('o')
    Do Forever Until eof                    /* End of file test       */
        If \buffered Then Do
          Address TSO "EXECIO "#pr" DISKR "dd strt" (STEM linei. OPEN)"
          If rc/=0 Then eof=1;strt=;totr=totr+linei.0
          buffered=1;i=1
        End
        Do i=i To linei.0
            If Index(linei.i,'CICS 6.4.0')=2 Then Do
                i=i+1;Parse VAR linei.i . . . region .
                i=i+2
            End
            If Index(linei.i,'FILES - ')=2 Then Do
                region_list=Region_list region
If Wordpos(region,parm_var)>0 Then Do
    Say Copies('*',79)
    Say '*'
    Say '***** We have a hit:'
    Say '*****' region'='parm_var
    Say '*'
    Say Copies('*',79)
End
                x=Say_it(region 'from' dater'.')
                x=Say_it('=======')
                x=Say_it(' ')
                hit_files_part=1;Leave
            End
        End
        If hit_files_part Then Leave
        buffered=0
    End
    Do Forever Until eof                    /* End of file test       */
        If \buffered Then Do
          Address TSO "EXECIO "#pr" DISKR "dd strt" (STEM linei. OPEN)"
          If rc/=0 Then eof=1;strt=;totr=totr+linei.0
          buffered=1;i=1
        End
        Do i=i To linei.0
            If Index(linei.i,'CICS 6.4.0')=2 Then i=i+3
            If Index(linei.i,'TRANSIENT DATA - ')>0 Then Do
                x=Say_it(' ');x=Say_it('*'Copies('+',78)'*');x=Say_it(' ')
                end_files_part=1;Leave
            End
            x=Say_it(linei.i)
        End
        If end_files_part Then Leave
        buffered=0
    End
/*If Words(region_list)>1 Then eof=1                                  */
Say '** Region=>'Region'< buffered=>'buffered'< i=>'i'< eof=>'eof'<'
    If \eof Then Signal Get_2_files
    If eof & buffered Then Signal Get_2_files

Close_file:
    Address TSO "EXECIO 0 DISKR "dd" (STEM linei. FINIS)"
    Address TSO "FREE F("dd")"

    x=Say_it('           ============')
    x=Say_it("Processed:  '"goovoo"' from" dater)
    x=Say_it(,
        'Transaction executed: SY5 = '$comma(t_sy5) 'and  SY8 = '$comma(t_sy8))
    Queue ''
Write_files:
    dd='SX'Time('s');ztempf=$ztempf('/N')
    Address TSO "ALLOC F("dd") DSN('"ztempf"') NEW TRACKS UNIT(SYSALLDA)",
        "SPACE(50,50) RECFM(F B) LRECL(133) BLKSIZE(0) DSORG(PS) CATALOG",
        "RELEASE"
    If \extract Then Do
        Address TSO "EXECIO * DISKW "dd" (FINIS"
        Address ISPEXEC "LMINIT DATAID(DATAID) DDNAME("dd")"
        Address ISPEXEC "&ACT DATAID(&DATAID)"
        Address ISPEXEC "LMFREE DATAID(&DATAID)"
    End
    Else Address TSO "DELSTACK"

    If rr>0 Then Do
        Address ISPEXEC "LMINIT DATAID(DATAID) DDNAME("dd")"
        Address TSO "EXECIO * DISKW "dd" (STEM lineo. FINIS"
        Address ISPEXEC "&ACT DATAID(&DATAID)"
        Address ISPEXEC "LMFREE DATAID(&DATAID)"
    End
    Address TSO "FREE F("dd")";xx=$ztempf(ztempf,'D')

exi1:
    Exit

Say_it: Parse Arg s_txt
    If Wordpos(region,parm_var)>0 Then Do;rr=rr+1;lineo.rr=s_txt;End
    Queue s_txt;Return x
nl:Parse Arg n#
    "LINE_BEFORE .ZFIRST=NOTELINE (n#)";Return 0
