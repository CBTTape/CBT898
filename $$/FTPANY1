/******************************** REXX ********************************/
/**********************************************************************/
/* TRACE r                                                            */
/*--------------------------ooo000OOOO000ooo--------------------------*/
/*                                                                    */
/* Routine to Fast Track VSAM/any dataset (ideally from ISPF option   */
/* 3.4.                                                               */
/*                                                                    */
/* The following members are required to package this routine:        */
/*   REXX:                                                            */
/*     FTPANY1  - Driver                                              */
/*                                                                    */
/*   Panels:                                                          */
/*     FTPANY1  - Self generated.                                     */
/*                                                                    */
/*--------------------------------------------------------------------*/
    Address ISPEXEC
    Arg parm#
    If parm# ¬= "" Then Signal byp1
    "CONTROL ERRORS RETURN"
    "ISREDIT MACRO (parm#) NOPROCESS"

byp1:
    cactn = "RETURN"
/*  cactn = "CANCEL"                                                  */
    "CONTROL ERRORS" cactn

ini1:
    Parse VAR parm# idsname parm2 parm3

    If parm# = "HELP" | parm# = "?" Then Signal help
    If idsname = 'ST' Then Do
        idsname = parm2
        parm2   = 'ST'
    End
    If Datatype(idsname) = 'NUM' Then Do
        xx      = idsname
        idsname = parm3
        parm3   = xx
    End

    "VGET (ftpany1m,ftptemp) SHARED"
    If ftpany1m = 'Y' Then Signal set_noteline

    Parse SOURCE . . xcmd .

    userid  = Userid()
    spref   = Sysvar(Syspref)
    If userid /= spref then hlq = spref'.'userid
    Else                    hlq = userid
    xclass  = 'C'
    panel   = 'FTPANY1'

    acct    = 'Missing'
    mcl     = 'Missing'
    ftpjn1  = 'FTP-SRCE'
    ftpjn2  = 'FTP-DEST'
    vars    = 'FTPCLS,FTPCLD,FTPACCTS,FTPACCTD,FTPSYSID,FTPMCLS,FTPMCLD'
    "VGET ("vars") PROFILE"
    If ftpaccts = '' Then ftpaccts = acct
    If ftpacctd = '' Then ftpacctd = acct
    If ftpcls   = '' Then ftpcls   = 'C'
    If ftpcld   = '' Then ftpcld   = 'C'
    If ftpmcls  = '' Then ftpmcls  = 'X'
    If ftpmcld  = '' Then ftpmcld  = 'X'
    replace = 'N'

    If Substr(idsname,1,1) = "'" Then,
         dsn = Substr(idsname,2,Length(idsname)-2)
    Else dsn = sysuid'.'idsname
    ndsn = "'"dsn"'"
    x = Listdsi(ndsn "NORECALL")
    If x > 4 Then Do
        Parse VAR sysmsglvl2 . gc009
        Signal exi1
    End
    gc009 = 'Change dataset name if different to source.'
    "SETMSG MSG(GC009)"
    odsname = idsname
    If parm2 = 'ST' Then Do
        day# = 1                            /* Monday (day #1)        */
        xx = $DATEMAN('E-N',,,day#-$DATEMAN('E2N'))
        If Datatype(parm3) = 'NUM' Then Do i=1 To Abs(parm3)
            xx = $DATEMAN('E-N',xx,,-7)
        End
        Parse VAR xx dd '/' mm '/' +3 yy .
        mon.0 = yy || mm || dd
        odsname = "'"Substr(odsname,2,Length(odsname)-2)'.ST'mon.0"'"
    End

    dsn = hlq'.TEMP1'
    Call Build_panel

    Address ISPEXEC
    "LIBDEF ISPPLIB DATASET ID('&DSN') STACK"

scr1:
    zcmd = ''
    "DISPLAY PANEL(&PANEL)"
    If rc ¬= 0 Then Do
        gc009 = 'Processing abandoned.'
        Signal exi1
    End

    If Substr(idsname,1,1) = "'" Then Parse VAR idsname "'" idsname "'"
    If Substr(odsname,1,1) = "'" Then Parse VAR odsname "'" odsname "'"

    Parse SOURCE op_sys op_mode xcmd dd_name dsn_n .
    Address TSO
    "NEWSTACK"
    Call Build_JCL
    Address ISPEXEC "VGET ZTEMPF"
    "ALLOC DD(ZTEMPF) DS('"ztempf"') SHR REU"
    "EXECIO * DISKW ZTEMPF (FINIS"
    "DELSTACK"
    Address ISPEXEC
    "LMINIT DATAID(DATAID) DDNAME(ZTEMPF)"
    ftpany1m = 'Y'
    "VPUT (ftpany1m,ftptemp) SHARED"
    "EDIT DATAID(&DATAID) MACRO("xcmd")"
    "LMFREE DATAID(&DATAID)"
    Address TSO "FREE DD(ZTEMPF)"
    gc009 = ''

exi1:
    "LIBDEF ISPPLIB"
    Address TSO "DELETE '"dsn"'"

    "VPUT ("vars") PROFILE"
    "SETMSG MSG(GC009)"
    Exit

/*--------------------------------------------------------------------*/
/* Set up noteline (TF 67)                                            */
/*--------------------------------------------------------------------*/
set_noteline:
    ftpany1m = ''
    "VPUT (ftpany1m) SHARED"

    name = getname('A')
    Parse var name sname '.' cname .
    cname = U2Lower(cname,2)
    ll = 66
    string = ,
 "-------------------------ooo000OOOO000ooo-------------------------"||,
 "                                                                  "||,
 ''Substr(' Hello' cname'.',1,ll)||,
 "                                                                  "||,
 " The following is the JCL to fast track the selected dataset to   "||,
 " the new system. Either submit the job direct from here or copy   "||,
 " it to a pemananet dataset for safe keeping.                      "||,
 "                                                                  "||,
 " All details held within these walls will self destruct on        "||,
 " hitting of END PF key.                                           "||,
 "                                                                  "||,
 " -----------------------------------------------------------------"||,
 " NOTE - NOTE - NOTE - NOTE - NOTE - NOTE - NOTE - NOTE - NOTE     "||,
 " -----------------------------------------------------------------"||,
 " 1.                                                               "||,
 " Your password is imbedded in the JCL. To preserve it from prying "||,
 " eyes, if you don't have sufficient faith in SDSF security, change"||,
 " the MSGCLASS=X to Z.                                             "||,
 " Same applies if you keep a copy for posterity.                   "||,
 "                                                                  "||,
 " 2.                                                               "||,
 " The following temporary dataset name will be used to FTP your    "||,
 " selected dataset between the two systems,                        "||,
 "                                                                  "||,
 ""Substr("   '"ftptemp"'",1,ll)||,
 "                                                                  "||,
 " This may conflict with existing datasets. The onus is on you to  "||,
 " rename or manually change the JCL. Note that this name will be   "||,
 " used on both systems.                                            "||,
 "                                                                  "||,
 "------------------------------------------------------------------"

    "ISREDIT RESET"
    "ISREDIT (caps) = CAPS"
    "ISREDIT CAPS = OFF"
    nl = Length(string) % ll
    Do i=1 To nl
       line = '*'Substr(string,((i-1)*ll)+1,ll)'*'
       x = nl1(line)
    End
    "ISREDIT CAPS = (caps)"
    Exit

nl1: Parse Arg ntl
    "ISREDIT LINE_BEFORE .ZFIRST = NOTELINE (ntl)"
    Return 0

/*--------------------------------------------------------------------*/
/* Get name from ACEE control block (imported from REXX '$getname' for*/
/* self containment).                                                 */
/*--------------------------------------------------------------------*/
getname:
    Parse Upper Arg parm#
    ascb = Storage('224',4)
    asxb = Storage(d2x(c2d(ascb)+x2d('6c')),4)
    acee = Storage(d2x(c2d(asxb)+x2d('c8')),4)
    nam@ = Storage(d2x(c2d(acee)+x2d('64')),4)
    name = Storage(c2x(nam@),30)
    len  = c2d(Substr(name,1,1))
    name = Substr(name,2,len-1)
    If parm# /= 'A' Then
        name = U2Lower(name,2)
    Return name

/*--------------------------------------------------------------------*/
/* Convert upper to lower (imported from REXX routine 'lower' for     */
/* self containment).                                                 */
/*--------------------------------------------------------------------*/
U2Lower:
    ARG text,pos,rep
    lc = 'abcdefghijklmnopqrstuvwxyz'
    uc = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
    If Datatype(rep) /= 'NUM' | Index(rep,'.') > 0 Then rep = 99999
    If Datatype(pos) /= 'NUM' | Index(pos,'.') > 0 Then pos = 2
    rname = ''
    Do i=rep by -1 To 1
        Parse VAR text name text
        If pos > 1 Then Do
            pref = Substr(name,1,pos-1)
            suff = Substr(name,pos)
        End
        Else Do
            pref = ''
            suff = name
        End
        suff = Translate(suff,lc,uc)
        rname = rname pref || suff
        If text = '' Then Leave
    End
    Return Strip(rname text)

/*--------------------------------------------------------------------*/
/* Build the JCL using the Queue stack.                               */
/*--------------------------------------------------------------------*/
Build_JCL:
ftptemp = hlq'.DUMP.'ftpsysid'.TEMP'
Queue "//"userid"S JOB "ftpaccts",'"ftpjn1"',"
Queue '//             CLASS='ftpcls','
Queue '//             MSGCLASS='ftpmcls','
Queue '//             NOTIFY=&SYSUID'
Queue '//*'
Queue "//*   EX Self generated from command '"xcmd"'."
Queue '//*'
Queue '//*-------------------------------------------------------------------*'
Queue '//*'
Queue '//* Allocate unload data sets'
Queue '//*'
Queue '//RERUN    EXEC PGM=IEFBR14'
Queue '//OUT      DD DSN='ftptemp','
Queue '//            DISP=(MOD,DELETE),'
Queue '//            UNIT=SYSALLDA,SPACE=(TRK,(0,0))'
Queue '//*'
Queue '//* Copy product data sets to unload data sets'
Queue '//*'
Queue '//COPY     EXEC PGM=ADRDSSU,REGION=4M'
Queue '//OUT      DD DSN='ftptemp','
Queue '//            DISP=(NEW,CATLG),UNIT=SYSALLDA,MGMTCLAS=SCRATCH,'
Queue '//            SPACE=(CYL,(500,300),RLSE),'
Queue '//            DCB=(BLKSIZE=32760)'
Queue '//SYSPRINT DD SYSOUT=*'
Queue '//SYSIN    DD *'
Queue '    DUMP                           -'
Queue '        DS(INC(                    -'
Queue '            'idsname '-'
Queue '          )                        -'
Queue '          )                        -'
Queue '        OUTDD(OUT)                 -'
Queue '        TOL(ENQF) COMPRESS'
Queue '/*'
Queue '//*'
queue '//* Use FTP to send unload data sets to target system'
Queue '//*'
Queue '// IF RC LE 4 THEN'
Queue "//FTPPUT   EXEC PGM=FTP,PARM='"ftpsysid" (EXIT'"
Queue '//RESERVE  DD DISP=OLD,DSN='ftptemp
Queue '//SYSPRINT DD SYSOUT=*'
Queue '//SYSIN    DD *'
Queue userid passw
Queue 'EBCDIC'
Queue 'MODE B'
Queue 'SITE TRACK'
Queue 'SITE PRIMARY=500'
Queue 'SITE SECONDARY=300'
Queue "PUT '"ftptemp"' '"ftptemp"'"
Queue 'QUIT'
Queue '/*'
Queue '// ENDIF'
Queue '//*'
Queue '//* SUBMIT JOB TO RELOAD ON TARGET SYSTEM'
Queue '//*'
Queue '// IF RC LE 4 THEN'
Queue '//REMOTE   EXEC PGM=IEBGENER'
Queue '//SYSUT2   DD SYSOUT=(E,INTRDR)'
Queue '//SYSPRINT DD SYSOUT=*'
Queue '//SYSIN    DD DUMMY'
Queue '//SYSUT1   DD DATA,DLM=$$'
Queue "//"userid"D JOB "ftpacctd",'"ftpjn2"',"
Queue '//             CLASS='ftpcld','
Queue '//             MSGCLASS='ftpmcld','
Queue '//             NOTIFY=&SYSUID'
Queue '/*XEQ 'ftpsysid
Queue '//*'
queue '//* Copy from unload data sets to new data sets'
Queue '//*'
Queue '//RESTORE  EXEC PGM=ADRDSSU'
Queue '//CART     DD DISP=(OLD,DELETE),DSN='ftptemp
If volser /= '' Then,
    Queue '//DASD     DD UNIT=3390,VOL=SER='volser',DISP=OLD'
Queue '//SYSPRINT DD SYSOUT=*'
Queue '//SYSUDUMP DD SYSOUT=*'
Queue '//ABNLIGNR DD DUMMY'
Queue '//SYSIN    DD *'
Queue '   RESTORE -'
Queue '        DS (INC(        -'
Queue '             'idsname '-'
Queue '          )            -'
Queue '          )            -'
Queue '        INDDNAME(CART) -'
If idsname /= odsname Then Do
    Queue '        RENAMEU(                -'
    Queue '          ('idsname', -'
    Queue '           'odsname'), -'
    Queue '          )                     -'
End
If volser /= '' Then,
    Queue '        OUTDDNAME(DASD) -'
If replace = 'Y' Then,
Queue '        REPLACE         -'
Queue '        TOL(ENQF)  TGTA(SRC) CATALOG'
Queue '/*'
Queue '$$'
Queue '// ENDIF'
Queue '//*'
Queue '//* Cleanup after processing'
Queue '//*'
Queue '//CLEANUP  EXEC PGM=IEFBR14'
Queue '//DD1      DD DSN='ftptemp','
Queue '//            DISP=(MOD,DELETE),'
Queue '//            UNIT=SYSALLDA,SPACE=(TRK,(0,0))'
Queue ''

Return 0


/*--------------------------------------------------------------------*/
/* Create a panel PDS for LIBDEF'ing.                                 */
/*--------------------------------------------------------------------*/
Build_panel:
    mempref   = 'FTPANY'
    forchar.0 = 0
    chgchar.0 = '`'
    forchar.1 = '`'
    subchar.1 = mempref
    forchar.2 = '~'
    subchar.2 = '/'
    #panel1   = 1                           /* First panel number     */
    #panels   = 1                           /* Number of panels       */


    x   = Msg('Off')
    Address TSO
    "DELETE '"dsn"'"
    dd  = 'IA'Time('s')
    "ALLOC DA('"dsn"') NEW CATALOG CYL SPACE(10,2)",
       "DSORG(PO) LRECL(80) BLKSIZE(0) UNIT(SYSALLDA) DIR(2)",
       "RECFM(F B) REU"
    "FREE  DA('"dsn"')"

    Do i=#panel1 To #panels
        member = mempref||i
        Interpret "Call make_mem_"i
        Call build_queue
    End

    Return 0


/*--------------------------------------------------------------------*/
/* Populate the queue from the source lines                           */
/*--------------------------------------------------------------------*/
build_queue:
    "NEWSTACK"

    #i_backup = i
    #j_backup = j
    Trace Off
    Do i=n_st To n_en
        If forchar.0 > 0 Then Do
            If Substr(Sourceline(i),1,1) = chgchar.0 Then Do
                line = Substr(Sourceline(i),2)
                DO j=1 To forchar.0
                    line = $cstring(line,forchar.j,subchar.j)
                End
                Queue line
            End
            Else Queue Sourceline(i)
        End
        Else Queue Sourceline(i)
    End
    Queue ''
    i = #i_backup
    j = #j_backup

    "ALLOC F("dd") DA('"dsn"("member")') SHR REU"
    "EXECIO * DISKW "dd" (FINIS"
    "FREE  F("dd")"
    "DELSTACK"

    Return 0

Mark: Arg diff;If Datatype(diff)/='NUM' Then diff=1;Return sigl+diff

/*--------------------------------------------------------------------*/
/* Change string                                                      */
/*--------------------------------------------------------------------*/
$cstring:
    PArse ARG string,fstrg,tstrg,start,rep
    Numeric Digits 10
    If rep = '*' Then rep = 9999999999
    If Datatype(rep) /= 'NUM' | Index(rep,'.') > 0 Then rep = 1
    If Datatype(start) /= 'NUM' | Index(start,'.') > 0 Then start = 1
    fl = Length(fstrg)
    tl = Length(tstrg)
    Do While rep > 0
        start = Index(string,fstrg,start)
        If start = 0 Then Leave
        string = Delstr(string,start,fl)
        string = Insert(tstrg,string,start-1,tl)
        rep = rep -1
        start = start + tl
    End
    Return string

/*--------------------------------------------------------------------*/
/* Create member "CONFH1" from sourcelines between the '/* */'        */
/*--------------------------------------------------------------------*/
make_mem_1: n_st = mark(2)
/*
)PANEL
)ATTR  DEFAULT(%+_)
 ~ TYPE(TEXT) INTENS(HIGH) SKIP(ON)
 @ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
 ` TYPE(TEXT) INTENS(LOW) COLOR(GREEN)
 ¬ TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW) CAPS(OFF)
 ? TYPE(INPUT) INTENS(NON)
{ TYPE(AB)
} TYPE(NT)
)ABC DESC('Menu') MNEM(1)
PDC DESC('Settings') UNAVAIL(ZPM1) MNEM(1) ACC(CTRL+S)
 ACTION RUN(ISRROUTE) PARM('SET')
PDC DESC('View') UNAVAIL(ZPM2) MNEM(1) ACC(CTRL+V)
 ACTION RUN(ISRROUTE) PARM('BR1')
PDC DESC('Edit') UNAVAIL(ZPM3) MNEM(1) ACC(CTRL+E)
 ACTION RUN(ISRROUTE) PARM('ED1')
PDC DESC('ISPF Command Shell') UNAVAIL(ZPM4) MNEM(6) ACC(CTRL+C)
 ACTION RUN(ISRROUTE) PARM('C1')
PDC DESC('Dialog Test...') UNAVAIL(ZPM5) MNEM(8) ACC(CTRL+T)
 ACTION RUN(ISRROUTE) PARM('DAL')
PDC DESC('Other IBM Products...') UNAVAIL(ZPM6) MNEM(1) ACC(CTRL+O)
 ACTION RUN(ISRROUTE) PARM('OIB')
PDC DESC('SCLM') UNAVAIL(ZPM7) MNEM(3) ACC(CTRL+L)
 ACTION RUN(ISRROUTE) PARM('SCL')
PDC DESC('ISPF Workplace') UNAVAIL(ZPM8) MNEM(6) ACC(CTRL+W)
 ACTION RUN(ISRROUTE) PARM('WRK')
PDC DESC('Status Area...') UNAVAIL(ZPMS) MNEM(8) ACC(CTRL+A)
 ACTION RUN(ISRROUTE) PARM('SAM')
PDC DESC('Exit') MNEM(2) PDSEP(ON) ACC(CTRL+X) ACTION RUN(EXIT)
)ABCINIT
.ZVARS=ISR@OPT
)ABC DESC('Utilities') MNEM(1)
PDC DESC('Library') UNAVAIL(ZUT1) MNEM(1) ACC(ALT+1)
 ACTION RUN(ISRROUTE) PARM('U1')
PDC DESC('Data set') UNAVAIL(ZUT2) MNEM(1) ACC(ALT+2)
 ACTION RUN(ISRROUTE) PARM('U2')
PDC DESC('Move/Copy') UNAVAIL(ZUT3) MNEM(1) ACC(ALT+3)
 ACTION RUN(ISRROUTE) PARM('U3')
PDC DESC('Data Set List') UNAVAIL(ZUT4) MNEM(2) ACC(ALT+4)
 ACTION RUN(ISRROUTE) PARM('U4')
PDC DESC('Reset Statistics') UNAVAIL(ZUT5) MNEM(5) ACC(ALT+5)
 ACTION RUN(ISRROUTE) PARM('U5')
PDC DESC('Hardcopy') UNAVAIL(ZUT6) MNEM(1) ACC(ALT+6)
 ACTION RUN(ISRROUTE) PARM('U6')
PDC DESC('ISPF C/S Install...') UNAVAIL(ZUTDT) MNEM(1) ACC(ALT+7)
 ACTION RUN(ISRROUTE) PARM('UDT')
PDC DESC('Outlist') UNAVAIL(ZUT7) MNEM(1) ACC(ALT+8)
 ACTION RUN(ISRROUTE) PARM('U8')
PDC DESC('Commands...') UNAVAIL(ZUT8) MNEM(1) ACC(ALT+9)
ACTION RUN(ISRROUTE) PARM('U9')
PDC DESC('Reserved') UNAVAIL(ZUT9) MNEM(6)
ACTION RUN(noaction) PARM('U10')
PDC DESC('Format') UNAVAIL(ZUT10) MNEM(1) ACC(ALT+F1)
 ACTION RUN(ISRROUTE) PARM('U11')
PDC DESC('SuperC') UNAVAIL(ZUT11) MNEM(1) PDSEP(ON) ACC(CTRL+F2)
 ACTION RUN(ISRROUTE) PARM('U12')
PDC DESC('SuperCE') UNAVAIL(ZUT12) MNEM(2) ACC(CTRL+F3)
 ACTION RUN(ISRROUTE) PARM('U13')
PDC DESC('Search-For') UNAVAIL(ZUT13) MNEM(2) ACC(CTRL+F4)
 ACTION RUN(ISRROUTE) PARM('U14')
PDC DESC('Search-ForE') UNAVAIL(ZUT14) MNEM(4) ACC(CTRL+F5)
 ACTION RUN(ISRROUTE) PARM('U15')
)ABCINIT
.ZVARS=PDFUTIL
)ABC DESC('Help') MNEM(1)
PDC DESC('General') MNEM(1) ACTION RUN(TUTOR) PARM('ISR40010')
PDC DESC('Appendices') MNEM(6) ACTION RUN(TUTOR) PARM('ISR00004')
PDC DESC('Index') MNEM(5) ACTION RUN(TUTOR) PARM('ISR91000')
)ABCINIT
.ZVARS=FPAHELP
)BODY EXPAND(\\) LMSG(MYLMSG)
{ Menu{ Utilities{ Help}
`\-\
+\ \ VSAM FTP Entry Screen \ \
%&SID ===>_ZCMD                                                               +
¬MYLMSG
+
+Enter parameters below for FTP of:@&IDSNAME
`  System-id %===>_Z   ~<=                  `Destination
`  Password  %===>?PASSW   ~<=              `Password for FTP
`  Rename    %===>_ODSNAME                                     ~<=
`  Volume    %===>_VOLSER~<=                `If not SMS managed
`  Replace   %===>_Z~<=                     `Replace if exists on dest.@Y`or@N`.
+
+JCL info:         Source           Destination
`  Account   %===>_FTPACCTS    ~<=>_FTPACCTD    ~<=
+  Classes:
`   Execute  %===>_Z~<=          =>_Z~<=+
`   Message  %===>_Z~<=          =>_Z~<=+
+
+
`Use@END`PF key to abandon processing.
)INIT
   &SID = &ZSYSID
   .ZVARS = '(FTPSYSID,REPLACE,FTPCLS,FTPCLD,FTPMCLS,FTPMCLD)'
)PROC
   VER(&FTPSYSID,NB,NAME)
   VER(&PASSW,NB)
   VER(&ODSNAME,NB,DSNAME)
   VER(&VOLSER,NAME)
   VER(&REPLACE,NB,LIST,Y,N)
   VER(&FTPACCTS,NB)
   VER(&FTPACCTD,NB)
   VER(&FTPCLS,NB)
   VER(&FTPCLD,NB)
   VER(&FTPMCLS,NB)
   VER(&FTPMCLD,NB)
)END
*/
    n_en = mark(-2);Return 0

