/*--------------------------ooo00 REXX 00ooo--------------------------*/
    n_st=mark(2)                                        /* Mark Start

    GDGPERM:
    Create a permanent copy of a GDG under dataset name of
        gdg.base.TEMP.Dyymmdd
    on tape.
    You may put it on DADS by editting the JCL accordingly.

    JCL needs to be manually subnitted.

    Parameter:
       gdg.base.GnnVnn
           - or -
       gdg.base.GnnVnn

    The following members are required to package this function.
    REXX:
      $ALKCICS - Return the 'canned' GDG bases we control/manipulate.
      $ALKJC   - Return jobcard information for site.
      BR       o BR to browse help instructions from this routine.
      GDGPERMR - This driver.
      $GDGWHEN - Return the date the GDG waqs created to be used in new
                 dataset name.

    Panel:
      DYNAMIC$ - Dynamic display/data entry panel.

*/;n_en=mark(-2)                                        /* Mark End   */
GDGPERMR:ver='1.01'
    Address ISPEXEC;"CONTROL ERRORS RETURN";ima_macro=0
    Arg parm#;If parm#/='' Then Signal byp1
    "ISREDIT MACRO (parm#) NOPROCESS";If rc=0 Then ima_macro=1

byp1:
/*  "CONTROL ERRORS CANCEL"                                           */

ini1:
    If w1='??' Then Signal help
    If w1='?' Then Do
        x=BR(xcmd "??");Exit
    End
    Parse VAR parm# guvu
        zedlmsg=w1 crdate dow rest
        Address ISPEXEC "SETMSG MSG(ISRZ001)"
    If guvu='' Then zedlmsg='Enter GDG to pe PERMed.'
    Else Do
        If Substr(guvu,1,1)/="'" Then guvu="'"Sysvar(Syspref)"."guvu"'"
        zedlmsg='Change GDG name or just [ENTER] to process.'
    End
    "SETMSG MSG(ISRZ001)"
    x=build_screen_1();dynline=3;dyncol=15

    idcams=1

Enter_GDG:
    "SETMSG MSG(ISRZ001)"
    "DISPLAY PANEL(DYNAMIC$)"
    If rc/=0 Then Do
        zedlmsg='Previous function terminated.'
        "SETMSG MSG(ISRZ001)"
        Exit
    End
    w1= Strip(Substr(linec,11))
    If w1='?' Then Do
        x=BR(xcmd "??")
        linec=
        Signal sel_appl
    End
    guvu=Strip(Substr(line3,15,46))
    If Substr(guvu,1,1)/="'" Then guvu="'"Sysvar(Syspref)"."guvu"'"
    Parse Value Gdgwhen(guvu,'/R') With w1 crdate dow rest
    If w1='Error' Then Do
        zedlmsg=w1 crdate dow rest
        Address ISPEXEC "SETMSG MSG(ISRZ001)"
        Signal Enter_GDG
    End
    w1=Strip(w1,,"'")
    gdgperm=Substr(w1,1,Lastpos('.',w1)-1)'.TEMP.D'$Dateman('REV',crdate,2,'D')
    Address TSO "NEWSTACK"
    sysid=Strip(storage(d2x(x2d(c2x(storage(10,4)))+x2d(154)),8))
    x=Build_JCL()
    Queue ''
    dd='EI'Time('s');ztempf=$ztempf()
    Address TSO "ALLOC F("dd") DSN('"ztempf"') SHR REU"
    Address TSO "EXECIO * DISKW "dd" (FINIS"
    Address ISPEXEC "LMINIT DATAID(DATAID) DDNAME("dd")"
    Address ISPEXEC "EDIT DATAID(&DATAID)"
    Address ISPEXEC "LMFREE DATAID(&DATAID)"
    Address TSO "FREE F("dd")";xx=$ztempf(ztempf,'D')

    Exit

Build_JCL:
jid=Userid()'P'
def_ac='SU1ZIBMS';def_ex='H';def_hd='X';def_tp='CART'
v1='def_ac def_ex def_hd def_tp'
Signal on Syntax Name error_off_ACCT
Interpret "Parse Value $alkjc(v1) With" v1
error_off_ACCT:Signal off Syntax
#tr=Trace('o')

Queue "//"jid" JOB ("def_ac"),'GDG2PERM',"
Queue '//             CLASS='def_ex', COND=(4,LT),'
Queue '//             MSGCLASS='def_hd',TIME=1440,REGION=0M,'
Queue '//             NOTIFY=&SYSUID,LINES=9999'
Queue '//*MAIN    CLASS=CICSUTIL,LINES=(999,W),SYSTEM='sysid
Queue '//*'
Queue '//* ---------------------------------------------------- *'
Queue '//*                                                      *'
Queue '//* Make a permanent copy of a GDG                       *'
Queue '//*                                                      *'
Queue '//* ---------------------------------------------------- *'
If idcams Then Do
    Queue '//RERUN    EXEC PGM=IDCAMS,REGION=4M'
    Queue '//SYSPRINT  DD SYSOUT=*'
    Queue '//SYSIN   DD *'
End
Else Do
    Queue '//RERUN    EXEC PGM=IKJEFT01,REGION=4M'
    Queue '//SYSTSPRT  DD SYSOUT=*'
    Queue '//SYSTSIN   DD *'
End
Queue "  DELETE '"gdgperm"' NOSCRATCH"
If idcams Then Queue '  IF MAXCC<9 THEN SET MAXCC=0'
Queue '/*'
Queue '//*'
Queue '//COPYIT   EXEC PGM=IEBGENER,REGION=4096K'
Queue '//SYSUT1   DD  DSN='guvu','
Queue '//         DISP=OLD'
Queue '//SYSUT2   DD  DSN='gdgperm','
Queue '//*'
Queue '//*        DISP=(NEW,CATLG,CATLG),'
Queue '//*        UNIT=SYSDA,VOL=SER=ZSC500,'
Queue '//*        SPACE=(CYL,(500,200),RLSE),'
Queue '//*        DCB=(SYS1.DSCB,DSORG=PS,RECFM=VB,LRECL=32756,'
Queue '//*        BLKSIZE=32760)'
Queue '//*'
Queue '//         DISP=(NEW,CATLG),'
Queue '//         UNIT='def_tp','
Queue '//         LABEL=(1,SL,EXPDT=99000),'
Queue '//         DCB=(SYS1.LINKLIB,DSORG=PS,LRECL=32756,BLKSIZE=32760,'
Queue '//         RECFM=VB)'
Queue '//*'
Queue '//SYSPRINT DD  SYSOUT=*'
Queue '//SYSIN    DD  DUMMY'
Queue '//*'
Queue '//'
Return 0
build_screen_1:
    lineh='¢'Centre(' Permanent Copy of GDG ',78,'-')
    linec =
    line1 =
    line2 ="{ Enter parameters below:"
    line3 ='{    GDG}===>~'Substr(guvu,1,46)'}<='
    line14='{ Enter¢?{on the command line for HELP.'
    line15='{ Use¢END{PF key to abandon processing.'
    Return 0

Mark:Arg n#;If Datatype(n#)/='NUM' Then n#=1;Return sigl+n#

Help:
    Do i=n_st To n_en;nl=Sourceline(i)
    If rcm=0 Then "ISREDIT LINE_BEFORE 1=NOTELINE (nl)"
    Else Say Substr(nl,1,79);End;Return 0
