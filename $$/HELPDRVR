/******************************** REXX ********************************/
    #hlpdver='V1.29';#time='N'
    #cname1st=1                             /* Christian name first   */
    tutever='Unspecified'
    #trace='N'
/*--------------------------ooo000OOOO000ooo--------------------------*/
/*                                                                    */
/*  HELPDRVR:                                                         */
/*                                                                    */
/*  Routine to drive dynamic tutorial text.                           */
/*                                                                    */
/*  Members to package this routine:                                  */
/*  REXX:                                                             */
/*    $DATEMAN - TDATE MANipulator, to generate dates.                */
/*    HELPDRVR - This driver. Self documents using member HELPTT if   */
/*               no parameters passed.                                */
/*    HELPTT   - Tutorial member for this facility. Use as            */
/*               customisable template.                               */
/*    HELPTN   o Tutorial Navigator.                                  */
/*  Panel:                                                            */
/*    HELPDRVP - Dynnamic display panel.                              */
/*    HELPTBD1 o Table display panel (used for debugging only).       */
/*  Skeleton:                                                         */
/*    HELPDRVS - Dynnamic text offload for print                      */
/*                                                                    */
/*  For more information, execute it.                                 */
/*--------------------------------------------------------------------*/
    If #trace='Y' Then Trace r
    Arg #parm;Address ISPEXEC;"CONTROL ERRORS RETURN"
    Parse SOURCE . . #xcmd .
    #ddfree=0;zedsmsg=
    If #parm/='' Then Signal byp1
    "ISREDIT MACRO (#parm) NOPROCESS"
    If rc=0 Then Do
        "ISREDIT (#member) = MEMBER"
        If #member=#xcmd Then #member=
        Else Do
            "ISREDIT (#dsn) = DATASET"
            #helpdd='$H'Time('s')
            Address TSO "ALLOC F("#helpdd") DA('"#dsn"') SHR REU"
            #ddfree=1
            #member=#helpdd'='#member
        End
    End
    Else #member=
    #parm=Translate(#member #parm)

byp1:
    Parse Upper VAR #parm #parm
    Parse Var #parm p1 'F(' #fastrak ')' p2
    If #fastrak/='' Then #parm=Strip(p1) Strip(p2)

    #uid=Userid();#tim=Substr(Time(),1,5);#sprf=Sysvar(syspref)
    today=$dateman('VER',,2);today4=$dateman('VER')
    #sid=Strip(storage(d2x(x2d(c2x(storage(10,4)))+x2d(154)),8))

    #def_memb='HELPTT';#def_dd='SYSEXEC';#dd=
    #find=;#findc=0;#findl=0;#findm=0
    #findo='W'                              /* Found color overlay    */
    #linemode=0                             /* Display line pointers  */
    #f_OK=0                                 /* Accept "F" for find    */

    Parse VAR #parm #member #parm
    If Substr(#member,1,1)='/' | Datatype(#member) = 'NUM' Then Do
        #parm=#member #parm;#member=;End

    If Index(#member,'=') > 0 Then Do
        Parse VAR #member #dd '=' #member
        If #member='' Then #member=#dd
    End
    If #member='' Then #member=#def_memb;If #dd='' Then #dd=#def_dd

    #x=Time('e')
    #helpvrs='#tagged #hidden #hyplink #rowlop',
             '#headlin #mark #ni tutever'
    dsn=Sysvar(syspref)'.HELPDRVR.'#uid'.$$'Time('s')
    #asis=0;#in1=0
    #panel1='HELPDRVP';#tbdisp='HELPTBD1';#skel1='HELPDRVS'

    #table=#member
    If Length(#table)=8 Then Do
        #ctable=Substr(#member,1,7)'#'
        #vtable=Substr(#member,1,7)'@'
    End
    Else Do
        #ctable=#member'#'
        #vtable=#member'@'
    End

    #xx=WordPos('/TRACE',#parm);If #xx > 0 Then Do
        #trace='Y';Trace r;#parm=DelWord(#parm,#xx,1);End
    #xx=WordPos('/1',#parm);If #xx > 0 Then Do
        col1s=1;#parm=DelWord(#parm,#xx,1);End;Else col1s=0
    Parse Var #parm p1 '/DC(' #alt_defcol ')' p2
    If #alt_defcol/='' Then Do;#parm=Space(p1 p2)
        If Wordpos(#alt_defcol,'LW LY LT LR LG LB LP')>0 Then Do
            uc='ABCDEFGHIJKLMNOPQRSTUVWXYZ';lc='abcdefghijklmnopqrstuvwxyz'
            #alt_defcol=Translate(Substr(#alt_defcol,2),lc,uc)
        End
        If Verify(#alt_defcol,'wytrgbpWYTRGBP','M')=0 Then #alt_def=
    End

    #keep=;#build=;#writab='NOWRITE';#exitact='TBEND';#refresh=;#mark=
    #static='N'

    #xx=WordPos('/QUEUE',#parm);If #xx > 0 Then Do
        "VGET (headline)";If headline='' Then headline=' < From Queue > '
        #fr_memb=0;#parm=DelWord(#parm,#xx,1);End;Else #fr_memb=1

    #xx=WordPos('/Q',#parm);If #xx > 0 Then Do
        #fr_memb=0;#parm=DelWord(#parm,#xx,1)
        If Queued()=0 Then Do
            Trace o;Address ISREDIT;"(lastl)=LINENUM .ZLAST"
            If rc=0 Then Do
                "(member)=MEMBER"
                Address TSO "NEWSTACK"
                Do i=1 To lastl;"(line)=LINE" i;Queue line;End;Queue ''
            End
            Address
            If #trace='Y' Then Trace r
        End
    End

    #xx=WordPos('/CLOSE',#parm);If #xx > 0 Then Do
        "TBEND &#TABLE";"TBEND &#CTABLE";"TBEND &#VTABLE";Return 4;End

    #xx=WordPos('/REFRESH',#parm);If #xx > 0 Then Do
        "TBEND &#TABLE";"TBEND &#CTABLE";"TBEND &#VTABLE";
        #refresh='Y';#parm=DelWord(#parm,#xx,1);End
    #xx=WordPos('/CREATE',#parm);If #xx > 0 Then Do
        Parse Value Word(#parm,#xx+1) With 'DSN(' #tablib ')'
        If Substr(#tablib,1,1)/="'" Then #tablib="'"Sysvar(Syspref)"."#tablib"'"
        #msg=Msg('Off')
        If Sysdsn(#tablib)='OK' Then Do
           "LIBDEF ISPTABL DATASET ID(&#tablib) COND STACK"
           #yy=2
        End
        Else Do
            x=Listdsi('ISPTABL FILE')
            If x/=0 Then Do
                zedlmsg='"ISPTABL" not allocated. Pre-allocate or pass',
                      'dataset in "DSN(''dataset'')" format parameter',
                      'immediately after the "/CREATE" parameter.'
                "SETMSG MSG(ISRZ001)";Return 8;End
            #yy=1;#tablib="'"Strip(sysdsname)"'"
        End
        #create='Y';#parm=DelWord(#parm,#xx,#yy);#writab='WRITE'
        #exitact='TBCLOSE';#static='Y'
        "TBEND &#TABLE";"TBEND &#CTABLE";"TBEND &#VTABLE"
        #msg=Msg(#msg);End
    #xx=WordPos('/OPEN',#parm);If #xx > 0 Then Do
        Parse Value Word(#parm,#xx+1) With 'DSN(' #tablib ')'
        If #tablib/='' Then Do
           #yy=2
           "LIBDEF ISPTLIB DATASET ID(&#tablib) COND STACK"
        End
        Else #yy=1
        #keep='Y';#parm=DelWord(#parm,#xx,#yy);End
    #xx=WordPos('/BUILD',#parm);If #xx > 0 Then Do
        #build='Y';#parm=DelWord(#parm,#xx,1);#keep='Y';End
    #xx=WordPos('/RETURN',#parm);If #xx > 0 Then Do
        #return='Y';#parm=DelWord(#parm,#xx,1);End

    If #fastrak='' Then Parse Upper VAR #parm #fastrak .
    "VGET (zscrmaxd)"
    Numeric digits(15)

    If #cname1st Then Parse Value $whoami() With cname sname .
    Else            Parse Value $whoami() With sname cname .
    Parse Value Time() With hh ':' 1 time +5
    Select
        When hh<12 Then #tod='morning'
        When hh<18 Then #tod='afternoon'
        Otherwise #tod='evening'
    End
    "VPUT (cname,#tod) SHARED"

    hyper_link='2'                          /* Link character         */
    #defcol='b'                             /* Default color 'blue'   */
    If #alt_defcol/='' Then #defcol=#alt_defcol
    #chgchr='&'                             /* Variable sub ident     */
    #rexchr='%'                             /* REXX command ident     */
    #cntchr='+'                             /* REXX continuation ident*/
    #atrchr='!'                             /* Attribute line ident   */
    #ignch1='*'                             /* Ignore line ident      */
    #ignch2='/'                             /* Ignore line ident      */
    #parchr='.'                             /* Open paragraph id      */
    #parsep="'.'"                           /* Open paragraph id sep  */
    #hidchr='#'                             /* Closed paragraph id    */
    #hidsep="'.'"                           /* Closed paragraph id sep*/
    #tagchr='@'                             /* Tag identifier         */
    #tagchr='?'                             /* Tag identifier         */
    #patchr='='                             /* Pattern identifier     */
    #dirchr=')'                             /* Directive character    */

/*--------------------------------------------------------------------*/
/*  Open file to see if re-entry                                      */
/*--------------------------------------------------------------------*/
    "CONTROL ERRORS RETURN"
    "VGET (helpvars) SHARED";"VGET ("helpvars") SHARED"
    If \#fr_memb Then Signal bypassed_from_member
    If #refresh/='Y' & #create/='Y' Then Do
        "TBTOP &#TABLE"
        If rc=0 Then Do
            #keep='Y'
            If #build='Y' Then Signal ext1
            "VGET (#helpvrs) SHARED";"VGET ("#helpvrs") SHARED"
            hyper_link=#hyplink
            Signal Tables_built
        End
        "TBOPEN &#TABLE"
        If #ddfree Then rc=4
        If rc=0 Then Do
            #static='Y'
            "TBOPEN &#CTABLE"
            "TBOPEN &#VTABLE"
            "TBSKIP &#VTABLE"
            If #keep/='Y' Then #keep='N'
            Interpret 'Parse VAR #helpvv' #helpvl
            hyper_link=#hyplink
            Signal Tables_built
        End
    End

bypassed_from_member:
    #headlin=' Missing HEADLINE '

    Trace o
    If #trace='Y' Then Trace r

/*--------------------------------------------------------------------*/
/* Loop here to refresh                                               */
/*--------------------------------------------------------------------*/
refresh:
    atrpat=Copies(#defcol,79)               /* Default color 'blue'   */
    #hide=;#hidden=;#w1=;#w2=;#w3=;#skip=;#ni='N';#rowlop=;#subhide=;
    #tag=;#tagshow=;#tags=0;#tage=0;#tagged=;#link=;#hidden=;#tagh=;
    #mark=;

/*--------------------------------------------------------------------*/
/* Loop here to retry member if initially not found.                  */
/*--------------------------------------------------------------------*/
re_lminit:
/*  #trace='Y'                                                        */
    If #trace='Y' Then Trace r
    If #fr_memb Then Do
        "LMINIT  DATAID(dataid1) DDNAME("#dd") ENQ(SHR)"
        If rc/=0 Then Do;#x=bad_rc('LMINIT');If #x/=0 Then Return #x;End
        "LMOPEN  DATAID(&dataid1) OPTION(INPUT)"
        "LMMFIND DATAID(&DATAID1) MEMBER("#member") STATS(NO)"
        If rc/=0 Then Do;#x=bad_rc('LMMFIND')
            If #ddfree Then Address TSO "FREE F("#helpdd")"
            Return 0;End
    End
    "TBEND &#TABLE";"TBEND $C#TABLE"
    "TBCREATE &#TABLE NAMES(#LINE,#LINEA,#HIDE,#VSUB) REPLACE SHARE" #writab
    If rc=8 Then Do
        zedlmsg='Table "'#table'" create failed RC=8. It may be open in other',
        'screen.';"SETMSG MSG(ISRZ001)"
        If #ddfree Then Address TSO "FREE F("#helpdd")"
        Return 9;End
    "TBCREATE &#CTABLE KEYS(#TAG)",
        "NAMES(#TAGS,#TAGE,#TAGH,#LINK,#DESC)",
        "REPLACE SHARE" #writab
    If #create='Y' Then Do
        "TBCREATE &#VTABLE NAMES(#helpvl,#helpvv)",
            "REPLACE SHARE" #writab
        #helpvl=Translate(#helpvrs,',',' ')
    End
    If rc<8 Then rc=0
    rc1=rc;#tag=0;"TBMOD &#CTABLE";rc=rc1
    getline=1
    Trace Off
    Do While rc=0
        If getline Then Do
            If #fr_memb Then,
                "LMGET DATAID(&dataid1) MODE(INVAR) DATALOC(#line)",
                       "DATALEN(lenvar) MAXLEN(80)"
            Else Do
                If Queued()=0 Then Do;rc=4;Leave;End
                Parse PULL #line;rc=0
            End
            If rc/=0 Then Iterate
        End
        Else #line=#linen
        If \col1s Then Parse VAR #line #ch1 +1 #line;Else #ch1=
        getline=1;#vsub=0
        If #ch1=#ignch1 | #ch1=#ignch2 Then Iterate
        If #ch1=#dirchr Then Do
            #line=Strip(#line)
            If #line='TRACE'    Then Do;#trace='Y';Trace r;Iterate;End
            If #line='TRACEOFF' Then Do;#trace='N';Trace o;Iterate;End
            If #line='INI'      Then Do;#ni='Y';Iterate;End
            If #line='END'      Then Leave
            If Word(#line,1)='SKIP' Then Do
                Parse Var #line . #skip .;Iterate;End
            If #skip=#line Then Do;#skip=;Iterate;End
            Iterate
        End
        If #skip/='' Then Iterate
        If #ch1=#rexchr Then Do
            #line=Strip(#line)
            Do While Substr(#line,Length(#line),1)=#cntchr
                #line=Substr(#line,1,Length(#line)-1)
                If #fr_memb Then,
                    "LMGET DATAID(&dataid1) MODE(INVAR) DATALOC(#linex)",
                           "DATALEN(lenvar) MAXLEN(80)"
                Else Do
                    If Queued()=0 Then Do;rc=4;Leave;End
                    Parse PULL #linex;rc=0
                End
                If rc/=0 Then Leave
                If Substr(#linex,1,1)='%' Then #linex=Substr(#linex,2)
                #line=#line||Strip(#linex)
            End
            #rc=rc;Interpret #line;rc=#rc;Iterate
        End
        If #ch1=#patchr Then Do
            atrpat=parse_atr(#line);Iterate
        End
        If #ch1=#tagchr Then Do
            #xx=WordPos('&',#line);If #xx>0 Then Do
                If #create='Y' Then #vsub=1
                Else Do
                    #line=DelWord(#line,#xx,1)
                    Do Forever
                        If Index(#line,'&')=0 Then Leave
                        Parse VAR #line #p1 '&' #var '.' #p2
                        Interpret '#line=#p1||'#var'||#p2'
                    End
                End
            End
            #_#tag=#tag;#tagh=#hide;#_#tagh=#tagh
            #ii=Strip(#line)
            Parse Var #ii #ii #link #a #b
            If index(#ii,'=') > 0 Then Parse VAR #ii '=' #ii .
            If #link/='' Then #link=#link #a #b
            #x=Tag(#ii)
            #tag=#_#tag;"TBGET &#CTABLE"
            #tagh=#_#tagh
            Iterate
        End
        If #ch1=#hidchr Then Do
            #_#line=#line
/*          Parse Upper VAR #line #ii #a .                            */
/*          Parse VAR #ii #ii '.' .                                   */
            Parse Upper VAR #line #ii #a .
            Interpret "Parse VAR #ii #ii "#hidsep" ."
            Interpret "Parse VAR #line . "#hidsep" #desc"
            #desc=Strip(#desc)
            #x=Tag(#ii)
            If #subhide/='' Then #x=#shtag(#ii)
            #tag=#ii;#tagh=#ii;#hide=#ii
            If Wordpos(#hide,#hidden)=0 Then #hidden=#hidden #hide
            If #rowlop='' Then #rowlop=#rownum
            #line=#_#line;If #a='?' Then #line=
        End
        If #ch1=#parchr Then Do
/*          Parse Upper VAR #line #ii .                               */
/*          Parse VAR #ii #ii '.' .                                   */
            Parse Upper VAR #line #ii .
            Interpret "Parse VAR #ii #ii "#parsep" ."
            Interpret "Parse VAR #line . "#parsep" #desc"
            #desc=Strip(#desc)
            #x=Tag(#ii)
            If #hide/='' Then #subhide=#subhide #ii
        End
        If #ch1=#chgchr Then Do
            If #create='Y' Then #vsub=1
            Else Do Forever
                If Index(#line,'&')=0 Then Leave
                Parse VAR #line #p1 '&' #var '.' #p2
                Interpret '#line=#p1||'#var'||#p2'
            End
        End
        #line=Substr(#line,1,79)
        If #fr_memb Then,
            "LMGET DATAID(&dataid1) MODE(INVAR) DATALOC(#linen)",
                  "DATALEN(lenvar) MAXLEN(80)"
        Else Do
            If Queued()=0 Then Do;rc=4;Leave;End
            Parse PULL #linen;rc=0
        End
        If rc/=0 Then Iterate
        If Substr(#linen,1,1)=#atrchr Then #linea=parse_atr(Substr(#linen,2))
        Else Do;#linea=atrpat;getline=0;End
        "TBMOD &#TABLE"
    End
/*  #trace='Y'                                                        */
    If #trace='Y' Then Trace r
    If #fr_memb Then Do
        "LMCLOSE DATAID(&DATAid1)";"LMFREE DATAID(&DATAid1)"
        If #ddfree Then Address TSO "FREE F("#helpdd")"
    End
    "TBTOP &#TABLE";"TBQUERY &#TABLE ROWNUM(#rownum)"
    If #rowlop='' Then #rowlop=#rownum
    #tage=#rownum+0;#tagh=#hide;"TBMOD &#CTABLE"
    #tag=0;"TBGET &#CTABLE";
    If #tage=0 Then Do;#tags=0;#tage=#rowlop+0;"TBMOD &#CTABLE";End
    If headline='HEADLINE' Then headline='< '#member' >'
    #headlin=headline
    #hyplink=hyper_link

    If #create='Y' Then Do
        If rc=0 Then zedlmsg="Tables" #table"," #ctable "and" #vtable,
            "have been created in dataset "#tablib" and saved for",
            'repeated use. Verify contents, modify and re "/CREATE"',
            'if unsatisfactory.'
        #keep='N'
        #helpvl=$Cstring(#helpvrs,' '," ',' ",,'*')
        #helpvv=$Cstring(#helpvrs,' ',"','",,'*')
        Interpret '#helpvv='#helpvv
        "TBMOD &#VTABLE"
/*      Signal ext1                                                   */
    End
    If #build='Y' Then Signal ext1
    If #keep='Y' Then Do;
        "VPUT (#helpvrs) SHARED";"VPUT ("#helpvrs") SHARED";End

Tables_built:
    If #trace='Y' Then Trace r
/*  If \#fr_memb & Queued()>0 Then Address TSO 'DELSTACK'             */
    #tag=0;"TBGET &#CTABLE";#tag0e=#tage;##tag0e=#tag0e
    If #time='Y' Then Do;gc009=gc009 'Startup' Time('e');"SETMSG MSG(GC009)";End
/*  "TBTOP &#CTABLE";"TBDISPL &#CTABLE PANEL(HELPTBD1)"               */
    #xx='Tutorial'
    #headlin=#xx || Centre(#headlin,79-2*(Length(#xx)),'-') || #xx

/*--------------------------------------------------------------------*/
/* Loop here to retry member if initially not found.                  */
/*--------------------------------------------------------------------*/
    "TBQUERY &#TABLE ROWNUM(#rownum) POSITION(#tabptr)"
    #rowlast=#rownum;If #rowlop='' Then #rowlop=#rownum

    If #mark/='' Then Do
        zedlmsg='Repositioned at last mark.';"SETMSG MSG(ISRZ001)"
        Parse VAR #mark #tabptr #show;Signal skip_and_build;End
    #tag='I';"TBGET &#CTABLE"
    If rc=0 & #ni='N' Then Do;#show='I';#tabptr=#tags;#rownum=#tage;End
    Else #show=

    If #fastrak/='' Then Do
        zcmd=#fastrak;"CONTROL NONDISPL ENTER";Signal scr1a
    End
skip_and_build:
    If #trace='Y' Then Say '#tabptr='#tabptr
    "TBSKIP &#TABLE NUMBER(&#tabptr) POSITION(#tabptr)"
    Call build_field

scr1:
    If #trace='Y' Then Trace r;zcmd=
scr1a:
    If #linemode Then Do
        #olay=' Line' Right(#tabptr+1,4,'0') 'to' Right(#rownum+0,4,'0')
        #headlin=Overlay(#olay,#headlin,62)
    End
    "DISPLAY PANEL(&#PANEL1)"
    If rc/=0 Then Signal ext1
    zedlmsg=
    Parse Upper VAR zcmd #w1 #w2 .
    If #w1='X' Then Signal ext1
    If #w1='/TRACE' Then Do
        Select
            When #w2='ON'  Then #trace='Y'
            When #w2='OFF' Then #trace='N'
            Otherwise Do;If #trace='Y' Then #trace='N';Else #trace='Y';End
        End
        If #trace='Y' Then Trace r;Else Trace
        Signal scr1
    End
    If #w1/='' & #return='Y' Then Signal ext1
/*--------------------------------------------------------------------*/
/* Most of this code is to process fast path or linked tutorials.    */
/*--------------------------------------------------------------------*/
scr1b:
    "VGET (zscrolla zscrolln zverb)"
    If zverb='LEFT' | zverb='RIGHT' Then Do
        Select
/*          When #w1='/LIST' Then Do                                  */
/*             zedlmsg="Topics available for scrolling are:"#hidden"."*/
/*             zverb=;zcmd=;#w1=;zscrolla=0                           */
/*          End                                                       */
            When #show/='' Then Do
                w#=Wordpos(#show,#hidden)
                Select
                    When w#=1 & zverb='LEFT' Then Do
                        zedlmsg="Top of dedicated topics. No previous",
                              "screen available."
                        zverb='UP';zscrolla='MAX'
                    End
                    When w#=Words(#hidden) & zverb='RIGHT' Then Do
                        zedlmsg="Bottom of dedicated topics. No",
                              "continuation screen available."
                        zverb='DOWN';zscrolla='MAX'
                    End
                    When zverb='LEFT' Then Do
                        #w1=Word(#hidden,w#-1);zverb=
                    End
                    Otherwise Do
                        #w1=Word(#hidden,w#+1);zverb=
                    End
                End
            End
            Otherwise zedlmsg="'"zverb"' is not active."
        End
        "SETMSG MSG(ISRZ001)"
    End
    If zverb='UP' | zverb='DOWN' Then Signal test_scroll
    If #show='I' & #w1='' & zverb='' Then Do
        If #tag0e=0 Then Do;
            zedlmsg=,
                  'Just [ENTER] is not valid as there are no open paragraphs.',
                  'Make a valid Index topic selection. Enter "TN" for further',
                  'details on open paragraphs in the Tutorial Navigation help.'
            "SETMSG MSG(ISRZ001)";Signal scr1;End
        Else #w1=0
    End
/*--------------------------------------------------------------------*/
/* Test for cursor on hyperlink.                                      */
/*--------------------------------------------------------------------*/
    If zverb='' & zcmd='' & #csr='DA1' Then Do
        #yy=Substr(ds1,#csrp,1)
        If Index(hyper_link,#yy) > 0 Then Do
            #zz=#csrp%80
            #xx=Substr(da1,#zz*80+1,80)
            #yy=Substr(ds1,#zz*80+1,80)
            #zz=#csrp - (#zz*80+1) +1
            #w1=Wordat(#xx,#zz)
            #p1=Wordat(#xx,#zz,'C')
            #a1=Substr(#yy,#p1,Length(#w1))
            #l1=Verify(#a1,hyper_link,'N')
            If #l1>0 Then #w1=Substr(#w1,1,#l1-1)
            #hl=1
        End
    End
    Else #hl=0
/*--------------------------------------------------------------------*/
/* Non blank command line or set by hyper link.                       */
/*--------------------------------------------------------------------*/
Process_command:
    If #w1/='' Then Do
        #tag=#w1;"TBGET &#CTABLE"
        If rc=0 & zverb='' Then Do
            If #link/='' Then Do
                If Wordpos('REXX',#link)>0 Then Do
                    #link=Delword(#link,Wordpos('REXX',Translate(#link)),1)
                    #link=Strip(#link)
                    #lcmd=Strip(Translate(#link),,')');#lcmd=Strip(#lcmd,,'(')
                    #a='REXX';#p1=
                End
                Else Do
                    Parse var #link #lcmd #a #b .
                    If Index(#lcmd,'(') > 1 Then,
                         Parse VAR #link #lcmd '(' #p1 ')' #a #b .
                    Else #p1=
                End
                zedlmsg="Use END PF key to return to previous tutorial."
                "SETMSG MSG(ISRZ001)"
                Select
                    When #a='ISPF' Then Do
                         #a=#b;"SELECT PGM(ISPTUTOR) PARM("#lcmd")"
                    End
                    When Wordpos(#a,'CMD REXX')>0 Then Do
                         #a='*';"SELECT CMD(%"#lcmd #p1")"
                    End
                    Otherwise Do
                        If Substr(#lcmd,1,1)='(' Then Do
                            Parse VAR #link #lcmd '(' #lcmd ')' #a #b   .
                            "SELECT CMD(%"#xcmd #lcmd")"
                        End
                        Else "SELECT CMD(%"#lcmd")"
                        If #show.#w1/='#SHOW.'#w1 Then #show=#show.#w1
                    End
                End
                If Strip(da1)='' Then Signal skip_and_build
                If #a='*' Then Signal scr1
            End
            If WordPos(#w1,#hidden)>0 & #in1=0 Then Do
                #show=#w1
                If #tage/='' Then #rownum=#tage;Else #rownum=#rowlast
            End
            Else Do
                #show=#tagh
                If #tage/='' Then #rownum=#tage;Else #rownum=#rowlop
            End
            #tabptr=#tags
            "TBTOP &#TABLE";"TBSKIP &#TABLE NUMBER(&#tabptr) POSITION(#tabptr)"
            Call build_field
            Signal scr1
        End
        If Wordpos(#w1,'F FN RF')>0 & #f_OK Then #w1='/'#w1
        If Wordpos(#w1,'/F /FN /RF /F=F')>0 Then Signal Process_find
        If Substr(#w1,1,2)='/R' Then Do
            "TBEND &#TABLE";"TBEND &#CTABLE";"TBEND &#VTABLE"
            zedlmsg='Tutorial has been refreshed.'
            "SETMSG MSG(ISRZ001)"
            If #w2/='' Then #fastrak=Translate(#w2)
            Signal refresh
        End
        If Substr(#w1,1,2)='/A' Then Do
            If #w2='OFF' Then #asis=0
            ELse Do
                #asis=1
                #monoc=Substr(Word(zcmd,2),1,1)
                #linea#=Translate(#monoc,'bgprtwy'#defcol,'bgprtwy ',#defcol)
                #linea#=Copies(#linea#,79)
                zcmd=
            End
            "TBTOP &#TABLE"
            Signal skip_and_build
        End
        If Substr(#w1,1,2)='/I' Then Do
            If Substr(#w2,1,1)='O' Then Do
                #tag='I';"TBGET &#CTABLE"
                If rc=0 Then Do;#tabptr=#tags;rowptr=#tage;#show='I';End
                Else #tabptr=0
                #in1=0
                #tag0e=##tag0e
            End
            Else Do
                #in1=1
                ##tag0e=#tag0e
                "TBQUERY &#TABLE ROWNUM(#tag0e)"
            End
            "TBTOP &#TABLE"
            Signal skip_and_build
        End
        If Substr(#w1,1,2)='/M' Then Do
            If Substr(#w2,1,1)='O' Then Do;#mark=;
                zedlmsg='Mark cleared.';"SETMSG MSG(ISRZ001)";Signal scr1;End
            If Substr(#w2,1,1)='R' Then Do;#mark=#tabptr #show;
                zedlmsg='Mark reset.';"SETMSG MSG(ISRZ001)";Signal scr1;End
            If #w2='' & #mark='' Then Do;#mark=#tabptr #show;
                zedlmsg='Mark set.';"SETMSG MSG(ISRZ001)";Signal scr1;End
            zedlmsg='Repositioned at last mark.';"SETMSG MSG(ISRZ001)"
            Parse VAR #mark #tabptr #show
            "TBTOP &#TABLE"
            Signal skip_and_build
        End
        If Substr(#w1,1,2)='/K' Then Do
            If #w2/='' Then Do;"TBTOP &#CTABLE"
                #sel=
                "TBDISPL &#CTABLE PANEL("#tbdisp")"
                If #sel/='' Then Do
                    #w1=#tag;#w2=
                    Signal Process_command
                End
            End
            Else Do
                zedlmsg='The following is the list of keywords that can be',
                      'used for fast tracking:   => 'Strip(#tagged) '<=.'
                "SETMSG MSG(ISRZ001)";End
            Signal scr1
        End
        If Substr(#w1,1,2)='/V' Then Do
            If Substr(#w1,1,3)='/VD' Then Do
                zedlmsg='You are running version "'#hlpdver'" of The Dynamic',
                        'Tutorial Driver "'#xcmd'".'
                "SETMSG MSG(ISRZ001)";Signal scr1
            End
            If Substr(#w1,1,3)='/VT' Then Do
                zedlmsg='You are running version "'tutever'" of Tutorial',
                        '"'#member'".'
                "SETMSG MSG(ISRZ001)";Signal scr1
            End
            If Substr(#w1,1,3)='/VB' Then Do
                zedlmsg='You are running version "'tutever'" of Tutorial',
                        '"'#member'"',
                        'and version "'#hlpdver'" of The Dynamic',
                        'Tutorial Driver "'#xcmd'".'
                "SETMSG MSG(ISRZ001)";Signal scr1
            End
        End
        If #w1='/LC' Then Do
           zedlmsg="Closed topics available for scrolling are:"#hidden"."
           "SETMSG MSG(ISRZ001)";Signal scr1
        End
        If #w1='/LV' Then Do
            "CONTROL DISPLAY SAVE"
            xxxx=Translate(helpvars,' ',',')
            Say ' '
            Say 'Variable(s) presented this way because of alternative display',
                'complications:'
            Do While xxxx/=''
                Parse VAR xxxx xx xxxx
                Interpret 'Say "  "Substr(xx,1,10) "->"'xx
            End
            Say ' '
            "CONTROL DISPLAY REFRESH"
            Signal scr1
        End
        If Substr(#w1,1,2)='/L' Then Do
            #linemode=1;If #w2='' Then Signal scr1
            If \Datatype(#w2,'w') Then #w2=#rownum+1
            If #w2 > #rownum Then Do
                zedlmsg=,
                  'Invalid line number. "'#w2'" entered is either not numeric',
                  'or outside display limits.'
                "SETMSG MSG(ISRZ001)";Signal scr1
            End
            #tabptr=#w2-1
            "TBTOP &#TABLE"
            "TBSKIP &#TABLE NUMBER(&#tabptr) POSITION(#tabptr)"
            Signal bld2
        End
        If Substr(#w1,1,2)='/P' Then Do;Call print_tute;Signal scr1;End
        If Substr(#w1,1,2)='/H' Then Do
            "TBTOP &#CTABLE"
            #sel=
            "TBDISPL &#CTABLE PANEL("#tbdisp")"
            If #sel/='' Then Do
                #w1=#tag;#w2=
                Signal Process_command
            End
            Signal scr1
        End
        If #w1='?' Then #w1=$Cstring(#w1,'?','/TN')
        If Wordpos(#w1,'/TN /TT /QR')>0 Then Do
            c_suff=Substr(#w1,2)
            "SELECT CMD(%"#xcmd "HELP"c_suff")"
            Signal scr1
        End
/*      If #w1='/TT' Then Do                                          */
/*          "SELECT CMD(%"#xcmd "HELPTT)"                             */
/*          Signal scr1                                               */
/*      End                                                           */
        If #hl Then zedlmsg='"'#w1'" is not a hyper_link.'
        Else zedlmsg='Invalid command/Index-pointer "'#w1'" entered.'
        "SETMSG MSG(ISRZ001)"
        Signal scr1
    End

/*--------------------------------------------------------------------*/
/* Test for scrolling                                                 */
/*--------------------------------------------------------------------*/
test_scroll:
    If zverb='UP' | zverb='DOWN' Then Do
        Call scroll_data_ud
        Call scroll_table
        Signal bld2
    End
    If zverb='LEFT' | zverb='RIGHT' Then Do
        Call scroll_data_lr
        If result=0 Then Signal bld2;Else Signal scr1
    End
    Signal scr1

/*--------------------------------------------------------------------*/
/* Rebuild screen                                                     */
/*--------------------------------------------------------------------*/
bld2:
    Call build_field
    Signal scr1

/*--------------------------------------------------------------------*/
/* Get out, leave, vamoose, sorff.                                    */
/*--------------------------------------------------------------------*/
ext1:
    "LIBDEF ISPTLIB"
    If #keep/='Y' Then Do
        "ISPEXEC" #exitact #table;"ISPEXEC" #exitact #ctable
        "ISPEXEC" #exitact #vtable
        If #create='Y' Then "LIBDEF ISPTABL"
    End
    Else Do
        #hyplink=hyper_link
        "VPUT (#helpvrs) SHARED";"VPUT ("#helpvrs") SHARED"
    End
    If #ddfree Then Address TSO "FREE F("#helpdd")"
    If #return='Y' Then Return #w1;Else Return 0

/*--------------------------------------------------------------------*/
/* This section builds the display field 'DA1' from the table from    */
/* the NEXT row to that poinetd to by variable #tabptr. This allows   */
/* for TBTOP (which is row 0).                                        */
/*--------------------------------------------------------------------*/
build_field:
    If show_table='Y' Then Do
        "TBQUERY &#TABLE ROWNUM(#rownum) POSITION(#xx)"
        "TBSKIP &#TABLE"
        "CONTROL DISPLAY SAVE"
        "TBDISPL &#TABLE PANEL(&TBDISP)"
        If zcmd='/PRINT' Then Call Signal print_tute
        "CONTROL DISPLAY RESTORE"
        "TBTOP &#TABLE"
        "TBSKIP &#TABLE NUMBER(&#XX)"
    End
    Trace Off
    da1=;ds1=;#i=0
    If #in1 Then #rownum=#rowlast
    Do Forever
        "TBSKIP &#TABLE POSITION(c)"
        If rc/=0 Then Leave
        If #trace='Y' Then Say '#show='#show '#hide='#hide
        If #show=#hide | #in1 Then Do
            If #vsub Then Do Forever
                If Index(#line,'&')=0 Then Leave
                Parse VAR #line #p1 '&' #var '.' #p2
                Interpret '#line=#p1||'#var'||#p2'
            End
            #i=#i+1;da1=da1 Substr(#line,1,79)
            If #findm & c=#findl+1 Then,
                #linea=Overlay(Copies(#findo,Length(#find)),#linea,#findc)
            If #asis Then ds1=ds1 #linea#;Else ds1=ds1 Substr(#linea,1,79)
        End
        If #i=zscrmaxd Then Leave
        If c=#rownum  Then Leave
    End
    #findm=0

    If #trace='Y' Then Trace r
    Return 0

/*--------------------------------------------------------------------*/
/* This section re-positions the table to the appropriate row         */
/* according to the scroll parameters returned from ISPF.             */
/*--------------------------------------------------------------------*/
scroll_table:
    If #tabptr + (qual*scrolln) > #rownum Then scrolln=0
    Else #tabptr=#tabptr+(qual*scrolln)
    If #tabptr < 0 Then #tabptr=0
    If #trace='Y' Then Say '#tabptr='#tabptr
    "TBTOP &#TABLE"
    "TBSKIP &#TABLE NUMBER(&#tabptr) POSITION(#tabptr)"
    Return 0

/*--------------------------------------------------------------------*/
/* Scroll the screen to selected line after an UP/DOWN command.       */
/*--------------------------------------------------------------------*/
scroll_data_ud:
    If zscrolla='MAX' Then Do
        If zverb='UP' Then #tabptr=0;Else #tabptr=#rownum-(zscrolln-1)
        scrolln=0
    End
    Else scrolln=zscrolln
    If zverb='UP' Then qual=-1;Else qual=+1
    If #show/='' & zverb='UP' Then Do
        #tag=#show;"TBGET &#CTABLE"
        If #tabptr-scrolln < #tags & #in1=0 Then Do;#tabptr=#tags;scrolln=0;End
    End
    Return 0

/*--------------------------------------------------------------------*/
/* Scroll the screen LEFT/RIGHT.                                      */
/*--------------------------------------------------------------------*/
scroll_data_lr:
    zedlmsg="'"zverb"' is not active."
    "SETMSG MSG(ISRZ001)"
    Return 4

/*--------------------------------------------------------------------*/
/* Prepare for print.                                                 */
/*--------------------------------------------------------------------*/
print_tute:
    "TBTOP  &#TABLE"
    zedlmsg="Use your favourite method to get this to the printer."
    "SETMSG MSG(ISRZ001)"
    "FTOPEN TEMP";"FTINCL" #skel1;"FTCLOSE";"VGET ZTEMPF"
    Address TSO "ALLOC DD(ZTEMPF) DS('"ztempf"') SHR REU"
    "LMINIT DATAID(DATAID) DDNAME(ZTEMPF)";"EDIT DATAID(&DATAID)"
    "LMFREE DATAID(&DATAID)"
    "TBSKIP &#TABLE NUMBER(&#tabptr) POSITION(#tabptr)"
    Address TSO "FREE DD(ZTEMPF)"
    Return 0
/*--------------------------------------------------------------------*/
/* Test for find/refind commands.                                     */
/*--------------------------------------------------------------------*/
Process_find:
    If #w1='/F=F' Then Do
        #f_OK=1
        zedlmsg='You may now use F without the "/".'
        "SETMSG MSG(ISRZ001)";Signal scr1
    End
    If #w2/='' Then Do
        #find=Translate(Subword(zcmd,2))
        c1=Substr(#find,1,1)
        If c1="'" Then #find=Strip(#find,,"'")
        If c1='"' Then #find=Strip(#find,,'"')
        #findc=0
    End
    Else Do
        If #find='' Then Do
            zedlmsg='The "/F" key works only after a "/F string" command',
                    'is entered.'
            "SETMSG MSG(ISRZ001)";Signal scr1
        End
    End
    If #findl/=#tabptr Then #findc=0
    "TBTOP &#TABLE"
    If #tabptr>0 Then "TBSKIP &#TABLE NUMBER(&#tabptr) POSITION(#tabptr)"
    Do While rc=0
        "TBSKIP &#TABLE POSITION(#findl)"
        #findc=Index(Translate(#line),#find,#findc+1)
        If #findc>0 Then Leave
    End
    If rc/=0 Then Do
        #findc=0
        zedlmsg='Chars "'#find'" - not found. Go to TOP and issue ''/FN''.'
        "SETMSG MSG(ISRZ001)";Signal scr1
    End
    #findl=#findl-1;#findm=1
    "TBTOP &#TABLE"
    If #findl>0 Then "TBSKIP &#TABLE NUMBER(&#findl) POSITION(#tabptr)"
    zedlmsg='Chars "'#find'" - found.'
    "SETMSG MSG(ISRZ001)"
    Signal bld2

/*--------------------------------------------------------------------*/
/* Miscellaneous Control routines.                                    */
/*--------------------------------------------------------------------*/
parse_atr: Parse Arg #line1
    Trace o
    cl=#defcol;#line1=Translate(#line1,cl,'!')
    Do k=1 To Length(#line1)
        If Substr(#line1,k,1)=' ' Then #line1=Overlay(cl,#line1,k,1)
        Else cl=Substr(#line1,k)
    End
    Return Substr(#line1,1,79)

Mark: Arg diff;If Datatype(diff)/='NUM' Then diff=1;Return sigl+diff

syntaxerr:Interpret syntaxact;Signal Value retlab
            ISREDIT;If rc/=0 Then Do
Tag:Parse Upper Arg #x,act
    "TBQUERY &#TABLE ROWNUM(#rownum)"
    If #ch1=#hidchr Then Do;#tage=#rownum+0;"TBMOD &#CTABLE";End
    #tag=#x
    If Wordpos(#tag,#tagged)=0 Then #tagged=#tagged #tag
    Else "TBGET &#CTABLE"
    #tags=#rownum+0;#tage=;"TBMOD &#CTABLE";Return 0

#shtag: Arg #x
    #tag=#hide;"TBGET &#CTABLE";#tage=#rownum+0;#tagh=#hide;"TBMOD &#CTABLE"
    Do Forever;Parse VAR #subhide #tag #subhide
        If Wordpos(#alt_defcol,'wytrgbpWYTRGBP','M')=0 Then,
        "TBGET &#CTABLE";#tage=#rownum+0;"TBMOD &#CTABLE";End
    #tag=#x;"TBGET &#TABLE";Return 0
/*--------------------------------------------------------------------*/
/* Check return code from Services                                    */
/*--------------------------------------------------------------------*/
bad_rc:
    #trace='N';If #trace='Y' Then Trace r
    #keep='N'
    If Arg(1)='LMINIT' Then Do
        zedlmsg=Arg(1) 'against DD('#dd') failed with RC='rc'.',
              'You may need to get the "HELPDRVR" driver',
              're-assigned to a different DD.'
    End
    Else,
        zedlmsg=Arg(1) 'against MEMBER('#member') failed with RC='rc'.'
    "SETMSG MSG(ISRZ001)"
    If #dd=#def_dd & #member=#def_memb Then Return 4
    Else Do
        #dd=#def_dd;#member=#def_memb
        If Arg(1)='LMINIT' Then #fastrak='C16'     /* Concat limit    */
        Else                    #fastrak='M01'     /* Missing member  */
        zedlmsg=zedlmsg 'DD('#dd'), MEMBER('#member')',
              'substituted and re-tried with fastrack='#fastrak' set.'
        "SETMSG MSG(ISRZ001)"
        Signal re_lminit
    End

$whoami:
    Parse Upper ARG type .
    Parse Source . op_mode .
    name=getname()
    If Index(name,',')>0 Then sep=',';Else sep='.'
    Interpret "Parse var name cname '"sep"' sname ."
    Select
        When type=''  Then name=cname sname
        When type='C' Then name=cname
        Otherwise          name=sname
    End
    Return U2Lower(name,2,'*')

/*--------------------------------------------------------------------*/
/* Get name from ACEE control block (imported from REXX '$getname' for*/
/* self containment).                                                 */
/*--------------------------------------------------------------------*/
getname:
    ascb=Storage('224',4)
    asxb=Storage(d2x(c2d(ascb)+x2d('6c')),4)
    acee=Storage(d2x(c2d(asxb)+x2d('c8')),4)
    nam@=Storage(d2x(c2d(acee)+x2d('64')),4)
    name=Storage(c2x(nam@),30)
    len =c2d(Substr(name,1,1));name=Substr(name,2,len-1)
    Return name

/*--------------------------------------------------------------------*/
/* Convert upper to lower (imported from REXX routine 'lower' for     */
/* self containment).                                                 */
/*--------------------------------------------------------------------*/
U2Lower:
    ARG text,pos,rep
    lc='abcdefghijklmnopqrstuvwxyz';uc='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
    If Datatype(rep)/='NUM' | Index(rep,'.')>0 Then rep=99999
    If Datatype(pos)/='NUM' | Index(pos,'.')>0 Then pos=2
    rname=''
    Do #j=rep by -1 To 1
        Parse VAR text name text
        If pos>1 Then Do;pref=Substr(name,1,pos-1);suff=Substr(name,pos);End
        Else Do;pref=;suff=name;End
        suff=Translate(suff,lc,uc);rname=rname pref || suff
        If text='' Then Leave
    End
    Return Strip(rname text)

/*--------------------------------------------------------------------*/
/* Returns the worsd in a string that falls on a particular posistion.*/
/* If the character at the position is blank, the next word is taken. */
/*--------------------------------------------------------------------*/
Wordat: Arg i_string,s_col,r_col
    #ss='"''"';#sd="'""'";#sl="'('";#sr="')'"
    Do #i_i=s_col By -1 Until #i_i=0
        If Substr(i_string,#i_i,1)=' ' Then Do;#s1=   ;#s2=#s1;Leave;End
        If Substr(i_string,#i_i,1)='"' Then Do;#s1=#sd;#s2=#s1;Leave;End
        If Substr(i_string,#i_i,1)="'" Then Do;#s1=#ss;#s2=#s1;Leave;End
        If Substr(i_string,#i_i,1)="(" Then Do;#s1=#sl;#s2=#sr;Leave;End
    End
    If r_col='C' Then Return #i_i+1
    i_string=Substr(i_string,#i_i)
    Interpret "Parse VAR i_string" #s1 "i_string" #s2 "."
    Return i_string
    If r_col='C' Then Return #i_i+1
    i_string=Substr(i_string,#i_i)
    Interpret "Parse VAR i_string" #s1 "i_string" #s2 "."
    Return i_string
