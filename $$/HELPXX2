/******************************** REXX ********************************/
/*--------------------------ooo000OOOO000ooo--------------------------*/
/*                                                                    */
/*  R0HELPR:                                                          */
/*                                                                    */
/*  Routine to create dynamic scrollable tutorials.                   */
/*                                                                    */
/*  Parameters (positional and comma sepereted):                      */
/*    1 - Index entry.                                                */
/*    2 - Literal 'KEEP' to keep the table rather than rebuilding     */
/*        with every invocation. If this feature is used it must be   */
/*        manually closed using command "ISPEXEC TBEND R0HELPT".      */
/*                                                                    */
/*--------------------------------------------------------------------*/
Arg parm1
/*  parm1 =                                                           */
Get_Help_date:
     tag=;tagged=
/*
~"TBQUERY &TABLE ROWNUM(rownum)";line.tag.end=rownum;tag='H'  ;tagged=tagged tag
*/
n_st = mark(2)                              /* Mark next line         */
/*
*-- Customise here \|/ -------------- Free form doco ------------------*

~headline=' CO2 Sample '

.1. XX2 Member (self generating).
!G
 This is a sample screen using Customisation Option 2 (CO2).

`                         (End of Sample.)
!G
~"TBQUERY &TABLE ROWNUM(rownum)";line.tag.end=rownum
*
*-- Customise here /|\ ------------------------------------------------*
*/
n_en = mark(-2)                             /* Mark prev 2 line       */

    Address ISPEXEC
    "VGET (zscrmaxd)"
    Numeric digits(15)
    table   = 'TB'Time('s')
    panel   = 'HELPDRVP'

Help_me:
    defcol  = 'b'                           /* Default color 'blue'   */
    chgchar = '`'                           /* Variable sub ident     */
    rexchar = '~'                           /* REXX command ident     */
    atrchar = '!'                           /* Attribute line ident   */
    ignchar = '*'                           /* Ignore line ident      */
    parchar = '.'                           /* Parameter identifier   */
    patchar = '='                           /* Pattern identifier     */
    atrpat  = Copies(defcol,79)             /* Default color 'blue'   */
    tag     =
    tagged  =
    cname   = Whoami('C')

    "TBCREATE &TABLE NAMES(LINE,LINEA,TAG) NOWRITE REPLACE"
    Do #i=n_st To n_en
        line = Sourceline(#i)
        ch1 = Substr(line,1,1)
        If ch1 = ignchar Then Iterate
        If ch1 = rexchar Then Do
            Interpret Substr(line,2)
            Iterate
        End
        If ch1 = parchar Then Do
            "TBQUERY &TABLE ROWNUM(rownum)"
            Interpret "Parse VAR line '"parchar"' ii '.'"
            ii = Translate(Strip(ii))
            line.ii=rownum
        End
        If ch1 = patchar Then Do
            atrpat = parse_atr(Substr(line,2))
            Iterate
        End
        If ch1 = chgchar Then Do Forever
            line = ' 'Substr(line,2)
            If Index(line,'&') = 0 Then Leave
            Parse VAR line p1 '&' var '.' p2
            data = 'line = p1 || 'var' || p2'
            Interpret data
        End
        line = Substr(line,2,79)
        linea = Sourceline(#i+1)
        If Substr(linea,1,1) = atrchar Then Do
            linea = parse_atr(Substr(linea,2))
            #i = #i+1
        End
        Else linea = atrpat
        "TBMOD &TABLE"
    End

    "CONTROL ERRORS CANCEL"
    "TBTOP &TABLE"
    "TBQUERY &TABLE ROWNUM(rownum) POSITION(tabptr)"
    rownum=rownum +0;#rownum=rownum
    rownum = rownum +0
    If line.tagend = 'LINE.TAGEND' Then line.tagend = rownum
    If line.0 =  'LINE.0' Then line.0=0
    If line.i /= 'LINE.I' Then Do
        show='I';tabptr=line.I
    End
    Else show =

    If parm1 /= '' Then Do
        zcmd = parm1
        Signal scr1a
    End
    "TBTOP &TABLE"
    "TBSKIP &TABLE NUMBER(&TABPTR) POSITION(TABPTR)"
    Call build_field

scr1:
    zcmd =
    "ISPEXEC DISPLAY PANEL(&PANEL)"
    If rc Â¬= 0 | zcmd = 'X' Then Signal ext1
scr1a:
    "ISPEXEC VGET (zscrolla zscrolln zverb)"
    If zverb  = 'UP' | zverb = 'DOWN' Then Signal test_scroll
    If show = 'I' & zcmd = '' & zverb = '' Then zcmd = 0
    If zcmd /= '' Then Do
        If Index(' 'tagged' ',' 'zcmd' ') > 0 Then Do
            show=zcmd
            If line.show.end /= 'LINE.'show'.END' Then rownum=line.show.end
            Else                                       rownum=#rownum
        End
        Else Do
            show=;rownum=#rownum
        End
        If line.zcmd /= 'LINE.'zcmd & zverb = '' Then Do
            If Index(linked,' 'line.zcmd':') > 0 Then Do
                xx = Substr(linked,Index(linked,' 'line.zcmd':'))
                Parse var xx ':' lcmd .
                "SELECT CMD(%"lcmd")"
                Signal scr1
            End
            tabptr = line.zcmd
            "TBTOP &TABLE"
            "TBSKIP &TABLE NUMBER(&TABPTR) POSITION(TABPTR)"
            Call build_field
            Signal scr1
        End
        Else Do
            gc009 = 'Invalid command/Index-pointer "'zcmd'" entered.'
            "SETMSG MSG(GC009)"
            Signal scr1
        End
    End

/*--------------------------------------------------------------------*/
/* Test for scrolling                                                 */
/*--------------------------------------------------------------------*/
test_scroll:
    If zverb  = 'UP' | zverb = 'DOWN' Then Do
        Call scroll_data_ud
        Call scroll_table
        Signal bld2
    End
    If zverb  = 'LEFT' | zverb = 'RIGHT' Then Do
        Call scroll_data_lr
        If result = 0 Then Signal bld2
        Else               Signal scr1
    End

/*--------------------------------------------------------------------*/
/* Rebuild screen                                                     */
/*--------------------------------------------------------------------*/
bld2:
    Call build_field
    Signal scr1

ext1:
   If parm2 /= 'KEEP' Then "TBEND &TABLE"
    Exit

/*--------------------------------------------------------------------*/
/* This section builds the display field 'DA1' from the table from    */
/* the NEXT row to that poinetd to by variable TABPTR. This allows    */
/* for TBTOP (which is row 0).                                        */
/*--------------------------------------------------------------------*/
build_field:

    Trace Off
    da1 =
    ds1 =
    #i  = 0
    Do Forever
/*      "TBSKIP &TABLE"                                               */
        "TBSKIP &TABLE POSITION(c)"
        If rc /= 0 Then Leave
        If show = tag Then Do
            #i  = #i+1
            da1 = da1 Substr(line,1,79)
            ds1 = ds1 Substr(linea,1,79)
        End
        If #i = zscrmaxd Then Leave
        If c  = rownum   Then Leave
    End

    If trace = 'Y' Then Trace r
    Return 0

/*--------------------------------------------------------------------*/
/* This section re-positions the table to the appropriate row         */
/* according to the scroll parameters returned from ISPF.             */
/*--------------------------------------------------------------------*/
scroll_table:
    If tabptr + (qual*scrolln) > rownum Then tabptr = rownum
    Else tabptr = tabptr + (qual*scrolln)
    If tabptr < 0 Then tabptr = 0
   "TBTOP &TABLE"
   "TBSKIP &TABLE NUMBER(&TABPTR) POSITION(TABPTR)"
    Return 0

/*--------------------------------------------------------------------*/
/* Scroll the screen to selected line after an UP/DOWN command.       */
/*--------------------------------------------------------------------*/
scroll_data_ud:
    If zscrolla = 'MAX' Then Do
        If zverb  = 'UP' Then tabptr  = 0
        Else                  tabptr  = rownum - (zscrolln-1)
        scrolln = 0
    End
    Else Do
        scrolln  = zscrolln
    End
    If zverb  = 'UP' Then qual = -1
    Else                  qual = +1

    Return 0

/*--------------------------------------------------------------------*/
/* Scroll the screen LEFT/RIGHT.                                      */
/*--------------------------------------------------------------------*/
scroll_data_lr:
    gc009 = "'"zverb"' is not active."
    "SETMSG MSG(GC009)"

    Return 4


    Exit

/*--------------------------------------------------------------------*/
/* Cotrol routines.                                                   */
/*--------------------------------------------------------------------*/
parse_atr: Parse Arg #line
    cl = defcol
    Do k=1 To Length(#line)
        If Substr(#line,k,1) = ' ' Then #line = Overlay(cl,#line,k,1)
        Else cl = Substr(#line,k)
    End
    Return Substr(#line,1,79)
Mark: Arg diff;If Datatype(diff)/='NUM' Then diff=1;Return sigl+diff
syntaxerr:Interpret syntaxact;Signal Value retlab
Whoami:
    Parse Upper ARG type .
    Parse Source . op_mode .
    name = getname()
    If Index(name,',') > 0 Then sep = ','
    Else                        sep = '.'
    Interpret "Parse var name sname '"sep"' cname ."
    Select
        When type = ''  Then name = cname sname
        When type = 'C' Then name = cname
        Otherwise            name = sname
    End
    Return U2Lower(name,2,'*')

/*--------------------------------------------------------------------*/
/* Get name from ACEE control block (imported from REXX '$getname' for*/
/* self containment).                                                 */
/*--------------------------------------------------------------------*/
getname:
    ascb = Storage('224',4)
    asxb = Storage(d2x(c2d(ascb)+x2d('6c')),4)
    acee = Storage(d2x(c2d(asxb)+x2d('c8')),4)
    nam@ = Storage(d2x(c2d(acee)+x2d('64')),4)
    name = Storage(c2x(nam@),30)
    len  = c2d(Substr(name,1,1))
    name = Substr(name,2,len-1)
    Return name

/*--------------------------------------------------------------------*/
/* Convert upper to lower (imported from REXX routine 'lower' for     */
/* self containment).                                                 */
/*--------------------------------------------------------------------*/
U2Lower:
    ARG text,pos,rep
    lc = 'abcdefghijklmnopqrstuvwxyz'
    uc = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
    If Datatype(rep) /= 'NUM' | Index(rep,'.') > 0 Then rep = 99999
    If Datatype(pos) /= 'NUM' | Index(pos,'.') > 0 Then pos = 2
    rname = ''
    Do #j=rep by -1 To 1
        Parse VAR text name text
        If pos > 1 Then Do
            pref = Substr(name,1,pos-1)
            suff = Substr(name,pos)
        End
        Else Do
            pref = ''
            suff = name
        End
        suff = Translate(suff,lc,uc)
        rname = rname pref || suff
        If text = '' Then Leave
    End
    Return Strip(rname text)

