/******************************** REXX ********************************/
    ms=mark(2)                              /* Mark Start             */
/*--------------------------ooo000OOOO000ooo--------------------------*/
/*                                                                    */
/* Hello `CNAME..                                                     */
/*                                                                    */
/* IBMPCUST: IBM Panel CUSTomiser.                                    */
/* ---------                                                          */
/* This routine will customise IBM panels (or any other panel).       */
/*                                                                    */
/* This routine has three purposes:                                   */
/*  1. Locate and report on member ISRUDLP (and ISRUDSL0).            */
/*  2. Customise them for direct invocation of volume list from the   */
/*     DS (DASD space) function.                                      */
/*  3. Customise IBM panels (or any other panel) to change the        */
/*     Command prompt to the system id. Will be bypassed if &SID      */
/*     already used in panel.                                         */
/*                                                                    */
/* Notes:                                                             */
/*  1. The "copy to user dataset" has to be manually done.            */
/*  2. DO NOT use macro agains IBM datasets. You may actually have    */
/*     the authority to change it.                                    */
/*  3. When using this facility, always work in VIEW mode and then    */
/*     explicitly save. If you loose the changes they can be readily  */
/*     re-applied.                                                    */
/*                                                                    */
/* This routine has been designed to quickly customise a copy of the  */
/* above 2 modules which may be required because:                     */
/*  1. Modules have not been customised.                              */
/*  2. New release of ISPF (forward/backward).                        */
/*                                                                    */
/* Parameters:                                                        */
/*  /FIND     - Find and report on all datasets in ISPPLIB concat     */
/*              that member ISRUDLP is found in. This is the default. */
/*  /CONVert  - Convert ISRUDLP to DS compatibility.                  */
/*            - Converts ISRUDSL0 if select enable program PANELI34   */
/*              is found in user's ISPLLIB concat.                    */
/*            - Converts any panel to change the command prompt to    */
/*              &SID.                                                 */
/*                                                                    */
/* Note on "Select substitute":                                       */
/*  If program PANELI34 is available, you can modify panel ISRUDSL0,  */
/*  the ISPF 3.4 dataset list display panel, to substitute any command*/
/*  you like for 'S', eg. S=V on the command line will view the       */
/*  dataset when you enter S against it rather than the dataset info  */
/*  rubbish. (If you are a thrillseeker you could try S=D and turn    */
/*  confirmation off and see how long you can aviod using 'S'.)       */
/*                                                                    */
/* The following members are required to package this routine. Those  */
/* marked with an 'o' seperator are optional:                         */
/*   REXX:                                                            */
/*     $DDALLOC o Routine used to find locations of panel ISRUDLP and */
/*                program PANELI34. Required for "/FIND" (default)    */
/*                function. Without it, use ISRDDN.                   */
/*     IBMPCUST - This driver.                                        */
/*                                                                    */
/*   Panels:                                                          */
/* --> ISRUDLP  - Customised version of IBM supplied panels to permit */
/* --> ISRUDSL0     bypassing of ISPF 3.4 panel for entry of VOLSER.  */
/*                                                                    */
/*   Source:                                                          */
/*     PANELI34 o DASD free space program.                            */
/*                                                                    */
/*   LoadMOD:                                                         */
/*     PANELI34 o Self explanitory.                                   */
/*                                                                    */
/*--------------------------------------------------------------------*/
    me=mark(-2)                             /* Mark End               */

    ARG parm#
    Address ISPEXEC;"CONTROL ERRORS RETURN";ima_acro=0
    If parm#/='' Then Signal byp1
    "ISREDIT MACRO (parm#) NOPROCESS"
    If rc=0 Then ima_acro=1

byp1:
/*  "CONTROL ERRORS CANCEL"                                           */

init:
    If Wordpos('?',parm#)>0 Then Signal Help_me

    zedsmsg=;#parm=parm#

    Call parse_parms

    x=Trace(#tr)
    If conv Then Signal conv

find_ISRUDLP:
    Signal On Syntax Name ext1
    xxx=$ddalloc('ISPPLIB')
    Say 'Member ISRUDLP can be found in the following datasets:'
    Do While xxx/=''
        Parse VAR xxx xx xxx
        If Sysdsn("'"xx"(ISRUDLP)'")='OK' Then Do
            If Index(xx,'SISPPENU')>0 Then,
                 Say '->' xx
            Else Say '  ' xx
        End
    End
ext1:
    Return 0

conv:
    sid_pan=,                               /* Common sysid cadidates */
            'ISRBROBA',
            'ISRBROM ',
            'ISREDDE2',
            'ISREMCLS',
            'ISREPO01',
            'ISRSEPRI',
            'ISRSFSPR',
            'ISRTSO  ',
            'ISRUDA1 ',
            'ISRUDA2 ',
            'ISRUDA2S',
            'ISRUDLP ',
            'ISRUDSL0',
            'ISRUDSM ',
            'ISRUMC1 ',
            'ISRUMC2A',
            'ISRUMC2B',
            'ISRUREN ',
            ''
    Address ISREDIT
    "(status)=USER_STATE"
    "(memb)=MEMBER"
/*  If Wordpos(memb,sid_pan)>0 Then Call change_command               */
    Call change_command                     /* Unconditional ????     */
    opt7='Perform dialog testing'
    "F '"opt7"' FIRST"
    If rc=0 Then Signal ISR@PRIM
    If memb='ISRUDLP'  Then Signal ISRUDLP
    If memb='ISRUDSL0' Then Signal ISRUDSL0
    If memb='ISRSFSPR' Then Signal ISRSFSPR
    If memb='ISRSEPRI' Then Signal ISRSEPRI
    Return 0

ISRUDLP:
    "F ')REINIT' 1 FIRST"
    If rc/=0 Then Do
        zedlmsg=')REINIT not found. Is this a panel?.'
        Address ISPEXEC "SETMSG MSG(ISRZ001)"
        Return 4
    End

/*--------------------------------------------------------------------*/
/* ISRUDLP before )REINIT                                             */
/*--------------------------------------------------------------------*/
    ms=mark(2)
/*

/*-------------------------------------------------------------------*/
/* Start Customisation to permit "volume" display from DASD space DS */
/* facility and bypass panel display on entry/exit.                  */
/* Also used by other functions for similar pass through logic.       */
/*-------------------------------------------------------------------*/
IF (&ALK32ENQ = G)
   IF (.MSG = &Z)
      &ZDLDSNLV = &XDLDSNLV
      &ALK32ENQ = ''
      VPUT (ALK32ENQ) SHARED
      .RESP = 'END'
IF (&ALK32ENQ = VG)
   .MSG = &Z
   &ALK32ENQ = ''
   VPUT (ALK32ENQ) SHARED
   .RESP = 'END'
IF (&ALK32ENQ = Y)
   &XDLDSNLV = &ZDLDSNLV
   &ZDLDSNLV = &ALK32DSN
   &ZDLPVL   = &ALK32VOL
   &ALK32ENQ = G
   VPUT (ALK32ENQ) SHARED
   .RESP = 'ENTER'
IF (&ALK32ENQ = V)
   &ZDLDSNLV = &Z
   &ZDLPVL = &ALK32DSN
   &ZCMD = P
   &ALK32ENQ = VG
   VPUT (ALK32ENQ) SHARED
   .RESP = 'ENTER'
&ALK32### = TRUNC(&ALK32ENQ,2)
IF (&ALK32### = VT)
   &ALK32ENQ = VG
   VPUT (ALK32ENQ) SHARED
&ALK32### = '&ALK32ENQ"'
/*-------------------------------------------------------------------*/
/* End Customisation.                                                */
/*-------------------------------------------------------------------*/

*/
    me=mark(-2)
    "(where)=LINENUM .ZCSR"
    where=where-1
    Call put_lines

    "F ')PROC' 1 FIRST"
    If rc/=0 Then Do
        zedlmsg=')PROC not found. Is this a panel?.'
        Address ISPEXEC "SETMSG MSG(ISRZ001)"
        Return 4
    End
/*--------------------------------------------------------------------*/
/* ISRUDLP before )PROC                                               */
/*--------------------------------------------------------------------*/
    ms=mark(2)
/*

/*-------------------------------------------------------------------*/
/* Start DS modifications to permit "volume" display from DASD space */
/* facility and bypass panel display on entry/exit.                  */
/*-------------------------------------------------------------------*/
IF (&ALK32ENQ = VG) .MSG = &Z
/*-------------------------------------------------------------------*/
/* End DS.                                                           */
/*-------------------------------------------------------------------*/

*/
    me=mark(-2)
    "(where)=LINENUM .ZCSR"
    where=where-1
    Call put_lines

    "F 'Start DS modifications' FIRST"
    "UP 1"
    "(status)=USER_STATE"
    Return 0

/*--------------------------------------------------------------------*/
/* ISRUDSL0                                                           */
/*--------------------------------------------------------------------*/
ISRUDSL0:
    panex='PANELI34'
    xx=Get_dataset('ISPLLIB',panex)
    If xx='Missing.dataset' Then Do
        zedlmsg='Program "'panex'" not found in ISPLLIB concatenation.',
                'futile to convert at this stage.'
        Address ISPEXEC "SETMSG MSG(ISRZ001)"
        Return 4
    End
    "F ')PROC' 1 FIRST"
    If rc/=0 Then Do
        zedlmsg=')PROC not found. Is this a panel?.'
        Address ISPEXEC "SETMSG MSG(ISRZ001)"
        Return 4
    End
/*--------------------------------------------------------------------*/
/* ISRUDSL0 after )PROC                                               */
/*--------------------------------------------------------------------*/
    ms=mark(2)
/*

/*-------------------------------------------------------------------*/
/*  Start: Panel exit "PANELI34" must be available or the panel will */
/*  abort on processing unless "S=" (blank).                         */
/*  If "S=x" is entered, the 'x' is stored in the profile.           */
/*  The profile will be tested and if set the exit will change the   */
/*  value accordingly.                                               */
/*-------------------------------------------------------------------*/
   VGET ISPF34PE PROFILE
   &F2 = TRUNC(&ZCMD,'=')
   IF (&F2 = 'S')
      &ISPF34PE = .TRAIL
      IF (&ISPF34PE ¬= '?')
         IF (&ISPF34PE = 'S',&Z)
            &ISPF34PE = &Z
/*       ELSE PANEXIT((ZDATA,ISPF34PE,ZCMD),LOAD,PANELI34)    ???    */
         VPUT ISPF34PE PROFILE
      ELSE
         VGET ISPF34PE PROFILE
      &ZEDLMSG = '''S'' substitute is set to ''&ISPF34PE''.'
      &ZCMD = &Z
      REFRESH(ZCMD)
      VER(&ZCMD,NB,MSG=ISRZ001)

   ELSE
      IF (&ISPF34PE ¬= &Z)
         PANEXIT((ZDATA,ISPF34PE),LOAD,PANELI34)
/*-------------------------------------------------------------------*/
/*  Shorthand for REFRESH                                            */
/*-------------------------------------------------------------------*/
   IF (&ZCMD = R) &ZCMD = 'REFRESH'
/*-------------------------------------------------------------------*/
/*  End: Panel exit "PANELI34".                                      */
/*-------------------------------------------------------------------*/

*/
    me=mark(-2)
    "(where)=LINENUM .ZCSR"
    Call put_lines

    "F 'Start: Panel exit' FIRST"
    "UP 1"
    "(status)=USER_STATE"
    Return 0

/*--------------------------------------------------------------------*/
/* Change command line from "COMMAND ===>" to "&SID ===>"             */
/*--------------------------------------------------------------------*/
change_command:
    "SCAN OFF"
    "F '&&SID' WORD FIRST"
    If rc=0 Then Do
        zedlmsg='Varaible "&SID" already used by panel.'
        Address ISPEXEC "SETMSG MSG(ISRZ001)"
        Return 4
    End
    xxx='Command Option COMMAND'
    Do While xxx/=''
        Parse VAR xxx xx xxx
        "F '"xx"' 2 FIRST"
        If rc/=0 Then Iterate
        "(line)=LINE .ZCSR"
        yy=Substr(line,Length(xx)+2)
        If Substr(yy,2,4)/='===>' Then Iterate
        Leave
    End
    If rc/=0 Then Do
        zedlmsg="Could not find command line from list '"xxx"'."
        Address ISPEXEC "SETMSG MSG(ISRZ001)"
        Return 4
    End
    line=$Cstring(line,xx,'&SID')
    line=Insert(' ',line,40,Length(xx)-4)
    xx=Substr(line,3,7)
    "LINE .ZCSR=(line)"
    zedlmsg='Command line changed.'
    Address ISPEXEC "SETMSG MSG(ISRZ001)"
    "F ')INIT' 1 FIRST"
    If rc=0 Then Do
        "(lin#)=LINENUM .ZCSR";"(line)=LINE" lin#+1
        x1=Length(line);x2=Length(Strip(line,'l'))
        line=Substr(' ',1,Length(line)-Length(Strip(line,'l'))) ||,
             '&SID=&ZSYSID'
        "LINE_AFTER .ZCSR=(line)"
    End
    "F '"xx"' 3 FIRST"
    Return 0

/*--------------------------------------------------------------------*/
/* Primary options panel.                                             */
/*--------------------------------------------------------------------*/
ISR@PRIM:
    "(line)=LINE .ZCSR"
    xx='Perform dialog testing'
    If Index(line,'7 ')>0 & Index(line,xx)>0 Then Do
        yy=Index(line,xx)
        zz='26'x || 'ZTAPPLID'
        line=Overlay(zz,line,yy+Length(xx))
        "LINE .ZCSR=(line)"
    End
    Return 0

/*--------------------------------------------------------------------*/
/* Subroutines.                                                       */
/*--------------------------------------------------------------------*/
Get_dataset: Arg a_dsn,a_memb
    xxx=$ddalloc(a_dsn)
    Do While xxx/=''
        Parse Var xxx xx xxx
        If Sysdsn("'"xx"("a_memb")'")='OK' Then Return xx
    End;Return 'Missing.dataset'
put_lines:
    x=Trace('o')
    Do i=ms To me;line=Sourceline(i);x=n_d(line,where);where=where+1;End
    Return 0
Mark:If Datatype(Arg(1))/='NUM' Then Arg(1)=1;Return sigl+Arg(1)
n_d:xx=Arg(1);"LINE_AFTER" Arg(2) "= (xx)";Return 0
n_b:xx=Arg(1);"LINE_BEFORE" Arg(2) "= NOTELINE (xx)";Return 0

/*--------------------------------------------------------------------*/
/* Parse parameters (Expects parameter list in variable "parm#")      */
/*--------------------------------------------------------------------*/
Parse_parms:
    zedsmsg=
    Parse Upper VAR parm# parm#

    #tr=parse_cons('TRACE','R','O')
    If #tr='N' Then #tr=parse_cons('/TR','R','O',3)
    find=parse_cons('/FIND',1,0)
    conv=parse_cons('/CONV',1,0,5)
    ns  =parse_cons('/NS',1,0)

    Return 0

/*--------------------------------------------------------------------*/
/* Parse string 'parm#' with 'mask'. Result set to 'N' if mask not    */
/* found or set to 'Y' if found. Can pass positive/negative result    */
/* substitution as the 2 and 3 parameter. Defaults are Y and N.       */
/* Can set null return value for either by passing 'NULL'. Can set    */
/* either to the original mask by entering '*' (suggest 'NULL' for the*/
/* other value).                                                      */
/* Can pass a mask length as fourth parameter. Comma delimit to pad   */
/* out if prior parameters are not supplied.                          */
/* Can pass 'WORD' as fourth parameter to return the word that        */
/* contain that mask.                                                 */
/*--------------------------------------------------------------------*/
parse_cons: Procedure Expose parm#;Arg mask,posr,negr,maskl
    If posr=''     Then posr='Y' ;If negr=''     Then negr='N'
    If posr='NULL' Then posr=''  ;If negr='NULL' Then negr=''
    If posr='*'    Then posr=mask;If negr='*'    Then negr=mask
    Select
        When (maskl='WORD') Then Do
            y#=0;xxx=parm#
            Do i=1 To Words(xxx)
                Parse VAR xxx x_x xxx
                If Index(x_x,mask)>0 Then Do;y#=i;posr=x_x;Leave;End
            End
        End
        When (Datatype(maskl,'W')) Then Do
            y#=0;xxx=parm#
            Do i=1 To Words(xxx)
                Parse VAR xxx x_x xxx
                If Substr(x_x,1,maskl)=Substr(mask,1,maskl) Then Do
                    y#=i;Leave
                End
            End
        End
        Otherwise y#=Wordpos(mask,parm#)
    End
    If y#>0 Then Do;parm#=Delword(parm#,y#,1);Return posr;End
    Return negr

/*--------------------------------------------------------------------*/
/* Parse string 'parm#' with 'mask'. Result set to 'N' if mask not    */
/* found or set to next space delimeted value immediately following   */
/* the mask (NULLs is a valid value).                                 */
/* Can pass positive/negative result substitution as the 2 parameter. */
/* Can pass 'NUM' as third parameter to check for numerics and return */
/* negative result if not numeric.                                    */
/*--------------------------------------------------------------------*/
parse_varb: Procedure Expose parm#;Arg mask,negr,dt
    If negr='' Then negr='N'
    parm##=' 'parm#;m#=' 'mask;y#=Index(parm##,m#)
    If y# > 0 Then Do
        If Substr(parm##,y#+Length(m#),1)='' Then Do
            px='';data="Parse VAR parm## p1 '"m#"' p2"
        End
        Else data="Parse VAR parm## p1 '"m#"' px p2"
        Interpret data
        parm#=Strip(p1) Strip(p2)
        If dt='NUM' & Datatype(px)/='NUM' Then Return negr
        Else                                   Return px
    End
    Return negr

Help_me:
    "ISREDIT (#member#)=MEMBER"
    If rc=0 Then Do;Address ISREDIT;ima_macro=1;End;Else ima_macro=0

    chgchar='`';cname='there'
    Signal on Syntax Name error_off_1
    Parse Value $Whoami() With cname sname  /* Toggle as per format   */
error_off_1: Signal Off Syntax

    today=Date('e')
    If ima_macro Then Do;Address ISREDIT;"(caps)=CAPS";"CAPS=OFF";End
    x=nl_h('*'Centre('ooo000OOOO000ooo',70,'-')'*')
    Do i=ms To me
        line=Sourceline(i)
        Parse Value Sourceline(i) With 3 line +68
        Do While Index(line,chgchar)>0
            Interpret "Parse VAR line p1 '"chgchar"' var '.' p2"
            If Index(var,'(')>0 Then Do
                Parse VAR var var '(' vl ')'
                If ¬Datatype(vl,'W') Then vl=Length(var)
                Interpret 'line=p1||Substr('var',1,vl)||p2'
            End
            Else Interpret 'line=p1||'var'||p2'
        End
        x=nl_h('*'Substr(' 'line,1,70)'*')
    End
    x=nl_h('*'Copies('-',70)'*')
    If ima_macro Then Do;"CAPS=(caps)";Address;End
    Exit

nl_h:Parse Arg n#
    If ima_macro Then "LINE_BEFORE .ZFIRST=NOTELINE (n#)";Else Say n#
    Return 0
Mark:If Datatype(Arg(1))/='NUM' Then Arg(1)=1;Return sigl+Arg(1)
