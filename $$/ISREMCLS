)PANEL KEYLIST (ISRNAB ISR)
)ATTR
   % TYPE(ET)
   _ TYPE(NEF) PAD(USER) CAPS(ON)
   + TYPE(PIN)
   Û TYPE(NT)
   @ TYPE(PT)
   # TYPE(FP)
   ³ TYPE(CH)
   Ð TYPE(SAC)
)BODY EXPAND({})
Û{ } @Model Classes { }
#Option  ===>_ZCMD                                                             %
Û
+Enter number or Class of model.
Û
Û Ð 1 ÛCLIST       - ISPF services in CLIST commands
Û Ð 2 ÛCOBOL       - ISPF services in COBOL programs
Û Ð 3 ÛEXEC        - ISPF services in EXEC commands
Û Ð 4 ÛFORTRAN     - ISPF services in FORTRAN programs
Û Ð 5 ÛMSGS        - Message format
Û Ð 6 ÛPANELS      - Panel formats and statements
Û Ð 7 ÛPLI         - ISPF services in PLI programs
Û Ð 8 ÛSKELS       - File tailoring control statements
Û Ð 9 ÛPASCAL      - ISPF services in PASCAL programs
Û Ð10 ÛREXX        - ISPF services in TSO/REXX commands
Û Ð11 ÛDTL         - ISPF Dialog Tag Language formats and statements
Û Ð12 ÛC           - ISPF services in C/370 programs
Û Ð13 ÛSCLM        - SCLM Project Definition Macros
Û Ð14 ÛARCHDEF     - SCLM Architecture Definition templates
  Ð U +UMODEL      - User models
Û
ÛEnter%END+command to cancel MODEL command.Û
)INIT
  .CURSOR = ZCMD
  .HELP = ISR2P100
  .MSG = '        '                /*   BLANK MSG INITIALLY           */
  &ISRMCLAS = '        '           /*   AND THE CLASS HOLDER VARIABLE */
)PROC
  IF (&ISRMONCL = 'Y')             /* ARE WE ONLY OBTAINING A CLASS ? */
      &ISRMCLAS = TRANS(TRUNC(&ZCMD,'.')  1,CLIST 2,COB 3,EXEC 4,FORT
         5,MSGS 6,PANELS 7,PLI 8,SKELS 9,PASCAL 10,REXX 11,DTL 12,C
         13,SCLM 14,ARCHDEF *,*)
                                   /*                         @H1C@H5C*/
      &TMPTRAIL = .TRAIL           /* Save any remaining          @H1A*/
  IF (&ISRMONCL ¬= 'Y')     /* ARE WE ONLY OBTAINING A CLASS ? OZ83844*/
       &ISRMDSPL = '        '
  &ZSEL = TRANS(TRUNC (&ZCMD,'.')  /* FOLLOW SELECTION TO NEXT PANEL  */
         1,'PANEL(ISREMCMD)'
     CLIST,'PANEL(ISREMCMD)'       /*  CLIST UNDER COMMAND SERVICES   */
         2,'PANEL(ISREMCOB)'
       COB,'PANEL(ISREMCOB)'       /*  COBOL PROGRAM SERVICE MODELS   */
     COBOL,'PANEL(ISREMCOB)'
         3,'PANEL(ISREMEXC)'
      EXEC,'PANEL(ISREMEXC)'       /* Exec function services          */
     EXEC2,'PANEL(ISREMEXC)'
         4,'PANEL(ISREMFTN)'
       FTN,'PANEL(ISREMFTN)'       /*  FORTRAN PROGRAM SERVICE MODELS */
      FORT,'PANEL(ISREMFTN)'
   FORTRAN,'PANEL(ISREMFTN)'
         5,'PGM(ISRECMBR) PARM(ISREMMSG)'   /*   GO RIGHT OUT TO GET  */
      MSGS,'PGM(ISRECMBR) PARM(ISREMMSG)'   /*    THE MSG MODEL       */
         6,'PANEL(ISREMPNL)'
     MENUS,'PANEL(ISREMPNL)'       /*   OLD TYPE PANELS               */
    PANELS,'PANEL(ISREMPNL)'
         7,'PANEL(ISREMPLI)'
       PLI,'PANEL(ISREMPLI)'       /* PLI FOR TSO AND MVS(DEFAULT)    */
       PL1,'PANEL(ISREMPLI)'       /* PL1 FOR TSO AND FOR DOS         */
    PLIOPT,'PANEL(ISREMPLI)'       /* PLIOPT DOES HAVE SOME USAGE YET */
       PLS,'PANEL(ISREMPLI)'       /* PLS OPTION IS TEMPORARY FOR NOW */
         8,'PANEL(ISREMSKL)'
     PROCS,'PANEL(ISREMSKL)'
     SKELS,'PANEL(ISREMSKL)'       /* FOR BOTH PROCS AND SKELS        */
         9,'PANEL(ISREMPAS)'
    PASCAL,'PANEL(ISREMPAS)'       /* PASCAL PROGRAM SERVICE MODELS   */
        10,'PANEL(ISREMRXC)'
      REXX,'PANEL(ISREMRXC)'       /* REXX   PROGRAM SERVICE MODELS   */
        11,'PANEL(ISREMDTL)'
       DTL,'PANEL(ISREMDTL)'       /* DTL   PROGRAM SERVICE MODELS@H4A*/
        12,'PANEL(ISREMWLN)'       /*                             @H6A*/
         C,'PANEL(ISREMWLN)'       /* C Lang                      @H6A*/
       CPP,'PANEL(ISREMWLN)'       /* C++ language                @H6A*/
        13,'PANEL(ISREMFLM)'       /* SCLM Macro models           @H7A*/
      SCLM,'PANEL(ISREMFLM)'       /* SCLM Macro models       @OY38423*/
        14,'PANEL(ISREMARC)'       /* SCLM Architecture Defs      @H7A*/
   ARCHDEF,'PANEL(ISREMARC)'       /* SCLM Architecture Defs      @H7A*/
         U,'PANEL(UMODELP)'        /* USER models                     */
    UMODEL,'PANEL(UMODELP)'        /* USER models                     */
       ' ',' '
         *,'?' )
  IF (&ZSEL = '?')
               /* IF (&ISRMDSPL ¬= 'RETURN' ) ** REPLACED BY OY33372*/
    IF (&ZMACRO = 'N' )            /*                        0Y33372*/
      &ZEMTEMP = &ZCMD             /* SET VARIABLE FOR MSG   OZ91267*/
      .MSG = ISRYM012
      &ZCMD = ' '                  /* RESET CMD LINE = BLANK OZ91267*/
      .RESP = 'ENTER'              /* WANT TO RESET RESP FOR RE-ENT */
                /* IF (&ISRMDSPL = 'RETURN' ) ** REPLACED BY OY33372*/
    ELSE                           /*                        OY33372*/
      .RESP = 'END'
      &ISRMCLAS = '?'
      .MSG = ISRYM012              /* INVALID CLASS          OY33372*/
  &ISRMMEND = 'N'                  /* SET THE END INDICATOR TO NO   */
  IF (.RESP = END)                 /* DID WE GET AN END FROM WHERE  */
      IF (&ISRMDSPL ¬= 'RETURN  ') /* WAS IT BECAUSE WE HAVE MEMBER */
        &ISRMMEND = 'Y'            /* ITS BECAUSE USER HIT END KEY  */
  IF (&ISRMONCL = 'Y')             /* ARE WE ONLY OBTAINING A CLASS */
     IF (.RESP ¬= 'RETURN  ')      /* Has user hit extended return  */
       IF (&ISRMCLAS ¬= '        ') /* Make sure we have some class */
          IF (&TMPTRAIL = ' ')     /* Just class entered        @H1A*/
             .RESP = END          /* ONLY WANT CLASS, NO OTHER DISP.*/
          IF (&TMPTRAIL ¬= ' ')    /* More than class entered   @H1A*/
             &ZEMTEMP = &ZCMD      /* Set variable for message  @H1A*/
             .MSG = ISRYM012       /* Set message number        @H1A*/
             &ZCMD = ' '           /* Reset cmd lint = blank    @H1A*/
             .RESP = 'ENTER'       /* Reset RESP to Re-enter    @H1A*/
  &ZMSG = .MSG                      /* SET MESSAGE VARIABLE      @L1A*/
  VPUT(ZMSG) PROFILE                /* SAVE MESSAGE IN PROF POOL @L1A*/
)END
/*                                                                  */
/* $SEG(ISREMCLS) COMP(EDIT) PROD(MVS)                              */
/*                                                                  */
/* CHANGE ACTIVITY                                                  */
 /* $L1 = QUALITY  M310 880405 192631 : FIX MODEL MACRO CMD (PTM 16) */
/*  $H1= QUALITY   M310     880706   VEND047: PTM #65               */
/*  $H2= QUALITY   M310     880831   235501 : PTM #95               */
/*  $H3= PTM 207   M310     881214   641747 : PTM # 207             */
/*  $H4= DTLMOD    M310     881213   764700 : DTL models added      */
/*  $H5= QUALITY   M310     881216   764700 : PTM #211              */
/*  $H6= CMOD      M320     890116   764700 : C_Lang models added   */
/*  $H7= QUALITY   M320     890908   464449 : SCLM Macro Models     */
/*  4Q1= PTR1236   M410     930927   020136 : Don't make SOURCE     */
/*   data sets default to SCLM models.                              */
/*                                                                  */
/*  OY33372 - 91/01/22 - PANEL LOGIC CHANGED TO PREVENT PANEL       */
/*                       DISPLAY WHEN A MACRO ISSUES A MODEL        */
/*                       COMMAND WITH AN INVALID CLASS.             */
/*                                             GT4045 - RPO/GJL     */
/*                                                                  */
/*  OY38423 - 91/03/05 - Add SCLM as a valid class choice.          */
/*                       GT4045-CDB                                 */
/*                                                                  */
 /* 5655-042 (C) COPYRIGHT IBM CORP 1980, 1995 */
