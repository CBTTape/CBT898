/*--------------------------ooo00 REXX 00ooo--------------------------*/
/*                                                                  */
/*  KILLCICS - This is the CICS Stop all executing regions.         */
/*             It front ends onto "CICU" and passes it the last 3   */
/*             digits of all regions executing on the "terhet" LPAR.*/
/*==================================================================*/
/*                                                                  */
/*  MODIFICATIONS                                                   */
/*                                                                  */
/*  When   - Who - What                                             */
/*  ------ - --- - -----------------------------------------------  */
/*  090909 - ALK - Created.                                         */
/*                                                                  */
/*==================================================================*/
killcics:killcics_ver='1.02'

  edjcl='N'                               /* Don't edit JCL         */
  edjcl='S'                               /* Simulate (for testing) */
  PARSE UPPER ARG parm#
  Parse SOURCE . . xcmd .
  c_up='g'                                /* Color UP               */
  c_sd='y'                                /* Color ShutDown         */
  c_nu='r'                                /* Color Not Up           */

  If Wordpos('/T',Translate(parm#))>0 Then Do
      parm#=Delword(parm#,Wordpos('/T',Translate(parm#)),1);#te=Trace(r)
  End

  If Wordpos(Word(Arg(1),1),'? /? HELP /H /HELP')>0 Then Do
      x=$BR("%CICU ??")
      Return
  End

  Parse VAR parm# sysid env
  If sysid='' | sysid='.' Then Do
      sysid=Strip(storage(d2x(x2d(c2x(storage(10,4)))+x2d(154)),8))
      parm#=sysid env
  End
  If sysid='SY2' Then Do
      valid_reg2=CICU$('SY2')
      valid_regions=valid_reg2
  End
  Else Do
      valid_reg5=CICU$('SY5')
      valid_reg8=CICU$('SY8')
      valid_regions=valid_reg5 valid_reg8
  End

  /* Default Environment                                            */
  Address COMMAND ;

  call CHECK_USER_AUTH ;               /* Check User Authority      */
  Call VALIDATE_PARMS                  /* Check for parameters      */

  If Sysvar(Sysenv)='BACK' | env='BACK' Then,
       Call NON_PANEL ;                /* Bupass panel Validation   */
  Else call DIS_PANEL ;                /* Use Panel to Validate     */

  ADDRESS ISPEXEC "SETMSG MSG(ISRZ000)" ;
  ADDRESS ISPEXEC "SETMSG MSG(ISRZ001)" ;

  EXIT 0 ;  /* END of Program */

/*------------------------------------------------------------------*/
CHECK_USER_AUTH:
/*------------------------------------------------------------------*/
/*  Invoke ACF2,                                                    */
/*  Extract user's UID string                                       */
/*  Set userauth value                                              */
/*------------------------------------------------------------------*/

  x=Outtrap("acf_out.",1) ;

  queue "set terse" ;
  queue "list *"    ;
  queue "end" ;

  Address TSO 'acf' ;

  x=Outtrap("OFF") ;

  acfuid=Substr(Word(acf_out.1,2),1,20) ;

  If substr(acfuid,01,12)/='11-011-04-00' Then Do
      zedlmsg='You are not authorised to shut all regions down.'
      Signal exit_with_message
  End

  RETURN ;

exit_with_message:
  If Sysvar(Sysenv)='BACK' Then Say zedlmsg /* Returns FORE/BACK */
  Else Address ISPEXEC "SETMSG MSG(ISRZ001)"
  Exit

/*------------------------------------------------------------------*/
VALIDATE_PARMS:
/*------------------------------------------------------------------*/
/*  Valid that if any parameters are entered they are the system id */
/*  otherwise all jobs will be stopped.                             */
/*------------------------------------------------------------------*/
/*                                                                  */

  Parse Upper VAR parm# w1 w2 w3 .
  If sysid='SY2' Then valid_sysid='SY2'
  Else valid_sysid='SY5 SY8'

  If w1/='' Then Do
      If Wordpos(w1,valid_sysid)=0 Then Do
          zedlmsg='Invalid LPAR request "'w1'". Valid value(s) is/are',
                  '"'valid_sysid'".'
          Signal exit_with_message
      End
      valid_sysid=w1
  End

  RETURN ;

/*------------------------------------------------------------------*/
DIS_PANEL:
/*------------------------------------------------------------------*/
/*  Display panel USP4020                                           */
/*  Confirm shutdown of all YELLOW coloured regions.                */
/*------------------------------------------------------------------*/
  Do  Forever      /* Display panel, process selection, until <F3>  */
      Address ISPEXEC "SETMSG MSG(ISRZ001)"       /* Init Panel Msg */
      prot1='INPUT';zcmd=
      Call set_valid_jobs
      ADDRESS ISPEXEC "DISPLAY PANEL(USP4020)" ;

      If rc=8 Then Leave
      If Wordpos(Word(zcmd,1),'? /? HELP /H /HELP')>0 |,
         zverb='HELP' Then Do
          x=$BR("%CICU ??")
          i_rc=2
          Iterate
      End
      Parse Value '' With zedlmsg zedsmsg

      If NON_PANEL()/=0 Then Iterate
      Leave
  End  /*  DO FOREVER  */

  ZEDSMSG = 'KILLCICS: Utility Ended' ;
  ZEDLMSG = 'KILLCICS: CICS region control utility has Ended' ;

  return ;

/*------------------------------------------------------------------*/
NON_PANEL:
/*------------------------------------------------------------------*/
/*  If Multiple regions passed (eg cicreg='I20,I21,I22' )           */
/*  then PARSE them out and process one by one                      */
/*------------------------------------------------------------------*/
/*                                                                  */
#tr=Trace('o')
  cicreg_work=CICUJ(sysid,'P')
  If cicreg_work='' Then Do
      If Sysvar(Sysenv)='BACK' | env='BACK' Then Do
          Say '*'
          Say 'KILLCICS: No regions executing on "'sysid'" worthy of a',
              '"CICU" call'.
          Say '*'
          return ;
      End
      Else Do
          zedsmsg=;zedlmsg=,
              'KILLCICS: No regions executing on "'sysid'" worthy of a',
              '"CICU" call'.
          Address ISPEXEC "SETMSG MSG(ISRZ001)"
          return 8
      End
  End
  If Sysvar(Sysenv)='BACK' | env='BACK' Then Do
      Say '*'
      Say 'KILLCICS: Invoking "CICU" using the following parameters,'
      Say '  'cicreg_work 'S' edjcl
      Say '*'
  End
/*x=CICU(cicreg_work 'S' edjcl)                                       */
  x=CICUKILL(cicreg_work 'S' edjcl)

  return 0

/*------------------------------------------------------------------*/
/*  Determine which jobs are executing. For production, will list   */
/*  both the SY5 and SY8 candidates.                                */
/*------------------------------------------------------------------*/
/*                                                                  */
set_valid_jobs:
    #tr1=Trace('o')
    c_1=Copies(c_nu,7)
    If sysid='SY2' Then Do
        up_reg2=Space(valid_reg2,,',')
        cicsup='On SY2:' up_reg2
        cicsups='BBBYYYYb'Copies(c_1'w',Words(valid_reg2)-1)c_1
        xx=get_executing_jobs('SY2')
    End
    Else Do
        up_reg5=Space(valid_reg5,,',')
        cicsup='On SY5:' up_reg5
        cicsups='BBBYYYYb'Copies(c_1'w',Words(valid_reg5)-1)c_1
        ll=Length(cicsup)%72;If Length(cicsup)//72>0 Then ll=ll+1
        cicsup=Left(cicsup,ll*72,' ')
        cicsups=Left(cicsups,ll*72,'w')
        up_reg8=Space(valid_reg8,,',')
        cicsup=cicsup'On SY8:' up_reg8
        cicsups=cicsups'BBBYYYYb'Copies(c_1'w',Words(valid_reg8)-1)c_1
        xx=get_executing_jobs('SY5')
        xx=get_executing_jobs('SY8')
    End
    #c_up=c_up;c_up=c_sd;xx=get_executing_jobs(sysid,'D');c_up=#c_up
    x=Trace(#tr1)                          /* Restore trace setting  */
    Return

get_executing_jobs:
    Parse Upper Arg s_id
    exec_reg=CICUJ(s_id);up_regs=up_regs','exec_reg
    Do While exec_reg/=''
        Parse VAR exec_reg e_reg ',' exec_reg
        sp=Index(cicsup,e_reg)
        cicsups=Overlay(Copies(c_up,Length(e_reg)),cicsups,sp)
    End
    Return 0

