/******************************** REXX ********************************/
/**********************************************************************/
n_st=mark(2)                                /* Mark next line         */
/*

 The DONTSUB command (or it's alias KS) sets a variable that is then
 interrogated by the TEMPSUB routine. If DONTSUB/KS has been entered,
 TEMPSUB will not submit the job and issue an appropriate message.
 TEMPSUB will also reset the flag.

 You can pass DONTSUB a parameter of CANcel which will cancel the
 edit session.  Without this parameter, the edit session is ended and
 all the changes made are saved.

*/
n_en=mark(-2)                               /* Mark prev 2 line       */

    Arg parm#
    Address ISPEXEC
    ima_macro=0
    If parm#/='' Then Signal byp1
    "CONTROL ERRORS RETURN"
    "ISREDIT MACRO (parm#)"
    If rc/=0 Then Signal byp1
    ima_macro=1

byp1:
    cactn="RETURN"
/*  cactn="CANCEL"                                                    */
    "CONTROL ERRORS" cactn

ini1:
    Parse Upper VAR parm# parm1 parm2 parm3
    If parm1='?' Then Signal Help_me

    If parm1/='' Then,
         If Substr(parm1,1,1)='C' Then action='CANCEL';Else Nop
    Else action='END'
    dontsub='YES';"VPUT (dontsub) SHARED"
    "ISREDIT &ACTION"
    Return 0

Help_me:
    chgchar='&'
    today=Date('e')
    If ima_macro Then Do
        Address ISREDIT;"(caps)=CAPS";"CAPS=OFF";msgt='NOTELINE'
    End
    x=nl_h('*'Centre('ooo000OOOO000ooo',70,'-')'*')
    Do i=n_st To n_en
        line=Sourceline(i)                                       ne '*/'
        Do While Index(line,chgchar)>0
            Interpret "Parse VAR line p1 '"chgchar"' var '.' p2"
            If Index(var,'(')>0 Then Do
                Parse VAR var var '(' vl ')'
                If Â¬Datatype(vl,'W') Then vl=Length(var)
            Interpret 'line=p1||Substr('var',1,vl)||p2'
            End
            ELse Interpret 'line=p1||'var'||p2'
        End
        x=nl_h('*'Substr(line,1,70)'*')
    End
    x=nl_h('*'Copies('-',70)'*')
    If ima_macro Then Do;"CAPS=(caps)";Address;End
    Exit

nl_h:Parse Arg n#
    If ima_macro Then "LINE_BEFORE .ZFIRST=&MSGT (n#)";Else Say n#;Return 0
Mark: Arg diff;If Datatype(diff)/='NUM' Then diff=1;Return sigl+diff
