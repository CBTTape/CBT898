/*--------------------------ooo00 REXX 00ooo--------------------------*/
   "ISREDIT MACRO (parm#)"
   If rc=0 Then ima_macro=1;Else ima_macro=0
/*--------------------------------------------------------------------*/
/* Note to the designer:                                              */
/* If you need a /* or a */ in your detail eg. JCL comment '//*'      */
/* place a corresponding "*/" in cols 73-80 to balance it out as only */
/* cols 1-72 are displayed.                                           */
/* Test it before you release it....                                  */
/*--------------------------------------------------------------------*/

n_st=mark(2);Signal Help_end                /* Mark next line         */
/*
*-----------------------< LMHELP01 for LMEXIT >------------------------*
  The following line commands have been expanded as a 1 line description
  is considered insufficient.

  Cmd    Description
  ------ ---------------------------------------------------------------
  PI     Progress Indicator (after - default)
  PIA    Progress Indicator (after)
  PIAN   Progress Indicator (after)  as NOTELINE
  PIB    Progress Indicator (before)
  PIBN   Progress Indicator (before) as NOTELINE
  PIL    Progress Indicator (locate)
  PIN    Progress Indicator (after)  as NOTELINE
         PI* is a string of line commands designed to generate a
         progress indicator entry in the edit/view session for
         documentation purposes.  Any non-NOTELINE command will search
         and remove any preceeding PI's.
         Note:
          1. Any following PI will be left untouched.
          2. Issue a command with a 'N' suffix to ensure it meets your
             need.

                             ******

  SD     Show difference between adjacent lines  (marks with '*')
  SDA    - As "SD" but Adjacent lines are compared
         This command will will compare two (or more adjacent lines
         against the first line) and notify the difference with an
         asterisk (*) above the difference in a NOTELINE.  Because of
         this feature (noteline), comparison is only for the scope of
         the screen and if any scrolling is performed, you must reset
         (or delete notelines) and re-issue the command.
         Notes:
         1. This command is not meant to be a file comparere but may
            compliment the "XD" (eXclude Duplicates - if available)
            command or any comparison routine that compares datasets/
            members (eg. SuperC) when the difference between two lines
            may be difficult to detect.
         2. "SD" on one line will compare it with the NEXT line.
         3. Blocking will compare all the following lines with the first
            line and not necesarily the previous line unless you use the
            "SDA" command.
         4. A blank line will be displayed if all chacters are matched
            otherwise either an "offscreen differences" or "lines same"
            message will be notelined.

                             ******

  SN     Shift Right Non-excluded lines
  SLN    Shift Left Non-excluded lines
  SRN    Shift Right Non-excluded lines
         The above commands are designed to shift selected lines only
         either left or right. As you cannot pass the number of columns
         to shift in the line command or as a command line parameter you
         can specify the number of columns to shift by:
         1. Cursor placement where you wish to shift column 1 to.
            Using this option, you do not need to reposition the cursor
            on the first line of the block.
            Notes: - If you place the cursor on column 10 column 1 is
                     shifted to column 10, which would actually be a
                     shift of 9.  This may not give your desired results
                     for a left shift without practice.
                   - Consider leading spaces.  They may conflict with
                     your wishes when choosing destination column.
         2. Overtype the line so that the first word specifies a numeric
            shift amount.
            - The cursor must be placed back on the 1st. line (if a last
              block line is used) when the [ENTER] button is pressed to
              ensure it's original value can be restored.
         Use common sense (or a trial run if you have BNDS on or off).

         Notes on the overtype method:
          1. If the cursor is not on the first line, the original value
             will not be restored and in fact the column range entered
             will be included in the overlay.
          2. If you think it is too much mucking about repositioning
             the cursor do it manually.

                             ******

*----------------------------------------------------------------------*
+
*/ Help_End:
n_en=mark(-2)                               /* Mark prev 2 line       */
Help_me:
    If \Datatype(parm#,'W') Then parm#='.ZFIRST'
    If ima_macro Then Do;Address ISREDIT;"(caps)=CAPS";"CAPS=OFF";End
    Do i=n_st To n_en;x=nl_h(Substr(Sourceline(i),1,72));End
    If ima_macro Then Do;"CAPS=(caps)";Address;End
    Exit
nl_h:Parse Arg n#
    If ima_macro Then "LINE_BEFORE" parm#"=NOTELINE (n#)";Else Say n#;Return 0
Mark: Arg diff;If Datatype(diff)/='NUM' Then diff=1;Return sigl+diff
