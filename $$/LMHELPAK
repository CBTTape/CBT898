/*--------------------------ooo00 REXX 00ooo--------------------------*/
   "ISREDIT MACRO (parm#)"
   If rc=0 Then ima_macro=1;Else ima_macro=0
/*--------------------------------------------------------------------*/
/* Note to the designer:                                              */
/* If you need a /* or a */ in your detail eg. JCL comment '//*'      */
/* place a corresponding "*/" in cols 73-80 to balance it out as only */
/* cols 1-72 are displayed.                                           */
/* Test it before you release it....                                  */
/*--------------------------------------------------------------------*/

n_st=mark(2);Signal Help_end                /* Mark next line         */
/*
*----------------------< LMHELPAK for LMEXITAK >-----------------------*
  The following line commands have been expanded as a 1 line description
  is considered insufficient.

  Cmd    Description
  ------ ---------------------------------------------------------------
  CON    Concatenate datasets using the "CONC" command.
  CONC   Concatenate datasets using the "CONC" command.
  CONCI  Concatenate datasets using the "CONC" command.
         Blocked datasets will be concatenated and allocated to a
         generated DDname and presented using "ISPFALOC".  Use CONCI
         to invoke "ISRDDN" instead of "ISPFALOC".
         Notes:
          1. Requires access to macros "CONC" (and optionally
             "ISPFALLOC" and it's associated packaging).
          2. While "ISRDDN" is supported by IBM "CONC" is supported by
             the author of "ISPFALOC".  If "ISPFALOC" goes out of
             support then so does "CONC".
          3. "ISPFALOC" is more customisable than "ISRDDN".  Fell free
             to use whicever you prefer, but, as I'm the author I have
             made "ISPFALOC" as the default.

                             ******

  JF     JCL Formater.  Use line command JFH for instructions on the JF
  JFH    command (edit-macro 'JF' and don't forget to max UP if line 1
         is not at top of screen).
         Note: Requires access to macro "JF".

                             ******

         Member Manager:
         ---------------
  MMA    Invoke "Member Manager" against this and next lines.
  MME    Invoke "Member Manager" against this and next lines (parm 'E1')
  MMV    Invoke "Member Manager" against this and next lines (parm '/V')
         Invoke "MM" against two adjacent lines containig datasets in
         "XB" parsable format (which is practically any format except
         reverse spelling).  If an uncataloged dataset is to be
         processed utilise the "XB" volume parser feature by appending
         ",VOL=SER=voser" after the dataset name (as you would in JCL).
            eg.   SYS1.PARMLIB                  /* (on volume SYSR01) */
                  SYS1.PARMLIB,VOL=SER=SYSR02   /* alternate volume   */

         Use 'MMV' for catalogued datasets you wish to have the volume
         included (or use the '/V' command when is being processed).

         While "MM" will accept 'E1' or 'E2' as a parameter, only 'E1'
         is acceptable by LINEMAC ('MME' command).  If you wish to use
         'E2' it is suggested you reverse the order of the data lines
         and use 'E1'. (You can always export member to avoid
         corruption.)  To execute these line commands you need access to
         the "MM" package.
         Note:
           - Requires access to command 'MM' and it's infrastructure.
           - If you want to compare 2 non adjacent lines, use the block
             line command format (eg. MMAA), and the 1st. and last lines
             in the block will be compared.
           - If you want to compare 2 lines in reverse order, supplement
             the MM% line command with a "LMP R | /R" command. This will
             make the first dataset the second and vice versa.
             Alternatively execute as is and then use the "FLIP" MM
             command.

                             ******

 MVC    Move RHS from cursor column with prompt for to cursor.
 MVCN   - As "MVC" above but for Non-excluded lines only.
 MVCX   - As "MVC" above but for eXcluded lines only.
 MRC    Move RHS from cursor column with prompt for to cursor.
 MRCN   - As "MRC" above but for Non-excluded lines only.
 MRCX   - As "MRC" above but for eXcluded lines only.
 MLC    Move LHS from cursor column with prompt for to cursor.
 MLCN   - As "MLC" above but for Non-excluded lines only.
 MLCX   - As "MLC" above but for eXcluded lines only.
        This line command will permit movement (shifting) of data from
        the current cursor position to another position that is input in
        a panel that displays the contents of the current line the
        cursor is on.  Data either side of the line (depending on data
        depth either by choice or screen size restricted) will be
        displayed with a column marker over it. Use this feature to
        align columns.
        Alternatively use the "COL" marker which is adjusted for any
        right scrolls.
        Move the cursor to where you want the data moved.
        The way the data is moved (relative to the cursor) depends on
        the command used. "ML*" will move the data to the left of the
        cursor with the cursor indicating the LAST character. The other
        commands will move the data to the right of the cursor with the
        cursor indicating the FIRST character.
        Notes:
          - Requires:
              REXX:
                MVC      - Main driver (macro).
                $DAT@CSR - Function to return data at cursor position.
              Panel:
                MVCP     - Cursor positioning panel.
          - Ensure that what it shifts is actually what you want.
          - The source of the data will be from where the cursor is on
            entry to the "move to". Be carefull when you leave the
            cursor in the sequence number part of the data. Cursor in
            this part of the line will default to column 1.
            If you screw up this way, rather than cancel out and start
            again, you may enter "NS" on the command and place the
            cursor in a new column, indicating a new start, thereby the
            cursor will be left asis and you will be given an oportunity
            to enter the new destination.
          - If the cursor is over the sequence number (either on
            invocation of the line command or in the "move to" screen),
            column 1 will be assumed.
          - Does not set or change BNDS settings. In fact it ignores
            them so watch it.
          - The display screen may present an image of the original
            screen to a depth of 3, 5, 7 or 9 lines. The greater the
            depth, the better your orientation to judge where to move.
            There is an input field on the screen to permit depth change
            provided your terminal model supports that depth. (Model 2
            terminals are locked into depth=3.)

                            ******

         Selective Overlays:
         -------------------
  ON     Overlay on N-excluded lines
  ONC    Overlay on N-excluded lines selective Column
  ONCU   Overlay on N-excluded lines Unconditional selective Column
  ONU    Overlay on N-excluded lines Unconditional
  ONUC   Overlay on N-excluded lines Unconditional selective Column
  OX     Overlay on eXcluded lines
  OXC    Overlay on eXcluded lines selective Column
  OXCU   Overlay on eXcluded lines Unconditional selective Column
  OXU    Overlay on eXcluded lines Unconditional
  OXUC   Overlay on eXcluded lines Unconditional selective Column
         The above ON* and OX* line commands are designed to issue
         overlay commands over either the eXcluded on Non-excluded lines
         in a block command. The first line in the block (or repetition)
         will be overlaid either the excluded or non excluded lines.

         You may do an unconditional overlay (ie. overlay even if the
         column is not spaces) by including a 'U' to the command (must
         follow the 'X' or 'N').

         You may limit the overlay to a (single) column range as
         follows:
           - Include a 'C' to the command (must follow the 'X' or 'N').
           - Overtype the 1st. line with the column range as word 1.
             Format 'sc-ec' where:
               sc   - Start column.
               '-'  - Literal seperator.
               ec   - End column.  Must be greater than 'sc' and if
                      greater than record length it will be changed
                      accordingly.
           - The cursor must be placed back on the 1st. line (if a last
             block line is used) when the [ENTER] button is pressed to
             ensure it's original value can be restored.
         Notes on column selection:
          1. If the cursor is not on the first line, the original value
             will not be restored and in fact the column range entered
             will be included in the overlay.
          2. If you think it is too much mucking about repositioning
             the cursor, you can customise line 1 to only include the
             columns you need to overlay.  However that customised line
             is only good for one use and must be changed for other
             overlays.

         By mixing excluded lines with conditional and unconditional
         overlays, incredible special effects can be generated (better
         than any CGI).

                             ******

  VAPF   Verify APF entry of DSNAME vs VOLUME (list only 'NotFound')
  VAPFA  Verify APF entry of DSNAME vs VOLUME (list ALL with approp Msg)
  VAPFN: -  Same as "VAPF" but in a NOTELINE for prmlib APF list members
         This routine will verify parmlib APF members reporting on
         dataset against the volume specified.  For volumes of '******'
         the resvol will be determined and checked for the dataset.
         If the line contains the literal 'DSN=' or 'DSNAME=' it will be
         assumed to be executable JCL (as opposed to parmlib APF member)
         and the ranged datests will be compared with the memory
         resident APF list against any catalog information and reported
         accordingly.
         All reports will be notelines above the relevant line.
         Notes:
           - Some feature may require access to command 'VAPF'.
           - Datasets will be compared with the current LPAR and shared
             APF list may report "errors" that may not be actual errors
             on correct LPARs.
           - VAPFA will issue say statements as NOTELINES mixed will all
             the lines would be confusing.
           - VAPFN. The best way to utilise this feature is to exclude
             all the lines you wish to check and enter 'VAPFN' on the
             block exclude to just bring up the 'not found' ones only.

                             ******

*----------------------------------------------------------------------*
+
*/ Help_End:
n_en=mark(-2)                               /* Mark prev 2 line       */
Help_me:
    If \Datatype(parm#,'W') Then parm#='.ZFIRST'
    If ima_macro Then Do;Address ISREDIT;"(caps)=CAPS";"CAPS=OFF";End
    Do i=n_st To n_en;x=nl_h(Substr(Sourceline(i),1,72));End
    If ima_macro Then Do;"CAPS=(caps)";Address;End
    Exit
nl_h:Parse Arg n#
    If ima_macro Then "LINE_BEFORE" parm#"=NOTELINE (n#)";Else Say n#;Return 0
Mark: Arg diff;If Datatype(diff)/='NUM' Then diff=1;Return sigl+diff
