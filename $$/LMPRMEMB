/******************************** REXX ********************************/
lmprmemb_ver='2.09'
/*--------------------------ooo000OOOO000ooo--------------------------*/
/*                                                                    */
/* LMPRMEMB: LineMac PRocess MEMBer.                                  */
/*                                                                    */
/* Part of the LIMEMAC suite to process a member.                     */
/*                                                                    */
/* Parameters from LINEMAC:                                           */
/*  SUPERC                                                            */
/*        - Invoke ISPF's SUPERC against two members.  Use block      */
/*          command to compare "non-adjacent" members (from list).    */
/*  COPY  - Macro to copy existing member (from first word of line    */
/*          data) into current member. Access to panel "$MEMBCOP".    */
/*  COPYTO- Copy member 'a' to member 'b'. (Usually from an index.)   */
/*          data) into current member. Access to panel "$MEMBCOP" and */
/*          uses function "$COPYMEM".                                 */
/*  DEL   - Delete member.  Needs access to panel "$MEMBDEL" to       */
/*          confirm deletion.  If invoked using command 'DMU'         */
/*          (instead of 'DM') then the line will be deleted from the  */
/*          edited member.                                            */
/*  LOOK  - LINEMAC xM command where 'x' can be:                      */
/*          B - Browse.                                               */
/*          E - Edit.                                                 */
/*          V - View.                                                 */
/*  REN   - Rename member.  Will pop up panel $MEMBREN for entry of   */
/*          new member.  If invoked using command 'RMU' (instead of   */
/*          'RM' then the first occurance of the member name on the   */
/*          line will be changed to the new name.                     */
/*  STAT  - Display 'short' stats info in a noteline.                 */
/*                                                                    */
/* If the line was changed to enter member name it will be restored   */
/* from variable "lcmd1stl", set up by LINEMAC, only if the last word */
/* on the line is a '/R' (line truncated to 72 bytes prior to test).  */
/*                                                                    */
/*--------------------------------------------------------------------*/
    Address ISPEXEC "CONTROL ERRORS RETURN"
    Address ISREDIT
    "MACRO (parm#) NOPROCESS"

    "(lev)=MACRO_LEVEL"
    If lev>1 Then Parse VAR parm# labf ',' labt ',' lcmd parm#
    Else Do
        "PROCESS RANGE C";"(cmd)=RANGE_CMD"
        If cmd='C' Then "(labf)=LINENUM .ZFRANGE"
        Else "(labf)=LINENUM .ZFIRST"
    End

    Address ISPEXEC "VGET (lcmd1stl,lcmd1l#,lcmd1c#) SHARED"
    "CURSOR="labf 0;"(line)=LINE .ZCSR";"(dataset)=DATASET"
    If line/=lcmd1stl Then Do
        xx=Substr(line,1,72)
        If Wordpos(Word(xx,Words(xx)),'/R /r')>0 Then,
            "LINE &lcmd1l#=(lcmd1stl)"
    End
    nat='ABCDEFGHIJKLMNOPQRSTUVWXYZ@#$';ext='0123456789*'
    "(lin#,col#)=CURSOR"
    If line=lcmd1stl & col#>0 Then line=Substr(line,col#)
    If Wordpos(lcmd,'BMC EMC VMC')>0 Then Do
        member=Strip(Substr(line,lcmd1c#,8))
        col#=Verify(member,nat||ext,'N')
        If col#>0 Then member=Substr(member,1,col#-1)
        Select
            When Substr(lcmd,1,1)='E' Then action="EDIT"
            When Substr(lcmd,1,1)='V' Then action="VIEW"
            Otherwise action='BROWSE'
        End
        Call look_at_member
        Return 0
    End
    If Index(line,'&')>0 Then Do
        line=$evalamp(line)
        "CURSOR="lin# col#
    End
    col#=Verify(line,nat,'M')
    If col#=0 Then Do
        zedsmsg=;zedlmsg="Not valid member name format."
        Address ISPEXEC "SETMSG MSG(ISRZ001)";Return 4
    End
    @col#=col#
    Do i#i=labf To labt
        col#=@col#
        "(line)=LINE" i#i
        member=Strip(Substr(line,col#,8));Parse VAR member member .
        member=Translate(member)
        #col#=col#;col#=Verify(member,nat||ext,'N')
        If col#>0 Then member=Substr(member,1,col#-1)
        If member='' Then Do
            zedsmsg=;zedlmsg=$Vername(member)
            Address ISPEXEC "SETMSG MSG(ISRZ001)";Return 4
        End
        cpp=1                               /* Col Position for Peek  */
        lmrc=0
        Select
            When parm#='LOOK' Then Do
                Select
                    When Substr(lcmd,cpp,1)='E' Then action="EDIT"
                    When Substr(lcmd,cpp,1)='V' Then action="VIEW"
                    Otherwise action='BROWSE'
                End
                Call look_at_member
            End
            When parm#='DEL' Then lmrc=del_member()
            When parm#='REN' Then lmrc=rename_member()
            When parm#='COPY' Then Do
                "COPY" member "AFTER" labf
                If rc/=0 Then Address ISPEXEC "SETMSG MSG(ISRZ002)"
                lmrc=4
            End
            When parm#='SUPERC' Then lmrc=SuperC_member()
            When parm#='COPYTO' Then lmrc=copy_to_member()
            When parm#='STAT' Then lmrc=stat_member()
            When parm#='SUBM' Then lmrc=submit_member()
            Otherwise Do
                zedsmsg=;zedlmsg=parm# 'operation not available in current',
                    'version ('lmprmemb_ver') of "LMPRMEMB".'
                Address ISPEXEC "SETMSG MSG(ISRZ001)";lmrc=4
            End
        End
        If lmrc/=0 Then Leave
    End
ext1:
    "CURSOR="i#i 0
    Return 4

look_at_member:
    action member
    If action='BROWSE' & rc/=0 Then Do
        Address ISPEXEC "SETMSG MSG(ISRZ002)";lmrc=4
    End;Else lmrc=0
    Return 0

stat_member:
    "ISREDIT (dataset)=DATASET";"ISREDIT (caps)=CAPS";"ISREDIT CAPS=OFF"
    Address ISPEXEC
    "LMINIT DATAID(DATA1) DATASET('&DATASET')"
    "LMOPEN DATAID(&DATA1) OPTION(INPUT)"
    linex='Not available';#member=member
    If rc=0 Then Do
        "LMMLIST DATAID(&DATA1) OPTION(LIST) MEMBER(MEMBER) STATS(YES)"
        If rc=0 Then Do
            If #member=member Then linex=,
                  'Cdate:'ZLCDATE 'Lmdate:'ZLMDATE 'Size:'ZLCNORC,
                  'Lev:'zlvers'.'zlmod 'Id:'ZLUSER
            Else linex='Member "'#member'" not found.'
        End
    End
    "LMMLIST DATAID(&DATA1) OPTION(FREE)";"LMCLOSE DATAID(&DATA1)"
    "ISREDIT LINE_BEFORE .ZCSR=NOTELINE (linex)";"ISREDIT CAPS=(caps)"
    Return 0

del_member:
    "(jdsname)=DATASET";"(lin#)=LINENUM .ZCSR"
    @adr=Address();Address ISPEXEC
    If Sysdsn("'"jdsname"("member")'")/='OK' Then Do
        zedlmsg="Member not found."
        Signal del_exit
    End
/*  zedlmsg="Confirm member deletion. Hit <ENTER> to delete member",  */
/*  "'"member"' or END PF key to retain member."                      */
    zedsmsg=;zedlmsg=;"SETMSG MSG(ISRZ001)"
    l#=$dat@csr('/L#');zwinttl='LMPRMEMB Process';#popr=l#-2;#popc=17
    qdsname="'"jdsname"'"
del_member_scr:
    zcmd=
    "CONTROL DISPLAY SAVE"
    "ADDPOP ROW(&#POPR) COLUMN(&#POPC)"
    "DISPLAY PANEL($MEMBDEL)";rc1=rc;"REMPOP"
    If rc1>8 Then Do
        zedlmsg="Delete confirmation panel "$MEMBDEL" not found.",
                "You'll have to delete member '"member"' manually."
        Signal del_exit
    End
    If rc1/=0 Then Do
        zedlmsg="Confirmation of member deletion abandoned."
        Signal del_exit
    End
    If zcmd='BROWSE' Then Do
        "BROWSE DATASET('&JDSNAME(&MEMBER)')"
        "CONTROL DISPLAY REFRESH"
        Signal del_member_scr
    End
    "CONTROL DISPLAY REFRESH"

    "LMINIT DATAID(KILLID) DATASET('&jdsname') ENQ(SHRW)"
    "LMOPEN DATAID(&KILLID) OPTION(OUTPUT)"
    "LMMDEL DATAID(&KILLID) MEMBER(&MEMBER) NOENQ"
    "LMFREE DATAID(&KILLID)"
    If lcmd='DMU' Then Do
        zedlmsg="'"jdsname"("member")' deleted and ALSO the line from member."
        "ISREDIT DEL .ZCSR .ZCSR"
    End
    Else zedlmsg="'"jdsname"("member")' deleted. Update your doco by",
            "manually deleting line #"lin#+0" from source if applicable."
del_exit:
    zedsmsg=;"SETMSG MSG(ISRZ001)";Return 4

Submit_member:
    "(jdsname)=DATASET";"(lin#)=LINENUM .ZCSR"
    @adr=Address();Address ISPEXEC
    If Sysdsn("'"jdsname"("member")'")/='OK' Then Do
        zedlmsg="Member not found."
        Signal submit_exit
    End
    #m1=Msg('On');x=Outtrap('lineo.',5,'NOCONCAT')
    Address TSO "SUBMIT '"jdsname"("member")'"
    x=Outtrap('Off');x=Msg(#m1)
    zedlmsg=lineo.1
submit_exit:
    zedsmsg=;"SETMSG MSG(ISRZ001)";Return 4

rename_member: Arg newmemb
    "(jdsname)=DATASET";"(lin#)=LINENUM .ZCSR"
    @adr=Address();Address ISPEXEC

    l#=$dat@csr('/L#')
    zwinttl='LMPRMEMB Process';#popr=l#-2;#popc=17
    "LMINIT DATAID(DATA1) DATASET('&JDSNAME') ENQ(SHRW)"
    "LMOPEN DATAID(&DATA1) OPTION(OUTPUT)"
    If newmemb='' Then Do
        newmemb=member;csrp1=Length(newmemb)+1;If csrp1>8 Then csrp1=8
    End
    zedsmsg=;zedlmsg=;"SETMSG MSG(ISRZ001)"
    "ADDPOP ROW(&#POPR) COLUMN(&#POPC)"
    "DISPLAY PANEL($MEMBREN)";rc1=rc;"REMPOP"
    If rc1/=0 Then Do
        zedsmsg=;zedlmsg='Rename abandoned.';"SETMSG MSG(ISRZ001)"
        Signal ren_finished
    End
    "LMMREN DATAID(&DATA1) MEMBER(&MEMBER) NEWNAME(&NEWMEMB) NOENQ"
    If rc>4 Then rc1=rc;Else rc1=0
    If rc1>0 Then zedlmsg='Rename failed, RC='rc'.'
    Else zedlmsg="Old member '"member"' renamed to '"newmemb"'."
ren_finished:"LMCLOSE DATAID(&DATA1)";"LMFREE DATAID(&DATA1)"
    If lcmd='RMU' & rc1=0 Then Do
        line=Overlay(Substr(newmemb,1,8),line,#col#+col#,8)
        "ISREDIT LINE" lin#"=(line)"
        zedlmsg=zedlmsg 'If using "INDEX" command, you may re-organise',
                'using the "INDEX /LD" command. Alternatively sort',
                "'manually'."
    End
    zedsmsg=;"SETMSG MSG(ISRZ001)"
    Return 4

copy_to_member: Arg newmemb
    "(jdsname)=DATASET";"(lin#)=LINENUM .ZCSR"
    @adr=Address();Address ISPEXEC

    l#=$dat@csr('/L#');newdsn=
    zwinttl='LMPRMEMB Process';#popr=l#-2;#popc=17
    If newmemb='' Then Do
        newmemb=member;csrp1=Length(newmemb)+1;If csrp1>8 Then csrp1=8
    End
    Parse Value '' With zedsmsg zedlmsg replmemb
    "SETMSG MSG(ISRZ001)";csr='NEWMEMB'
copy_scr1:
    If newdsn/='' Then newdsn="'"Strip(newdsn,,"'")"'"
    "ADDPOP ROW(&#POPR) COLUMN(&#POPC)"
    "DISPLAY PANEL($MEMBCPY) CURSOR(&CSR)";rc1=rc;"REMPOP"
    If rc1/=0 Then Do;zedlmsg='Copy abandoned.';Signal copy_to_end;End
    debug=
/*  debug='DEBUG'                                                     */
    debug='TRACEX'
    debug=
    If newdsn/='' Then Do
        If Substr(newdsn,1,1)/="'" Then newdsn="'"Userid()"."newdsn"'"
        If volser/='' Then Do
            If $Vervol(volser)/='OK' Then Do
                zedlmsg='Invalid volume name or not mounted. Please correct.'
                "SETMSG MSG(ISRZ001) MSGLOC(VOLSER)"
                csr='VOLSER';csrp1=1
                Signal copy_scr1
            End
            If Listdsi(newdsn" VOLUME("volser")")/=0 Then Do
                zedlmsg='Dataset not found on volume. Please correct.'
                "SETMSG MSG(ISRZ001) MSGLOC(VOLSER)"
                csr='VOLSER';csrp1=1
                Signal copy_scr1
            End
            dsnmemb="'"Strip(newdsn,,"'")"("newmemb")'"
            If $Sysmemb(dsnmemb,"VOLUME("volser")")='OK' & replmemb/='/' Then Do
                zedlmsg='Member already exists. Either change name or set',
                        'the "replace" flag.'
                "SETMSG MSG(ISRZ001) MSGLOC(NEWMEMB)"
                csr='NEWMEMB';csrp1=Length(newmemb)+1;If csrp1>8 Then csrp1=8
                Signal copy_scr1
            End
            volser='='volser
        End
        Else If Sysdsn(newdsn)/='OK' Then Do
            zedlmsg='Dataset Not found';"SETMSG MSG(ISRZ001) MSGLOC(NEWDSN)"
            csr='NEWDSN';csrp1=1
            Signal copy_scr1
        End
        newdsn=Strip(newdsn,,"'")
    End
    Else Do
        newdsn=jdsname
        If Sysdsn("'"newdsn"("newmemb")'")='OK' & replmemb/='/' Then Do
                zedlmsg='Member already exists. Either change name or set',
                        'the "replace" flag.'
            "SETMSG MSG(ISRZ001) MSGLOC(NEWMEMB)"
            csr='NEWMEMB';csrp1=Length(newmemb)+1;If csrp1>8 Then csrp1=8
            Signal copy_scr1
        End
    End
/*  xx=$copymem(jdsname'('member')',newdsn'('newmemb')'volser,,rep)   */
    xx=$copymem(jdsname'('member')',newdsn'('newmemb')'volser,debug,rep)
    If xx/=0 Then Do;zedlmsg='Copy failed, RC='xx'.';Signal copy_to_end;End
    If newdsn=jdsname Then zedlmsg='Copied to member "'newmemb'"'
    Else zedlmsg="Copied to member '"newdsn"("newmemb")'"
    If lcmd='CMU' Then Do
        "ISREDIT F '"newmemb" ' 2"
        If rc=0 Then Do;"ISREDIT (lin#)=LINENUM .ZCSR";where='LINE';End
        Else where='LINE_AFTER'
        line=Overlay(Substr(newmemb,1,8),line,#col#+col#,8)
        "ISREDIT" where lin#"=(line)"
        zedlmsg=zedlmsg' and Index updated.'
    End;Else zedlmsg=zedlmsg'.'
copy_to_end:
    zedsmsg=;"SETMSG MSG(ISRZ001)"
    Return 4

SuperC_member:
    If labt>labf Then Do
        dsn1=dataset"("member")"
        "(line2)=LINE &LABT"
        line2=Strip(line2);col#=Verify(line2,nat,'M')
        If col#=0 Then Do
            labt=labf
            x=SuperC_member()
        End
        Else Do
            member=Substr(line2,col#)
            col#=Verify(member,nat||ext,'N')
            If col#>0 Then member=Substr(member,1,col#-1)
            dsn2=dataset"("member")"
            x=$compare(dsn1,dsn2)
        End
        Return 4
    End
    Address ISPEXEC
    alk32enq='SK';alk32dsn="'"dataset"("member")'";#member=member;member=
    "VPUT (MEMBER ALK32DSN ALK32ENQ) SHARED"
    zedlmsg="Manually change one of the source members."
    "SETMSG MSG(ISRZ001) MSGLOC(SCEODFL)"
    "SELECT PGM(ISRSEPRM)"
    Parse Value '' With alk32enq alk32dsn
    "VPUT (MEMBER ALK32DSN ALK32ENQ) SHARED"
    member=#member
    Address
    Return 0
SuperC_member_End:
