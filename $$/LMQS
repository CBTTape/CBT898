/*--------------------------ooo00 REXX 00ooo--------------------------*/
/*                                                                    */
/* LMQS: Quick Search function for Linemac.                           */
/*                                                                    */
/* This is an extension to the fantastic Linemac command which allows */
/* for extensive linedit commands to be implemented.                  */
/*                                                                    */
/* As the number of linedit commands grow, this will allow for        */
/* quick search of available commands using keywords.                 */
/*                                                                    */
/* The routine is entered when '/' is entered as a line command. If   */
/* any string is specified after the '/', the string is used as the   */
/* initial search string.                                             */
/*                                                                    */
/* Packaging:                                                         */
/*   REXX:                                                            */
/*     LMQS    - This driver.                                         */
/*   Panels:                                                          */
/*     LMPKW   - Keyword entry/display panel.                         */
/*     LMPDESC - Description table display panel.                     */
/*                                                                    */
/*--------------------------------------------------------------------*/
lmqs_ver='1.06'
    Arg parm#;Address ISPEXEC;"CONTROL ERRORS RETURN";ima_macro=0
    If parm#/="" Then Signal byp1
    "ISREDIT MACRO (parm#) NOPROCESS";If rc=0 Then ima_macro=0

byp1:
/*  "CONTROL ERRORS CANCEL"                                           */

Main:
  Parse SOURCE . . xcmd .
  "VGET (lmqsmac) SHARED"
  If lmqsmac/='' Then Do
      xx=lmqsmac;lmqsmac='';"VPUT (lmqsmac) SHARED"
      Interpret "Signal Macro_"xx
  End
  "ISREDIT (lev)=MACRO_LEVEL"
  If lev>1 Then Parse VAR parm# labf ',' labt ',' lcmd parm#

  ctr=0
  Call Get_desc

  Parse Value '1 *ALL 0' With First_time Lmkwords done Lmxwords
  Comtab='CT'||Right(Time('L'),6)

  Do Forever
    If First_time Then Do
        First_time=0
        If length(lcmd) > 1 Then,
          If substr(lcmd,1,1) = '/' Then Do
              Lmkwords = substr(lcmd,2)
              "Control NonDispl Enter"
          End
        Else Lmkwords=lcmd
    End

    "Display Panel(LMPKW)"
    If Wordpos(Pfkey,'PF03 PF15')>0 | Rc = 8 Then Exit
    Else "Vget (Lmkwords Lmxwords) Shared"

    #Lmkwords=Words(Lmkwords)
    #Lmxwords=Words(Lmxwords)

    Do i=1 to #Lmkwords
       W.i=Word(Lmkwords,i)
    End

    Do i = 1 to #Lmxwords
       X.i = Word(Lmxwords,i)
    End

    Count=0
    Do  i=1 to ctr
      Found=0
      Do j=1 to #Lmkwords      /* max no. of keywords to search */

        If W.j = '*ALL' Then   /* Select all records            */
           Do
              Found = 1
              j = #Lmkwords + 1  /* skip to next record */
              Leave
           End

        If W.j /= ' ' Then
          Do
             trec = desc.i
             Upper trec
             k = Index(trec,W.j)
             If k > 0 Then
                Found = 1
             Else
               Do
                  Found = 0
                  Leave
               End
          End
      End

      If Found = 1 Then               /* record selected      */
         Do
           Do j = 1 to #Lmxwords while Found
             If X.j /= ' ' Then
               Do
                  trec = desc.i
                  Upper trec
                  k = Index(trec,X.j)
                  If k > 0 Then
                    Found = 0         /* exclude keyword found */
               End
           End
           If Found = 1 Then
             Do                       /* pass exclude test */
                Count = Count + 1
                Outrec.Count   = desc.i
                Outrecs.Count  = src.i
             End
         End
    End

    Call Create_table
    Call Process_Table
    "TBEnd" Comtab
    If done Then
      Exit
  End
Exit

/*----------------------------------------------------------------*/
/*  Call LINEMAC & LMEXIT to get all descriptions of line commands*/
/*----------------------------------------------------------------*/
Get_desc:
  path=Space($Cstring(lmm('TC /R'),'->',,,'*','not_tally'))
  Do While path/=''
      Parse VAR path lmdsn '(' lmx ')' path
      "Isredit" lmx "1,1,HELP_R"     /* Get from Linemac  */
      "Vget (LMH) Shared"
      x=Build_desc(lmh,lmdsn'('lmx')')
  End

Return    /* Get_desc */

/*----------------------------------------------------------------*/
/*  Combine all line commands into one stem variable              */
/*----------------------------------------------------------------*/
Build_desc:
  xxx=Arg(1);yyy=Arg(2)
  Do while xxx /=''
    Parse VAR xxx lc desc '01'x xxx
    ctr = ctr + 1

    desc.ctr = lc
    desc.ctr = Overlay(':',desc.ctr,7)
    desc.ctr = Overlay(desc,desc.ctr,9)
    src.ctr  = Strip(yyy)
  End
Return 0     /* Build_desc */

/*----------------------------------------------------------------*/
/*  Create Table for selected entries during search               */
/*----------------------------------------------------------------*/
Create_Table:

Address Ispexec
"TBcreate" Comtab "Keys(lmcmd) Names(Desc linemacx) Nowrite"
IF Rc Â¬= 0 Then               /* RETURN CODES                     */
  Do                          /*  8 - TABLE DOES NOT EXIST        */
      Zedsmsg = 'TBCreate error Rc='Rc
      Zedlmsg = 'Error encountered. Please report to Quick Search',
                'Support Team'
      "Setmsg Msg(Isrz001)"
      "TBEnd" Comtab
      Exit
  END                         /* 12 - TABLE IN USE; ENQ FAILED    */
                              /* 20 - SEVERE ERROR                */
Do i = 1 to Count

    desc = Outrec.i;Parse VAR desc lmcmd ':';linemacx=outrecs.i
    "TBadd" Comtab
    If Rc > 8  THEN
       Do
          Zedsmsg = 'TBAdd error Rc='Rc
          Zedlmsg = 'Unable to add Record. Please report to Quick',
                    'Search Support Team'
          "Setmsg Msg(Isrz001)"
          "TBEnd" Comtab
          Exit
       End
End
"Tbsort" Comtab "Fields(desc)"
Return

Process_Table:

Disp_rc = 0
"TBTop" Comtab
Row = 0;lfind=0
Do While (Disp_rc/=8)

  Ztdsels = 0
  "TBQUERY &COMTAB POSITION(tabptr) ROWNUM(rownum)"
  "TBDispl" Comtab "Panel(LMPDESC) Position(Row)" ,
            "Cursor("Comsel") Csrrow("Row") Autosel(No)"
  Disp_rc = Rc

  If Disp_rc = 8 Then
     Do
       Zedsmsg = 'Request cancelled'
       Zedlmsg = 'Request - request was cancelled'
       "Setmsg Msg(Isrz001)"
       Leave
     End

  "VGET (zscrolla zscrolln zverb)"
  If Strip(zcmd||comsel||zverb)='' Then Do
      "VGET (zscreenc,zscreeni)"
      xx=Index(zscreeni,'Cmd     Description')
      lmcmd=Word(Substr(zscreeni,xx+160,80),1)
/*    "TBTOP &COMTAB"                                                 */
      "TBSCAN &COMTAB ARGLIST(LMCMD) Position(Row)"
      "TBTOP &COMTAB";"TBSKIP &COMTAB NUMBER("Row")"
      comsel=;row=
      Iterate
  End

  Parse VAR zcmd w1 w2 w3
Check_for_L_locate_command:
  If w1='L' Then Do
      If w2='' Then Do
          zedlmsg='Missing Locate parameter.'
          "SETMSG MSG(ISRZ001)"
          Iterate
      End
      "TBTOP &COMTAB";"TBSKIP &COMTAB POSITION(tabptr)"
      Parse VAR w2 lmcmd '*';#lmcmd=lmcmd
      "TBSCAN &COMTAB ARGLIST(LMCMD) CONDLIST(GE) Position(Row)"
      If lmcmd/=#lmcmd Then "TBSKIP &COMTAB NUMBER(-1)"
      Iterate
  End
Check_for_F_find_command:
  If w1='F' Then Do
      #tabptr=tabptr;hit=0
      If w2='' Then zedlmsg='Missing Find parameter.'
      Else Do
          If lfind>=tabptr & w2=#w2 Then tabptr=lfind+2
          "TBTOP &COMTAB";"TBSKIP &COMTAB NUMBER("tabptr-1")"
          #tr=Trace('o')
          Do Forever
              "TBSKIP &COMTAB POSITION(tabptr)";If rc/=0 Then Leave
              If #tr='R' Then Say desc
              If Index(Translate(SubWord(desc,2)),w2)>0 Then Do
                  zedlmsg='String "'w2'" found.'
                  lfind=tabptr;#tabptr=tabptr;hit=1
                  Leave
              End
          End
          x=Trace(#tr)
          "TBTOP &COMTAB";"TBSKIP &COMTAB NUMBER("#tabptr")"
          If \hit Then Do
              If lfind=0 Then zedlmsg='String "'w2'" not found.'
              Else Do
                  zedlmsg='Bottom of data reached'
                  lfind=0
              End
          End
          #w2=w2
      End
      "SETMSG MSG(ISRZ001)"
      Iterate
  End

Check_for_I_identify_command:
  If Comsel='I' Then Do
      zedlmsg="'"Strip(lmcmd)"' will be executed from LINEMAC exit",
              '"'linemacx'".'
      "SETMSG MSG(ISRZ001)"
      Iterate
  End
Check_for_V_view_command:
  If Wordpos(Comsel,'B E V')>0 Then Do
      ispact=$Ttrunc(comsel,1,'B,BROWSE V,VIEW E,EDIT *,BROWSE')
      zedsmsg=;lmcmd=Strip(lmcmd);lmqsparm=lmcmd
      If Verify(lmqsparm,'!+/`%','M')>0 Then lmqsparm=LMM(lmqsparm)
      zedlmsg=ispact 'of driver that executes line command "'lmcmd'".'
      If ispact='BROWSE' Then zedlmsg=zedlmsg,
              'Cut and paste or enter the following to locate',
              'executable code -> F l_'lmqsparm' FIRST <-.'
      "SETMSG MSG(ISRZ001)"
      If ispact='BROWSE' Then "&ISPACT DATASET('&LINEMACX')"
      Else Do
          lmqsmac='M1';"VPUT (lmqsmac,lmqsparm) SHARED"
          "&ISPACT DATASET('&LINEMACX') MACRO("xcmd")"
      End
      Iterate
  End

  If Ztdsels /= 0  Then
     Do
        "Control Display Save"
        Call Process_Choice
        "Control Display Restore"
        Ztdsels = 0
        Disp_rc = 8
        done = 1
     End
End
Return

Process_Choice:
  r = Strip(Row,'L',0)          /* remove leading zeroes      */

  If Comsel = '@' Then
     Call Debug

  Select
    When Comsel = 'S' Then
      Do
         macro = word(desc,1)
         "Isredit LINEMAC" labf","labt","macro
      End
    Otherwise
       Do
          Zedsmsg = 'Invalid Option'
          "Setmsg Msg(Isrz001)"
       End
  End
Return

Debug:
     Say 'Debug option only to be used with help of the developer'
Return

Macro_M1:
    "VGET (lmqsparm) SHARED"
    "ISREDIT F 'l_"lmqsparm"' FIRST"
    "ISREDIT (lin#)=LINENUM .ZCSR";"ISREDIT CURSOR="lin# 0
    Exit
