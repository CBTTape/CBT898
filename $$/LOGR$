/*--------------------------ooo00 REXX 00ooo--------------------------*/
/* LOGR$:                                                             */
/* Returns the appropriate site defaults parameters to LOGR           */
/* (If there is a conflict in LPAR names, shuffle the order of the    */
/*  "When" statements.)                                               */
/*                                                                    */
/* Parameters (positional):                                           */
/*   1st: LPAR/'SET' identifier                                       */
/*     none    - Establishes the "sysid" and if coded returns the     */
/*               permissable "logstream set" identifiers.             */
/*               This is used by the LOGR ? facility.                 */
/*     logstream set                                                  */
/*             - As identified from the list returned when invoked    */
/*               without a parameter.                                 */
/*               Returns a combination of name wildcarded and HLQ (or */
/*               whatever LOGR) commands you chose to associate with  */
/*               the "set".                                           */
/*               Look for valid values in the tutorial under          */
/*             . I highly recommend that you use underscore '_' in    */
/*               "set" names to readily identify them.                */
/*               '/SET()' parameter.                                  */
/*   2nd: Request type                                                */
/*      none   - Return the site group name                           */
/*                                                                    */
/*--------------------------------------------------------------------*/
LOGR$:logr$_ver='1.02'
Parse Upper Arg parm1,request_type
If request_type='' Then Do
    Select
        When Wordpos(parm1,'SY2 SY5 SY8')>0 Then,         /* KMART    */
             Return 'KMART_CICS'
        When parm1='KMART_CICS' Then,                     /* KMART    */
             Return '**.DFH* /HLQ(CICSLOG)'

        When Wordpos(parm1,'CPU1 CPU2 CPU3')>0 Then,      /* ETS      */
             Return 'ETS_CICS,ETS_CICS2,ETS_CICSD,ETS_CICSP'
        When parm1='ETS_CICS' Then,                       /* ETS ALL  */
             Return 'ETS.*.**.DFH*'
        When parm1='ETS_CICS2' Then,                      /* ETS TS1.3*/
             Return '**.DFH* /HLQ(CICS13)
        When parm1='ETS_CICSD' Then,                      /* ETS DEVL */
             Return '**.DFH* /HLQ(DNDCICS)
        When parm1='ETS_CICSP' Then,                      /* ETS PROD */
             Return '**.DFH* /HLQ(DNPCICS)'

        When Wordpos(parm1,'SY2 SY3 SY4 GCR MAR,          /* Dupont   */
                     APR NIB')>0 Then,
             Return 'DUPONT_CICS,DUPONT_ATR_GRC,DUPONT_ATR_MAR,',
                    'DUPONT_ATR_APR,DUPONT_ATR_NDR'
        When parm1='DUPONT_CICS' Then,                    /* Dupont   */
             Return '**.DFH* /HLQ(SYDCICS)'
        When parm1='DUPONT_ATR_GCR' Then                  /* Dupont   */
             Return 'ATR_GCR.** /HLQ(SYDLOGR)'
        When parm1='DUPONT_ATR_MAR' Then                  /* Dupont   */
             Return 'ATR_MAR.** /HLQ(SYDLOGR)'
        When parm1='DUPONT_ATR_APR' Then                  /* Dupont   */
             Return 'ATR_APR.** /HLQ(SYDLOGR)'
        When parm1='DUPONT_ATR_NDR' Then                  /* Dupont   */
             Return 'ATR_NDR.** /HLQ(SYDLOGR)'

        When Wordpos(parm1,'SRPMVS')>0 Then,              /* SRC      */
             Return 'SRC_CICS'
        When parm1='SRC_CICS' Then,                       /* SRC      */
             Return 'SRPMVS.**.DFH*'

        When Wordpos(parm1,'SXAA SXAX')>0 Then,           /* AON      */
             Return 'AON_CICS'
        When parm1='AON_CICS' Then,                       /* AON      */
             Return '**.DFH* /HLQ(SRPMVS)'

        Otherwise Return ''
    End
End
Return 8
