l_MMA: /* Invoke "Member Manager" against this and next lines. */
l_MMV: /* Invoke "Member Manager" against this and next lines (parm '/V') */
l_MME: /* Invoke "Member Manager" against this and next lines (parm 'E1') */
     Select
         When lcmd='MMV' Then parm='/V'
         When lcmd='MME' Then parm='E1'
         Otherwise parm=
     End
     If line#s=line#e Then,
         "ISREDIT MM" line#s','line#s+1',MM' parm
     Else,
         "ISREDIT MM" line#s','line#e',MM' parm
     "CURSOR="line#s 0
     Return 4
End_MMA:


         Member Manager:
         ---------------
  MMA    Invoke "Member Manager" against this and next lines.
  MME    Invoke "Member Manager" against this and next lines (parm 'E1')
  MMO    Invoke "Member Manager" against this and next lines displaying
         members 'Only in Both' datasets.  Invokes "MM" using the '/OB'
         parameter.
  MMV    Invoke "Member Manager" against this and next lines (parm '/V')
         Invoke "MM" against two adjacent lines containig datasets in
         "XB" parsable format (which is practically any format except
         reverse spelling).  If an uncataloged dataset is to be
         processed utilise the "XB" volume parser feature by appending
         ",VOL=SER=voser" after the dataset name (as you would in JCL).
            eg.   SYS1.PARMLIB                  /* (on volume SYSR01) */
                  SYS1.PARMLIB,VOL=SER=SYSR02   /* alternate volume   */

         Use 'MMV' for catalogued datasets you wish to have the volume
         included (or use the '/V' command when is being processed).

         While "MM" will accept 'E1' or 'E2' as a parameter, only 'E1'
         is acceptable by LINEMAC ('MME' command).  If you wish to use
         'E2' it is suggested you reverse the order of the data lines
         and use 'E1'. (You can always export member to avoid
         corruption.)  To execute these line commands you need access to
         the "MM" package.
         Note:
           - Requires access to command 'MM' and it's infrastructure.
           - If you want to compare 2 non adjacent lines, use the block
             line command format (eg. MMAA), and the 1st. and last lines
             in the block will be compared.

                             ******
