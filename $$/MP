/*--------------------------ooo00 REXX 00ooo--------------------------*/
/*                                                                    */
/* Driver to permit issuing 'MULTI PROC' type of commands from the    */
/* following environments:                                            */
/*   Edit-macro:                                                      */
/*       While editing JCL, the dataset is supllied following the     */
/*       literal 'DSN=' as derived from the line indicated by '.ln'   */
/*       or cursor placementerived from the line indicated by '.ln'   */
/*       May alternatively be supplied by '/dsname' or '/ *' for      */
/*       current PDS.                                                 */
/*                                                                    */
/*   ISPF 3.4:                                                        */
/*       MP followed by the command. The dataset and volser are       */
/*       supplied by ISPF in variables 'ZDLDSN' and 'ZDLVOL'          */
/*       respectively.                                                */
/*                                                                    */
/*   Any other session:                                               */
/*       MP followed by the 'cmd/dsname'. If the '/dsname' is not     */
/*       supplied, it will try to be extracted from the headline.     */
/*                                                                    */
/*--------------------------------------------------------------------*/
ARG parm#
    Address ISPEXEC
    cactn = 'RETURN'
/*  cactn = 'CANCEL'                                                  */
    xx = Wordpos('=',parm#)
    If xx > 0 Then Do
       parm# = Delword(parm#,xx)
       eq_hit = 'Y'
    End
    parm1=;parm2=
    Parse Upper VAR parm# f00 zdldsn parm3 parm4 parm5
    If parm#/='' THEN SIGNAL io34proc

/*--------------------------------------------------------------------*/
/* Process as edit macro                                              */
/*--------------------------------------------------------------------*/
    "CONTROL ERRORS RETURN"
    "ISREDIT MACRO (parm#)"
    IF rc > 0 THEN SIGNAL io34proc
    If Wordpos('/T',Translate(parm#))>0 Then Do
        #tr=Trace(r);parm#=Delword(parm#,Wordpos('/T',Translate(parm#)),1)
    End
    xx = Wordpos('=',parm#)
    If xx > 0 Then Do
       parm# = Delword(parm#,xx)
       eq_hit = 'Y'
    End
    parm1 = ''
    parm2 = ''
    parm3 = ''
    Parse Upper VAR parm# parm parms parms1 trace

byp1:
    "CONTROL ERRORS" cactn

    "VPUT ZDLVOL SHARED"
    IF parm = "HELP" | parm = "?" THEN DO
        "SELECT PGM(ISPTUTOR) PARM(MPH000)"
        EXIT
    END
    IF parm = "MPH" THEN DO
        "SELECT PGM(ISPTUTOR) PARM(CSMDSH00)"
        EXIT
    END
    IF parm = "P" | parm = "PU" THEN DO
        parm1 = parm
        parm2 = parms
        "VPUT (PARM1 PARM2 TRACE) SHARED"
        "ISREDIT MPP"
        EXIT
    END
    "ISREDIT (LAST) = LINENUM .ZLAST"
    "ISREDIT (STATUS) = USER_STATE"
    "ISREDIT (OLIN,OCOL) = CURSOR"
    IF parm = "." | parm = "=" THEN DO
        "VGET LASTMDS PROFILE"
        parm = lastmds
    END
    IF parm = '' THEN DO
        alk32enq = ''
        "VPUT ALK32ENQ SHARED"
        "SELECT PGM(ISRUDL) PARM(ISRUDLP)"
        EXIT
    END

    "VGET LASTMPC PROFILE"
    IF parm /= '' THEN DO
        IF SUBSTR(parm,1,1) = "+" THEN DO
           "VGET (MPF00 MPLIN) PROFILE"
           xtra = SUBSTR(parm,2,LENGTH(parm)-1)
           mplin = mplin+xtra
           IF mplin < 0 | mplin > last THEN mplin = 1
           parm = mpf00"."mplin
           reposit = "Y"
        END
        IF SUBSTR(parm,1,1) = "-" THEN DO
           "VGET (MPF00 MPLIN) PROFILE"
           xtra = SUBSTR(parm,2,LENGTH(parm)-1)
           mplin = mplin-xtra
           IF mplin < 0 | mplin > last THEN mplin = 1
           parm = mpf00"."mplin
           reposit = "Y"
        END

        IF LENGTH(parm) > 1 THEN DO
            IF SUBSTR(parm,1,2) = "C=" THEN DO
                IF LENGTH(parm) = 2 THEN lastmpc = 0
                ELSE DO
                   lastmpc = SUBSTR(parm,3,LENGTH(parm)-2)
                   IF lastmpc = "?" THEN SIGNAL telllmpc
                   IF DATATYPE(lastmpc) /= "NUM" THEN DO
                       gc009   = "Cussor column must be numeric."
                       SIGNAL ERR1
                   END
                   "ISREDIT (lrecl) = LRECL"
                   IF lastmpc > lrecl THEN DO
                       gc009   = "Cursor column must be less "||,
                                 "than recod length ("lrecl").)"
                       SIGNAL ERR1
                   END
                END
                "VPUT LASTMPC PROFILE"
telllmpc:
                gc009 = "Cursor placement is set to column "lastmpc"."
                SIGNAL ERR1
            END
            If Substr(parm,1,2) = 'EX' Then Do
                "ISREDIT (line) = LINE &OLIN"
                cmd = Substr(line,ocol)
                Address TSO cmd
                Exit
            END
            If Substr(parm,1,2) = 'CV' Then Do
                "ISREDIT (line) = LINE &OLIN"
                PARSE VAR line 'COPY' memb .
                memb = Strip(memb)
                If memb = '' Then Do
                    gc009 = "Not a 'COPY' line."
                    "SETMSG MSG(GC009)"
                End
                ElSe Do
                    "ISREDIT (COPYVIEW) = DATASET"
                    "VIEW DATASET('&COPYVIEW(&MEMB)')"
                End
                Exit
            END
        END
    END
    slash = Index(parm,"/")
    If slash > 0 Then delim = "/"
    Else              delim = "."
    ix    = Index(parm,delim)
    If ix > 0 Then Do
        f00 = Substr(parm,1,ix-1)
        lin = Substr(parm,ix+1)
    End
    Else Do
        f00 = parm
        lin = ''
    End
    IF slash /= 0 THEN DO
        IF lin = '' THEN DO
            gc009   = "Enter dsname after '/'."
            SIGNAL ERR1
        END
        IF lin = "*" THEN DO
            "ISREDIT (CSDSN00) = DATASET"
            "ISREDIT (MEMB)  = MEMBER"
            IF memb /= '' & ,
               f00  /= "PO" THEN csdsn00 = "'"csdsn00"("memb")'"
            ELSE                 csdsn00 = "'"csdsn00"'"
        END
        ELSE DO
            IF SUBSTR(lin,1,1) = "'" THEN
                csdsn00 = lin
            ELSE IF f00 /= "34" THEN
                     csdsn00 = "'"SYSVAR(SYSUID)"."lin"'"
                 ELSE csdsn00 = lin
        END
        SIGNAL CON1
    END
    IF lin = '' THEN SIGNAL getcurs

testlin:
    IF DATATYPE(lin) = "NUM" THEN DO
        IF lin > 0 & lin <= last THEN DO
            "ISREDIT CURSOR = "lin
            SIGNAL bypass
        END
    END

getcurs:
    "ISREDIT (LIN,COL) = CURSOR"

bypass:
    "ISREDIT (x1,x2) = CURSOR"
    If eq_hit = 'Y' Then Do
        "ISREDIT FIND '='"
        IF rc /= 0 THEN DO
            gc009   = "No 'DSN=' found."
            "SETMSG MSG(GC009)"
            EXIT
        END
        Else fl = 1
    End
    Else Do
        "ISREDIT FIND 'DSN='"
        IF rc /= 0 THEN DO
            "ISREDIT CURSOR = " x1 x2
            "ISREDIT FIND 'DSNAME='"
            IF rc /= 0 THEN DO
                gc009   = "No 'DSN=' found."
                "SETMSG MSG(GC009)"
                EXIT
            END
            Else fl = 7
        END
        Else fl = 4
    End
    "ISREDIT (LIN,COL) = CURSOR"
    "ISREDIT (LINE) = LINE "lin
    col = col + fl
    len = 72 - col
    line = SUBSTR(line,col,72-col)
    PARSE UPPER VAR line . x_rem
    PARSE UPPER VAR line csdsn00 "," rest
    PARSE UPPER VAR csdsn00 csdsn00 .
    If Substr(csdsn00,1,1) = "'" Then csdsn00 =,
        Substr(csdsn00,2,Length(csdsn00)-2)
    If f00 = '' Then Do
        If Index(x_rem,'/') > 0 Then Do
            x_rem = Strip(Substr(x_rem,Index(x_rem,'/')+1))
            Parse Upper VAR x_rem f00 x_parms
            If parms = '' Then parms = x_parms
        End
    End
    If f00 = '' Then f00 = 'V'
/*--------------------------------------------------------------------*/
    Parse VAR csdsn00 csdsn00 '(' member ')' .
    Do Forever
        x1 = Index(csdsn00,'&')
        If x1 = 0 Then Leave
        x2 = Index(csdsn00,'.',x1+1)
        If x2 = 0 Then x2 = Index(csdsn00,'&',x1+1)
        Else x2 = x2 +1
        If x2 = 0 Then x2 = (Length(csdsn00) - x1) +1
        Else x2 = x2 - x1
        var = Find_var(Substr(csdsn00,x1,x2))
        csdsn00 = Delstr(csdsn00,x1,x2)
        x2 = var
        csdsn00 = Insert(subs,csdsn00,x1-1,x2)
    End
    Do Forever
        x1 = Index(member,'&')
        If x1 = 0 Then Do
            If member /= '' Then csdsn00 = csdsn00'('member')'
            Leave
        End
        x2 = Index(member,'.',x1+1)
        If x2 = 0 Then x2 = Index(member,'&'x1+1)
        Else x2 = x2 +1
        If x2 = 0 Then x2 = (Length(member) - x1) +1
        Else x2 = x2 - x1
        var = Find_var(Substr(member,x1,x2))
        member = Delstr(member,x1,x2)
        x2 = var
        member = Insert(subs,member,x1-1,x2)
    End
/*--------------------------------------------------------------------*/
    IF SUBSTR(csdsn00,1,1) /= "'" THEN csdsn00 = "'"csdsn00"'"
    IF parms = "V" THEN DO
        "ISREDIT FIND 'VOL=SER='"
        IF rc /= 0 THEN DO
            gc009 = "No 'VOL=SER=...' found."
            "SETMSG MSG(GC009)"
            EXIT
        END
        "ISREDIT (,col1) = CURSOR"
        col1 = col1 + 8
        "ISREDIT (LINE) = LINE .ZCSR"
        line = SUBSTR(line,col1,72-col1)
        PARSE UPPER VAR line vol "," rest
        parms = "V="vol
    END

con1:
    Call callmds

emacret:
    mplin = lin
    "VPUT (LASTMDS MPF00 MPLIN) PROFILE"
    Signal ext1

/*--------------------------------------------------------------------*/
/* Find variable                                                      */
/*--------------------------------------------------------------------*/
Find_var: ARG var
    Parse VAR var '&' var '.' .
    Parse VAR var var '&' varp

    "ISREDIT CURSOR = &LIN 0"

    If Index(var,'&') = 0 Then xxx = Mvsvar(Symdef,var)
    Else                       xxx = ''
    If xxx = '' Then line = var'=*'
    Else             line = var'='xxx

    Do Forever
/*      "ISREDIT F '"var"='"                                          */
        "ISREDIT F ' "var"=' PREV"
        If rc /= 0 Then Do
            "ISREDIT F ',"var"=' PREV"
            If rc /= 0 Then Leave
        End
        "ISREDIT (linex) = LINE .ZCSR"
        If Substr(linex,1,2) /= '//' Then Iterate
        If Substr(linex,3,1) = '*' Then Iterate
        If Word(linex,2) = 'INCLUDE' Then Iterate
        line = linex
        Leave
    End
    data = "Parse VAR line . """var"="" subs ."
    Interpret data
    Parse VAR subs subs ',' .
    If Substr(subs,1,1) = "'" Then,
        Parse VAR subs "'" subs "'"

    If varp /= '' Then subs = subs'&'varp'.'
    "ISREDIT CURSOR = " x1 x2
    Return Length(subs)

/*--------------------------------------------------------------------*/
/* Process as a command (TSO/ISPF 3.4)                                */
/*--------------------------------------------------------------------*/

io34proc:
    IF f00 = "?" | f00 = "HELP" THEN DO
        "SELECT PGM(ISPTUTOR) PARM(CSMDSH00)"
        EXIT
    END

    If zdldsn='' Then Do
        zdlvol=
        sl=INDEX(f00,'/')
                                            /* DSN part of command    */
        If sl>0 | Substr(f00,sl+1,1)='*' Then Do
            f00=Substr(f00,1,sl-1)
            line=3
            screen=
            "VPUT (LINE,SCREEN) SHARED"
            "SELECT PGM(GETDSN)"
            "VGET (DATASET HEADLINE LINE) SHARED"
            linex = TRANSLATE(line,'  ','0001'x)
            If dataset = '' Then Do
                Parse VAR linex . dataset .
                headline = 'panelid' dataset 'rest'
                linex=
            End
re_try:
            PARSE VAR headline panelid dash dsn .
            If SUBSTR(dash,1,1) /= '-' Then Do
                dataset = dash
            End
            Else Do
                PARSE VAR headline volser .
                volser = STRIP(SUBSTR(volser,2,LENGTH(volser)-1))
                l = INDEX(dataset,'(')
                If l > 0 Then Do
                    If SUBSTR(dataset,LENGTH(dataset),1) /= ')' Then Do
                        gc009 = "Incomplete member name derived from",
                                "headline. Cannot convert to edit",
                                "session."
                        Signal err1
                    End
                    dsn = SUBSTR(dataset,1,l-1)
                End
                Else dsn = dataset
                If LENGTH(volser) = 6 Then Do
                    x = MSG(Off)
                    x = LISTDSI("'"dsn"' VOLUME("volser") NORECALL")
                    If x = 0 Then zdlvol = volser
                End
                Else Do
                    x = LISTDSI("'"dsn"' NORECALL")
                    If x = 16 & linex /= '' Then Do
                        Parse VAR linex . dataset .
                        headline = 'panelid' dataset 'rest'
                        linex = ''
                        Signal re_try
                    End
                End
            End
        End
        Else Do
            s=INDEX(f00,'/')
            If s>0 Then Do
                f00=SUBSTR(parm1,1,s-1)
                dataset = SUBSTR(parm1,s+1)
                If SUBSTR(dataset,1,1) = "'" Then,
                    dataset=Strip(dataset,,"'")
                Else dataset=Userid()"."dataset
            End
        End
        zdldsn = "'"dataset"'"

    End
    Else "VGET (ZDLVOL) SHARED"
    csdsn00  = zdldsn

    If parm2 = "'"zdldsn"'" Then parm2 = ''
    If parm3 = "'"zdldsn"'" Then parm3 = ''
    If parm4 = "'"zdldsn"'" Then parm4 = ''
    If parm5 = "'"zdldsn"'" Then parm5 = ''
    If parm2 = zdldsn       Then parm2 = ''
    If parm3 = zdldsn       Then parm3 = ''
    If parm4 = zdldsn       Then parm4 = ''
    If parm5 = zdldsn       Then parm5 = ''
    parms  = parm2 parm3 parm4 parm5
    parms1 = ''
    IF zdlvol  = "??????" | zdlvol = '*VSAM*' Then zdlvol = ''
    IF zdlvol /= '' THEN parms = parms "V="zdlvol
    Call callmds

io34ret:
    Exit


/*--------------------------------------------------------------------*/

ext1:
    "ISREDIT USER_STATE = (STATUS)"
/*  If olin = 1 & ocol = 0 Then x = ''                                */
/*                         Else "ISREDIT CURSOR = "olin" 0"           */
    If reposit = "Y" Then Do
        "ISREDIT UP 999999"
        "ISREDIT DOWN "mplin
    End
    If lastmpc > 0 Then "ISREDIT CURSOR = "lin lastmpc
    Exit

err1:
    "SETMSG MSG(GC009)"
    Exit

/*--------------------------------------------------------------------*/
callmds:
    szcmd = ''
    p0    = '?'
    zcmd  = f00
    IF f00 = "S" THEN f00 = "B"

    IF LENGTH(zcmd) > 1 THEN ,
      IF zcmd = "CE" | zcmd = "CB" | ,
              zcmd = "CL" | SUBSTR(zcmd,1,2) = "CC" THEN DO
          szcmd = zcmd
          "VPUT (SZCMD) SHARED"
      END


    IF csdsn00 = "'"SYSVAR(SYSUID)".'" THEN DO
        "VGET (MDSDSN) PROFILE"
        csdsn00 = mdsdsn
    END
    ELSE DO
        mdsdsn = csdsn00
        "VPUT (MDSDSN) PROFILE"
    END
    parms = Strip(parms" "parms1)
    parm1 = '%MDS'
    parm2 = p0
    parm3 = f00
    parm4 = csdsn00
    parm5 = Strip(parms)
    parm6 = parms1
    parm7 = szcmd
    parm8 = ''
    "SELECT CMD(%CSMDSN" parm1 parm2 parm3,
        parm4 parm5 parm6 parm7 parm8")"
/*  CSMDSN trace                                                      */
    IF f00 = "R" THEN DO
        "VGET (RCODE SDSNAME SNDSNAME) SHARED"
        IF rcode = 0 THEN
            "ISREDIT CHANGE "sdsname" "sndsname" .ZCSR .ZCSR"
    END
    lastmds = parm
    mpf00 = f00

    Return 0
