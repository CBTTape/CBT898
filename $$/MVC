/*--------------------------ooo00 REXX 00ooo--------------------------*/
/*                                                                    */
/* MVC: MoVe Columns.                                                 */
/*                                                                    */
/* Move columns from cursor to prompt for "to" cursor placement.      */
/* For further details refer to doco at bottom.                       */
/*                                                                    */
/* Packaging:                                                         */
/*  REXX:                                                             */
/*   $DAT@CSR - Function that returns data relative to the cursor in  */
/*              many optional formats.                                */
/*   MVC      - This program                                          */
/*  Panel:                                                            */
/*   MVCP     - Panel to display move to positioning                  */
/*                                                                    */
/*--------------------------------------------------------------------*/
mvc_ver='1.01'
    Address ISPEXEC;"CONTROL ERRORS RETURN"
    "ISREDIT MACRO (parm#) NOPROCESS"
    If rc/=0 Then Return 'Error: Must be in an edit/view session.'

byp1:
/*  "CONTROL ERRORS CANCEL"                                           */
    "VGET (mvcdpan) PROFILE";If mvcdpan='' Then mvcdpan=3
    "VGET (zscreenc)";zscreeni=$Screenc()   /* Original screen        */
    Parse SOURCE . . xcmd .;panel=xcmd'P'

    Address ISREDIT
    "(caps)=CAPS";"CAPS=OFF";"(iline)=LINE .ZCSR";"(coll,colr)=DISPLAY_COLS"
    "(lev)=MACRO_LEVEL";"(lin#,colo)=CURSOR";"(lst#)=LINENUM .ZLAST"
    If colo=0 Then colo=coll;csrp=colo-coll+1
    If lev>1 Then Parse VAR parm# lin1 ',' last ',' lcmd parm#
    Else Do
        "PROCESS RANGE C"
        "(lin1)=LINENUM .ZFRANGE";"(last)=LINENUM .ZLRANGE"
        If Wordpos(parm#,'/NX /N')>0 Then lcmd='MVCN'
    End
    Parse VAR lcmd +3 xst +1 2 dir +1;If xst='N' Then xst='NX'
    da1=Build_screen()
    Address ISPEXEC
scr1:
    #csrp=csrp;csrp=csrp+(mvcdpan%2+1)*80+8
    zcmd=;omvcdpan=mvcdpan
    "DISPLAY PANEL(&PANEL) CURSOR(DA1) CSRPOS(&CSRP)"
    If rc/=0 Then Do
        zedlmsg="Data move abandoned."
        "SETMSG MSG(ISRZ001)";"ISREDIT CAPS=(caps)"
        Return 4
    End
    csrp=csrp//80-8
    If zcmd='NS' Then Do
        colo=csrp+coll-1
        zedlmsg="New source has been set to cursor position. Now",
                "reposition to destination."
        "SETMSG MSG(ISRZ001)"
        Signal scr1
    End
    If mvcdpan/=omvcdpan Then Do
        "VPUT (mvcdpan) PROFILE"
        zedlmsg="Display depth changed from" omvcdpan "to" mvcdpan"."
        "SETMSG MSG(ISRZ001)"
        da1=Build_screen();csrp=#csrp
        Signal scr1
    End
    If csr/='DA1' Then Do
        csrp=1
        zedlmsg="Source has been set to column 1 due to cursor",
                "displacement out of data field. Now",
                "reposition to destination."
        "SETMSG MSG(ISRZ001)"
        Signal scr1
    End
    csrp=csrp+coll-1
    If csrp=colo Then Do
        zedlmsg="You have not changed your relative destination",
                "column.  Either change it or END out of session."
        "SETMSG MSG(ISRZ001)"
        Signal scr1
    End
    Address
    p1=;p2=;"(lrecl)=LRECL"
    Do i=lin1 To last
        If xst/='' Then Do;"(xs)=XSTATUS" i;If xs/=xst Then Iterate;End
        "(line)=LINE" i
        If dir='L' Then Do
            If colo=lrecl Then p1=line
            Else Interpret "Parse VAR line p1 +"colo "p2"
            If csrp>colo Then,
                xline=Copies(' ',csrp-colo)p1||Substr(p2,csrp-colo+1)
            Else xline=Substr(p1,colo-csrp+1,colo)||p2
        End
        Else Do
            If colo=1 Then p2=line
            Else Interpret "Parse VAR line p1 +"colo-1 "p2"
            If csrp>colo Then xline=p1||Copies(' ',csrp-colo)p2
            Else xline=Overlay(p2,p1,csrp)
        End
        "LINE" i"=(xline)"
    End
    "CAPS=(caps)"
    Return 4

Build_screen:
    cols='----+----1----+----2----+----3----+----4----+----5' ||,
         '----+----6----+----7----+----8----+----9----+----0'
    cdat=Substr(Copies(cols,2),coll//100)
    Parse Value '01020304050607'x With ored +1 oblue +1 oyellow +1 ogreen,
                                       +1 oturq +1 opink +1 owhite
    Parse Value '11121314151617'x With ired +1 iblue +1 iyellow +1 igreen,
                                       +1 iturq +1 ipink +1 iwhite
    da1=;limit=mvcdpan%2;start=limit*-1
    Do i=start To limit
        data=$dat@csr('l',i,zscreeni,zscreenc);Parse VAR data 2 lin# +6 9 data
        Select
            When i=0 Then Do
               da1=da1||Substr(oturq||'=COLS>' cdat,1,80)
               attrl=ired;attrd=igreen
            End
            When Wordpos(lin#,'****** =NOTE=')>0 Then Do
               attrl=ored;attrd=oblue
            End
            When lin#='- - - ' Then Do
               attrl=owhite;attrd=owhite
            End
            When lin#='=BNDS>' Then Do
               attrl=ored;attrd=ored
            End
            When Wordpos(lin#,'=PROF> =COLS> ==MSG> ======')>0 Then Do
               attrl=ored;attrd=owhite
            End
            Otherwise Do
               If xx='SEQ' Then Do;attrl=;attrd=;End
               Else Do;attrl=ogreen;attrd=ogreen;End
            End
        End
        da1=da1 || attrl || lin# || attrd || data
    End
    Return da1 || oturq'*'Copies('=',77)'*'

/*--------------------------------------------------------------------*/
/*  LMEXIT code.  Import this code into your LMEXTxx.                 */
/*--------------------------------------------------------------------*/
l_MVC:  /* Move RHS from cursor column with prompt for to cursor */
l_MVCN: /* As "MVC" above but for Non-excluded lines only    */
l_MVCX: /* As "MVC" above but for eXcluded lines only        */
l_MRC:  /* Move RHS from cursor column with prompt for to cursor */
l_MRCN: /* As "MRC" above but for Non-excluded lines only    */
l_MRCX: /* As "MRC" above but for eXcluded lines only        */
l_MLC:  /* Move LHS from cursor column with prompt for to cursor */
l_MLCN: /* As "MLC" above but for Non-excluded lines only    */
l_MLCX:ms=mark(1) /* As "MLC" above but for eXcluded lines only
)M MVC
)C 0,0
)RC 4
*/; End_MVC:me=mark(-1);Return put_lines()
/*--------------------------------------------------------------------*/

/*--------------------------------------------------------------------*/
/*  LMEXIT "HELPX" data.                                              */
/*  Import text below into appropriate LMHELPxx member of associated  */
/*  LMEXITxx.                                                         */
/*--------------------------------------------------------------------*/
/*


 MVC    Move RHS from cursor column with prompt for to cursor.
 MVCN   - As "MVC" above but for Non-excluded lines only.
 MVCX   - As "MVC" above but for eXcluded lines only.
 MRC    Move RHS from cursor column with prompt for to cursor.
 MRCN   - As "MRC" above but for Non-excluded lines only.
 MRCX   - As "MRC" above but for eXcluded lines only.
 MLC    Move LHS from cursor column with prompt for to cursor.
 MLCN   - As "MLC" above but for Non-excluded lines only.
 MLCX   - As "MLC" above but for eXcluded lines only.
        This line command will permit movement (shifting) of data from
        the current cursor position to another position that is input in
        a panel that displays the contents of the current line the
        cursor is on.  Data either side of the line (depending on data
        depth either by choice or screen size restricted) will be
        displayed with a column marker over it. Use this feature to
        align columns.
        Alternatively use the "COL" marker which is adjusted for any
        right scrolls.
        Move the cursor to where you want the data moved.
        The way the data is moved (relative to the cursor) depends on
        the command used. "ML*" will move the data to the left of the
        cursor with the cursor indicating the LAST character. The other
        commands will move the data to the right of the cursor with the
        cursor indicating the FIRST character.
        Notes:
          - Requires:
              REXX:
                MVC      - Main driver.
                $DAT@CSR - Function to return data at cursor position.
              Panel:
                MVCP     - Cursor positioning panel.
          - Ensure that what it shifts is actually what you want.
          - The source of the data will be from where the cursor is on
            entry to the "move to". Be carefull when you leave the
            cursor in the sequence number part of the data. Cursor in
            this part of the line will default to column 1.
            If you screw up this way, rather than cancel out and start
            again, you may enter "NS" on the command and place the
            cursor in a new column, indicating a new start, thereby the
            cursor will be left asis and you will be given an oportunity
            to enter the new destination.
          - If the cursor is over the sequence number (either on
            invocation of the line command or in the "move to" screen),
            column 1 will be assumed.
          - Does not set or change BNDS settings. In fact it ignores
            them so watch it.
          - The display screen may present an image of the original
            screen to a depth of 3, 5, 7 or 9 lines. The greater the
            depth, the better your orientation to judge where to move.
            There is an input field on the screen to permit depth change
            provided your terminal model supports that depth. (Model 2
            terminals are locked into depth=3.)

                            ******

*/
