/*--------------------------ooo00 REXX 00ooo--------------------------*/
/* ONLY: Only display matching text.                                  */
/*                                                                    */
/* Exclude all lines and issue the find parameter.                    */
/*                                                                    */
/* Use ? or browse end for more detailed info.                        */
/*                                                                    */
/*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*/
Only:only_ver='1.06'
    ARG parm#;Address ISPEXEC;"CONTROL ERRORS RETURN";im_a_macro=0
    If parm#/='' Then Signal byp1
    "ISREDIT MACRO (parm#) NOPROCESS"
    If rc=0 Then im_a_macro=1

byp1:
/*  "CONTROL ERRORS CANCEL"                                           */

ini0:
    zedsmsg=
    Parse Upper VAR parm# parm#
    Address ISREDIT
    If Wordpos(Word(parm#,1),'? /? HELP /H /HELP')>0 Then Signal help

    If parm#='' Then Do
        zedlmsg="Missing find string."
        Address ISPEXEC "SETMSG MSG(ISRZ001)"
        Exit
    End
    If Wordpos('/NX',parm#)>0 Then Do
        parm#=Delword(parm#,Wordpos('/NX',parm#));xall=0
    End
    Else xall=1

    "(status)=USER_STATE";"(last)=LINENUM .ZLAST"
    If parm#='/N' Then Do
        Do i=1 To last;"CURSOR="i 0;"DELETE .ZCSR";End
        Signal exi1
    End

    ostr=;astr=;cs=;ce=;ai=0;oi=0;poper='|';v_oper='| + &';#wd1=
    "(lrecl) = LRECL"

    i=0;j=i+1;o.j='|'
    Do While parm#/=''
        parm@=parm#;Parse VAR parm# wd1 parm#
        If Index(wd1,'-')>0 & cs='' Then Do
            Parse VAR wd1 v1 '-' v2
            If v1='' Then v1=1
            If \Datatype(v1,'W') | v1<0 | v1>lrecl Then Do
                zedlmsg='Invalid starting column entered.'
                Signal erx1
            End
            If v2='' Then v2=lrecl
            If \Datatype(v2,'W') | v2<0 | v2>lrecl Then Do
                zedlmsg='Invalid ending column entered.'
                Signal erx1
            End
            cs=v1;ce=v2;Iterate
        End
        If Datatype(wd1,'W') & cs='' Then Do
            If wd1<0 Then Do
                zedlmsg='Invalid starting column entered.'
                Signal erx1
            End
            cs=wd1;Iterate
        End
        If Datatype(wd1,'W') & ce='' Then Do
            If wd1<cs | wd1>lrecl Then Do
                zedlmsg='Invalid ending column entered.'
                Signal erx1
            End
            ce=wd1;Iterate
        End

        cw1=Substr(wd1,1,1)
        If cw1="'" | cw1='"' Then Do
            dlm=cw1;wd1=extract_quote()
        End
        Else dlm="'"

        Parse VAR parm# oper rest
        i=i+1
        If oper='+' | oper='&' Then Do;o.i='+';j=i+1;o.j='+';parm#=rest;End
        Else If o.i/='+' Then o.i='|'
        w.i=wd1;d.i=dlm
    End
    oi=0;ai=0
    Do j=1 To i
        If o.j='+' Then Do;ai=ai+1;wa.ai=w.j;da.ai=d.i;End
        Else            Do;oi=oi+1;wo.oi=w.j;do.oi=d.i;End
    End

    "SCAN=OFF"
    If xall Then "X ALL"

    range=cs ce
    Do i=1 to oi
        If Index(wo.i,'&')>0 Then xx=$cstring(wo.i,'&','&&',,'*');Else xx=wo.i
        If do.i='"' Then 'F "'xx'" ALL' range
        Else             "F '"xx"' ALL" range
    End

    "CURSOR=1 0"
    Do Forever
        If wa.1='WA.1' Then Leave
        If Index(wa.1,'&')>0 Then xx=$cstring(wa.1,'&','&&',,'*');Else xx=wa.1
        If da.1='"' Then 'F "'xx'" NEXT' range
        Else             "F '"xx"' NEXT" range
        If rc/=0 Then Leave
        "(line)=LINE .ZCSR"
        If cs/='' Then line=Substr(line,cs,ce)
        Do j=2 to ai
            If Index(Translate(line),wa.j)=0 Then Do
                "XSTATUS .ZCSR= X";Leave
            End
        End
    End

    "F 'd_+?|\,,:!~`*&@#$$1qQ}}{12{¢¦\|¢¢$**'",
               ".ZFIRST .ZFIRST"

    Signal exi1

erx1:
    Address ISPEXEC "SETMSG MSG(ISRZ001)"

exi1:
    "USER_STATE = (status)"
    Exit

extract_quote:
    st=2
    Do Forever
        sp=Index(parm@,dlm,st)
        If sp=0 Then Do;sp=Length(parm@||dlm);Leave;End
        If Substr(parm@,sp+1,1)/=dlm Then Leave
        st=sp+2;Iterate
    End
    wd1=Substr(parm@,2,sp-2);parm#=Strip(Substr(parm@,sp+1))
    Return wd1
    Return $cstring(wd1,dlm||dlm,dlm,1,'*')

help:
ms=mark(2)
/*

   ONLY:

   Function:
     The ONLY routine can be used to only display lines that match
     the supplied parameters.

     The parameters are free format and any find strings with
     imbedded spaces must be quoted. Use double quotes to delimit a
     string containing single quotes and vice versa.  If the string
     contains a mixture of double and single quotes tuff as ISPF gets
     it's knickers in a twist when you imbed delimiters withing the
     string.

     Strings can be OR'd or AND'ed using '+/&' for ANDing and it's
     absence for implied ORing (it must be unquoted or it will be
     treated as a string).  Missing operator between strings (words)
     will default to OR'ing.

     The first numeric parameter will be used as the starting column
     while the second will be the ending column. If only the start-
     ing column is passed, the string must match starting at that
     column which would make AND'ing under those circumstances
     redundant. Without the column delimiters, the search is on the
     entire line.

     Parameters:
       sc  - First numeric parameter will be treated as Starting Column
             for finds.
             If scan text has numbers then make this the first parameter
             even if a full line scan is desired.
       ec  - Second numeric parameter will be treated as Ending Column
             for finds.
             If scan text has numbers then make this the second
             parameter even if a full line scan is desired.
       sc-ec
           - Note use of '-' seperator.  This format of Start-End Column
             is mutually exclusive with use of "sc" and/or "ec".
             If the find string includes a '-', this format MUST be
             used or the text will be pased accordingly and may either
             place incorrect boundary for scans or report invalid
             columns.
       /N  - Remove all DATA lines and leave only NOTE lines. See below
             for use.
       /NX - Do not exclude current display.  Use this parameter to
             overlay find combinations.
       +/& - The two parameters either side if the symbol must exits on
             the same line for it to be displayed.
       ccc - Any character string. You may pass many of these parameters
       ' c'- Quote the parameter if there are imbedded spaces. However,
             with this format spaces are discreet.

     You may pass a parameter of "/N" to remove all datalines,
     leaving only note and message lines.
     Note: - This is a destructive process and may cream a usefull
             dataset. Will suggest trying again in VIEW mode.
           - Usefull if you have notelines imbedded with datalines and
             would like to delete datalines and convert the notelines to
             datalines
           - This feature may not be applicable/useful for this
             application

     Notes on ANDing. All examples may generate different results:
        if + do
           - Any line containing "if" and "do" in any order regardless
             of spacing.  Would get a hit on 'the DOor of the lIFt ...'
        'if do'
           - Any line containing "if do" in that order with 1 space
             delimiter.
        'if  do'
           - Any line containing "if do" in that order with 2 space
             delimiter.
        ' if ' + ' do'
           - Usually the best way to identify the start of an 'If Do'
             block.
           - However it would NOT detect 'If .. Do;' coding methods.
        'if + do'
           - Would look for the literal "if" and "do" seperated by a "+"
             with single spacing.
        if + do else + do
           - This will not be interpreted as "if" and "do" or "else" and
             "do"
             The process will process as "if" and "do" and "else" and
             "do".
             If you want both 'if + do' and 'else + do' blocks, code two
             passes as:
                ONLY if + do
                ONLY else + do /NX
             Note order of of objects are important.  The above will
             create the desired resutls, however, the subtly different
             code below will produce incorrect results:
                ONLY if + do
                ONLY do + else /NX      (<- order of objects)

*/
me=mark(-2)
    "(caps)=CAPS";"CAPS=OFF"
    If \Datatype(where,'W') Then where=1
    Do i=ms To me;x=n_b(Substr(Sourceline(i),1,79)'*',where);End
    x=n_b(Centre(' End ',79,'*'),where);x=n_b(' ',where)
    "CAPS=(caps)"
    Exit

Mark:If Datatype(Arg(1))/='NUM' Then Arg(1)=1;Return sigl+Arg(1)
n_b:xx=Arg(1);"LINE_BEFORE" Arg(2) "= NOTELINE (xx)";Return 0
