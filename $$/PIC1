/******************************** REXX ********************************/
/**********************************************************************/
/* TRACE r                                                            */
/*--------------------------ooo000OOOO000ooo--------------------------*/
/*                                                                    */
/* Routine to format COBOL code.                                      */
/*                                                                    */
/* Permissable para,meters:                                           */
/*  CP     - Change prefix.                                           */
/*  ALL    - Process all lines (otherwise line command select lines)  */
/*                                                                    */
/*--------------------------------------------------------------------*/
    Parse Upper ARG parm#
    If parm# /= "" Then Signal byp1
    Address ISPEXEC
    "ISPEXEC CONTROL ERRORS RETURN"
    "ISREDIT MACRO (parm#) NOPROCESS"

byp1:
    cactn = "RETURN"
/*  cactn = "CANCEL"                                                  */
    "ISPEXEC CONTROL ERRORS" cactn

ini1:
    If parm# = "HELP" | parm# = "?" | parm# = '/?' Then Do
        "ISPEXEC SELECT PGM(ISPTUTOR) PARM(AFH000)"
        Exit
    End
    "ISREDIT (last) = LINENUM .ZLAST"

    "ISREDIT RESET"

    linex  = ''
    occurs = ''
    Do lin#i=1 To Last
      "ISREDIT (line) = LINE" lin#i
      If Substr(line,7,1) = '*' | Substr(line,7,1) = '/' |,
                                  Strip(line) = '' Then Iterate
      Parse VAR line seq 7 line 73 c73on
      If linex /= '' Then linex = linex || Strip(line,'B')' '
      Else                linex = linex || Strip(line,'T')' '
      xx = Strip(linex)
      If xx /= '' Then,
          If Substr(xx,Length(xx),1) = '.' Then Do
              Call process_line
              linex = ''
/*            If lev < olev Then olev = lev                           */
          End
    End

erx1:
    "ISPEXEC SETMSG MSG(GC009)"

ext1:
    Exit

process_line:
    linex = Strip(linex)
    If Index(linex,' PIC ') = 0 Then Return
    Parse VAR linex v1 ' PIC ' v2
    xx = Substr(Strip(v1),1,50) 'PIC' v2
    Call nl(xx)

    Return 0

nl: Arg ntl
    "ISREDIT LINE_BEFORE .ZFIRST = NOTELINE (ntl)"
    Return 0

