/******************************** REXX ********************************/
    n_st=mark(2)    /* Mark Start */
/*
/*--------------------------ooo000OOOO000ooo--------------------------*/
/*  RB: Rename Batch.                                                 */
/*                                                                    */
/*  Macro to generate batch rename member JCL.                        */
/*                                                                    */
/*  The following members are required to package this function.      */
/*  Those marked with an 'o' seperator are optional and enhance the   */
/*  available fetures:                                                */
/*  REXX:                                                             */
/*    RB       - This driver.                                         */
/*    BR       o BR to browse help instructions from this routine.    */
/*               (If "HEAD" is available then so is "BR".)            */
/*--------------------------------------------------------------------*/
*/
n_en=mark(-2)   /* Mark End   */
    Arg parm#;Address ISPEXEC;"CONTROL ERRORS RETURN";ima_macro=0
    If parm#/='' Then Signal byp1
    "ISREDIT MACRO (parm#) NOPROCESS";If rc=0 Then ima_macro=1

byp1:
/*  "CONTROL ERRORS CANCEL"                                           */

ini0:
    w1=Word(parm#,1);If Wordpos(w1,"? ??")=0 Then Signal No_help_#1
    If w1="??" Then Signal Help_me;"ISREDIT (m)=MEMBER";rcm=rc
    If rcm=0 Then Signal Help_me;Signal On Syntax Name Help_me
    Parse Source . . xcmd .;x=$BR(xcmd "??");Return
    Mark:If Datatype(Arg(1))/="NUM" Then Arg(1)=1;Return sigl+Arg(1)
    Help_me:Signal Off Syntax;#tr=Trace("o")
    Do i=n_st To n_en;nl=Sourceline(i)
    If rcm=0 Then "ISREDIT LINE_BEFORE 1=NOTELINE (nl)"
    Else Say Substr(nl,1,79);End;Return 0

No_help_#1:
    sysid=Strip(storage(d2x(x2d(c2x(storage(10,4)))+x2d(154)),8))
    Parse SOURCE . . xcmd .
    Parse Upper VAR parm# parm1,parm2,parm3,parm4,parm5,parm6,parm7
    If Word(parm2,2)/='' Then,
         Parse Upper VAR parm# parm1 parm2 parm3 parm4 parm5 parm6 parm7
    If Wordpos(parm1,'HELP /HELP /H')>0 Then Signal Help_me

ini1:
    chgchar='`';
    hlq=$alkhlqo();dsn=hlq'.RB'Time('s')'.TEMP1'


    Parse Source . . xcmd .
    Parse Upper VAR parm# parm1 parm2 .
    "VGET (rbmacro) SHARED"
    If rbmacro='1' Then Signal Macro_1

    If parm1='?' Then Signal Help_me

    "ISREDIT (dsname)=DATASET"
    "ISREDIT (member)=MEMBER"
    If Length(member)<8 Then Do
        newname=member'@'; buname=member'#'
    End
    Else Do
        newname=Overlay('@',member,7);buname=Overlay('#',member,7)
    End

    Call Build_panel

    If Sysdsn("'"dsname"("newname")'")/='OK' Then hi1='YELLOW';Else hi1='GREEN'
    If Sysdsn("'"dsname"("buname")'")/='OK' Then hi2='YELLOW';Else hi2='GREEN'
    Do Forever
        zcmd=;time=Substr(Time(),1,5)
        "DISPLAY PANEL(RBP1)"
        If rc=0 Then Leave
        If rc=8 Then Signal ext1
        If rc>8 Then Exit
    End

    If bu='Y' Then Do
        If buname='' Then Do
            If Length(member)<8 Then buname=member'#'
            Else buname=Overlay('#',member,7)
        End
    End

    x=LIstdsi("'"dsname"'")
    jobid=Userid()'R'

    Address TSO
    "NEWSTACK"
    Queue "//"jobid" JOB TPCICS001,'Rename-"member"',"
    Queue '//       MSGCLASS=X,CLASS=A,NOTIFY=&SYSUID'
    Queue '//*'
    Queue '//*  ***  Auto generated JCL for member renames'
    Queue '//*'
    Queue '//RENAMES  EXEC PGM=IEHPROGM'
    Queue '//SYSPRINT DD SYSOUT=*'
    Queue '//DD1      DD UNIT='sysunit',VOL=SER='sysvolume',DISP=SHR'
    Queue '//SYSIN    DD *'
    If bu = 'Y' Then Do
    If Sysdsn("'"dsname"("buname")'") = 'OK' Then Do
    Queue Substr('      SCRATCH DSNAME='dsname',',1,71)'+'
    Queue Substr('               VOL='sysunit'='sysvolume',',1,71)'+'
    Queue        '               MEMBER='buname
    End
    Queue Substr('      RENAME  DSNAME='dsname',',1,71)'+'
    Queue Substr('               VOL='sysunit'='sysvolume',',1,71)'+'
    Queue Substr('               NEWNAME='buname',',1,71)'+'
    Queue        '               MEMBER='member
    End
    Queue Substr('      SCRATCH DSNAME='dsname',',1,71)'+'
    Queue Substr('               VOL='sysunit'='sysvolume',',1,71)'+'
    Queue        '               MEMBER='MEBER
    Queue Substr('      RENAME  DSNAME='dsname',',1,71)'+'
    Queue Substr('               VOL='sysunit'='sysvolume',',1,71)'+'
    Queue Substr('               NEWNAME='MEMBER',',1,71)'+'
    Queue        '               MEMBER='newname
    Queue '/*'
    Queue '//'
    Queue '//BACKOUT  EXEC PGM=IEHPROGM'
    Queue '//SYSPRINT DD SYSOUT=*'
    Queue '//DD1      DD UNIT='sysunit',VOL=SER='sysvolume',DISP=SHR'
    Queue '//SYSIN    DD *'
    Queue Substr('      RENAME  DSNAME='dsname',',1,71)'+'
    Queue Substr('               VOL='sysunit'='sysvolume',',1,71)'+'
    Queue Substr('               NEWNAME='newname',',1,71)'+'
    Queue        '               MEMBER='member
    Queue Substr('      RENAME  DSNAME='dsname',',1,71)'+'
    Queue Substr('               VOL='sysunit'='sysvolume',',1,71)'+'
    Queue Substr('               NEWNAME='MEMBER',',1,71)'+'
    Queue        '               MEMBER='buname
    Queue '/*'
    Queue '//'
    Queue ''

    dd='DD'Time('s')
    Address ISPEXEC "VGET ZTEMPF"
    "ALLOC DD("dd") DS('"ztempf"') SHR REU"
    "EXECIO * DISKW "dd" (FINIS"
    "DELSTACK"
    Address ISPEXEC
    rbmacro=1;"VPUT (rbmacro) SHARED"
    "LMINIT DATAID(DATAID) DDNAME("dd")"
    "VIEW DATAID(&DATAID) MACRO("xcmd")"
    "LMFREE DATAID(&DATAID)"
    Address TSO "FREE DD("dd")"

ext1:
    "LIBDEF ISPPLIB"
    Address TSO "DELETE '"dsn"'"
    Exit

/*--------------------------------------------------------------------*/
/* Come in as a macro to put informative notelines in gen'd JCL.     */
/*--------------------------------------------------------------------*/
Macro_1:
    rbmacro=;"VPUT (rbmacro) SHARED"
    "ISREDIT RESET"
    n_st=mark(2)                            /* Mark next line         */
/*

    Hello `CNAME..

    This is the JCL that has been generated from the parameters you
    have supplied. Enter SUB on the command line if you wish to
    Enter SUB on the command line if you wish to submit the job.
                           - or -
    copy/cut & paste it into a dataset(member) for later submission.

    Note: The second step should be used as a 1 step backout batch
          JCL. Take note of the '//' terminator between the two steps.


*/
    n_en=mark(-2)                           /* Mark prev 2 line       */

    Call noteline_it

    Return 0

/*--------------------------------------------------------------------*/
/* Generate the notelines from inbuilt comments.                      */
/*--------------------------------------------------------------------*/
noteline_it:
    cname='there'
    Signal On Syntax Name ret_syntax_1
    cname=$Whoami('C')
ret_syntax_1:
    Signal Off Syntax
    Address ISREDIT

    "(caps)=CAPS";"CAPS=OFF"
    x=nl('*'Centre('ooo000OOOO000ooo',70,'-')'*')
    qit='N'
    Call process_source
    x=nl('*'Copies('-',70)'*')
    "CAPS=(caps)";"UP MAX";"MEND"
    Exit

/*--------------------------------------------------------------------*/
/* Generic one lienr paragraphs.                                      */
/*--------------------------------------------------------------------*/
errsyntax:Signal Off Syntax;Interpret Signal retsyn
Mark: Arg diff;If Datatype(diff)/='NUM' Then diff=1;Return sigl+diff
nl:Parse Arg ntl;"ISREDIT LINE_BEFORE .ZFIRST = NOTELINE (ntl)";Return 0

/*--------------------------------------------------------------------*/
/* Generic one lienr paragraphs.                                      */
/*--------------------------------------------------------------------*/
Build_panel:
    mempref='RBP'
    #panel1=1                               /* First panel number     */
    #panels=1                               /* Number of panels       */

    x=Msg('Off')
    Address TSO
    "DELETE '"dsn"'"
    dd='IA'Time('s')
    "ALLOC DA('"dsn"') NEW CATALOG CYL SPACE(10,2)",
       "DSORG(PO) LRECL(80) BLKSIZE(0) UNIT(SYSALLDA) DIR(2)",
       "RECFM(F B) REU"
    "FREE DA('"dsn"')"

    Do i=#panel1 To #panels
        pann=mempref||i
        Interpret "Call make_mem_"i
        Call build_queue
    End

    Address ISPEXEC
    "LIBDEF ISPPLIB DATASET ID('&DSN') STACK"

    Return 0

/*--------------------------------------------------------------------*/
/* Populate the queue from the source lines                           */
/*--------------------------------------------------------------------*/
build_queue:
    "NEWSTACK"

    qit='Y'
    Call process_source
    Queue ''

    "ALLOC F("dd") DA('"dsn"("pann")') SHR REU"
    "EXECIO * DISKW "dd" (FINIS"
    "FREE  F("dd")"
    "DELSTACK"

    Return 0


/*--------------------------------------------------------------------*/
/* Queue or noteline instream source                                 */
/*--------------------------------------------------------------------*/
process_source:
    #i_backup=i;#j_backup=j

    #tr=Trace('O')
    Do i=n_st To n_en
        line=Sourceline(i)
        Do While Index(line,chgchar)>0
            Interpret "Parse VAR line p1 '"chgchar"' var '.' p2"
            If Index(var,'(')>0 Then Do
                Parse VAR var var '(' vl ')'
                If Â¬Datatype(vl,'W') Then vl=Length(var)
                Interpret 'line=p1||Substr('var',1,vl)||p2'
            End
            Else Interpret 'line=p1||'var'||p2'
        End
        If qit='Y' Then Queue line
        Else x=nl('*'Substr(line,1,70)'*')
    End
    x=Trace(#tr)

    i=#i_backup;j=#j_backup
    Return 0

/*--------------------------------------------------------------------*/
/* Create member "CONFH1" from sourcelines between the '/* */'        */
/*--------------------------------------------------------------------*/
make_mem_1: n_st = mark(2)
/*
)ATTR
  @ TYPE(TEXT)  INTENS(HIGH) COLOR(YELLOW)
  ? TYPE(INPUT) INTENS(HIGH) HILITE(USCORE)
  $ TYPE(OUTPUT) INTENS(HIGH)
  ~ TYPE(TEXT)  INTENS(HIGH) SKIP(ON)
)BODY EXPAND(\\) SMSG(POPUPMSG) LMSG(POPUPMSG)
@&time\-\ Rename member in batch \-\
%&SID ===>_ZCMD
%
+Enter parameters below:
+  Member  %===>?MEMBER  ~<=+BU%=>?Z~<=@Y/N+  BU name%=>?BUNAME  ~<=
+  New Name%===>?NEWNAME ~<=
+
+Enter backup flag if not already backed up and want to backup into default
+backup, eg.@LENGTH7#+or@LENGTH#8+.
+Change BU name if different from standard.
+Leave if already backed up.
+
%Note+-If either/both@New name+or@BU name+are in yellow they do not exist.
+
+
+Use%END+PF key to terminate session.
+$Z+
)INIT
  &SID = &ZSYSID
  .ZVARS = '(BU POPUPMSG)'
  &BU = 'Y'
  .ATTR (NEWNAME) = 'COLOR(&HI1)'
  .ATTR (BUNAME)  = 'COLOR(&HI2)'
)PROC
  VER(&MEMBER,NB,NAME)
  VER(&BU,NB,LIST,Y,N)
  VER(&BUNAME,NAME)
  VER(&NEWNAME,NB,NAME)
)END
*/
    n_en = mark(-2);Return 0
