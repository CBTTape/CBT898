/*  REXX MVS  *==================================================*/
/*                                                               */
/*              RECV - TSO RECEIVE interface.                    */
/*                   - Alternative dataset is llq.TEMP           */
/*                   - Invokes TT if LRECL=1024, requires        */
/*                     availability of TT                        */
/*                   - Uses/requires "DELALLM" to empty dest DSN */
/*                   - Self extracting input panel               */
/*                   - Uses $KMTJC for default Bit Bucket if not */
/*                     "Z".                                      */
/*                   - Uses $KMTUVOL for default UNIT() VOLUME() */
/*                     if not default UNIT(SYSALLDA).            */
/*                                                               */
/*===============================================================*/
RECVl='2.08'
    Arg inda;panel='RECVP';ttda=
    Parse Source . . cm .
    If Wordpos(Word(inda,1),'? ??')>0 Then Do
       If Word(inda,1)='??' Then Signal help_me
       '%BR %'cm '??';Exit
    End

    Signal on Syntax Name error_off_DELALLM
    a_delm=0;x=Delallm('/T');a_delm=1
error_off_DELALLM:Signal off Syntax
    Signal on Syntax Name error_off_$Kmtjc
    bb='Z';bb=$Kmtjc('def_bb')
error_off_$Kmtjc:Signal off Syntax

    If Sysdsn(inda)='OK' Then Do
        xx=Listdsi(inda)
        If syslrecl=1024 Then Do
            Signal on Syntax Name error_off_TT
            ttda="'"Strip(inda,,"'")".UNTERSED'"
            rc=TT(inda ttda)
            If rc=0 Then xtra='INDA('ttda')';Else xtra=
            Signal off Syntax
        End
        Else xtra='INDA('inda')'
    End
    Else xtra=
    xx=outtrap(lista.);Address TSO "PROFILE";xx=outtrap(off)
    If Index(lista.1,'NOMSGID')>0 Then Do
        prof_parm='NOMSGID'
        Address TSO "PROFILE MSGID"
    End;Else prof_parm=
    If Index(lista.1,'NOPROMPT')>0 Then Do
        prof_parm=prof_parm 'NOPROMPT'
        Address TSO "PROFILE PROMPT"
    End
    do alpha=0
       drop lista.
       dropbuf
       xx=PROMPT('OFF');xx=outtrap(lista.)
       Address TSO "RECEIVE" xtra
       xx=outtrap(off);xx=PROMPT('ON')
       if lista.0 = 0 then leave alpha
       Parse VALUE '' With msg csr1 cpo1 volume member
       do k=1 to lista.0
          linha = lista.k
          select
            when word(linha,1) = 'INMR000I' then do
               zedsmsg=;zedlmsg=Subword(linha,2)
               Address ISPEXEC "SETMSG MSG(ISRZ001)"
               leave alpha
            end
            when word(linha,1) = 'INMR003I' then do
               zedlmsg = Subword(linha,2)
               Address ISPEXEC "SETMSG MSG(ISRZ001)"
               leave alpha
            end
            when word(linha,1) = 'INMR901I' then do
               dsname = "'"word(linha,3)"'"
               newdsn=dsname
               Parse Value Strip(newdsn,,"'") With . '.' altdsn
               altdsn=altdsn'.TEMP'
               msg="Change dataset name if different."
               s='S'
               csr1="ALTDSN"
/*             If Index(newdsn,'.')>0 Then cpo1=Lastpos('.',newdsn)+1 */
               origin = subword(linha,5)
            end
            when word(linha,1) = 'INMR902I' & member = '' then,
               member = subword(linha,3)
            otherwise nop
         end
       end
       e=;compress=0
       do beta=0
          If first_time/='N' Then Do
              Call build_panel
              first_time='N';zwinttl='Receive';#popr=1;#popc=3
          End
          zcmd=
          Address ISPEXEC "ADDPOP ROW(&#POPR) COLUMN(&#POPC)"
          Address ISPEXEC "DISPLAY PANEL(&PANEL)  CURSOR(&CSR1) CSRPOS(&CPO1)"
          rc1=rc;Address ISPEXEC "REMPOP"
          If rc1/=0 Then leave alpha
          If zcmd='?' Then Do;'%BR %'cm '??';Iterate;End
          Parse VALUE '' With volume1 bl1 unit1 space1 csr1 cpo1
          If e="D" then cmd1="DELETE"
          Else Do
            e1=
            Select
                When altdsn /='' then do
                   If Substr(altdsn,1,1) /= "'" Then,
                       altdsn="'"Sysvar(Syspref)"."altdsn"'"
                   newdsn1="DSN('"strip(altdsn,,"'")"')"
                   newdsn1="DSN('"strip(altdsn,,"'")"')";newdsn#=altdsn
                end
                When newdsn /='' then do
                   if Substr(newdsn,1,1) /= "'" Then,
                       newdsn="'"Sysvar(Syspref)"."newdsn"'"
                   newdsn1="DSN('"strip(newdsn,,"'")"')";newdsn#=newdsn
                end
                Otherwise newdsn1=
            End
            If Sysdsn(newdsn#)='OK' Then Do
                If s='E' & \a_delm then do
                   msg='Empty routine "DELALLM" unavailable. Please change.'
                   csr1='S'
                   iterate beta
                end
                Select
                    When s='R' Then Do
                        #msg=Msg('Off');Address TSO "DELETE" newdsn#;x=Msg(#msg)
                        s='N'
                    End
                    When s='C' Then Do;compress=1;s='S';End
                    When s='E' Then Do
                        If a_delm Then Do
                            x=Delallm(newdsn#,,'SUPRESS_MSG','COMPRESS_AFTER')
                            s='S'
                        End
                    End
                    When s='N' Then Nop
                    When s='O' Then Nop
                    When s='' & e='D' Then Nop
                    Otherwise s='S'
                End
            End
            Else Do;If s/='N' Then s='N';End
            select
               when s="N" then disp1="NEW"
               when s="S" then disp1="SHR"
               when s="M" then disp1="MOD"
               when s="O" then disp1="OLD"
               otherwise disp1=
            end
            if volume/='' then volume1 = "VOLUME("volume")"
            if bl/='' then bl1 = "DIRECTORY("bl")"
            select
               when t = "T" then t1 = "TRACKS"
               when t = "C" then t1 = "CYLINDERS"
               otherwise t1=
            end
            if unit/='' then unit1 = "UNIT("unit")"
            if pri/='' then do
               if sec = "" then sec1 = 0
               space1 = "SPACE("pri sec")"
            end
            aloc_parms = space(volume1 bl1 t1 space1 unit1,0)
            cmd1 = e1 newdsn1 disp1 volume1 bl1 t1 space1 unit1
            if e1/='' & aloc_parms/='' then do
               msg = "DELETE incompatible with allocation parameters"
               iterate beta
            end
            if e1/='' & disp1/='' then do
               msg = "DELETE incompatible with DISP"
               iterate beta
            end
            if (disp1="SHR" | DISP1="OLD") & aloc_parms/='' then do
               msg = disp1 "incompatible with allocation parameters"
               iterate beta
            end
          End
          leave beta
       end
       If compress Then x=$Compres(newdsn#)
       If bb/='' Then queue cmd1 "SYSOUT("bb")";Else queue cmd1
       queue "END"
       Say 'RECEIVing with:' cmd1
       Address TSO "RECEIVE" xtra
       if xtra/='' then leave alpha
    end
    If ttda/='' Then "DELETE" ttda

    xx=Prompt('ON')
    Dropbuf
    If prof_parm/='' Then Address TSO "PROFILE" prof_parm
    If first_time='N' Then Do
        #msg=Msg('Off')
        Address ISPEXEC "LIBDEF ISPPLIB";Address TSO "DELETE '"dsn"'"
    End
    Exit 0
/*--------------------------------------------------------------------*/
/* "TT" unavailable                                                   */
/*--------------------------------------------------------------------*/
error_off_TT:Signal off Syntax
    zedlmsg='Routine "TT" is not available for a ''TERSED'' dataset of',
            'LRECL=1024. Processing abandoned.'
    Address ISPEXEC "SETMSG MSG(ISRZ001)"
    Exit 8
/*--------------------------------------------------------------------*/
/* Compress output dataset                                            */
/*--------------------------------------------------------------------*/
$Compres:Arg dsname
    Address TSO;#m=Msg('On')
    "ALLOC F(SYSPRINT) DUMMY OLD REU"
    "ALLOC F("dd1") DA("dsname") SHR REU"
    If rc/=0 Then Do
        zedlmsg="Allocation of dataset '"dsname"' for compression failed."
        Address ISPEXEC "SETMSG MSG(ISRZ001)"
        Exit rc
    End
    Address ISPEXEC "VGET ZTEMPF"
    "ALLOC F(SYSIN) DA('"ztempf"') SHR REU"
    'NEWSTACK';Queue '  COPY INDD='dd1',OUTDD='dd1;Queue ''
    "EXECIO * DISKW SYSIN (FINIS"
    "CALL *(IEBCOPY)"
    "FREE F("dd1" SYSIN)";x=Msg(#m);Address
    Return 0
/*--------------------------------------------------------------------*/
/* Allocate panel                                                     */
/*--------------------------------------------------------------------*/
build_panel:
    u=Sysvar(Sysuid);p=Sysvar(Syspref);If u/=p&p/='' Then u=p'.'u;hlq=u
    dsn= hlq'.$$$TEMP.RECPANEL'
    #msg=Msg('Off')
    "DELETE '"dsn"'"
    Signal on Syntax Name error_off_$KmtUVOL
    unitvol="UNIT(SYSALLDA)";unitvol=$KmtUVOL('$ZTEMPF')
error_off_$KmtUVOL:Signal off Syntax
    "ALLOC DA('"dsn"') NEW CATALOG TRACK SPACE(1,1)",
       "DSORG(PO) LRECL(80) BLKSIZE(0)" unitvol" DIR(1)",
       "RECFM(F B) REU"
    "FREE DA('"dsn"')"
    "NEWSTACK"
    Call make_mem_1;#tr=Trace('o')
    Do i=n_st To n_en;Queue Sourceline(i);End;Queue ''
    x=Trace(#tr)
    "ALLOC F("dd") DA('"dsn"("panel")') SHR REU"
    "EXECIO * DISKW "dd" (FINIS"
    "FREE  F("dd")"
    Address ISPEXEC "LIBDEF ISPPLIB DATASET ID('&DSN') STACK"
    x=Msg(#msg)
    Return 0

/*--------------------------------------------------------------------*/
/* Create help panel(s) from sourcelines between the '/* */'          */
/*--------------------------------------------------------------------*/
make_mem_1:n_st=mark(2)                     /* Mark start of data     */
/*
)ATTR
  _ TYPE(INPUT) CAPS(ON) JUST(LEFT)  COLOR(RED) HILITE(USCORE)
  ! TYPE(OUTPUT) SKIP(ON) COLOR(WHITE)
  ? TYPE(TEXT) INTENS(HIGH) SKIP(ON) COLOR(BLUE)
  # TYPE(TEXT) INTENS(HIGH) SKIP(ON) COLOR(TURQ)
  % TYPE(TEXT) INTENS(HIGH) SKIP(ON) COLOR(YELLOW)
  $ TYPE(TEXT) INTENS(HIGH) SKIP(ON) COLOR(WHITE)
  + TYPE(TEXT) INTENS(LOW) SKIP(ON)  COLOR(GREEN)
  @ AREA(DYNAMIC)
  w TYPE(CHAR) COLOR(WHITE)
  W TYPE(CHAR) COLOR(WHITE) HILITE(USCORE)
  y TYPE(CHAR) COLOR(YELLOW)
  b TYPE(CHAR) COLOR(BLUE)
  B TYPE(CHAR) COLOR(BLUE) HILITE(USCORE)
  r TYPE(CHAR) COLOR(RED)
  t TYPE(CHAR) COLOR(TURQ)
  g TYPE(CHAR) COLOR(GREEN)
)BODY WINDOW(68,20) EXPAND(\\)
?&SID%===>_ZCMD
!MSG
?
?  Dataset to receive:
+     Dsn..........!DSNAME
+     Sent by......!ORIGIN
+     Members......!MEMBER

?  Receive into (if different to DSN above - priority 'b' Then 'a')
+     ===>.....(a)._NEWDSN                                      +
+     ...or....(b)._ALTDSN                                      +
+     @DYNA1,SHAD1                    @_S# -OR-+@DYNA2,SHAD2 @_E+
?     Allocation parms (if Disp New)..:
+                  Volume.............._VOLUME+
+                  Directory blocks...._BL +
+                  Space (Trk / Cyl)..._T+
+                  Primary............._PRI +
+                  Secondary..........._SEC +
+                  Unit................_UNIT    +Bit Bucket..._Z+
%PF3/15:?END Receive
)INIT
.ZVARS='(BB)'
IF (&MSG ¬= &Z) .ATTR (MSG) = 'HILITE(REVERSE) COLOR(YELLOW) CAPS(OFF)'
&SID = &ZSYSID
&ZWINTTL = 'RECV : Receive (V&RECVL)'
&DYNA1 = 'Disp(New Shr Old/Comp Empty Rep)'
&SHAD1 = 'bbbbbygggygggyggbyggggygggggyggb'
&DYNA2 = 'Delete (D)....'
&SHAD2 = 'ggggggygyggggg'
)END
*/
n_en=mark(-2);Return 0                      /* Mark end of data       */
Mark:If Datatype(Arg(1))/='NUM' Then Arg(1)=1;Return sigl+Arg(1)
help_me:ms=mark(2)
/*             ---> TF75 for doco size <---

  Good &TOD. &CNAME..

  &CM.: Receive XMITted data.

  This routine will issue the RECEIVE TSO command either implicitly to
  receive data XMITted to your node or explicitly against an XMITted
  destination dataset.

  When invoked without a parameter it will implicitly receive data XMITted
  to your node or if a dataset is supplied, explicitly against the passed
  XMITted destination dataset.

  If &CM. finds LRECL=1024 for the sequential dataset, it assumes it is a
  tersed dataset and will invoke "TT" (if available) to unterse it,
  otherwise an appropriate error message is displayed.  If "TT" is
  available, it will unterse the dataset to it's original DCB values into a
  datadset with '.UNTERSED' appended to the source dataset name (using
  "TT"s default settings).  This untersed dataset will automatically be
  deleted at termination.  For this to be meaningfull to &CM.,the original
  PDS should have been XMITted to a sequential file and that file tersed to
  a sequential LRECL=1024 dataset (or use the "TT" command to terse it).
  This untersed dataset will then be presented to the TSO RECEIVE command.

  Prior to processing the RECEIVE command, &CM. will create a
  self-extracted panel for output dataset processing. This panel will be
  deleted at end of processing.

  The panel will present 2 potential destination datasets:
    a) The original dataset name.
    b) The original dataset name without the hlq, a '.TEMP' suffix,
       unquoted to default to your SYSPREF setting.
  Either dataset may be overtyped/customised, however dataset "b" takes
  precedence and if "a" is to be use ensure "b" is erased.

  The allocation parameters are fairly staright forward, however, take care
  as no validation is performed and it will be accepted or rejected by the
  RECEIVE command's syntax checker. So don't allocate thousands of
  cylinders for a one lined single member PDS.

  Entry of "D" against the 'delete' prompt will delete any implicit XMITs.

  Under disp you can enter the following options:
    C - Compress the dataset prior to receiving into it.
    E - Empty the dataset. Deletes all exixsting members and compresses it
        before receiving into it.
    N - New dataset.
    O - Old dataset
    R - Replace dataset. Deletes the dataset before receiving into it
        (thereby re-creating it).
    S - Shared dataset.

                          *****

*/
me=mark(-2)

   Parse Value Time() With hh ':' 1 time +5
   Select
       When hh<12 Then tod='morning'
       When hh<18 Then tod='afternoon'
       Otherwise tod='evening'
   End
   chgchar='&';cname='there'
   Signal on Syntax Name error_off_$WHOAMI
   Parse Value $Whoami() With cname sname  /* Toggle as per format   */
error_off_$WHOAMI:Signal Off Syntax

   Say '*'Centre('ooo000OOOO000ooo',77,'-')'*'
   Do i=ms To me
       line=Sourceline(i)
       Do While Index(line,chgchar)>0
           Interpret "Parse VAR line p1 '"chgchar"' var '.' p2"
           If Index(var,'(')>0 Then Do
               Parse VAR var var '(' vl ')'
               If ¬Datatype(vl,'W') Then vl=Length(var)
               Interpret 'line=p1||Substr('var',1,vl)||p2'
           End
           Else Interpret 'line=p1||'var'||p2'
       End
       Say '*'Substr(line,1,77)'*'
   End
   Say '*'Copies('-',77)'*'
   Exit

Mark:Arg diff;If \Datatype(diff,'W') Then diff=1;Return sigl+diff
End
