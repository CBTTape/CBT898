/******************************** REXX ********************************/
/*--------------------------------------------------------------------*/
/* Routine to call DASDSPCE to return all allocations in an ISPF      */
/* table.  It then processed the device types in the table agains     */
/* a list of DASD and TAPE devices in the respective variables "DASD" */
/* and "TAPE".                                                        */
/* The final result is output to an edit session hoever it can be     */
/* tailored for any purpose.                                          */
/* Doctor the settings of "dasd" and "tape" variables as desired.     */
/* Set variable "all=0" to "all=1" to get a full listing to determine */
/* what needs to included/excluded in variable setting.               */
/*                                                                    */
/* Requires ISPF environment when running in batch.  Pass parameter of*/
/* "*" to output to SYSTSPRT or valid fully qualified sequential      */
/* dataset or dataset(member) quoted/unquoted.  If dataset does not   */
/* exist will make it "*".                                            */
/*                                                                    */
/* Members required to process this routine:                          */
/*   REXX:                                                            */
/*    ROBYN#1  - This routine.                                        */
/*    ROBYN#$  - Called routine to set 'dasd' and 'tape' variables.   */
/*               Using this you can tailor this member per site and   */
/*               leave the (final version of) ROBYN#1 alone.          */
/*  Loadlib:                                                          */
/*    DASDSPCE - Load module. Can be found in dataset 'SF0558.$LOAD'. */
/*  Source:                                                           */
/*    DASDSPCE - Can be made available on request.                    */
/*--------------------------------------------------------------------*/
/*  Trace r                                                           */
    Address ISPEXEC
    ARG parm#
    ima_macro=0
    If parm#/='' Then Signal byp1
    "CONTROL ERRORS RETURN"
    "ISREDIT MACRO (parm#)"
    If rc>0 Then Signal byp1
    ima_macro=1

byp1:
    cactn="RETURN"
/*  cactn="CANCEL"                                                    */
    "CONTROL ERRORS" cactn

init:
    all=0                                   /* 1 or 0 to display all  */
    Parse Upper VAR parm# parm1 parm2 parm3
    dstable='DS'Time('s')
/*  dasd=,                                                            */
/*       '3380/S  ',                                                  */
/*       '3380/D  ',                                                  */
/*       '3380/T  ',                                                  */
/*       '3390/S  ',                                                  */
/*       '3390/D  ',                                                  */
/*       '3390/T  ',                                                  */
/*       '3390/5  ',                                                  */
/*       '3390/9  ',                                                  */
/*       ''                                                           */
/*  tape=,                                                            */
/*       '3480/S  ',                                                  */
/*       ''                                                           */
    dasd=robyn#$('dasd')
    tape=robyn#$('tape')
    If parm#/='' Then,
        If parm#/='*' Then,
            If Sysdsn("'"Strip(parm#,,"'")"'")/='OK' Then Do
                Say "Dataset '"Strip(parm#,,"'")"' not found. '*' substituted."
                parm#='*'
            End

build_table:

    "TBEND &DSTABLE"
    keeptb='Y'                              /* Return table to REXX   */
    dasdspcw='N'                            /* Disp table from program*/
    dev_type_mask='BOX+DICE'                /* What to return. Resrvd */
                                            /* value for DASDSPCE.    */
    "VPUT (keeptb dasdspcw dstable) SHARED"
    "SELECT PGM(DASDSPCE) PARM("dev_type_mask")"

cmd_print:
    Address TSO "NEWSTACK"
    Queue '            S      Free spce # of Lgst ext  Device  Alloc  ',
          '  Mount   Device'
    Queue 'Volser UCB  M VTOC Cyls/Trks Exts Cyls/trks  Type   Status ',
          'Attribute Status'
    Queue '------ ---- - ---- --------- ---- --------- ------- -------',
          '--------- ------'
    "TBTOP &DSTABLE"
    #tr=Trace('o')
    Do While rc=0
        "TBSKIP &DSTABLE"
        If rc/=0 Then Leave
        If Wordpos(dt,dasd tape)=0 & Â¬all Then Iterate
        If fs/='' Then Do
            Parse VAR fs fs1 '/' fs2;Parse VAR le le1 '/' le2
            fs=Right(fs1+0,5) Right(fs2+0,3);le=Right(le1+0,5) Right(le2+0,3)
            ex=Right(ex+0,4)
        End
        Else Do
            fs=Substr(fs,1,9);le=Substr(le,1,9)
            ex=Substr(ex,1,4)
        End
        Queue Substr(vol,1,6) Substr(ucb,1,4) Substr(smsfl,1,1)' ',
              Substr(ix,1,3) fs ex le,
              Substr(dt,1,7) Substr(as,1,7) Substr(ma,1,9) Substr(ds,1,6)
    End
    x=Trace(#tr)
    Queue ''
    "TBEND &DSTABLE"

    If parm#='' Then Do
        "VGET ZTEMPF";ztempf="'"ztempf"'";dd='EI'Time('s')
    End
    Else Do
        ztempf=parm#;dd='SYSTSPRT'
    End
    #m=Msg('Off');Address TSO "ALLOC F("dd") DSN("ztempf") SHR REU";x=Msg(#m)
    Address TSO "EXECIO * DISKW "dd" (FINIS"
    If parm#/='' Then Exit

    "LMINIT DATAID(DATAID) DDNAME("dd")"
    zedlmsg='Use your favourite print routine prior to ending edit',
            'session.';"SETMSG MSG(ISRZ001)"
    "EDIT DATAID(&DATAID)"
    "LMFREE DATAID(&DATAID)";Address TSO "FREE F("dd")"

    Exit

/*--------------------------------------------------------------------*/
/* JCL to execute above in batch.                                     */
/*--------------------------------------------------------------------*/

//SF0558IB JOB (NOT-REQUIRED),'$#@EXIMP-Kara',
//             CLASS=A,COND=(4,LT),
//             MSGCLASS=H,TIME=1440,
//             NOTIFY=&SYSUID
//STEP01 EXEC PGM=IKJEFT01,COND=(0,LT)
//SYSOUT   DD SYSOUT=*
//SYSPROC  DD DISP=SHR,DSN=SF0558.$$            <- Change as required
//ISPLLIB  DD DISP=SHR,DSN=SF0558.$LOAD         <- Change as required
//ISPPLIB  DD DISP=SHR,DSN=ISP.SISPPENU
//ISPSLIB  DD DISP=SHR,DSN=ISP.SISPSENU
//ISPMLIB  DD DISP=SHR,DSN=ISP.SISPMENU
//ISPTLIB  DD DISP=SHR,DSN=ISP.SISPTENU
//ISPPROF  DD DSN=&&ISPPROF,SPACE=(TRK,(10,,10)),UNIT=SYSDA,
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)
//ISPLOG   DD DSN=&&ISPLOG,SPACE=(TRK,(10,,10)),UNIT=SYSDA,
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)
//SYSOUT   DD SYSOUT=*
//SYSTERM  DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD DATA,DLM=$$
 ISPSTART CMD(%ROBYN#1 *)
$$
//
