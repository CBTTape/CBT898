/*--------------------------ooo00 REXX 00ooo--------------------------*/
/*                                                                    */
/*  RSC: Remove Semi-Colons.                                          */
/*                                                                    */
/*  Seperates lines joined using semi-colons.                         */
/*                                                                    */
/*  Requires access to REXX routines $ZTEMPF and $COPYMEM (and SNAP   */
/*  if you want to process excludeds/non-excluded lines).             */
/*                                                                    */
/*  Notes:                                                            */
/*   1. This is a destructive macro, but, changes are applied to a    */
/*      copy made using $ZTEMPF and $COPYMEM.  Changes are notated    */
/*      by notelines of the original line with a                      */
/*      '*---------------------------------*' terminator.             */
/*   2. Error may creap in when ';' are used for other than command   */
/*      seperation.  Those on line starting with '/*' are ignored but */*/
/*      those used on quoted literals will give an oopsie.... Refer to*/
/*      line with (below):                                            */
/*       ->  "ISREDIT F ';'";If rc/=0 Then Leave                      */
/*      This is not an issue if you expand for readability, however,  */
/*      if you expand and keep the expanded as the executable, watch  */
/*      it.                                                           */
/*      If you choose to do this, exclude those lines and pass a      */
/*      parameter of either '/NX' or '/X' to process only non-excluded*/
/*      or excluded lines.                                            */
/*      You will need access to the SNAP macro to use this feature.   */
/*                                                                    */
/*--------------------------------------------------------------------*/
rsc:rsc_ver='1.02'
    Address ISPEXEC "CONTROL ERRORS RETURN"
    Address ISREDIT;"MACRO (parm#) NOPROCESS"

    Parse SOURCE . . xcmd .
    "(STATUS)=USER_STATE";"(caps)=CAPS";"CAPS=OFF"
    rscvars='rscmacro,zfrange,zlrange,rscxs'
    Address ISPEXEC "VGET ("rscvars") SHARED"
    If rscmacro/='Y' Then Signal copy_and_process
    rscmacro=;Address ISPEXEC "VPUT (rscmacro) SHARED"
    If rscxs/='' Then "SNAP /RRSC"
    "LABEL" zfrange"=.FLINE"
    If zfrange=zlrange Then scope='.FLINE .FLINE'
    Else Do;scope=.'FLINE .TLINE';"LABEL" zlrange"=.TLINE";End
    Do Forever
        "ISREDIT F ';'" rscxs scope;If rc/=0 Then Leave
        "(lin#)=LINENUM .ZCSR";"(line)=LINE .ZCSR";where='LINE'
        "LINE_BEFORE .ZCSR=NOTELINE (line)"
        col#=Verify(line,' ','N');pass_1=1
        If Translate(Substr(Strip(line),1,4))='END;' Then col#=col#+4
        Do While line/=''
            Parse VAR line linex ';' line;linex=Strip(linex)
            If Translate(linex)='END' Then col#=col#-4
            If col#>1 Then linex=Substr(' ',1,col#-1)linex
            where lin#"=(linex)"
            If pass_1 Then Do;pass_1=0;where='LINE_AFTER';End
            Else lin#=lin#+1
            If Translate(Word(linex,1))='DO' |,
               Translate(Word(linex,Words(linex)))='DO' Then,
                 col#=col#+4
        End
        If col#>1 Then pref=Substr(' ',1,col#-1);Else pref=
        linex=pref'*---------------------------------*'
        "LINE_AFTER" lin#"=NOTELINE (linex)"
    End
    "CURSOR="zfrange 0;"(status)=USER_STATE"
    Exit

/*--------------------------------------------------------------------*/
/* Take a copy of member (with changes) into a temporary file and then*/
/* apply the symbolic substitutions.                                  */
/*--------------------------------------------------------------------*/
copy_and_process:
    "(lev)=MACRO_LEVEL"
    If lev>1 Then Do
        Parse VAR parm# zfrange ',' zlrange ',' lcmd parm#
        Select
            When lcmd=xcmd'X' Then parm#='/X'
            When lcmd=xcmd'N' Then parm#='/NX'
            Otherwise parm#=
        End
    End
    Else Do
        "PROCESS RANGE C";"(cmd)=RANGE_CMD"
        If cmd='C' Then Do
           "(zfrange)=LINENUM .ZFRANGE";"(zlrange)=LINENUM .ZLRANGE"
        End
        Else Do;zfrange=1;"(zlrange)=LINENUM .ZLAST";End
    End
    Parse Upper VAR parm# parm#
    If Wordpos('/X',parm#)>0 Then Do
        rscxs='X';parm#=Delword(parm#,Wordpos('/X',parm#),1)
    End;Else If Wordpos('/NX',parm#)>0 Then Do
                 rscxs='NX';parm#=Delword(parm#,Wordpos('/NX',parm#),1)
             End;Else rscxs=
    If rscxs/='' Then "SNAP /TRSC"
    "USER_STATE=(status)";"(dsn)=DATASET";"(memb)=MEMBER";ztempf=$ztempf()
    xx=$Copymem(dsn'('memb')',ztempf)
    If xx=0 Then Do
        rscmacro='Y';Address ISPEXEC "VPUT ("rscvars") SHARED"
        Address ISPEXEC "EDIT DATASET('"ztempf"') MACRO("xcmd")"
        rscmacro=;Address ISPEXEC "VPUT (rscmacro) SHARED"
    End
    xx=$ztempf(ztempf,'/D')
    Exit
