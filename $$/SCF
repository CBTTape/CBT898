/******************************** REXX ********************************/
/**********************************************************************/
/* TRACE r                                                            */
/*--------------------------ooo000OOOO000ooo--------------------------*/
/*                                                                    */
/* SCF - S(DSF) C(OBOL) F(ormat):                                     */
/* Tidy uf COBOL listing under SDSF.                                  */
/*                                                                    */
/*--------------------------------------------------------------------*/
    Address ISPEXEC
    ARG parm#
    Parse SOURCE . . xcmd .
    If parm# /= "" Then Signal byp1
    "ISPEXEC CONTROL ERRORS RETURN"
    "ISPEXEC ISREDIT MACRO (parm#) NOPROCESS"
    If rc > 0 Then SIGNAL byp1

byp1:
    cactn = "RETURN"
/*  cactn = "CANCEL"                                                  */
    "ISPEXEC CONTROL ERRORS" cactn

ini1:
    Parse Upper VAR parm# parm1 parm2 .
    "ISREDIT (status) = USER_STATE"
    "ISREDIT RESET"

    "ISREDIT (last) = LINENUM .ZLAST"
    "ISREDIT F ' LINEID ' 3 FIRST"
    If rc = 0 Then "ISREDIT DELETE ALL NX .ZFIRST .ZCSR"
    "ISREDIT X ' LINEID ' 3 ALL"
    "ISREDIT X 'PP 5688-197 IBM COBOL ' ALL"
    "ISREDIT DELETE ALL X"
    "ISREDIT F ' DEFINED   CROSS-REFERENCE OF DATA NAMES ' 2 FIRST"
    "ISREDIT LABEL .ZCSR = .MARKF"
    "ISREDIT F 'LINEID  MESSAGE CODE  MESSAGE TEXT' FIRST"
    If rc = 0 Then Do
        "ISREDIT (ln) = LINENUM .ZCSR"
        "ISREDIT LABEL" ln-1 "= .MARKX"
        "ISREDIT LABEL" ln-2 "= .MARKT"
        range1 = '.MARKF .MARKT'
        range2 = '.ZFIRST .MARKX'
        "ISREDIT F 'PRINTED: ' NEXT"
        gc009 = 'Find errors on line numbers NOT sequence numbers.'
        "ISPEXEC SETMSG MSG(GC009)"
    End
    Else Do
        range1 = '.MARKF .ZLAST'
        range2 = '.ZFIRST .ZLAST'
    End
    "ISREDIT DELETE ALL" range1
    If parm1 /= 'NS' Then Do
        "ISREDIT C P'Â¬' ' ' 1 18 ALL" range2
        "ISREDIT C '                  ' '' 1 18 ALL" range2
    End
    "ISREDIT RESET"
    "ISREDIT X ALL" range2
    "ISREDIT F 'PROCEDURE DIVISION' 8 FIRST"
get_out:
    "ISREDIT USER_STATE = (status)"
    Exit

