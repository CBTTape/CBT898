/*--------------------------ooo00 REXX 00ooo--------------------------*/
/* SFU1: S/F Unload cust file #1                                      */
/*                                                                    */
/* Customise S/F supplied unload JCL for variable changes.            */
/*                                                                    */
/*--------------------------------------------------------------------*/
    ARG parm#;Address ISPEXEC;"CONTROL ERRORS RETURN";ima_macro=0
    If parm#/='' Then Signal byp1
    "ISREDIT MACRO (parm#) NOPROCESS"
    If rc=0 Then ima_macro=1

byp1:
/*  "CONTROL ERRORS CANCEL"                                           */

ini1:
    Address TSO "NEWSTACK"
    Queue '//*-----------------------------------------------------------------'
    Queue '//*  Use macro "SYMSUB /A" on the command line if any of the variabl'
    Queue '//*  are used in SYSIN instream data or used in non standard JCL'
    Queue '//*  format. The macro will apply variables to //SYSIN and any other'
    Queue '//*  location. (Will also handle recursive substitution.)'
    Queue '//*  Enter "SYMSUB ?" on the command line for help.'
    Queue '//*-----------------------------------------------------------------'
    Queue '//*'
    Queue '//EXECUTE   SET ADRDPARM=                         <- TOGGLE'
    Queue "//SIMULATE  SET ADRDPARM=',PARM=''TYPRUN=NORUN''' <- TOGGLE"
    Queue '//*'
    Queue '//  SET XXXXXXXX='Userid()'  HLQ data received into'
    Queue '//*'
    Queue '//  SET UUUU=SYSALLDA  (3380/3390/SYSDA) FOR THE DASD VOLUME'
    Queue "//  SET VVVVVV=......  DFDSS UNLOAD VOLUME"
    Queue "//  SET DOCVOL=MTDOCJ  PRODUCT'S CUST FILE + BOOKMANAGER"
    Queue "//  SET PPVOL=MTPP4J   TARGET LIBRARIES AND DDDEF'S"
    Queue "//  SET DLVOL=MTDL4J   DLIB LIBRARIES AND DDDEF'S"
    Queue "//  SET SMPVOL=MTSM2J  SMP/E LIBRARIES AND DDDEF'S"
    Queue "//  SET HFSVOL=MTHF1J  HFS LIBRARIES AND DDDEF'S"
    Queue '//  SET GSEX=GSEJ      GSE ORDER CYCLE LETTER'
    Queue '//  SET MVSSMPX=MVSSMPJ GSE ORDER CYCLE LETTER'
    Queue '//* SET CCCCCCCC=RECATALOG(CCCCCCCC)'
    Queue '//  SET CCCCCCCC=CATALOG'
    Address ISREDIT;"RESET"
    "(status)=USER_STATE";"(last)=LINENUM .ZLAST";"(caps)=CAPS";"CAPS=OFF"
    "(scan)=SCAN";"SCAN=OFF"
    "C 'DSN=XXXXXXXX' 'DSN=&&XXXXXXXX.' ALL"
    "C '=UUUU' '=&&UUUU' ALL"
    "C '=DOCVOL' '=&&DOCVOL' ALL"
    "C '=HFSVOL' '=&&HFSVOL' ALL"
    "C '=SMPVOL' '=&&SMPVOL' ALL"
    "C '=GSEX' '=&&GSEX.' ALL"
    "C '=MVSSMPX' '=&&MVSSMPX.' ALL"
    "C '=PPVOL' '=&&PPVOL' ALL"
    "C '=DLVOL' '=&&DLVOL' ALL"
    "C '=VVVVVV' '=&&VVVVVV' ALL"
    "X '//' 1 ALL"
    "C 'RECATALOG(CCCCCCCC)' '&&CCCCCCCC' ALL NX"
    "C 'DOCVOL'  '&&DOCVOL.'  ALL NX"
    "C 'HFSVOL'  '&&HFSVOL.'  ALL NX"
    "C 'SMPVOL'  '&&SMPVOL.'  ALL NX"
    "C 'GSEX'    '&&GSEX.'    ALL NX"
    "C 'MVSSMPX' '&&MVSSMPX.' ALL NX"
    "C 'PPVOL'   '&&PPVOL.'   ALL NX"
    "C 'DLVOL'   '&&DLVOL.'   ALL NX"
    "X '//' 1 ALL"
    "F '&&CCCCCCCC' ALL NX"
    "F '&&DOCVOL.'  ALL"
    "F '&&HFSVOL.'  ALL"
    "F '&&SMPVOL.'  ALL"
    "F '&&GSEX.'    ALL"
    "F '&&MVSSMPX.' ALL"
    "F '&&PPVOL.'   ALL"
    "F '&&DLVOL.'   ALL"
    "F '&&VVVVVV.'   ALL"
    "F '//*' 1 FIRST"
    Do Queued()
        Parse Pull line
        x=nl(line)
    End
    "CURSOR=1 0"
    "F '//*' 1 FIRST"
    Do Forever
        "F 'PGM=ADRDSSU'";If rc/=0 Then Leave
        "(line)=LINE .ZCSR"
        line=Strip(line)'&ADRDPARM'
        "LINE .ZCSR=(line)"
    End

Signal get_out


Get_out:
    "USER_STATE=(status)"
    Exit

nl: Parse Arg nl1,nli
    If nli='' Then "LINE_BEFORE .ZCSR=(nl1)"
    Else "LINE_BEFORE .ZCSR= NOTELINE (nl1)"
    Return 0

