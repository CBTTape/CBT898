%headline = ' DisAssembler '

.1. Disassemble data in memory.
!G
 The address at the top of the memory display screen (base plus offset) will be
 used as the anchor for the disassembled source which will be presented in a
 scrollable screen. You can scroll forward to the limit of memory's access,
 however, you can only scroll back to the base address passed to the disassembly
 routine.

 On entry to the routine, the top right hand corner will reflect the top of
 screen address in the invoking screen and displayed as base(displ). This will
!                                                       y          b
 be the base address in the disassembly screen.

 You may change the disassembler screen base by entering the new offset on the
 command line as either a decimal or HEX offest as follows:
=y          b
     D'xxxx - for new hex offset derived from the input decimal value
     X'xxxx - for new hex offset
=
 This will place the new displacement at the top of the screen.

 To change the entry base, return to the main display screen, change the base by
 repositioning the top displacement and reinvoke the disassembler.
 Alternatively you may scroll down, split lines if required and enter /NEWBASE
!                                                                     y
 (or /NB) to make the the top line displacement 0000. The base address will be
!    y  b                                       y   b
 adjusted accordingly.
 Note: - The top of screen will no longer be the start of the program.
!w       b
       - When you return to the storage display screen, you will be repositioned
!w       b
         to the new displacement. You may return to the original strt
         using the Home command.
!                  yb

 You can change the display presentation as follows:
     DIsp   - Toggle between HEX/DECimal DIsplacements in code.
!y          b                w  bw  b
     CHar   - Toggle between HEX/CHARacter DC displays.
!y          b                w  bw b
 The current setting is displayed on the right of the sub-heading line.
     *                             <<- Note ->>                            *
!    RG                            R           G                           Rb
=    Gb                                                                    Gb
       The  CHar  setting will affect disassembly display.  This may cause
!    Gb     y   b                                                          Gb
       issues if  there are  non-displayable  chacters in  character mode.
       For example,  a  X'01'  will be  displayed as  C'.'  which will not
!    Gb                 y r yb                        y ryb                Gb
       produce the right re-assembly from a  /PRINT  output.  It is highly
!    Gb                                      y     b                       Gb
       recommended that the CHar setting be toggled to HEX and only toggle
!    Gb                     y   b                      w  b                Gb
       to CHAR on temporary basis.  This issue will  also be found in  the
!    Gb   w   b                                                            Gb
       immediate type instructions.
!    Gbw        b                                                          Gb
     *                                                                     *
!    RG                                                                    Rb
=

 You can also place the cursor on the offset line (hence the field is
 unprotected for your convenience) and hit the /ZOOM key to present the standard
!                                              y     b
 display of that location.  Note that this display is a new lower layer and
 some commands may not be available. The END PF key will leave you positioned
!                                        y   b
 back in the disassembled display.

 A subjective decision is made on branch instructions based on the preceeding
 line and if that fails the line before that. If neither of the two preceeding
 lines influence the branch command, a branch on condition code will be
 displayed.

 Generally any invalid op-code will be highlighted as that. However, a very
 basic pattern recognition algorithm is used to identify data. Generally when
 code is interspersed with data it is an indication of data being erroneously
 interpreted as valid code. However, it is deemed to be better to mix code with
 data rather than present potential viable code as data.

 You can force a displayed line to be included/excluded in the disassembly logic
 by etering the following line or block line commands:
  Dn         Data tag the first nth. characters on the line, where n can have
!y         b                    yb                                 yb
             the value 1 to 5.  This will split the original line leaving the n
!                      yb   yb                                                y
             bytes on the original line and automatically invoke re-disassembly
             of ALL the following code.
!               w  b
  I  or II   Include/block include and try to disassemble (used to reverse C or
!y   b  y  b                                                               yb
             X commands).
!y             b
  C  or CC   Exclude/block exclude and tag as character data.
!y   b  y  b
  X  or XX   Exclude/block exclude and tag as HEX data.
!y   b  y  b

 Note: - You cannot carry block commands over multiple screens. If you start a
!w      b
         block command and scroll down only the first line will be converted and
         that line positioned at the top of the screen.

 If you use the data tag (Dn) option, all subsequent line commands will be
!                         y b
 ignored and any code tagged as data, after the split line, will be lost as this
 command will change the code structure.

 To facilitate identifying data which has been interpreted as valid code, z/OS
!                                                                         y
 instructions are displayed in yellow and Vector instructions are displayed in
!                              y     b    p     b
 pink.  If you know your program does not use either of these features you can
!p   b
 immediately convert them to data.
 Alternatively you may use a lower level of the translation matrix using the
 matrix indicator /Mn parameter where n can have the following values:
!                 y gb                gb
=g   wb
   1 - Basic non privileged instructions.
   2 - Basic instructions using priviledged instructions.
   3 - Option 2 above with Vector instructions.
   C - Current/default matrix (should be the latest numeric table).
=

 You may print your disassembled code (output to a temporary dataset).  As the
 only limit to disassembling memory is memory access itself, you will need to
 pass the number of lines to disassemble to the print command. The format of the
 command is:
  /PRINT nnnn where nnnn is the number of lines of code to disassemble.
!y            b     y    b
 The data will be presented in an temporary edited member for you to do with
 what you like.

.2. Default PF Key settings:
!G
 The following PF keys are set by SHOWSTOR.  They will not be available if
!                                 y       b
 SHOWDASM is not invoked by SHOWSTOR.  Not all keys are used by SHOWDASM.
!y       b                  y       b                           y       b

=     w b     g
    PF1   . . HELPSHOW
    PF13  . . /LOCK
    PF14  . . /ZOOM
    PF15  . . ..
    PF16  . . H
    PF17  . . RF
    PF18  . . REPEAT
=

.3. Commands summary:
!G
 The following commands are available:

=   y        b
    /MSG     - Redisplay the entry message.
    /NB | /NBASE | /NEWB | /NEWBASE
!y
             - Set line at top of screen as displacement 0000. The base will be
!                                                        w   b
               incremented accordingly.
    /PRINT nnnn
!y
             - Output the disassembly listing for nnnn lines. Use top right hand
               number as a physical display line reference.
    /QUIT    - Exit SHOWDASM and SHOWSTOR (for cross-memory mode).
!y           b      y       b    y       b
    /ZOOM    - Invoke another layer of SHOWSTOR with displacement storage as the
!                                      y       b
               base. Not all SHOWSTOR commands will be available.
!                            y       b
    CH       - Toggle define storage between character and HEX formats.  This
!y           b                               w        b    w  b
               format is also used in immediate commands (like AI, CLI, MVI, OI,
               NI etc..).
    D'nnnn   - Set Decimal displacement nnnn as top line of display (becomes
!y           b     w      b             w   b
               line number 1.
    DI       - Toggle between decimal and HEX formats in register displacements.
!y           b                w      b    w  b
                   Eg,
                     Decimal ->  LA  R1,12(R2)
!                    w      b    y      g y
                     HEX     ->  LA  R1,X'0C'(R2)
!                    w  b        y      g    y
    EXIT     - Exit SHOWDASM and SHOWSTOR.
!y           b      y       b    y       b
    IALL     - Initialise all settings to original values.
    TRACE    - Turn partial tracing on for debugging purposes.
    X'xxxx   - Set HEX displacement xxxx as top line of display (becomes line
!y           b     w  b             w   b
               number 1.
=

.4. Miscellaneous DisAssembler features.
!G
 You can invoke the disassembler as a function using the following REXX function
 format:
  code = SHOWDASM(cccc nnnn source) where:
!y                                 b
    code - Returned disassembled code in one string of 80 bytes per instruction.
!y       wb
    cccc{(offset)}
!y
         - Source format. The literal HEX or CHAR with an optional numeric
!y       wb                           y   b  y   b
           offset in brackets. The offset will adjust the base address (default
           is 0).
    nnnn - Number of disassembled lines to return into the variable code.
!y       wb                                                         y   b
           Use * to return all possible lines from the source.
!              yb
    source
!y
         - Literal or a variable containg the executable code in either
           character (non-displayable) or HEX (hex-readable) format as defined
           by the cccc parameter.
!                 y    b

 You may use macro DISASMDO on an edit/view of a dump listing with the Cnn line
!                  y        b                                          y   b
 or CC block command. The disassembled instructions will be inserted as
!   y  b
 NOTELINES into the dump. The first word on the first line will be used as the
 displacement into the program. Use this feature to change the base
 address(displacement) by overtyping word 1 with the new displacement.
 (Displacements, word one, on subsequent lines are ignored.)  You can also pass
 a parameter of SHIFT(nn) to start disassembly nn bytes into the line. Combine
!               y        b                     y b
 these last two features to branch around identified data imbedded within code
 using this macro.

 You may initiate diassembly of a program using the program SLMODR (Show Load
!                                                           y      byb   yb
 MODule Rexx) which interfaces with the SHOWSTOR function and the subsequent use
!y  b   yb                              y        b
 of the /DISAM command. The format of the command is:
!       y      b
    TSO SLMODR program
!y
        - or -
    TSO %SLM 'dataset(member)'
!y
    Where:
     Program - Program name of module either in LPA, linklist or ISPLLIB
!y           b
               concatenation (not picked up from LIBDEFs).
     dataset(member)
!y
             - Self explanatory.


.3. SHOWSTOR invocation.
!G
 This routine is used by SHOWSTOR to disassemble code in memory.  When called by
!                        y       b
 SHOWSTOR, the following positional parameters are required:
!y       b
=    wb
   ADRS_O
!y
     - Original base address.
   OFFS_O
!y
     - Original offset from the base address.
   DADSN
!y
     - DSNAME of disassembly matrix member SHOWDA$C which is a xref of code vs
!    wb                                    y       b
       operation.
   SYSAUTH.ASID
!y
     - Address Space Id of another address space that is to be scrutinised.
   AUTHXMEM
!y
     - Location(name) of module that issues cross-memory calls and returns data
       for sysauth.asid navigations.
!          y           b
   SLM_MSG
!y
     - Message passed by SHOWSTOR. Eg. Length of module supplied by the SLM
!                        y       b
       command.
=


                             (End of Instructions.)
!G
