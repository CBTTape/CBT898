/******************************** REXX ********************************/
/**********************************************************************/
/* TRACE r                                                            */
/*--------------------------ooo000OOOO000ooo--------------------------*/
/*                                                                    */
/* SMA:                                                               */
/*                                                                    */
/* ShowMvs Analysis.                                                  */
/*                                                                    */
/* Invoke routine with '?' for further details. (For the converted,   */
/* use "(TSO %)BR SM ?" (omit bracket contents if in command table)). */
/*                                                                    */
/* Packaging:                                                         */
/*   REXX:                                                            */
/*    BR      o Display help in browse session. If not available,     */
/*              uses SAY statements.                                  */
/*    SMA     - This driver                                           */
/*    SMAXS   - Exit                                                  */
/*    SMAXU   - User exit. Not yet developed.                         */
/*    SMA$    - Paragraph headers/codes                               */
/*              date 7 days ago.                                      */
/*    $DATEMAN- Date manipulation routine. Required to calculate      */
/*    $DSNSEL o Dataset selection processor.                          */
/*    $DSLIST o Catalog interrogator using dataset masking.           */
/*    $Whoami o User identifier (inserts "there" if not available).   */
/*   Messages:                                                        */
/*    GC00    - General Comments member.                              */
/*   Panels:                                                          */
/*    SMAP    - Table display.                                        */
/*    $DSNSELP- Dataset selection panel.                              */
/*   Load modules:                                                    */
/*    SHOWMVS - Off the CBT tape.                                     */
/*                                                                    */
/*--------------------------------------------------------------------*/
    Address ISPEXEC
    "CONTROL ERRORS RETURN"

    Parse Upper ARG parm#
    Parse VAR parm# parm1 parm2 parm3
    Parse SOURCE . . xcmd .

    zedsmsg=

    matrix=Sma$()
/* Valid commands. "Invalid" commands will be passed to system exit   */
    valX='S/'                               /* Valid eXtract command  */
    valC='12SC/M'                           /* Valid Compare command  */
    ll=77                                   /* Line length for help   */
    dd=-7                                   /* Day diff for /C option */
    j=0                                     /* Subscript              */
    sort='ORIGSEQ'

    spref=Sysvar(syspref);If spref='' Then spref=Userid()
    llq2='OD'$Dateman('REV',$Dateman('E-N',Date('E'),,dd),2,'D')
    smotmp=spref".SHOWMVS"
    smofl=spref".SHOWMVS.OD"$Dateman('REV',Date('E'),2,'D')

    If parm1='?' Then Signal Help_me
/*
    If Substr(parm1,1,2)='/O' | Substr(parm2,1,2)='/O' Then Signal offload
*/
    If Substr(parm1,1,2)='/O' | Substr(parm2,1,2)='/O' Then Do
        Call offload
        parm1="'"smofl"'"
    End
    If Substr(parm1,1,1)/='/' & Sysdsn(parm1)='OK' Then Do
        sm_dsn=Strip(parm1,,"'");smotmp=Strip(parm1,,"'")
        parm1=parm2
    End
    Else sm_dsn=

    panel='SMAP';table=

    syntaxact='xx=""'
    retlab = error_off_00
    Signal on Syntax Name syntaxerr
    x=br()
    h_cmd='%BR' xcmd '?'
    Signal byp_00
error_off_00:
    h_cmd=xcmd '?'
byp_00:
    Signal off Syntax

    Call build_table
    If Substr(parm1,1,2)='/C' | Substr(parm2,1,2)='/C' Then Signal compare

    If parm1/='' Then leave_on_end=1
    Else Do
        leave_on_end=0
        zedlmsg='Dataset #1 is hlq for extracted sub-set data. "Keep=Y" to',
              'keep or "=N" to delete after use.',
              'Enter "?" on nthe command line for assistance.'
        oper='X'
    End
    offload1=smotmp;offload2=N;linei.0=
    If parm1/='' Then Do;msub=1;Signal con1;End

/*--------------------------------------------------------------------*/
/* Extract procedure.                                                 */
/*--------------------------------------------------------------------*/
extract_proc:
    xx=process_screen(oper)
    If xx=8 Then Signal exi1
    If parm1='ALL' Then Do;sel='S';msub=1;Signal con1b;End
    If Word(parm1,1)='L' Then Do
        Interpret sort'=Word(parm1,2)'
        "TBSCAN &TABLE ARGLIST("sort") CONDLIST(GE)"
        Signal extract_proc
    End
    If Word(parm1,1)='S' Then Do
        Parse Var parm1 sel parm1
        msub=1;Signal con1a
    End
    zedlmsg=

    msub = ztdsels
    Signal con1

mlt1:
    "ISPEXEC TBDISPL &TABLE"

con1:
    #sel=
    If sel/='' Then parm1=code
con1a:
    If parm1='' | Index(matrix,'~'parm1)=0 Then Do
        zedlmsg="'"parm1"' not a valid choice...."
        If leave_on_end Then Do
            Say zedlmsg
            Signal exi1
        End
        "ISPEXEC CONTROL DISPLAY SAVE"
        msub=0;Signal nxt1
    End
con1b:
    "ISPEXEC CONTROL DISPLAY SAVE"
    If linei.0='' Then Call get_showmvs
    bext=Verify(sel,valx,'M')
    smotmp=offload1'.'parm1
    Call display_extract
    If bext Then Nop
    Else xx=smaxs(sel,smotmp)
    If leave_on_end Then Signal exi1
    If offload2='N' Then Do
        x=Msg('Off');Address TSO "DELETE '"smotmp"'";x=Msg(x)
    End

nxt1:
    "ISPEXEC CONTROL DISPLAY RESTORE"
    parm1=;msub=msub-1
    If msub < 1 Then Signal extract_proc
    Else Signal mlt1
/*--------------------------------------------------------------------*/
exi1:
    "TBEND &TABLE"
    Exit

/*--------------------------------------------------------------------*/
/* Enter 2 offloaded dataset names and make comparisons useing SuperC */
/* against extracts.                                                  */
/*--------------------------------------------------------------------*/
compare:
    zedlmsg='Dataset #2 is 2nd. offload to be compared with and is required.',
          'Enter "?" on nthe command line for assistance.'
    offload1=sm_dsn;oper='C'
    offload2=Substr(offload1,1,Lastpos('.',offload1)) || llq2
    If offload2/='' Then Do
        csr1='OFFLOAD2'
        csrp1=Lastpos('.',offload2)+3
    End
    Else Do
        csr1='OFFLOAD1'
        csrp1=
    End
    parm1=

Compare_proc:
    xx=process_screen(oper)
    If xx=8 Then Signal exi2
    csrp1=;csr1=;zedlmsg=
    If sel/=2 Then,
        If Sysdsn("'"offload1"'")/='OK' Then Do
            zedlmsg=Sysdsn("'"offload1"'")
            csr1='OFFLOAD1'
            Signal Compare_proc
        End
    If sel/=1 Then,
        If Sysdsn("'"offload2"'")/='OK' Then Do
            zedlmsg=Sysdsn("'"offload2"'")
            csr1='OFFLOAD2'
            Signal Compare_proc
        End

    msub = ztdsels
    Signal con2

mlt2:
    "ISPEXEC TBDISPL &TABLE"

con2:
    "ISPEXEC CONTROL DISPLAY SAVE"
    #sel=sel;j=0;lineo.=
    If sel/='' Then parm1=code
    If parm1='' | Index(matrix,'~'parm1)=0 Then Do
        zedlmsg="'"parm1"' not a valid choice...."
        msub=0;Signal nxt2
    End

    If sel/=2 Then Do
        If sel=1 Then bext=1;Else bext=0
        sm_dsn=offload1;Call get_showmvs
        extemp1=offload1'.EXOFF1';smotmp=extemp1
        If Verify(sel,valC,'N') Then Do;##sel=#sel;#sel='M';End
        Call display_extract
        If Verify(sel,valC,'N') Then #sel=##sel
    End
    If sel=1 Then Signal nxt2
    sm_dsn=offload2;Call get_showmvs
    extemp2=offload2'.EXOFF2';smotmp=extemp2
    If #sel='M' Then sel=2
    If sel=2 Then bext=1;ELse bext=0
    If Verify(sel,valC,'N') Then #sel='M'
    Call display_extract
    If sel=2 Then Signal nxt2
    If Verify(sel,valC,'M') Then Call superC
    Else xx=smaxs(sel,smotmp)

nxt2:
    "ISPEXEC CONTROL DISPLAY RESTORE"
    parm1=;msub=msub-1
    If msub < 1 Then Signal Compare_proc
    Else Signal mlt2
/*--------------------------------------------------------------------*/
exi2:
    "TBEND &TABLE"
    #msg=Msg('Off')
    Address TSO "DELETE '"extemp1"'"
    Address TSO "DELETE '"extemp2"'"

    Exit

/*--------------------------------------------------------------------*/
/* Navigate table and accept control data                             */
/*--------------------------------------------------------------------*/
process_screen: Arg s_oper
    "VGET (zpf01) ASIS";spf01=zpf01;zpf01 ='HELPSMA';"VPUT (zpf01) ASIS"
    If spf01='HELPSMA' Then spf01='HELP'
scr1m: "SETMSG MSG(ISRZ001)"
scr1a:
    zcmd=;sel=;parm1=
    "TBDISPL &TABLE PANEL(&PANEL) CURSOR(&CSR1) CSRPOS(&CSRP1)"
    rc1=rc
    zpf01 = spf01;"VPUT (zpf01) ASIS"
    If rc1>4 Then Return rc1
    Parse VAR zcmd cmd parm2
    If cmd='TRACE' Then Do
        #tr=Trace()
        If Index('NO',#tr)>0 Then #tr=Trace('R')
        Else                      #tr=Trace('O')
        zedlmsg='Trace toggled...'
        Signal scr1m
    End
    If cmd='?' | cmd='HELPSMA' Then Do
        Address TSO h_cmd
        parm1=;Signal scr1a
    End
    If cmd='SORT' Then Do
        Select
            When Substr(parm2,1,1)='D' Then sort='DESC'
            When Substr(parm2,1,1)='C' Then sort='CODE'
            Otherwise                       sort='ORIGSEQ'
        End
        "TBSORT &TABLE FIELDS("sort",C,A)"
        "TBTOP &TABLE"
        gcoo9='Sorted in "'sort'" order.';Signal scr1m
    End
    If cmd='FLIP' & s_oper='C' Then Do
        xx=offload1
        offload1=offload2;Offlod1=xx
        gcoo9='Datasets toggled.';Signal scr1m
    End
    ret_scr1=0;zedlmsg=
    If Index(offload1,'*')>0 Then Do
        xx=$dsnsel(offload1,'NONVSAM',,,'R')
        If xx/='Error' Then offload1=xx
        ret_scr1=1
        gcoo9='Dataset #1 set. '
    End
    If Index(offload2,'*')>0 Then Do
        xx=$dsnsel(offload2,'NONVSAM',,,'R')
        If xx/='Error' Then offload2=xx
        ret_scr1=1
        gcoo9=zedlmsg'Dataset #2 set. '
    End
    If ret_scr1 Then Signal scr1m
    If Word(parm1,1)='L' Then Do
        Interpret sort'=Word(parm1,2)'
        "TBSCAN &TABLE ARGLIST("sort") CONDLIST(GE)"
        Signal scr1m
    End
    If zcmd/='' Then parm1=zcmd

    Return rc

/*--------------------------------------------------------------------*/
/* Get SHOWMVS date from either the command or an offloaded dataset   */
/*--------------------------------------------------------------------*/
get_showmvs:
    If sm_dsn='' Then Signal full_report
    Address TSO "ALLOC F(SHOWXXX) DA('"sm_dsn"') SHR REU"
    Address TSO "EXECIO * DISKR SHOWXXX (STEM linei. FINIS)"
    Address TSO "FREE  F(SHOWXXX)"
    Return 0
full_report:
    linei.=
    x=Outtrap('linei.',,'NOCONCAT')
    Address TSO "TSOEXEC CALL *(SHOWMVS) 'PUTLINE'"
    If rc/=0 Then Address TSO "CALL *(SHOWMVS) 'PUTLINE'"
    x=Outtrap('Off')
    Return 0

/*--------------------------------------------------------------------*/
/* Build an ISPF table of all the extract types permitted.            */
/*--------------------------------------------------------------------*/
build_table:
    If table/='' Then Return
    table='SHOWMVS'
    "TBOPEN &TABLE NOWRITE SHARE"
    origseq=0
    If rc/=0 Then Do
        "TBCREATE &TABLE KEYS(ORIGSEQ) NAMES(CODE,DESC) NOWRITE",
            "REPLACE SHARE"
        #tr=Trace('O')
        xxxx=matrix
        Do While xxxx/='~'
            Parse VAR xxxx '~' code desc '~' xxxx
            desc=Strip(desc)
            origseq=origseq+1
            "TBADD &TABLE"
        End
        #tr=Trace(#tr)
    End
    "TBTOP &TABLE"
    Return 0

/*--------------------------------------------------------------------*/
/* Use the heading from the ispf table for a match with the SHOWMVS   */
/* data and output to a temporary dataset.                            */
/*--------------------------------------------------------------------*/
display_extract:
    If parm1='ALL' Then Do
        stem='linei.'
        Signal output_sub_set
    End
    stem='lineo.'
    Interpret "Parse VAR matrix '~"parm1"' text '~' ."
    text=Strip(text)
    oblock=1
    #tr=Trace('O')
    If #sel/='M' Then Do;j=0;lineo.=;End
    Else Do
        sep=Copies('*',80)
        If j=0 Then Do
            j=j+1;lineo.j=sep
            j=j+1;lineo.j=Centre(' 'offload1' ',80,'*')
            j=j+1;lineo.j=sep
        End
        Else Do
            j=j+1;lineo.j=sep
            j=j+1;lineo.j=Centre(' 'offload2' ',80,'*')
            j=j+1;lineo.j=sep
        End
    End
    Do i=1 To linei.0
        If oblock Then Do
            If Index(linei.i,text,1)=0 Then Iterate
            oblock=0;j=j+1;lineo.j=linei.i;Iterate
        End
        If Substr(linei.i,1,1)/=' ' Then Leave
        j=j+1;lineo.j=linei.i
    End
    #tr=Trace(#tr)
    lineo.0=j
output_sub_set:
    If lineo.0=0 Then Do
        zedlmsg='No data found for selection.'
        "SETMSG MSG(ISRZ001)"
        Return 4
    End
    #msg=Msg('Off')
    Address TSO "DELETE '"smotmp"'"
    Address TSO "ALLOC F(SHOWXXX) DA('"smotmp"') NEW CATALOG",
            "DSORG(PS) RECFM(V B) LRECL(133) BLKSIZE(0) UNIT(SYSALLDA)",
            "SPACE(15,15) TRACKS RELEASE"
    Address TSO "EXECIO * DISKW SHOWXXX (STEM" stem "FINIS"
    If bext Then Do
        "LMINIT DATAID(DATAID) DDNAME(SHOWXXX)"
        "BROWSE DATAID(&DATAID)"
        "LMFREE DATAID(&DATAID)"
    End
    Address TSO "FREE DD(SHOWXXX)"
    #msg=Msg(#msg)
    Return 0

/*--------------------------------------------------------------------*/
/* Offload the data into a dataset passed as the first parameter or   */
/* allocate a dataset with the date in the llq.                       */
/*--------------------------------------------------------------------*/
offload:
    If Substr(parm1,1,2)/='/O' Then smotmp=parm1
    Else smotmp=smofl
    If Sysdsn("'"smotmp"'")/='OK' Then,
        Address TSO "ALLOC F(SHOWXXX) DA('"smotmp"') NEW CATALOG",
            "DSORG(PS) RECFM(V B) LRECL(133) BLKSIZE(0) UNIT(SYSALLDA)",
            "SPACE(15,15) TRACKS RELEASE"
    Else Address TSO "ALLOC F(SHOWXXX) DA('"smotmp"') SHR REU"
    Call full_report
    Address TSO "EXECIO * DISKW SHOWXXX (STEM linei. FINIS"
    "LMINIT DATAID(DATAID) DDNAME(SHOWXXX)"
    "BROWSE DATAID(&DATAID)"
    "LMFREE DATAID(&DATAID)"
    Address TSO "FREE DD(SHOWXXX)"
/*  Exit                                                              */
    Return 0

/*--------------------------------------------------------------------*/
/* Invoke SuperC. Have to hard code the residence of module ISRSUPC.  */
/*--------------------------------------------------------------------*/
superC:
    #adr=Address()
    Address TSO
    "ALLOC F(NEWDD) DSN('"extemp1"') SHR REU"
    "ALLOC F(OLDDD) DSN('"extemp2"') SHR REU"
    "ISPEXEC VGET ZTEMPF"
    If Sysdsn("'"ztempf"'") /= 'OK' Then Do
        ztempf = spref'.SHOWMVS.EXTCOMP.OUTLIST'
        If Sysdsn(ztempf) /= 'OK' Then,
            Address TSO "ALLOC DA('"ztempf"') NEW CATALOG TRACKS",
                        "UNIT(SYSALLDA) SPACE(15,15)"
    End
    "ALLOC F(OUTDD) DSN('"ztempf"') SHR REU"
    sysin = spref'.'userid'.CHANGE.TEMP.SYSIN'
    "ALLOC F(SYSIN) DSN('"sysin"') NEW CATALOG TRACKS",
                        "UNIT(SYSALLDA) SPACE(1,0) REU"
    "CALL *(ISRSUPC) 'DELTAL,LINECMP'"               /* Call Supre-CE */
    "ISPEXEC LMINIT DATAID(DATAID) DDNAME(OUTDD)"
    "ISPEXEC VIEW DATAID(&DATAID)"
    "ISPEXEC LMFREE DATAID(&DATAID)"
    "FREE  F(NEWDD,OLDDD,OUTDD,SYSIN)"
    xx=Msg('Off')
    "DELETE '"ZTEMPF"'"
    "DELETE '"sysin"'"
    xx=Msg(xx)
    Address(#adr)

    Return 0

/*--------------------------------------------------------------------*/
/* Help facility using instream doco.                                 */
/*--------------------------------------------------------------------*/
Help_me:
n_st = mark(2)                              /* Mark next line         */
/*

   Hello &CNAME..


   SMA: ShowMvs Analyser.  Routine to manipulate the output from
        SHOWMVS.

   The table displayed gives codes to the paragraph headings output
   from SHOWMVS. This table may not be comprehensive for sites using
   facilities not normally used and matrix allocation member SMA$ may
   need to be modified.
   Try to keep the paragraphs on SHOWMVS output order to permit future
   multi selection enhancements.  You can customise your own copy of
   "SMA$" to codes more meaningful to you.  Place in your personal
   dataset concatenated above site defaults.
   ("SMA$" can be used against a viewed output from SHOWMVS to
   highlight missing entries.)

   Positional Parameters to SMA:
     If parameter 1 is a valid dataset name (eg. ISPF opt 3.4):
     - with no other parameters will assume that the dataset is a
       previously 'offloaded' SHOWMVS output.
     - "/O" will offload the full output into the dataset. Assumes
       dataset attributes are compatible with the SHOWMVS output
       format.
     - "/C" will interpret dataset is the 1st. offloaded dataset that
       is to be used on an offload compare of sub-componts. As only 1
       dataset parameter is permitted, the 2nd. dataset will default
       to &DD. days from today. The cursor will be placed on the date
       portion of the llq for easy update, eg. "&LLQ2.".

     If parameter 1 is NOT a valid dataset name:
     - with no other parameters will store the output into stem
       variables and the default output extract dataset will be prefixed
       by &SMOTMP. with the code appended.
       Indicate in the 'Keep' field whether to keep individual sub-set
       extracts or delete after use.
       Note, the default is 'N'. During later invocations, kept sub-sets
       may be unintentionally deleted.
     - "/O" will offload the full output into the following dataset,
            ---> &SMOFL..
     - "/C" will generate unpredictable dataset names.

   Notes:-
     1. Datasets should be fully qualified and unquoted.
     2. If you wildcard a dataset (has a '*' in it) a dataset selection
        list will be presented.
     3. The same panel is used with the 2nd. dataset enabled as
        required.

   Panel commands:
     ALL   - On the extract panel will do as it says. This option
             is not available/practical under the compare function.
             Same as the "/O" parameter but to the temp dataset,
               ---> &SMOTMP..ALL.
     FLIP  - Only applicable under the compare function. Will toggle
             dataset #1 with #2. (Anything to save a few keystrokes..)
     L xx  - Locate xx. Where xx can be any prefix of "code" or
             "description". Not applicable if not sorted.
     S xx  - Select xx. Where xx can be any valid "code""
     SORT  - Sort the table display. Sub-parameters:
           C - Sort on Code.
           D - Sort on Description.
             - No parameter, sort on original paragraph sequence.

     TRACE - Toggle trace on/off for debugging.
     ?     - This help, but you already know this, don't you &CNAME..

   Panel selections (extract panel):
     S  - Will extract the sub-set from the explicit or implicit
          SHOWMVS output into the temporary dataset listed in
          dataset #1 field.
     /  - Same as "S".
     *  - Any other non blank character will extract the sub-set from
          the explicit or implicit SHOWMVS output into the temporary
          dataset listed in dataset #1 field and pass the details onto
          program "SMAXS" which in turn should process all system
          selections and any undefined selections pass onto a user
          defined exit SMAXU. Sample selections Y (sYstem) and U
          (User) exits have been provided.

   Panel selections (compare panel):
     1  - Against a code to dispay the sub-set for dataset #1.
     2  - Against a code to dispay the sub-set for dataset #2.
     M  - This will merge the two sub-sets into one with seperator
          lines.
     S  - Will extract the sub-set from the respective datasets and
          execute SuperC.
     /  - Same as "S".
     *  - Any other non blank character will extract the two sub-sets,
          merge them as per the 'M' selection (with bseperators)
          and pass the merged dataset to SMAXS and SMAXU if applicable.

   Note, while multiple panel selections are permitted, only the first
   one will be processed.

*/
n_en = mark(-2)                             /* Mark prev 2 line       */
    chgchar='&';cname='there'
    Signal on Syntax Name error_off_1
    cname=$Whoami('C')
error_off_1:
    Signal Off Syntax

    x=nl_h('*'Centre('ooo000OOOO000ooo',ll,'-')'*')
    Do i=n_st To n_en
        line=Sourceline(i)
        Do While Index(line,chgchar)>0
            Interpret "Parse VAR line p1 '"chgchar"' var '.' p2"
            Interpret 'line=p1 || 'var' || p2'
        End
        x=nl_h('*'Substr(line,1,ll)'*')
    End
    x=nl_h('*'Copies('-',ll)'*')

    Exit

nl_h:Parse Arg n#;Say n#;Return 0
Mark: Arg diff;If Datatype(diff)/='NUM' Then diff=1;Return sigl+diff
syntaxerr:Interpret syntaxact;Signal Value retlab
