/******************************** REXX ********************************/
CSDA:csda_ver='1.17'                        /* CSDA version           */
/*--------------------------ooo000OOOO000ooo--------------------------*/
/*  Sort comparer: $SORT vs SYNCSORT                                  */
/*                                                                    */
/*  Break even is somwhere between 100-150 (8 byte records).          */
/*  200 starts getting longer.                                        */
/*  No    $SORT    SYNCSORT                                           */
/*  ---   -----    --------                                           */
/*  100       2           3                                           */
/*  150       4           3                                           */
/*  200       8           3                                           */
/*  300      18           3                                           */
/*  600      71           3                                           */
/*  700      97           3                                           */
/*--------------------------------------------------------------------*/
    Parse SOURCE . xenv xcmd xdd xdsn .
    Arg parm#;Address ISPEXEC;"CONTROL ERRORS RETURN";ima_macro=0
    If parm#/='' Then Signal byp1
    "ISREDIT MACRO (parm#) NOPROCESS";If rc=0 Then ima_macro=1

byp1:
/*  "CONTROL ERRORS CANCEL"                                           */

start=200
no2report=1
Address ISREDIT;"(status)=USER_STATE";RESET
ispf='nACTIVE'
ispf='ACTIVE'
time_s=1
    zzz=
    Do i=1000 To 1 by -1
        zzz=zzz Right(i,8,'0')
    End
    Do i=start To start+no2report
        xxx=Subword(zzz,1,start)
        x=nl('Start $sort' Time());t1=Time('s')
        yyy=$sort(xxx);t2=Time('s')
        x=nl('End   $sort' Time() '('t2-t1'secs)' Words(xxx))
        x=nl(yyy)
        x=nl('Start Sync' Time());t1=Time('s')
        yyy=sync_sort(xxx);t2=Time('s')
        x=nl('End   $sort' Time() '('t2-t1'secs)' Words(xxx))
        x=nl(yyy)
    End
    "USER_STATE=(status)"
    Exit
        If Words(xxx)>isort_limit Then xxx=sync_sort(xxx)
        Else xxx=$sort(xxx)
nl:Parse Arg nl1
    If ispf='ACTIVE' Then "LINE_BEFORE 2=NOTELINE (nl1)";ELse Say nl1
    Return 0
/*nl:Parse Arg nl1;"LINE_BEFORE .ZFIRST=NOTELINE (nl1)";Return 0      */
/*--------------------------------------------------------------------*/
/* Sort using an ISPF file.                                           */
/*--------------------------------------------------------------------*/
sync_sort: Arg yyyy
    i=0;Do While yyyy/='';Parse VAR yyyy xx yyyy;i=i+1;v.i=xx;End
    shlq=Sysvar(Syspref)'.'Userid()'.CSDASORT'
    sortin=shlq'.SORTIN';sortout=shlq'.SORTOU';sysin=shlq'.SYSIN'
    sysout=shlq'.SYSOUT'
    Address TSO;#m=Msg('Off')
    "FREE F(SORTIN,SORTOUT,SYSIN,SORTWK01)"
/*  "FREE F(SORTLIB)"                                                 */
    "DELETE '"sortin"'";"DELETE '"sortout"'";"DELETE '"sysin"'"
    "DELETE '"sysout"'"
    "ALLOC F(SORTIN) DA('"sortin"') CATALOG UNIT(SYSALLDA) NEW REU",
       "SPACE(10,10) CYLINDERS RECFM(F B) LRECL(8) BLKSIZE(0) DSORG(PS)"
    "ALLOC F(SORTOUT) DA('"sortout"') CATALOG NEW REU LIKE('"sortin"')"
    "ALLOC F(SYSIN) DA('"sysin"') CATALOG UNIT(SYSALLDA) DSORG(PS)",
       "SPACE(1) TRACKS RECFM(F) LRECL(80) NEW REU"
    "ALLOC F(SYSOUT) DA('"sysout"') CATALOG UNIT(SYSALLDA) DSORG(PS)",
       "SPACE(1,1) TRACKS RECFM(F) LRECL(80) NEW REU"
    "EXECIO * DISKW SORTIN (STEM v. FINIS)"
    "NEWSTACK";Queue ' SORT FIELDS=(1,8,CH,A)';Queue ''
    "EXECIO * DISKW SYSIN (FINIS"
    "ALLOC FILE(SORTWK01) UNIT(SYSDA) SPACE(5,5) CYLINDERS"
/*  "ALLOC FILE(SORTLIB)  DA('DFSORT.SORTLIB') SHR REU"               */
    Address ISPEXEC "SELECT PGM(SORT)"
    sort_rc=rc
    If time_s & sort_rc=0 Then Do
        Address ISREDIT
        x=nl('...... Syncsort used.');x=nl(' ')
        Address
    End
    "EXECIO * DISKR SORTOUT (STEM v. FINIS)"
    "FREE F(SORTIN,SORTOUT,SYSIN,SORTWK01)"
/*  "FREE F(SORTLIB)"                                                 */
    "DELETE '"sortin"'";"DELETE '"sortout"'";"DELETE '"sysin"'"
    "DELETE '"sysout"'"
    If sort_rc/=0 Then Return $sort(xxx)
    yyyy=;Do i=1 To v.0;yyyy=yyyy v.i;End
    Return yyyy

/*--------------------------------------------------------------------*/
/* First time execution.                                              */
/*--------------------------------------------------------------------*/
x_first_time:
    #tr=Trace('o')
    first_time=0;dynav=validtypes;shadv=;Call build_panel
    noitems=Words(validtypes)%3
    dynav=;xxx=validtypes;ent_len=18
    Do while xxx/=''
        Parse VAR xxx w1 w2 w3 xxx
        yy=Verify(w2,'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789','N')
        w2=Substr(w2,1,ent_len-2)
        dynav=dynav||Right(w1,2) w2
        shadv=shadv||'yy 'Copies('w',yy-1)Copies('t',ent_len-(yy+1))
    End
    x=Trace(#tr)
    Return 0
/*--------------------------------------------------------------------*/
/* Allocate panel                                                     */
/*--------------------------------------------------------------------*/
build_panel:
    u=Sysvar(Sysuid);p=Sysvar(Syspref);If u/=p&p/='' Then u=p'.'u;hlq=u
    csdadsn=hlq'.$$$TEMP.CSDPANEL'
    Address TSO;#msg=Msg('Off');"DELETE '"csdadsn"'"
    "ALLOC DA('"csdadsn"') NEW CATALOG TRACK SPACE(1,1) DSORG(PO) LRECL(80)",
       "BLKSIZE(0) UNIT(SYSALLDA) DIR(1) RECFM(F B) REU"
    "FREE DA('"csdadsn"')";"NEWSTACK";Call make_mem_1;#tr=Trace('o')
    Do i=n_st To n_en;Queue Sourceline(i);End;Queue '';x=Trace(#tr)
    "ALLOC F("dd") DA('"csdadsn"("xcmd"P)') SHR REU"
    "EXECIO * DISKW "dd" (FINIS";"FREE  F("dd")"
    Address
    Address ISPEXEC "LIBDEF ISPPLIB DATASET ID('&CSDADSN') STACK"
    x=Msg(#msg)
    Return 0

/*--------------------------------------------------------------------*/
/* Set up atch jcl and present under viewer.                          */
/*--------------------------------------------------------------------*/
set_up_for_batch:
    parm1=' ISPSTART CMD(%CSDABTCH /BE /O'  ;If cicsv=13 Then parm1=parm1 '/13'
    If xontally Then parm1=parm1 '/XT'
    acct=$alkacct()
    Address "NEWSTACK"
    Queue '//'Substr(Userid()'AB',1,8) 'JOB ('acct'),'
    Queue "//   'CSDA-Batch',MSGCLASS=Z,REGION=0M,"
    Queue '//   CLASS=A,MSGLEVEL=(1,1),TIME=1440,NOTIFY=&SYSUID'
    Queue '/*JOBPARM ROOM=ZTS,LINES=9999'
    Queue '//*'
    Queue '//*----------------------------------------------------------------*'
    Queue '//* Modify as required and manually submit job.                    *'
    Queue '//*----------------------------------------------------------------*'
    Queue '//*'
    Queue '//TSEP1 EXEC PGM=IEBUPDTE,PARM=NEW'
    Queue '//*'
    Queue '//SYSPRINT DD SYSOUT=*'
    Queue '//SYSUT2   DD DSN=&&CLISTS,'
    Queue '//       DISP=(NEW,PASS),UNIT=SYSDA,SPACE=(TRK,(2,1,1)),'
    Queue '//       DCB=(RECFM=FB,LRECL=80,BLKSIZE=6160)'
    Queue '//SYSIN  DD DATA,DLM=$$'
    Queue './ ADD NAME=CSDABTCH'
    Queue '/* REXX */'
    Queue '   Arg parm#'
    Queue '   csd="''"'dataset'"''"'
    Queue '   Address ISPEXEC "VIEW DATASET(&CSD) MACRO(CSDA) PARM(parm#)"'
    Queue '   Exit'
    Queue './ ENDUP'
    Queue '$$'
    Queue '//*----------------------------------------------------------------*'
    Queue '//TSEP2    EXEC PGM=IKJEFT01,DYNAMNBR=65'
    Queue '//SYSPROC  DD DISP=(OLD,DELETE),DSN=&&CLISTS'
    Queue '//         DD DISP=SHR,DSN=AKOS.$$'
    Queue '//*----------------------------------------------------------------*'
    Queue '//* Batch ISPF environment.                                        *'
    Queue '//* (Hit me with command "BE" for site specifics. Use "BE *" to add*'
    Queue "//*  my datasets before system's.)                                 *"
    Queue '//* (Use "BE ALL" to add all then customise.)                      *'
    Queue '//*----------------------------------------------------------------*'
    Call batchisp 'NJ NS NU NI QUEUE CONC(SYSEXEC,SYSPROC)'
/*
    Queue '//ISPPLIB  DD  DISP=SHR,DSN=ISP.SISPPENU'
    Queue '//ISPSLIB  DD  DISP=SHR,DSN=ISP.SISPSENU'
    Queue '//ISPMLIB  DD  DISP=SHR,DSN=ISP.SISPMENU'
    Queue '//ISPTLIB  DD  DISP=SHR,DSN=ISP.SISPTENU'
    Queue '//ISPLLIB  DD  DISP=SHR,DSN=AKOS.$LOAD'
    Queue '//ISPPROF  DD  DSN=&ISPPROF,SPACE=(TRK,(10,,10)),UNIT=SYSDA,'
    Queue '//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)'
    Queue '//ISPLOG   DD DUMMY'
*/
    Queue '//ISPLIST  DD DUMMY'
    Queue '//SYSTSPRT DD SYSOUT=X'
    Queue '//SYSTSIN  DD *'
    Queue parm1 '+'
    Queue '  /VS('dsnvsam') +'
    Queue '  'ft'('ifind') +'
    If o_fields/='' Then Queue '  /OF('Space(o_fields,,',')') +'
    If m_fields/='' Then Queue '  /MF('Space(bm_fields,,',')') +'
    If s_fields/='' Then Queue '  /SF('Space(s_fields,,',')') +'
    Queue '  )'
    Queue '/*'
    Queue '//'
    Queue ''
    Address ISPEXEC
    "VGET ZTEMPF"
    Address TSO "ALLOC DD(ZTEMPF) DS('"ztempf"') SHR REU"
    Address TSO "EXECIO * DISKW ZTEMPF (FINIS"
    "LMINIT DATAID(DATAID) DDNAME(ZTEMPF)"
    zedlmsg='JCL to run your report in batch. This JCL needs to be',
            'manually submitted.'
    "SETMSG MSG(ISRZ001)"
    "VIEW DATAID(&DATAID)"
    "LMFREE DATAID(&DATAID)"
    Address TSO "FREE DD(ZTEMPF)"

    Signal exi1

/*--------------------------------------------------------------------*/
/* Create help panel(s) from sourcelines between the '/* */'          */
/*--------------------------------------------------------------------*/
make_mem_1:
    n_st = mark(2)                          /* Mark start of data     */
/*
)ATTR DEFAULT(%?_)
 _ TYPE(INPUT)   INTENS(HIGH) COLOR(RED)    HILITE(USCORE)
 ` TYPE(&TYP#)   INTENS(HIGH) COLOR(RED)    HILITE(USCORE) CAPS(OFF)
 # TYPE(&TYP#)   INTENS(HIGH) COLOR(RED)    HILITE(USCORE)
 @ TYPE(TEXT)    INTENS(HIGH) COLOR(YELLOW)
 + TYPE(TEXT)    INTENS(LOW)  COLOR(GREEN)
 $ TYPE(TEXT)    INTENS(LOW)  COLOR(TURQ)
 ! AREA(DYNAMIC)
 Â¬ TYPE(DATAIN)  INTENS(HIGH) COLOR(RED) CAPS(ON) HILITE(USCORE)
 { TYPE(DATAOUT) INTENS(LOW)  COLOR(TURQ) CAPS(OFF) SKIP(ON)
 } TYPE(DATAOUT) INTENS(LOW)  COLOR(GREEN) CAPS(OFF) SKIP(ON)
 w TYPE(CHAR) COLOR(WHITE)
 W TYPE(CHAR) COLOR(WHITE) HILITE(USCORE)
 y TYPE(CHAR) COLOR(YELLOW)
 b TYPE(CHAR) COLOR(BLUE)
 B TYPE(CHAR) COLOR(BLUE) HILITE(USCORE)
 r TYPE(CHAR) COLOR(RED)
 t TYPE(CHAR) COLOR(TURQ)
 g TYPE(CHAR) COLOR(GREEN)
)BODY EXPAND(\\) WINDOW(60,22)
%&SID%=>_ZCMD
%
+Enter details below:                             ->@&WEXEC
+Item....`IFIND                    +Mask or comma seperated.
+TYpe....#CD+Enter code from list below (or place cursor):
   !DYNAV,SHADV                                            !
   !                                                       !
   !                                                       !
   !                                                       !
   !                                                       !
   !                                                       !
   !                                                       !
   !                                                       !
   !                                                       !
   !                                                       !
   !                                                       !
+DFHCSD..#DSNVSAM                                     +
+Fields..#Z+Field selection for reporting (Y/N).
+Muti.gp.#Z+Multi group, item in >1 groups (Y/N).
+Desc....#Z+Report description if available (Y/N).
+Allign..#Z+Column allign (where possible) (Y/N).
@ENTER+-process,@END/CANCEL+-abandon,@?+-tutorial.
)INIT
 IF (&READCSD=0)  .ATTR (DSNVSAM)='TYPE(OUTPUT) HILITE(REVERSE)'
 &SID=&ZSYSID
 .ZVARS='(PFIELD,MULTIGP,LISTDESC,CALLIGN)'
 &PFIELD=TRANS(&PFIELD 1,Y 0,N *,N)
 &MULTIGP=TRANS(&MULTIGP 1,Y 0,N *,N)
 &LISTDESC=TRANS(&LISTDESC 1,Y 0,N *,N)
 &CALLIGN=TRANS(&CALLIGN 1,Y 0,N *,N)
 IF (&BATCH='Y') &WEXEC='Batch'
 ELSE &WEXEC='On-line'
 IF (&PFIELD=&Z)
    &PFIELD='N'
 IF (&MULTIGP=&Z)
    &MULTIGP='N'
 IF (&LISTDESC=&Z)
    &LISTDESC='N'
 IF (&CALLIGN=&Z)
    &CALLIGN='N'
)PROC
 &CSR=.CURSOR
 &CSP=.CSRPOS
 &CHAR1=TRUNC(&ZCMD,1)
 IF (&CHAR1 Â¬= '/')
    IF (&ZCMD Â¬= '?','CANCEL','CAN')
       IF (&TYP# Â¬= 'OUTPUT')
          IF (&CSR Â¬= DYNAV)
             IF (&PFIELD Â¬= 'Y')
                VER(&IFIND,NB)
          IF (&IFIND Â¬= '?')
             IF (&CSR Â¬= DYNAV)
                VER(&CD,NB,RANGE,1,&NOITEMS)
       VER(&PFIELD,NB,LIST,Y,N)
       VER(&MULTIGP,NB,LIST,Y,N)
       VER(&LISTDESC,NB,LIST,Y,N)
       VER(&CALLIGN,NB,LIST,Y,N)
 &PFIELD=TRANS(&PFIELD Y,1 N,0 *,0)
 &MULTIGP=TRANS(&MULTIGP Y,1 N,0 *,0)
 &LISTDESC=TRANS(&LISTDESC Y,1 N,0 *,0)
 &CALLIGN=TRANS(&CALLIGN Y,1 N,0 *,0)
)END
*/
    n_en = mark(-2)                         /* Mark end of data       */
    Return 0

help_#1:
    n_st=mark(2)    /* Mark Start */
/*

  CSDA: CSD Analyser.

  This macro is designed to analyse the contents of a viewed/edited
  listing of a CSD (not OBJECT as it would be too large and CSDA only
  uses the standard list portion.)
  It's primary objective is/was to give a hierarchical presentation of
  selected entities, eg. what group(s) the entity(s) defined in and
  which list(s) use those group(s).

  This routine will provide expansion of entity details by directly
  reading the CSD and supplying the appropriate details.  Refer below
  for further details on field formetas for entity types.

  If you are Analysing TRANsactions and have supplied the CSD name,
  the executing program is reported. This is handy when different
  groups contain the same transaction with a different executable
  program.

  If the CSD is available, you may fine tune your selections by
  setting field comparisons. (For further details, refer to the "/MF"
  parameter.)

  Output summary:
  ---------------
  The following are delimiters used to identify the type of data/fields
  being presented in the report:
    > List of groups the entity belongs to.
    + List of lists the group belongs to.
    - Group not used by any lists.
    Â» Fields extracted from the CSD (as set up in the field definition
      matrix).
    * Description (extracted for CSD if fists defined in matrix).
    Â¢ Date/time last modified.

  The output is presented as NOTE lines and it is recommended that you
  view the CSD list so that the notelines can be converted to data
  using the 'md' line command to permit text/data manipulation without
  accidentally changing the list.
  This tutorial will be placed before line 1 and reports placed after
  line 1 thereby permitting display of the tutorial at the top of the
  file and always before the report.

                             ***********

  Parameters:
  -----------
  Keyword parameters will be evaluated first and removed from the
  parameter list as they are encountered.  The remaining string(s)
  will be interpreted as positional parameters.

  Positional parameters:
  Note: While keyword paramaters may precede positional ones, any
        misspelt keyword paramaters will be treated as positional
        parameters.  Consequently get into the practice os using
        keyword as the trailing parameters.

   Positional:
    1. itemtype(item) | itemtype item | item
       Where:
          itemtype - selection of the type of item to report.  Execute
                     CSDA without parameters to display an input panel
                     that will list all the permissable item types and
                     acceptable abbreviations.
          item     - You may enter any combination of items (comma
                     seperated) or you may wildcard "item" by using an
                     optional leading and/or trailing '*'. It is
                     suggested that a more discreet than more generic
                     searches be used as too many hits may blow out
                     response.  (That is why '*' by itself is batch
                     forced as a TRANS(*) batch process for a medium
                     sized CSD took over 3 hours to execute. If fact
                     a "/XT" report on a 8000 transaction CSD to about
                     10 minutes in batch.)
                     Note: 'Item(s)' is not case sensitive and CSDA
                           will report on both upper and lower (and
                           mixed) case items. However, the input
                           screen is case sensitive so if you enter
                           in upper case, only the upper case hit will
                           be reported.
                         : Choosing '*' will force batch processing
                           unless it is overridden using the "/O"
                           parameter.
                         : To extend your search use a combination
                           of wildcarded items (comma seperated).
                           For multi items you can 'globalise' the
                           wildcarding by including the items between
                           brackets with any potential prfix and/or
                           suffix outside the brackets, eg.
                              (d,h,yy)*    -> d*,h*,yy*
                              a(bb,ee,xy)* -> abb*,aee*,axy*.
                           Don't forget the itemtype, eg.
                              trans(*(bb,ee,xy)*)
                           (You may ask why?  Because I can and I
                            needed variety for testing!!!)
       If only one parameter is used, it will be assumed to be 'items'
       and the default is,
           'TRANSactions(items)'

  Keyword parameters:
    Many of the keyword parameters are purely provided to fine tune
    display options and speed up processing.  On slow systems or when
    large amounts or output is anticipated, consider the following and
    either adjust the default settings in the REXX program 'CSDA' or
    supply swithes from the list below.
    1. Disabling the facility to read the CSD will save significant
       the cycles. Either set the variable "readCSD" to 0 (zero) in
       'CSDA' or use the "/NR" keyword. This is recommended if you
       only want a cross reference of items/groups/lists and DO NOT
       want available item details reported.
    2. Description may provide unnecessary noise (display clutter).
    3. All defined field values, especially when most are not defined
       can clutter displays.
    4. The align feature eliminates/minimises clutter, however, adds
       cycles to processing required.
    5. Date changed report can significantly increase processing time
       espoecially for large outputs.  Consider suppressing it or
       set it to Julian (as either default or parameter) as this will
       bypass invoking '$DATEMAN' for conversion to other formats.

   Keywords:
    /#  - Explicitly force data entry screen regardless of parameters
          entered.
          Use this parameter to get into screen display if you wish to
          get into the 'field selection for reporting' display.
    /13 - Indicate that the CSD is for CICS TS1.3 or earlier.  This
          parameter will flag positional parameters as unavailable
          thereby preventing erroneous reporting and speed up
          processing. (Unavailable fields will be summarised in the
          report.)
          Note: EXECIOVS is used to establish average record length for
                the CSDE file. If it is not 200, it will be interpreted
                as pre TS2.1 and this flag will automatically set and
                user notified prior to progressing.
    /A  - Append report (do not remove previous notelines).
    /B  - Execute in batch.  Use this flag for large CSDs and when you
          expect long execution.  This format will be enforced if '*'
          item is chsen for fields in the "no_wild" parameter list in
          'CSDA$'.  This can be overriden using the "/O" parameter.
          You have been warned, do it at your own peril.
    /C  - Changed date/time stamp. Explicitly display changed date/time
          regardless of default setting.citly display changed date/time
          Note: Variable "listdate" can be set in this routine to set
                default date changed display defaults.
              : Date will be displayed in the format dd/mm/yyyy if
                '$DATEMAN' is available otherwise yy.mmm will be used.
              : If '$DATEMAN' is available variable "datefmt" can be
                set in this routine to set default format to
                E(uropean), J(lulian) or U(SA).
              : '$DATEMAN' is an external routine and is invoked for
                each hit and may take up larged than desired cycles
                in generating reports.
    /CA - Column Align.  To align columns based on a field length of 8
          if the lenght is <8.  Alternatively rearange the report
          field order in CSDA$ or change the report field length to 8
          (max size except for description and a few WEB related
          fields).
          Note: Variable "autoalign" can be set in this routine to
                'auto align' without the "/CA" parameter.
    /CE - Changed date stamp to European format dd/mm/yyyy regardless
          of variable "datefmt" setting.
    /CJ - Changed date stamp to Julian format yy.ddd regardless of
          variable "datefmt" setting.  This is the default format
          and quickest in processing requirements which may be worth
          consideration on slow systems or high output volumes.
    /CU - Changed date stamp to USA format mm/dd/yyyy regardless of
          variable "datefmt" setting.
    /D  - List description if available from CSD dataset.
    /MF(match_field_list | *)
        - Match Fields. Provide a list of field (comma or space
          seperated) to perform a comparison with. This is additional
          to the "/OF" and "/SF" parameters if used.
          For all fields in the list an interim '=' is placed into the
          field selection field for the upcomming field selection
          screen. The remaining fields will be set in accordance with
          the "/OF" and "/SF" field list. (If neither is used, all
          fields will be set to 'Y'.
          You may overtype the system generated parameter by any of
          the following (these are also applicable for the field
          selection/suppression features):
              =  Field value equal to.
              >  Field value greater than.
              <  Field value less than.
              /  Field value not equal to (expanded to '/=').
              Y  Ignore field matching but report field
              b  Blank, Ignore field matching and do not report field.
              x  Any other character will be treated as 'Y'.
          If = > < / entered, a subsequent screen is presented for
          comparison value entry.
          You may enter any value. It will be used in a literal
          comparison.  You may wildcard values by using a trailing '*'
          in which case the '*' will be dropped off and the field
          value truncated to the same length befor the comparisson is
          made.
          Note: You still cannot do a global seach, however you can
                maximise your scope with a two pass of the following,
                   CSDA trans((a,b,c,d,e,f,g,h,i,j,k,l,m)*) /mf(x)
                         - followed by -
                   CSDA trans((n,o,p,q,r,s,t,u,v,w,x,y,z)*) /mf(x) /a
                (This would cover all the alphabetic transaction,
                 however, I'd hate to be the one waiting for completion
                 especially on a large CSD.)
    /MG - Multi Group. Only report 'items' that belong to more than 1
          group.  This is to determine what combination of settings
          may be in play (accross systems).
          All items found will be listed, however, only items in more
          than one group will be detailed.
          All multi-group item hits will be summarised at the end of
          the report.
    /NC - No Changed date/time stamp.  Explicitly suppress changed
          date/time regardless of default setting.citly display
          changed date/time.
    /NCA- No Column Align. (Only provided for completeness because of
          the "/CA" parameter and "autoalign" variable.)
    /NF - No Fields. This is further to the "/D" option. Even if the
          CSD is accessible, do not get and display the 'field'
          details that would be available. (This value forces "/D" so
          it is not required and will negate any "/OF" or "/SF" lists.)
    /ND - No description even if available from CSD dataset.
    /NR - Do not attempt to read/process the CSD, even if the required
          tools are available.  This will automatically activate the
          "/NF" switch.
          Note: Variable "readCSD" can be set in this routine to
                either enable or disable the default CSD process.
              : If "/NR" is in effect, the "DFHCSD" field becomes
                protected and the color reversed.
              : If "/NR" is set you will need to exit process to
                reverse it as there is no converse of "/NR".
    /O  - On-line execution.  In cases when the system enforces batch
          execution because of full wildcarding (*) on fields in the
          "no_wild" parameter list in 'CSDA$' you can force on-line
          execution.
    /OF(only_field_list | *)
        - Only Fields. Provide a list of field (comma or space
          seperated) to report.  This is an alternative to supressing
          all fields using the "/NF" parameter or playing with the
          "report" flags on the "itemflds" variable in 'CSDA$' member.
          The field list is not case sensitive but must match the full
          spelling of the field which may be obtained from a listing
          of the tutorial of by browsing member 'CSDA$'.
          Alternatively use field name of '?' to provide a list of
          valid fields for that item type.  These values will be used
          to populate the field selection screen if it is selected.
          If '*' is entered, you will either be directed to the field
          selection screen or the field selection screen flag will be
          set in the data entry screen without any fields selected.
    /SF(suppress_field_list | *)
        - Suppress Fields.  Provide a list of field (comma or space
          seperated) to suppress from the report.  This is an
          alternative to supressing fields you don't think are
          meaningfull for your circumstance and you do not wish to use
          the field selection screen.  Alternatively you can either
          suppress the field by setting the "report" flag to 'N'
          against the field on variable "itemflds" in member 'CSDA$'
          if that is acceptable by all at your site or arange for a
          personalised copy of CSDA$.  (If the later option is
          selected, you may miss out on any important future updates
          or repeat the process when an upgrade is isntalled.)
          If '*' is entered, you will either be directed to the field
          selection screen or the field selection screen flag will be
          set in the data entry screen without all fields selected.
          Note: This option actually sets the all fields report flag
                to 'Y' and sets these fields to 'N'.  This will be
                evident if you invoke the field selection panel.
    /T  - Turn REXX trace on. Used for debugging.
    /TS - Time Sort.
          Used for debugging to fine tune the setting for variable
          "isort_limit" in 'CSDA'.  If response is bad, use the "/TS"
          parameter to time the sort reporting start, end and duration
          and "/XT" to exit befor reporting details.  If the sort
          takes > xx seconds and "isort_limit" has not been exceeded,
          suggest reducing it till a hapy comprimise is reached.
    /XT - eXit after Tally.  This parameter is designed for batch
          processing to list all the items for a particular item
          type sorted. Once reported processing terminates.
          This is useful to then run more discreet selections.
    /VS(csd_dataset)
        - CSD dataset. This field is used in the batch process.
    ?   - This tutorial. But you already know that. Don't you?
    Parameters "/D" and "/ND" should be used depending on site
    defaults, (ie. if default is to display description then use "/ND"
    to suppress it). This default is set by variable "listdesc" at the
    top of the REXX program CSDA.
    Use parameters "/D", "/ND" and "/NF" to reduce the "noise" in
    larger analysis reports and/or speed up processing. (Processing
    may take twice as long with full field reporting.)

    Keywords "/A, /C, /CE, /CJ, /CU, /NC, /NR and ?" can be entered
    individualy or en-masse in the data entry screen to avoid exiting
    and re-invoking using the parameters. Other parameters can be
    changed using the input data fields.

  Screen entry fields:
  --------------------
  1. Enter "item" as per above details.
  2. "Itemtype" may be selected by code or place cursor on code or
     description.  The capital (white colored) part of "itemtype" can
     be used under parameter function entry, eg.
         CSDA TRANS(CED*,AA*)
  3. DFHCSD. If you used the "CSDL" routine to list the CSD, it would
     have stamped the list with the source CSD dataset name which
     would then be extracted and inserted here.  Alternatively you can
     manually enter the CSD (unquoted).
     Note: Blanking out the CSD name (if available) will speed up
           processing but not as significantly as the "/NF" or even
           more significantly the "/NR" switches.
  4. Description reporting. Set this to 'N' to suppress descriptions
     from being reported (if available).
  5. Fields to include in the reports. If 'Y' is entered (will be set
     to 'Y' of "/OF" parameters are passed and screen display is
     entered. (See below for field report screen.)
  6. Allign fields in the report. Used for presentation and where
     field sizes adversely affect the esthetics of the report lay-
     out.
  Field selection screen:
  -----------------------
  If option 5 above is set to 'Y' a screen will be displayed with the
  main body part listing all the available fields that may be included
  in the report. If "/OF" parameters are supplied, they will be used to
  set 'Y' values against their respective fields.  If "/SF" parameters
  are supplied, they will be used to set 'Y' values against all fields
  and ' ' (space) against their respective fields.

  On exit (either by using enter or END PF key) control will always be
  passed to the main parameter entry screen even if it was not
  initially displayed.

  Enter any non blank character in the input field before the field
  name to select for reporting.  Return will be passed to the previous
  screen with the fields reported defined as if the "/OF" parameter
  was used.  Once this screen is entered and no fields are selected
  then all fields will be excluded from the report (same as if "/NF"
  parameter used on entry).

  Field selection screen entry commands:
     ALL  - Selects all fields.  Use this command to reset all fields
            in case screen previously exited without a selection.
            (This will negate any "/MF" and "/NF" setting.)
     NONE - Unselect all fields.  Quicker than repetaed TAB overtype
            with space.
     SORT - Sort field name display alphabetically.
            NOTE:- This sort is for selection only and will not alter
                   the field sequences in the report.

  For explanation of the fields refer to the CICS manual. Field sequence
  and tend follow the CEDA display sequence. Field names are limited to
  6 characters so some of them may be somewhat cryptogramic.

  Packaging:
  ----------
  The following members are required to package this function.  Those
  marked with an 'o' seperator are optional and enhance the available
  features:
   REXX:
   -----
    $CSTRING o Change string.  Used to build the field selection
               screen.
    $DDALLOC o Required by BATCHISP (if used).
    $SORT    o Routine top sort a string of space seperated words.  If
               the routine is not found, the transaction item(s)
               report will not be sorted.
    $WORDAT  - Identify text according to column position. Required
               for parsing data to format output.
    BATCHISP o Required to get default ISPF datasets to execute in
               batch.
    BR       o Required to display these instructions under browser
               when help (?) is invoked from panel.
               If unavailable, you will get a red screen.
    CSDA     - This driver.
    CSDA$    - External variable setter. Externally designed to permit
               sites to customise field definitions external to the
               CSDA driver.
    CSDR     o CSD reader.  May be included instream in selective
               packaging of CSDA. Required to list program executed by
               the transcation. (It requires access to EXECIOVS.)
               Unavailability will force the "/NF" option.
    $DATEMAN o Date converter required if the "/C" option is requested
               or defaulted.
    EXECIOVS o EXECIO format VSAM file reader required by CSDR.  Uses
               program RXVSAM (see below).
   Panels:
   -------
    CSDAP    - Self extracted out of this routine.
   Programs:
   ---------
    RXVSAM   o VSAM reader. (Off CBT tape.) Used by EXECIOVS.
    SORT     o IBM sort.  Called upon when number of items to report
               exceed variable "isort_limit" at start of 'CSDA'.
               This sort is much quicker than the REXX bubble sort
               $SORT but it need to allocate I/O files hence do not set
               "isort_limit" too low unless sort times blow out. Use
               parameter "/TS" to report on sort times.

  Internal secrets:
  -----------------
  1. Variables used for field definitions:
    a) validtypes:-
         Format:- 'nn type hex', where,
           nn   - sequence number
           type - entity identifier
           hex  - hex entity record identifier (cols 13-14 in CSD VSAM
                  dataset).
         This variable is used to build the data entry screen and
         validate request type.
    b) itemflds:-
         Defines all the fields that may be reported against
         individual entity types.  Refer to member CSDA$ for further
         details as it sets the variable values and contains
         processing sub-routines for specialised parsing.
    c) descflds:-
         Can be considered a single field format of
         'itemflds'.  The descriptions have been removed to permit
         exclusion of descriptions as often they are too abstract and
         also using this format they can be forced to the end of the
         report to avoid clutter.
    d) exclflds:-
         Fields to exclude from the defined "itemflds"
         variable during reporting.  Refer to member CSDA$ for setting
         of exclusion list.

------------------------------------------------------------------------
*/
n_en=mark(-2)   /* Mark End   */
    If w1="??" Then Signal Help_me;"ISREDIT (m)=MEMBER";rcm=rc
    If rcm=0 Then Signal Help_me;Signal On Syntax Name Help_me
    Parse Source . . xcmd .;x=$Br(xcmd "??");Return
    Mark:If Datatype(Arg(1))/="NUM" Then Arg(1)=1;Return sigl+Arg(1)
    Help_me:Signal Off Syntax;#tr=Trace("o")
    Do i=n_st To n_en;nl=Sourceline(i)
    If rcm=0 Then "ISREDIT LINE_BEFORE 1=NOTELINE (nl)"
    Else Say Substr(nl,1,79);End
/*  x=Msg('On')                                                       */
    If rcm=0 Then "ISREDIT CSDA$ ?";Else Address TSO "%CSDA$ ??"
    Return 0
