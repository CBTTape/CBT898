/******************************** REXX ********************************/
SRCMCC:SRCMCC_ver='1.06'                 /* Version                   */
/*--------------------------ooo000OOOO000ooo--------------------------*/
/*  SRCMCC: SRC's Mail Code Converter.                                */
/*                                                                    */
/*  Either scroll down to the "Help_me:" or enter "SRCMCC ?" on the   */
/*  command line of any edit/view session.                            */
/*                                                                    */
/*  DSN=DNPCICS.CICS230.DFHCSD           /DL                          */
/*                                                                    */
/*--------------------------------------------------------------------*/
m_st=mark(3)                                /* Mark 3 lines from here */
/*  Modify site defaults here:                                        */
/*                                                                    */
    cname1st=0                           /* 1=ChrisSurn, 0=SurnChris  */
    lufile="'MIS.TCPIP.LUNAMES.NEW'"     /* Defauld LU file (for doco)*/
    ludoco="'MIS.TCPIP.LUNAMES.LOGIC.DOCO'" /* logic doco */
    tt=1                                 /* Default Terminal Type:    */
                                         /*   1=Local                 */
                                         /*   2=Remote                */
                                         /*   3=Printer               */
    drem='TCTMRORT'                      /* Default remote group      */
    denv='PROD'                          /* Default remote system     */
    dptt='MSG6480'                       /* Default Printer termtype  */
    dnns='C'                             /* Default Netname suffix    */

e_st=mark(-2)                               /* Mark previous line     */
/*--------------------------------------------------------------------*/
    Arg parm#;Address ISPEXEC;"CONTROL ERRORS RETURN";ima_macro=0
    If parm#/='' Then Signal byp1
    "ISREDIT MACRO (parm#) NOPROCESS";If rc=0 Then ima_macro=1

byp1:
/*  "CONTROL ERRORS CANCEL"                                           */

ini1:
    Address ISREDIT;"(status)=USER_STATE";"(caps)=CAPS";"CAPS=OFF"
    "(dataset)=DATASET"
    Parse SOURCE . . xcmd .;Parse Upper VAR parm# parm#
    batch=0;where="LINE_BEFORE .ZFIRST";noteline="NOTELINE"

    If Wordpos(Word(parm#,1),'? /? H HELP /H /HELP')>0 Then Signal Help_me
    If Wordpos('/T',Translate(parm#))>0 Then Do
        Trace r;parm#=Delword(parm#,Wordpos('/T',Translate(parm#)),1)
    End
    If Wordpos('/P',Translate(parm#))>0 Then Do
        tt=3;parm#=Delword(parm#,Wordpos('/P',Translate(parm#)),1)
    End
    If Wordpos('/A',Translate(parm#))>0 Then Do
        all=1;parm#=Delword(parm#,Wordpos('/A',Translate(parm#)),1)
    End;Else all=0
    If Wordpos('/U',Translate(parm#))>0 Then Do
        action='ALTER ';parm#=Delword(parm#,Wordpos('/U',Translate(parm#)),1)
    End;Else action='DEFINE'
    If Wordpos('/X',Translate(parm#))>0 Then Do
        xstat='X';parm#=Delword(parm#,Wordpos('/X',Translate(parm#)),1)
    End;Else xstat=
    If Wordpos('/B',Translate(parm#))>0 Then Do
        batch=1;parm#=Delword(parm#,Wordpos('/B',Translate(parm#)),1)
        "LABEL .ZLAST=.LINEL";where="LINE_AFTER .ZLAST";noteline=
        xstat=;all=1
    End
    If Wordpos('/NX',Translate(parm#))>0 Then Do
        xstat='NX';parm#=Delword(parm#,Wordpos('/NX',Translate(parm#)),1)
    End
    If Index(Translate(' 'parm#),' /R(')>0 Then Do
        Parse Value Translate(parm#) With p1 '/R(' rem ')' p2
        parm#=Space(p1 p2);If rem='' Then rem=drem
        tt=2
    End;Else rem=
    If Index(Translate(' 'parm#),' /ENV(')>0 Then Do
        Parse Value Translate(parm#) With p1 '/ENV(' env ')' p2
        parm#=Space(p1 p2)
    End;Else env=
    If env='' Then env=denv
    If Index(Translate(' 'parm#),' /PTT(')>0 Then Do
        Parse Value Translate(parm#) With p1 '/PTT(' ptt ')' p2
        parm#=Space(p1 p2)
    End;Else ptt=
    If ptt='' Then ptt=dptt
    If Index(Translate(' 'parm#),' /NNS(')>0 Then Do
        Parse Value Translate(parm#) With p1 '/NNS(' nns ')' p2
        parm#=Space(p1 p2)
    End;Else nns=
    If nns='' | Length(nns)>1 Then nns=dnns
    If Wordpos('/NT',Translate(parm#))>0 Then Do
        tt=2;parm#=Delword(parm#,Wordpos('/NT',Translate(parm#)),1)
    End


    If all Then Do;fline=1;"(tline)=LINENUM .ZLAST";End
    Else Do
        "PROCESS RANGE C";"(cmd)=RANGE_CMD"
        If cmd='C' Then Do
            "(fline)=LINENUM .ZFRANGE";"(tline)=LINENUM .ZLRANGE"
        End
        Else Do
            "(lin#)=LINENUM .ZCSR"
            If lin#>1 Then range=lin# lin#
            Else range='1 1'
            Parse VAR range fline tline
        End
    End
/*  If xstat='' Then "RESET"                                          */

    sep1=Copies('*',72)
    sep2='*'Copies('-',70)'*'
    x=nl('* Start..'Time());x=Time('e')
    lgroup=rem;group_list=rem

/*-- Algoryhmic logic (start) ----------------------------------------*/
    Do i=fline To tline
        If xstat/='' Then Do
            "(xs)=XSTATUS" i;If xs/=xstat Then Iterate
        End
        "(line)=LINE" i
        Parse VAR line ch1 +1 20 netname tid group .
        If Strip(line)='' | ch1='*' Then Iterate
        If rem/='' Then group=rem
        If lgroup/=group Then Do
            Parse VAR group +3 g45 +2 pid +1
            lgroup=group
            If Wordpos(group,group_list)=0 Then group_list=group_list group
            x=nl(Sep1)
            If pid=0 & tt<3 Then Do
                Call TT_3
                Do j=1 To t#l;Interpret "x=nl(t3"j")";End
            End
        End
        accname=;acc_c=1;Parse VAR tid tid2 +2
        Parse VAR netname n11 +1 1 n13 +3 +3 n71 +1 n81
        If n13='L10' & n81/='' Then acc_c=0
        If n11='G'   & n71/='' Then acc_c=0
        Select
            When tt=2 Then Nop
            When group='TCTDAY' & acc_c Then,
                accname=Left(netname||'A',8)
            When Wordpos(tid2,'CS DH DR GR')>0 & acc_c Then,
                accname=Left(netname||'A',8)
            When Wordpos(g45,'P0 P1 P2 P3 P4 P5 P6 P7 P8 P9')>0 & acc_c Then,
                accname=Left(netname||'A',8)
            Otherwise Nop
        End
        netname=Left(netname||nns,8)

        If nns/='A' | tt=2 Then Do          /* Did not request "A"    */
            Interpret "Call TT_"tt
            Do j=1 To t#l;Interpret "x=nl(t"tt||j")";End
        End
        If accname/='' Then Do              /* ACCUSERVE              */
            netname=accname
            group=Overlay('AC',group,2,2)
            If Wordpos(group,group_list)=0 Then group_list=group_list group
            Interpret "Call TT_"tt
            Do j=1 To t#l;Interpret "x=nl(t"tt||j")";End
        End
        x=nl'*'
    End
/*-- Algoryhmic logic (end) ------------------------------------------*/
    If action='DEFINE' Then Do
        x=nl(Sep1)
        x=nl('*REMOVE GROUP(        ) LIST(PRODTOR)')
        x=nl('*REMOVE GROUP(        ) LIST(PRODFOR)')
        x=nl('*REMOVE GROUP(        ) LIST(PRODTOPS)')
        x=nl('*REMOVE GROUP(        ) LIST(PRODPRSM)')
        x=nl('*REMOVE GROUP(        ) LIST(PRODPLRG)')
        x=nl('*REMOVE GROUP(        ) LIST(MIS029DY)')
        x=nl(Sep2)
        #g_l=group_list
        Do While group_list/=''
            Parse VAR group_list group group_list
            x=nl('*ADD GROUP('group') LIST(PRODTOR)')
            x=nl('*ADD GROUP('group') LIST(PRODFOR)')
            x=nl('*ADD GROUP('group') LIST(PRODTOPS)')
            x=nl('*ADD GROUP('group') LIST(PRODPRSM)')
            x=nl('*ADD GROUP('group') LIST(PRODPLRG)')
            x=nl('*ADD GROUP('group') LIST(MIS029DY)')
            x=nl('*')
        End

        group_list=#g_l
        x=nl(Sep1)
        x=nl('* Move the followin delete commands to the top of the',
             'data to delete')
        x=nl('* all entries in the groups.  (Only do this for a',
             'full run. If it')
        x=nl('* is an "ALTER" run, leave as comments.')
        x=nl(Sep2)
        Do While group_list/=''
            Parse VAR group_list group group_list
            x=nl('*DELETE GROUP('group') ALL')
        End
        x=nl(Sep1)
    End
    x=nl('* End....'Time() '('Time('r')' secs)')
exi1:
    If batch Then Do;"RESET";"DELETE ALL NX .ZFIRST .LINEL";End
    "USER_STATE=(status)"
    If Sysvar(Sysenv)='BACK' Then "ISREDIT END"
    Exit

/*--------------------------------------------------------------------*/
/* TOR terminal.                                                      */
/*--------------------------------------------------------------------*/
TT_1:
t11=action 'TERMINAL('tid')  GROUP('group')'
t12='       AUTINSTMODEL(NO) TYPETERM(NORMTERM) NETNAME('netname')'
t13='       CONSOLE(NO) PRINTERCOPY(NO) ALTPRINTCOPY(NO) TASKLIMIT(NO)'
t14='       TERMPRIORITY(0) INSERVICE(YES) ATTACHSEC(LOCAL) BINDSECURITY(NO)'
t15='       USEDFLTUSER(NO)'
t#l=5                                       /* Number of lines        */
Return 0

/*--------------------------------------------------------------------*/
/* Remote terminal.                                                   */
/*--------------------------------------------------------------------*/
TT_2:
t21=action 'TERMINAL('tid') GROUP('group')'
t22='       AUTINSTMODEL(NO) TYPETERM(NORMTERM) NETNAME('netname')'
t23='       CONSOLE(NO) REMOTESYSTEM('env') REMOTENAME('tid') PRINTERCOPY(NO)'
t24='       ALTPRINTCOPY(NO) TASKLIMIT(NO) TERMPRIORITY(0) INSERVICE(YES)'
t25='       ATTACHSEC(LOCAL) BINDSECURITY(NO) USEDFLTUSER(NO)'
t#l=5                                       /* Number of lines        */
Return 0

/*--------------------------------------------------------------------*/
/* TOR printer.                                                       */
/*--------------------------------------------------------------------*/
TT_3:
t31='* Printer..'
t32=sep2
t33=action 'TERMINAL('tid') GROUP('group')'
t34='       AUTINSTMODEL(NO) TYPETERM('ptt') NETNAME(L10'printer')',
            'CONSOLE(NO)'
t35='       PRINTERCOPY(NO) ALTPRINTCOPY(NO) TASKLIMIT(NO) TERMPRIORITY(0)'
t36='       INSERVICE(YES) ATTACHSEC(LOCAL) BINDSECURITY(NO) USEDFLTUSER(NO)'
t37=sep2
t#l=7                                       /* Number of lines        */
Return 0

nl_h:
nl:Parse Arg n#;where "="noteline" (n#)";Return 0

Help_me:
n_st=mark(2)                                /* Mark next line         */
/*

 &TOD. &CNAME..

 &XCMD.: SRC's Mail Code Converter.    [ V&SRCMCC_VER. ]

 You are in dataset '&DATASET.'.

 If it is not &LUFILE. then get out and view that
 and use this macro on it (or preferably a copy of it so you don't
 cream it).
 This file is a flat file created by Jpohn Sostrom and maintained by him
 and his group.
 The following is the basic record layout:
   Col 1
   |   0    1    1    2    2    3    3    4    4    5
   ....5....0....5....0....5....0....5....0....5....0
   COMMERCIAL EAST    L10A@01     A@01    TCTA@0
   COMMERCIAL EAST    L10A@02     A@02    TCTA@0

 Cols  1-19 you can ignore (location).
 Cols 20-28 are the VTAM LU name.  Or in the case of the defines the
            NETNAME minus the C character.
 Cols 32-35 are the TERMID for the corresponding NETNAME.
 Cols 40-47 are the TCT group that they would belong to.  The job that
            ran against the file to create your defines would start with
            the defines of the groups for the PRODTOR list.
 Cols 48-   Ignore.

 Parameters:
 -----------
 Positional:
 ~~~~~~~~~~~
   None in operation at this stage.

 Keywords:
 ~~~~~~~~~
   /A  - Process all lines or use block line commands.  Default is 1st
         line only (or line cursor is on).
   /B  - Batch process.  This forces the NOTELINEs as DATA lines and
         deletes original lines.
         This paramater negates any "/NX" or "/X" and enforce the "/A"
         parameters.
         If on a copy of the LU file, you could use this parameter to
         eliminate the need to delete the LU data lines and convert the
         DEFINES to data using the 'MD' ISPF line command.
   /ENV(environment)
       - Any value is accepted for the environment (test, QA or prod).
         The default is "&DENV.".
   /NNS(suffix)
       - NetName Suffix.  Suffix used to tag on the end of netnames.
         Default is "&DNNS.".
         This feature should not be used for "ACCUSERV" groups.
         (For further details, see GOTCHA #5 below).
   /NX - Only process non-excluded lines (defaultis all).
   /P  - Printer request. Default is Terminal request.
   /PTT(typeterm)
       - Typeterm for printers. The value supplied here will replace
         the default printer typeterm of "&DPTT." for any
         printer DEFINEs generated either implicitly or explicitly.
   /R(group)
       - Remote request. Use supplied "group" name to generate group.
         Note this command will place ALL the definitions in the one
         group. Default is "&DREM." if you use parameter "/R()" and
         you can then do global change.  Note that the remote is set
         to REMOTESYSTEM(&DENV.).  This can be globally changed or pass
         the "/ENV()" parameter.
   /T  - Trace. To be used for debugging purposes only.  Highly
         recommend you DO NOT use this parameter unless you are only
         processing one line otherwise expect heaps of output.
   /X  - Only process excluded lines (default is all)
   /U  - Generate Update "ALTER" statements.  Rather than generating
         define statements you can use this to create ALTER commands.
         Using this parameter will suppress the 'REMOVE/ADD GROUP()'
         comment line at the bottom of the output.
   ? | /? | H | HELP | /H | /HELP
       - This tutorial.
         (But you already know that, don't you.... &USNAME..)

 You can select all records using the "/A" parameter.  Alternatively
 you can use the "C/CC" line/block commands to select records.
 This can be combined with "/NX" or "/X" command. Without these
 parameters all selected lines whether exluded or not excluded will
 be processed.

 If you find you are continually passing customised parameters, you can
 quickly change the default values by looking at lines &M_ST.-&E_ST. in
 this REXX routine.  (Just back it up first, please....)

 A number of REMOVE and ADD groups are added as comments (* in col1) at
 the end of the defines generated.  Uncomment and modify theses as and
 if required.

 Clean up.
 ---------
 1. After all the new terminal have been defined in new groups and you
    are happy with operations. Create a CSD list (non-OBJECT).
 2. Hit the list (view session) with macro SRCFTG (SRC Find Terminal
    Groups) to list all the groups that have terminal definitions in
    them.  Use common sense and site knowledge and segregate obsolete
    groups.  There should be heaps after a new MCC execrcise.
    (No ?-help parameter available for SRCFTG, read comments in
     program.)
 3. Generate DEFINE commands using the EXTRACT command for all the
    obsolete groups.  Suggest seperate jobs for each group.
 4. View or edit the copy of the above generated extracts and hit it
    with macro SRCIT (SRC Identify Terminals). This routine will analyse
    the contents of the group and will make suggested actions identified
    contents.
    (Use ?-help parameter with SRCIT for brief tutorial on program.)

 GOTCHAs:
 --------
 1. Printers are automatically generated on change of group and a 0 in
    column 45 as part of the group name.

 2. Printer recognition is bypassed if you process non/exluded lines as
    it's not possible to confirm start of the change of groups (even if
    the changeover is not excluded).  (Next release - maybe.)

    Printers can be manually generated by providing all the details on
    a line (could be a dummy/temporary doctored line) and using a line
    select command with "/P" as a parameter.

    Will not generate printers for remote groups.   If required, they
    have to be manually generated as above.

 3. This routine will bypass processing of blank lines or lines starting
    with an '*'. (So liberal ducumentation in the LU file is
    encouraged using '*' in col 1.)

 4. None or little validation is done on the parameters passed or file
    being processed.  So if you process against your grandmother's
    bithday card, you will get results but they probably won't work in
    the CSD.

 5. ACCUSERV's "A" suffixed netnames are automaticall generated during
    a TOR run and is not needed to be explicitly requested using the
    "/NNS()" parameter.  When a 'TCTDAY' group item is encountered, a
    define is written for the ACCUSERVE region under group 'TACDAY'
    immediately after the normal 'TCTDAY' define.
    This does not happen if it is a remote request using the "/R()"
    parameter.

 6. The "/B" parameter is designed to run in batch and is a destructive
    process, so DO NOT EXECUTE IT AGAINST YOUR ORIGINAL LU FILE.
    You may forget to CANcel out of it on-line and in batch the JES
    gremlins control your destiny.

    **** YOU HAVE BEEN WARNED ***

 7. If you wan't to update the CSD using alter statements you can have
    3 options:
      1. Create DEFINE statements and then issue command,
            CHANGE DEFINE 'ALTER ' 1 ALL
         Get this right and dont forget the "1" or you may cream
         legitimate DEFINE parameters.
      2. Leave the define statements and repeat the DEFINE line and
         change that to a DELETE.
      3. Use the "/U" parameter.  (Left as last option as it is the
         better/easier alternative).

                                 *****

*/
n_en=mark(-2)                               /* Mark prev 2 line       */

    Parse Value $Whoami() With cname sname .;usname=Translate(sname)
    chgchar='&'
    Parse Value Time() With hh ':' 1 time +5
    Select
        When hh<3  Then tod='Hello night-owl'
        When hh<12 Then tod='Good morning'
        When hh<18 Then tod='Good afternoon'
        Otherwise tod='Good evening'
    End

    x=nl_h('*'Centre('ooo000 SRC 000ooo',70,'-')'*')
    Do i=n_st To n_en
        line=Sourceline(i)
        Do While Index(line,chgchar)>0
            Interpret "Parse VAR line p1 '"chgchar"' var '.' p2"
            If Index(var,'(')>0 Then Do
                Parse VAR var var '(' vl ')'
                If ¬Datatype(vl,'W') Then vl=Length(var)
                Interpret 'line=p1||Substr('var',1,vl)||p2'
            End
            Else Interpret 'line=p1||'var'||p2'
        End
        x=nl_h(Substr(line,1,72))
    End
    x=nl_h(' ');x=nl_h(' ');
    dd='MC'Time('s')
    Address TSO "ALLOC F("dd") DSN("ludoco") SHR REU"
    Address TSO "EXECIO * DISKR "dd" (STEM linei. FINIS)"
    Address TSO "FREE F("dd")"
    Do i=1 To linei.0
        x=nl_h(linei.i)
    End
    x=nl_h('*'Centre('ooo000 Rsend 000ooo',70,'-')'*')
    Signal exi1

Mark: Arg diff;If Datatype(diff)/='NUM' Then diff=1;Return sigl+diff

$Whoami:
    name=getname()
    name=Translate(name,'  ','.,') /* Cater for '.' or ',' seperator */
    If cname1st Then Parse var name cname sname .
    Else Parse var name sname cname .
    Return $U2Lower(cname sname,2,'*')

/*--------------------------------------------------------------------*/
/* Get name from ACEE control block (imported from REXX '$getname' for*/
/* self containment).                                                 */
/*--------------------------------------------------------------------*/
getname:
    ascb=Storage('224',4)
    asxb=Storage(d2x(c2d(ascb)+x2d('6c')),4)
    acee=Storage(d2x(c2d(asxb)+x2d('c8')),4)
    nam@=Storage(d2x(c2d(acee)+x2d('64')),4)
    name=Storage(c2x(nam@),30)
    len =c2d(Substr(name,1,1))
    name=Substr(name,2,len-1)
    Return name

/*--------------------------------------------------------------------*/
/* Convert upper to lower (imported from REXX routine '$lower' for    */
/* self containment).                                                 */
/*--------------------------------------------------------------------*/
$U2Lower:
    ARG text,pos,rep
    lc='abcdefghijklmnopqrstuvwxyz';uc='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
    If Datatype(rep,'W') Then Nop;Else rep=99999
    If Datatype(pos,'W') Then Nop;Else pos=2
    rname=
    Do i=rep by -1 To 1
        Parse VAR text name text
        If pos>1 Then Do
            pref=Substr(name,1,pos-1);suff=Substr(name,pos);End
        Else Do;pref=;suff=name;End
        rname=rname pref||Translate(suff,lc,uc)
        If text='' Then Leave
    End
    Return Strip(rname text)
