/*--------------------------ooo00 REXX 00ooo--------------------------*/
/* SRCXJCL: SRC eXtract statement generator JCL.                      */
/*                                                                    */
/* While Editing a generic member that executes a DFHCSDUP update     */
/* procedure, this routine will read member                           */
/* 'syspref.$.SRC($GROUPS)' and generate a step bering the name of    */
/* each terminal bearing group using the groups name as the member    */
/* name from the same dataset.                                        */
/*                                                                    */
/* Run macro "SRCBEX" while efit/viewing $GROUPS member.              */
/*                                                                    */
/* Sample member found in 'syspref.$.SRC($JC@GLOB)                    */
/*                                                                    */
/* You do not have to tidy up old steps.  All data after the "PEND"   */
/* statement will be deleted.                                         */
/*                                                                    */
/* Ensure variable "ofile" represents the right dataset.              */
/*                                                                    */
/*--------------------------------------------------------------------*/
    ARG parm#;Address ISPEXEC;"CONTROL ERRORS RETURN";ima_macro=0
    If parm#/='' Then Signal byp1
    "ISREDIT MACRO (parm#) NOPROCESS"
    If rc=0 Then ima_macro=1

byp1:
/*  "CONTROL ERRORS CANCEL"                                           */

ini1:

    Address ISREDIT;"(status)=USER_STATE";"RESET"
    "(ofile)=DATASET"
    ofile="'"ofile"($GROUPS)'"
    "F '// PEND' FIRST";If rc/=0 Then Exit
    "(lin#)=LINENUM .ZCSR"
    "DELETE ALL NX" lin#+1 ".ZLAST"
    linex='//*';"LINE_AFTER .ZLAST=(linex)"
    x=Output()
    Do i=1 to linei.0
        group=Word(linei.i,3)
        linex='//'Left(group,8)' EXEC EXTRACT,MEMBER='group
        "LINE_AFTER .ZLAST=(linex)"
    End
    linex='//*';"LINE_AFTER .ZLAST=(linex)"
    linex='//';"LINE_AFTER .ZLAST=(linex)"

exi1:
    Exit

output:
    Address TSO "ALLOC F("dd") DSN("ofile") SHR REU"
    Address TSO "EXECIO * DISKR "dd" (STEM linei. FINIS)"
    Address TSO "FREE F("dd")"
    Return 0
