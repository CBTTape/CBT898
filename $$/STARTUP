/* rexx */
Arg Command

Signal On Failure
Signal On Syntax
Signal On Novalue

Call StartApp

Return
/*-------------------------------------------------------------------*/
/*- handle any problems encountered                                 -*/
/*-------------------------------------------------------------------*/
Failure: Say "Failure occured on line" Sigl; Call Cleanup; Exit(-1);
Syntax:  Say "Syntax error on line"    Sigl; Call Cleanup; Exit(-1);
Novalue: Say "Novalue used on line"    Sigl; Call Cleanup; Exit(-1);
Cleanup:
  Address ISPEXEC
  RC = 0
  Do While RC = 0
    "CONTROL ERRORS RETURN"
    "TBEND STARTUP"
  End
  "CONTROL ERRORS RETURN"
  "LIBDEF ISPTLIB"
  "CONTROL ERRORS RETURN"
  "LIBDEF ISPTABL"
Return
/*-------------------------------------------------------------------*/
/*- see the bottom of this exec for documentation                   -*/
/*-------------------------------------------------------------------*/
StartApp:
Address ISPEXEC

/* to rename temp screens, put a <6 char valid scrname prefix here */
InitPrefix = 'INIT'
InitPrefix = Strip(Left(InitPrefix,5))  /* in case user changes */

/* if user wants to edit table, make it so */
If Command = '/' Then Do     /* edit the table if / passed */
  Call EditTable
  Return
End

/* get a couple of vars for later use */
"VGET (ZSCRCUR ZSCRMAX ZDEL)"

/* get the current list of screens for later use */
Call LoadScreens

/* no parms passed, do swap list */
If Command = '' Then Do
  Swap = "SWAP LIST"
  "DISPLAY PANEL(ISPBLANK) COMMAND(SWAP)"
  Return
End

/* convert the command to app name */
Call GetAppName
If AppName = 'LIST' | AppName = 'PREV' | AppName = 'NEXT' Then ,
  AppName = AppName'1'

/* go thru the screens to see if there an active match */
Do iScn = 1 To Scn.0              /* from the LoadScreens rtn      */
  If Scn.iScn /= AppName Then Iterate
  Swap = "SWAP" AppName
  "DISPLAY PANEL(ISPBLANK) COMMAND(SWAP)"  /* yup, swap to it.     */
  Return
End

If ZSCRCUR = ZSCRMAX Then Do
  Say 'You have reached the maximum of sessions ('Strip(ZSCRMAX)').'
  Say 'Quit one of your other sessions before starting this one.'
  Say 'A session list will now be displayed...'
  Swap = "SWAP LIST"
  "DISPLAY PANEL(ISPBLANK) COMMAND(SWAP)"
  Return
End

Call TableLookaside               /* convert app name to command   */

"SELECT PGM(ISPSTRT)" ,
  "PARM("Command || ZDEL"SCRNAME" AppName "PERM"ZDEL"SCRNAME ON)" ,
  "SUSPEND MODE(FSCR)"

Return
/*-------------------------------------------------------------------*/
/*- convert the passed parm to the command on the lookaside table   -*/
/*-------------------------------------------------------------------*/
TableLookaside:

Call LibdefProfile             /* libdef the ispprof */
"CONTROL ERRORS RETURN"
"TBOPEN STARTUP NOWRITE"       /* see if there's a table */
If RC = 0 Then Do
  "TBVCLEAR STARTUP"
  TabName = AppName
  "TBGET STARTUP"              /* find a match, load the command */
  If RC = 0 Then Command = TabCmd
  "TBEND STARTUP"
End
"LIBDEF ISPTLIB"               /* done */

Return
/*-------------------------------------------------------------------*/
/*- convert the command to an acceptable screen name.               -*/
/*-------------------------------------------------------------------*/
GetAppName:

Parse Var Command "PGM(" AppName ")"   /* use the pgm   name */
If AppName /= '' Then Return

Parse Var Command "PANEL(" AppName ")" /* use the panel name */
If AppName /= '' Then Return

Parse Var Command "CMD(" AppName ")"   /* use the cmd name   */
AppName = Word(AppName,1)              /* remove the cmd parms */
AppName = Translate(AppName,' ','%')   /* remove invalid scn chars */
If AppName /= '' Then Return

AppName = Command                      /* have to scam a screen name*/
If Left(AppName,4) = 'TSO ' Then ,     /* strip off tso prefix */
  AppName = Strip(Substr(AppName,4))

AppName = Translate(AppName,' ',ZDEL)  /* get rid of semicolon */
AppName = Word(AppName,1)              /* just get the command */

AppName = Translate(AppName,'  ','%.') /* these aren't cool */
Do While Words(AppName) > 1            /* slam it into one word */
  Parse Var AppName Prefix Suffix
  AppName = Prefix || Suffix
End
                                       /* numbers aren't cool */
If Datatype(Left(AppName,1)) = 'NUM' Then AppName = 'Q'AppName
AppName = Strip(Left(AppName,8))       /* make it 8 chars long */
If Length(AppName) = 1 Then AppName = 'Q'AppName  /* at least 2 chars*/

Return
/*-------------------------------------------------------------------*/
/*- if there are any blank screen names, these are the initial sess -*/
/*-------------------------------------------------------------------*/
LoadScreens:

x = Outtrap('Scn.')
Call Screens                    /* get list of active app names */
x = Outtrap('OFF')

Active = 0
iTemp = 0                      /* make a list of temp screen names */
Do iScn = 1 To Scn.0
  Parse Var Scn.iScn 'Screen number=' ScnNum ,
    ' Screen name=' ScnName 49 ScnPerm 50 51 ScnAct
  ScnName = Strip(ScnName)
  Scn.iScn = ScnName                    /* save only screen name     */
  If ScnAct = '*' Then Active = ScnNum  /* save active screen number */
  If ScnPerm = 'T' Then Do
    iTemp = iTemp + 1
    Temp.iTemp = ScnNum iScn
  End

  If InitPrefix = '' Then Iterate

  Parse Var ScnName (InitPrefix) iScnInit .
  If iScnInit /= '' & Datatype(iScnInit) = 'NUM' Then ,
    ScnInit.iScnInit = ''
End
Temp.0 = iTemp

If InitPrefix = '' Then Return

Do iTemp = 1 To Temp.0          /* rename the temp screens to the   */
  Do iScnInit = 1 To ZSCRMAX    /* init names. find next avail.     */
    If Symbol('ScnInit.'iScnInit) = 'VAR' Then Iterate
    Parse Var Temp.iTemp ScnNum iScn .
    Scn.iScn = InitPrefix || iScnInit   /* save new value in scn list*/
    ScnInit.iScnInit = ''               /* mark this number unavail  */
    Swap = "SWAP" ScnNum || ZDEL"SCRNAME" Scn.iScn "PERM" ,
      ZDEL"SWAP" Active
    "DISPLAY PANEL(ISPBLANK) COMMAND(SWAP)"
    Leave
  End
End

Return
/*-------------------------------------------------------------------*/
/*- libdef the ispf profile dataset ahead of everything else        -*/
/*-------------------------------------------------------------------*/
LibdefProfile:
Arg Output

Msg = Msg('OFF')
Ldsi = Listdsi('ISPPROF' 'FILE' 'NODIRECTORY')  /* find prof name */
Msg = Msg(Msg)
If Ldsi > 4 Then Signal Failure
ProfDsn = SYSDSNAME
"LIBDEF ISPTLIB DATASET ID('"ProfDsn"') STACK"  /* libdef isptlib */

If Output = 'Y' Then "LIBDEF ISPTABL DATASET ID('"ProfDsn"') STACK"

Return
/*-------------------------------------------------------------------*/
/*- edit the startup command table.                                 -*/
/*-------------------------------------------------------------------*/
EditTable:

Call LibdefProfile 'Y'
"TBSTATS STARTUP STATUS1(STATUS1) STATUS3(STATUS3)"
If Status3 = 2 Then Do                /* can't access table      */
  Say 'Startup table is currently unavailable.'
  Say 'Are you updating it in another screen?'
  "LIBDEF ISPTLIB"
  "LIBDEF ISPTABL"
  Return
End

ProfTab = ProfDsn"(STARTUP)"            /* see if private copy */
Sdsn = Sysdsn("'"ProfTab"'")
If Sdsn /= 'OK' Then Do                 /* no private copy yet */
  If Status1 = 1 Then Call CopyTable    /* but it exists elsewhere */
  Else Call CreateTable                 /* brand spanking new table*/
End

"TBOPEN STARTUP WRITE"                  /* now that we have one */
Call DisplayTable                       /* let user play        */
"TBCLOSE STARTUP"                       /* then save it         */
"LIBDEF ISPTLIB"
"LIBDEF ISPTABL"

Return
/*-------------------------------------------------------------------*/
/*- display the table so user can play                              -*/
/*-------------------------------------------------------------------*/
DisplayTable:

Inserting = 0
Csrrow = 0
ZTDTOP = 0
Do Forever
  "TBTOP STARTUP"
  "TBSKIP STARTUP NUMBER("ZTDTOP") NOREAD"
  "TBDISPL STARTUP PANEL(STARTUP) POSITION(CRP) ROWID(ROW)" ,
    "AUTOSEL(NO) CURSOR(TABNAME) CSRROW("Csrrow")"
  If RC > 4 Then Leave

  If ZCMD /= '' Then Do        /* primary commands go here */
    Upper ZCMD
    Select
      When 1 = 0 Then Nop
      Otherwise Nop
    End
  End

  Do While ZTDSELS > 0       /* line commands go here */
    Upper LC TabName TabCmd  /* this loop allows multiple selections */
    Select
      When LC = 'I' Then Do  /* user inserted a new command */
        Inserting = 1
        "TBVCLEAR STARTUP"
        "TBADD STARTUP"
      End
      When LC = 'R' Then Do  /* user repeated a command */
        Inserting = 1
        TabName = ''
        "TBADD STARTUP"
      End
      When LC = 'D' Then "TBDELETE STARTUP"  /* user deleted */
      Otherwise Do                           /* just hit enter */
        If TabName = '' Then "TBDELETE STARTUP"
        Else "TBMOD STARTUP"
      End
    End
    If ZTDSELS > 1 Then "TBDISPL STARTUP POSITION(CRP) ROWID(ROW)"
    Else ZTDSELS = 0
  End
  LC = ' '
  TabName = ''
  "TBGET STARTUP POSITION(CSRROW)"         /* place cursor properly */
  If Inserting = 0 & RC = 0 Then "TBDELETE STARTUP"
  Inserting = 0
End
TabName = ''
"TBGET STARTUP"
If RC = 0 Then "TBDELETE STARTUP"

Return
/*-------------------------------------------------------------------*/
/*- copy the table from isptlib concat to ispprof for private copy. -*/
/*-------------------------------------------------------------------*/
CopyTable:

"TBOPEN STARTUP NOWRITE"
"TBCREATE STARTUP2 KEYS(TABNAME) NAMES(TABCMD) WRITE"
"TBTOP STARTUP"
"TBSKIP STARTUP NUMBER(1)"
Do While RC = 0
  "TBADD STARTUP2"
  "TBSKIP STARTUP NUMBER(1)"
End
"TBEND STARTUP"
"TBCLOSE STARTUP2 NAME(STARTUP)"

Say 'Copied default table to your own private library in' ProfDsn

Return
/*-------------------------------------------------------------------*/
/*- create a new table from scratch.                                -*/
/*-------------------------------------------------------------------*/
CreateTable:

"TBCREATE STARTUP KEYS(TABNAME) NAMES(TABCMD) WRITE"
TabName = 'TLMS';  TabCmd = 'TSO %TLMS'
"TBADD STARTUP"
TabName = 'DSL'; TabCmd = '1.3.4'
"TBADD STARTUP"
TabName = 'SF'; TabCmd = 'U314'
"TBADD STARTUP"
TabName = 'PARM1';
TabCmd = "CMD(%EVBCMD 'SYS1.PARMLIB' E) NEWAPPL(ISR)"
"TBADD STARTUP"
"TBCLOSE STARTUP"

Say 'Created a new startup table in' ProfDsn
Say 'Move this table to a common ISPTLIB library to share it with others.'

Return
/*-------------------------------------------------------------------*/
/*- this is an application startup exec that combines the function- -*/
/*- ality of different shortcut techniques that are available in    -*/
/*- ISPF. to install:                                               -*/
/*-   > place the following entry into your site/user cmds table:   -*/
/*-     "SS       0 SELECT CMD(%STARTUP &ZPARM)"                    -*/
/*-   > place the STARTUP panel in ISPPLIB concatenation            -*/
/*-   > STARTUP, SCREENS, and EVBCMD rexx execs in SYSEXEC/SYSPROC  -*/
/*-                                                                 -*/
/*- to use, simply enter 'SS appname' where appname is anything you -*/
/*- can enter on the ISPF 'START' command service:                  -*/
/*-   > an option off the main menu (1.3.4)                         -*/
/*-   > a tso command (tso %tlms)                                   -*/
/*-   > an ispf command from a command table                        -*/
/*-   > an ispf dialog service (cmd(%sdsf))                         -*/
/*-   > etc. etc.                                                   -*/
/*-                                                                 -*/
/*- the SS command will start the new service in a new session, and -*/
/*- create a default screen name to match it (using the SCRNAME ISPF-*/
/*- command). the screen name it creates depends on what command you-*/
/*- pass to it. it must parse out of the parms a valid screen name  -*/
/*- that it can pass to the SCRNAME command.                        -*/
/*-   > for an option such as 1.3.4, the screen name will be Q134   -*/
/*-   > for a tso command such as TSO %TLMS, it will be TLMS        -*/
/*-   > for an command table command, it will be the command name   -*/
/*-   > for a dialog service such as CMD(%SDSF), it will be SDSF    -*/
/*-   > etc. etc.                                                   -*/
/*- there is no attempt to make the screen name unique. if there    -*/
/*- are duplicate names, you can override the name manually on the  -*/
/*- newly created screen.                                           -*/
/*-                                                                 -*/
/*- you can switch to the session you created by issuing the same   -*/
/*- command again, or issuing the SS command with the screen name:  -*/
/*-   > SS 1.3.4 will take you back to the 1.3.4 screen             -*/
/*-   > SS Q134 will also take you there                            -*/
/*-   > SS TSO %TLMS will take you back to the tlms screen          -*/
/*-   > SS TLMS will also take you there                            -*/
/*-   > etc. etc.                                                   -*/
/*- obviously, it's much easier to use the short screen name. the   -*/
/*- command will substitute a "SWAP xxx" command if it finds an     -*/
/*- active session with the same name.                              -*/
/*-                                                                 -*/
/*- entering 'SS' with no parameters is the same as entering the    -*/
/*- ispf 'SWAP LIST' command. you can then see the screen names     -*/
/*- that this command created (as well as any others you created).  -*/
/*-                                                                 -*/
/*- so this one 'SS' command will combine the functionality of the  -*/
/*- ISPF START, SCRNAME, SWAP LIST, and SWAP XXX commands, all in   -*/
/*- one easy to remember command.                                   -*/
/*-                                                                 -*/
/*- but that's not all. this command will also support it's own     -*/
/*- variation of the ISPF commands table. entering 'SS /' will      -*/
/*- bring up a table on which you can enter a screen name followed  -*/
/*- by any valid START command parameters. the 'SS' command will    -*/
/*- search this table for a match and if found, start the service   -*/
/*- using the specified screen name. therefore, you could create    -*/
/*- entries such as:                                                -*/
/*-   > TLMS     TSO %TLMS                                          -*/
/*-   > SDSF     CMD(%SDSF)                                         -*/
/*-   > DSL      1.3.4                                              -*/
/*-   > PARM1    CMD(%EVBCMD 'SYS1.PARMLIB' E) NEWAPPL(ISR)         -*/
/*- then, entering 'SS TLMS' will start the tlms command, or        -*/
/*- entering 'SS PARM1' will pop you into edit of sys1.parmlib with -*/
/*- the correct applid, so that pfkeys will be properly set.        -*/
/*- entering 'SS DSL' will bring you to option 1.3.4 of the main    -*/
/*- menu (i'm assuming that this will be the dataset list panel).   -*/
/*-                                                                 -*/
/*- at install time, the sysprog can create a default set of        -*/
/*- commands. the table is always saved in the ISPF profile dataset.-*/
/*- he can then move this table to a common ISPTLIB dataset so that -*/
/*- everyone will have access to the default. after that, if anyone -*/
/*- enters 'SS /', the default table will be copied to that user's  -*/
/*- ISPF profile dataset, and end up having thier own personal copy -*/
/*- of the table which they can customize to thier heart's content. -*/
/*-                                                                 -*/
/*- tip: the EVBCMD exec is shipped with this to use as a way to    -*/
/*- start the Edit/View/Browse ISPF service with a NEWAPPL(ISR) so  -*/
/*- that pfkeys will be set properly. to use this in the cmd table, -*/
/*- put "CMD(%EVBCMD 'my.dataset.name' x) NEWAPPL(ISR)" where x is  -*/
/*- either E V or B for Edit View or Browse.                        -*/
/*-                                                                 -*/
/*- tip: it's better to put a dialog service in the table such as   -*/
/*- CMD(), PGM() or PANEL() rather than an option or command off the-*/
/*- main menu such as 1.3.4, TSO TLMS etc. since in the first case  -*/
/*- when you exit from the application you end the entire session,  -*/
/*- but in the second case you'll end up on the primary menu, so    -*/
/*- you'll have to hit end again to exit the session.               -*/
/*-                                                                 -*/
/*- tip: by default, this exec will rename any temp screen names    -*/
/*- it finds whenever it's run. this will rename the initial session-*/
/*- and any session started with the SPLIT or manual START command. -*/
/*- this behaviour can be turned off by setting InitPrefix to null  -*/
/*- in the StartApp routine above.                                  -*/
/*-                                                                 -*/
/*- tip: go into ISPF general options and turn off "Always show     -*/
/*- split line" in order to put each session in a full screen.      -*/
/*-                                                                 -*/
/*- tip: replace any pfkey settings to use 'SWAP NEXT' instead of   -*/
/*- 'SWAP' so you can roll thru your sessions.                      -*/
/*-                                                                 -*/
/*- there's lots of room for performance improvments, one being to  -*/
/*- open the table when ispf is started. that way the table won't   -*/
/*- have to be reopened every time, the use count will just be      -*/
/*- bounced. if the table isn't desired, you can comment out the    -*/
/*- call to TableLookaside at around line 60 above.                 -*/
/*-                                                                 -*/
/*- for questions/comments contact Robin Murray at:                 -*/
/*-   robin_murray@maritimelife.ca (semi-permanent contract pos) or -*/
/*-   robinmurray@cyberdude.com (permanent email address)           -*/
/*-   tel: 902-453-7300 x4177                                       -*/
/*-                                                                 -*/
/*- changes:                                                        -*/
/*- 08/29/02:                                                       -*/
/*- > removed code to allow screen number as people want to be able -*/
/*-   to select an option from the main screen and there is no way  -*/
/*-   to differentiate between the option and screen id.            -*/
/*- > changed code to rename any screen that doesn't have the perm  -*/
/*-   option on, regardless of the initial name                     -*/
/*- > added the 'SCRNAME ON' command when a new session is created  -*/
/*- 08/27/02:                                                       -*/
/*- > added code to rename the blank and dslist screens to initx    -*/
/*- > added code to enable using 'SS n' where n is a screen number  -*/
/*-------------------------------------------------------------------*/
