/******************************** REXX ********************************/
/**********************************************************************/
/* TRACE r                                                            */
n_st = mark(2)                              /* Mark next line         */
/*--------------------------ooo000OOOO000ooo--------------------------*/
/*                                                                    */
/* TRINTA - TRace INTerval on All                                     */
/*                                                                    */
/*                                                                    */
/* Macro to process time differences between CICS trace entries.      */
/* The interval will be calculate from the previous entry for the     */
/* same task and should be run on a "FULL" print.                     */
/*                                                                    */
/* Permissable parameters:                                            */
/* ss.ssss - A time value used to highlight any increments greater    */
/*           than it.                                                 */
/* KT      - Literal to indicate Keep Task line. By default all lines */
/*           except for the main entry and the TASK-nnnnn line will   */
/*           be deleted prior to processing. After evaluating         */
/*           increments, the task line will be deleted to minimise    */
/*           displayable data. This parameter will retain the task    */
/*           data line.                                               */
/* ?       - Invoke this help tutorial.                               */
/*                                                                    */
/* CAUTION - CAUTION - CAUTION - CAUTION - CAUTION - CAUTION          */
/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~          */
/* This is a destructive macro and should be cancelled out of if not  */
/* being viewed or under under the SDSF editor.                       */
/*                                                                    */
/*--------------------------------------------------------------------*/
n_en = mark(-2)                             /* Mark prev 2 line       */

    Address ISPEXEC
    ARG parm#
    Parse SOURCE . . xcmd .
    If parm# /= "" Then Signal byp1
    "ISPEXEC CONTROL ERRORS RETURN"
    "ISPEXEC ISREDIT MACRO (parm#) NOPROCESS"
    If rc > 0 Then SIGNAL byp1

byp1:
    cactn = "RETURN"
/*  cactn = "CANCEL"                                                  */
    "ISPEXEC CONTROL ERRORS" cactn

ini1:
    Parse Upper VAR parm# parm1 parm2
    If parm1 = '?' Then Signal Help_me

    er = .0001                              /* Excessive response    */
    If Datatype(parm1) = 'NUM' Then er = parm1
    If parm1 = 'KT' | parm2 = 'KT' Then kt = 'Y'
    Numeric Digits 20
    "ISREDIT (status) = USER_STATE"

    "ISREDIT RESET"
    "ISREDIT X ALL"
    "ISREDIT F P'¬¬' 2 ALL"
    "ISREDIT X '1CICS' ALL"
    "ISREDIT F 'TASK-' ALL"
    "ISREDIT X 'SELECTIVE TRACE PRINT PARAMETERS' FIRST"
    "ISREDIT DEL ALL X"

    "ISREDIT F '   TASK-' FIRST"
    If rc /= 0 Then Do
        gc009 = 'Cannot find "TASK-". Is this a CICS trace??'
        "SETMSG MSG(GC009)"
        Signal get_out
    End

    Do Forever
        "ISREDIT (lin#,col#) = CURSOR"
        "ISREDIT (linec) = LINE .ZCSR"
        Parse VAR linec task# .
        "ISREDIT F '"task#"' PREV"
        If rc = 0 Then Do
            "ISREDIT (linep) = LINE .ZCSR"
            Parse VAR linec . 'TIME-' hh ':' mm ':' ss .
            ctime = (hh * 360 + mm * 60 + ss) * 10000000000
            Parse VAR linep . 'TIME-' hh ':' mm ':' ss .
            ptime = (hh * 360 + mm * 60 + ss) * 10000000000
            dtime = (ctime - ptime) / 10000000000
            "ISREDIT CURSOR =" lin# col#+1
            If dtime > er Then Line = Right('Threshold' er '<',20)
            Else line = Substr(' ',1,20)
            line = line Format(dtime,4,10)'   : ' task#
            x = nl(line)
        End
        Else x = nl('   No previous :' task#)
        "ISREDIT F '   TASK-' NEXT"
        If rc /= 0 Then Leave
    End
    "ISREDIT F '@@@@@@@@@@' .ZFIRST .ZFIRST"
    If kt /= 'Y' Then Do
        "ISREDIT X '   TASK-' ALL"
        "ISREDIT DEL ALL X"
    End

get_out:
    "ISREDIT USER_STATE = (status)"
    Exit

nl: Parse Arg ntl
    "ISREDIT LINE_BEFORE" lin#-1 "= NOTELINE (ntl)"
    Return 0

Help_me:
    "ISREDIT (caps) = CAPS"; "ISREDIT CAPS = OFF"
    msgt = 'NOTELINE'
    x = nl_h('*'Centre('ooo000OOOO000ooo',70,'-')'*')
    Do i=n_st To n_en
        line = Sourceline(i)
        If Index(line,'/*') >0 Then Parse Value line With '/*' line '*/'
        x = nl_h('*'Substr(line,1,70)'*')
    End
    x = nl_h('*'Copies('-',70)'*')
    "ISREDIT CAPS = (caps)"

    Exit

nl_h:Parse Arg n#;"ISREDIT LINE_BEFORE .ZFIRST = &MSGT (n#)";Return 0

Mark: Arg diff;If Datatype(diff)/='NUM' Then diff=1;Return sigl+diff
