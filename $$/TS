/*            REXX                                                    */
ARG parm1 parm2 parm3
/*    TRACE r                                                         */
/*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*/
/*                                                                    */
/* This routine will maintain both an automatic and manual set of     */
/* attendance times.                                                  */
/* Times will be reconciled between the two types. Ie. if an entry    */
/* in the manual set is missing while it's counterpart is in the      */
/* auto set, it will be coppied accross and vice versa.               */
/*                                                                    */
/* The break taken will default to 00.00 and any different value will */
/* be reconciled between the two sets.                                */
/*                                                                    */
/* The table is automatically backed up and initialised on Mondays if */
/* Tuesdays start time is not blank (ie. has not been initialised).   */
/*                                                                    */
/* This routine may be invoked with parameters LON and LOF during     */
/* logon and logoff processing respectively.                          */
/*                                                                    */
/* The following members are required to package this routine:        */
/*   REXX:                                                            */
/*     TS       - Driver                                              */
/*     $DATEMAN - Date manipulation routine for displacement calc     */
/*                                                                    */
/*   Panels:                                                          */
/*     TIMET    - Display panel                                       */
/*                                                                    */
/*   Table:                                                           */
/*     TIMETABL - ISPF table to keep the two sets of times and their  */
/*                respective backups.                                 */
/*                                                                    */
/*   Skeleton:                                                        */
/*     TIMET    - Skeleton for printing.                              */
/*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= */
    PARSE UPPER ARG parm1 parm2 parm3
    If parm1 /= "" THEN SIGNAL byp1
    ADDRESS ISPEXEC
    "ISPEXEC CONTROL ERRORS RETURN"
    "ISPEXEC ISREDIT MACRO (parm1,parm2,parm3)"
    IF rc > 0 THEN SIGNAL byp1
    PARSE UPPER VAR parm1 parm1
    PARSE UPPER VAR parm2 parm2
    PARSE UPPER VAR parm3 parm3

byp1:
    cactn = "RETURN"
/*  cactn = "CANCEL"                                                  */
    "ISPEXEC CONTROL ERRORS" cactn

ini1:
    hlq = $alkhlq()
    isptlib = hlq".ISPTLIB"
    "ISPEXEC LIBDEF ISPTLIB DATASET ID('&ISPTLIB') "
    "ISPEXEC LIBDEF ISPTABL DATASET ID('&ISPTLIB')"

    delim = "."
    dow   = ''
    date  = ''
    start = ''
    finis = ''
    break = ''
    timsz = "N"
    save  = "Y"
    table = "TIMETABL"
    skel  = "TSS"
    days = ""         ||,
           "Monday   "||,
           "Tuesday  "||,
           "Wednesday"||,
           "Thursday "||,
           "Friday   "||,
           "Saturday "||,
           "Sunday   "||,
           ""
    eow =  "Sunday"
    sow =  "Monday"

    "ISPEXEC TBEND &TABLE"
    "ISPEXEC TBEND &TABLE"
    "ISPEXEC TBOPEN &TABLE"
    If rc /= 0       Then Call cretab
    If parm1 = 'NEW' Then Call cretab
    today   = DATE('w')
    budsn   = hlq'.TIMESH.DATA'

/*--------------------------------------------------------------------*/
/* If today is a a Monday, test if Tuesday's start is NULLS. If not,  */
/* table has not been initialised...                                  */
/*--------------------------------------------------------------------*/
    If today = sow & Substr(parm1,1,2) /= '/K' Then Do
        "ISPEXEC TBSKIP &TABLE NUMBER(2)"
        If start /= "" Then Do
            Call printit
            Call newtab
            save = 'Y'
        End
        "ISPEXEC TBTOP &TABLE"
    End

/*--------------------------------------------------------------------*/
/* Test and process LOGON/LOGOFF action if applicable                 */
/*--------------------------------------------------------------------*/
    If SUBSTR(parm1,1,2) = "LO" Then Do
        pos = INDEX(days,today)
        i = (((pos - 1)%9)+1) + 7
        "ISPEXEC TBSKIP &TABLE NUMBER(&I)"
        time = SUBSTR(TIME(),1,2)"."SUBSTR(TIME(),4,2)
        If SUBSTR(parm1,3,1) = "N" Then Do
            If start = "" Then start = time
            Else               save  = "N"
        End
        Else finis = time
       If save = "Y" Then "ISPEXEC TBMOD &TABLE"
       Say "TS updated....."
       Signal eop
    End

    Call readtab
    csr1 = "ZCMD"

scr1:
/*--------------------------------------------------------------------*/
/* Calculate break even time for the day....                          */
/*--------------------------------------------------------------------*/
    pos = INDEX(days,today)
    i = (((pos - 1)%9)+1)
    data = "time = st"i
    INTERPRET data
    Call parsetim
    t1 = hh*60 + mm

    data = "time = br"i
    INTERPRET data
    If time = "" Then t2 = 0
    Else Do
        Call parsetim
        t2 = hh*60 + mm
    End

    t3 = t1 + t2 + 8*60
    h3 = t3 % 60
    m3 = RIGHT(t3 // 60,2,'0')
    If h3 > 12 then h3 = h3-12
    be1 = "B.E.:"
    be2 = h3"."m3

/*--------------------------------------------------------------------*/
/* Test for Friday and calculate break even time.....                 */
/*--------------------------------------------------------------------*/
    If today = eow Then Do
        time = st5
        Call parsetim
        h1 = hh
        m1 = mm

        time = tl4
        timsz = "I"                         /* Ignore time size       */
        Call parsetim
        timsz = "N"
        h2 = hh
        m2 = mm

        time = br5
        Call parsetim
        h3 = hh
        m3 = mm
        t3 = h3*60 + m3
        t2 = h2*60 + m2
        t1 = h1*60 + m1
        tl = t1+t2+t3
        h3 = tl % 60
        m3 = RIGHT(tl // 60,2,'0')
        If h3 > 12 then h3 = h3-12
        be3 = "Week:"
        be4 = h3"."m3
        csr1 = "FN5"
    End

scr1d:
/*--------------------------------------------------------------------*/
/* Display screen                                                     */
/*--------------------------------------------------------------------*/
    sel  = ""
    zcmd = ""
    timo = SUBSTR(TIME(),1,5)
    "ISPEXEC DISPLAY PANEL(TIMET) CURSOR(&CSR1)"
    If rc > 4 Then Do
        If save = 1 Then Call bldtab
        Else             Call bldtaba
        Signal eop
    End

    csr1 = ""

    If zcmd = "TRACE" Then Do
        If parm1 = "OFF"  Then Trace Off
        Else                   Trace r
        Signal scr1
    End

    If zcmd = 'EDIT' | zcmd = '/E' Then Do
        "ISPEXEC EDIT DATASET('&BUDSN')"
        Signal scr1
    End

    If zcmd = "PRNT" |,
       SUBSTR(zcmd,1,1) = "PR" Then Do
        Call printit
        Signal scr1
    End

    If zcmd = "NEW" |,
       SUBSTR(zcmd,1,2) = "NE" Then Do
        Call newtab
        Call readtab
        Signal scr1
    End

    If zcmd = "CREATE" |,
       SUBSTR(zcmd,1,2) = "CR" Then Do
        Call cretab
        Call readtab
        Signal scr1
    End

    If zcmd = "NORMAL" |,
       SUBSTR(zcmd,1,2) = "NO" Then Do
        If save  = 2 Then Do
            Call bldtaba
            Call readtab
        End
        Else Do
            gc009 = "Already displaying NORMAL data."
            "ISPEXEC SETMSG MSG(GC009)"
        End
        Signal scr1
    End

    If zcmd = "ACTUAL" |,
       SUBSTR(zcmd,1,2) = "AC" Then Do
        If save  = 1 Then Do
            Call bldtab
            Call readtaba
        End
        Else Do
            gc009 = "Already displaying ACTUAL data."
            "ISPEXEC SETMSG MSG(GC009)"
        End
        Signal scr1
    End

    If zcmd = "BACKUP" |,
       SUBSTR(zcmd,1,2) = "BA" Then Do
        Call bkuptab
        Signal scr1
    End

    If zcmd = "RESTORE" |,
       SUBSTR(zcmd,1,2) = "RE" Then Do
        If parm1 /= '' Then Call bldotab
        Else                Call resttab
        Call readtab
        Signal scr1
    End

    If zcmd = "TEST" |,
       SUBSTR(zcmd,1,2) = "TE" Then Do
        Call dummytb
        Call calctab
        Signal scr1
    End

    If zcmd = "PRNT" Then Do
        Call printit
        If save  = 1 Then  Call readtab
        Else               Call readtaba
        Signal scr1
    End

    If zcmd = "EDIT" Then Do
       "ISPEXEC EDIT DATASET('&BUDSN')"
        Signal scr1
    End

    Call calctab
    Signal scr1

/*--------------------------------------------------------------------*/
/* Extend calculation in table                                        */
/*--------------------------------------------------------------------*/
calctab:
/*  Trace Off                                                         */
    th  = 0
    tm  = 0
    dt1="";rt1="";tl1=""
    dt2="";rt2="";tl2=""
    dt3="";rt3="";tl3=""
    dt4="";rt4="";tl4=""
    dt5="";rt5="";tl5=""
    dt6="";rt6="";tl6=""
    dt7="";rt7="";tl7=""
    Do i=1 To 7
        data = "time = st"i
        INTERPRET data
        If time = "" Then Iterate

        data = 'csr1 = "ST'i'"'
        INTERPRET data
        Call parsetim
        data = "st"i" = hh||delim||mm"
        INTERPRET data
        h1 = hh
        m1 = mm

        data = "time = br"i
        INTERPRET data
        data = 'csr1 = "BR'i'"'
        INTERPRET data
        If SUBSTR(time,1,1) = "S" Then time = '00.30'
        Call parsetim
/*      If hh||mm = 0000 & save = 1 Then mm = 30                      */
        data = "br"i" = hh||delim||mm"
        INTERPRET data
        h3 = hh
        m3 = mm

        data = "time = fn"i
        INTERPRET data
        data = 'csr1 = "FN'i'"'
        INTERPRET data
        Call parsetim
        data = "fn"i" = hh||delim||mm"
        INTERPRET data
        h2 = hh
        m2 = mm
/*      If time = 0 Then Leave                                        */

        If h2 < h1 Then h2 = h2 + 12
        If h2 < h1 Then h2 = h2 + 12
        t2 = h2*60 + m2
        t1 = h1*60 + m1
        t3 = h3*60 + m3
        df = t2-(t1+t3)
        h4 = RIGHT(df % 60,2,'0')
        m4 = RIGHT(df // 60,2,'0')
        data = "dt"i" = h4||delim||m4"
        INTERPRET data
        data = "dt"i" = SUBSTR(dt"i",1,5)"
        INTERPRET data

        data = "time = dt"i
        INTERPRET data
        data = 'csr1 = "RT'i'"'
        INTERPRET data
        timsz = "I"
        Call parsetim
        timsz = "N"
        t1 = th + hh
        m1 = tm + mm
        tt = t1*60 + m1
        th = RIGHT(tt % 60,3,' ')
        tm = RIGHT(tt // 60,2,'0')
        data = "rt"i" = th||delim||tm"
        INTERPRET data
        data = "rt"i" = SUBSTR(rt"i",1,6)"
        INTERPRET data

        tl = 2400 - tt
        h1 = RIGHT(tl % 60,3,' ')
        m1 = ABS(tl // 60)
        m1 = RIGHT(m1,2,'0')
        data = "tl"i" = h1||delim||m1"
        INTERPRET data
        data = "tl"i" = SUBSTR(tl"i",1,6)"
        INTERPRET data
    End

/*--------------------------------------------------------------------*/
/* Parse and validate 'time' into 'hh' 'mm'                           */
/*--------------------------------------------------------------------*/
parsetim:
    If time = '' Then time = 0
    If DATATYPE(time) /= "NUM" Then Signal err2
    If timsz /= "I" Then ,
        If time > 24 Then Signal err2
    pos = INDEX(time,delim)
    If pos > 0 Then Do
        mm = STRIP(SUBSTR(time,pos+1,2))
        If pos = 1 Then hh = 0
        Else            hh = SUBSTR(time,1,pos-1)
    End
    Else Do
        hh = time
        mm = 0
    End
    If timsz /= "I" Then ,
        If hh > 24 Then Signal err2
    If mm > 60 Then Signal err2
    hh = RIGHT(hh,2,'0')
    mm = LEFT(mm,2,'0')
    Return 0

/*--------------------------------------------------------------------*/
/* Initialise weekly table after backup                               */
/*--------------------------------------------------------------------*/
newtab:

    Call bkuptab

    disp = DATE('b')//7
    date = DATE('e')
    disp = (disp +1)*-1                     /* Monday start           */
/*  disp = (disp - 2)*-1                       Thursday Start         */
    date = $DATEMAN('E-N',date,,disp)
    xdate = date


    "ISPEXEC TBTOP &TABLE"

    Do i=1 To 14
        j = i // 7
        If j = 0 Then j = 7
        date = xdate
        disp = j
        date = $DATEMAN('E-N',date,,disp)
        dow  = $DATEMAN('E2D',date)
        key = i
        start = ""
        finis = ""
        break = ""
        "ISPEXEC TBMOD &TABLE"
    End
    Return 0

/*--------------------------------------------------------------------*/
/* Create an entirely new table. All previous data lost               */
/*--------------------------------------------------------------------*/
cretab:
    "ISPEXEC TBEND &TABLE"
    "ISPEXEC TBEND &TABLE"
    "ISPEXEC TBCREATE &TABLE KEYS(KEY) NAMES(DOW DATE START",
        "FINIS BREAK) REPLACE"
    If rc > 4 THEN Do
        gc009 = "Table '"table"' could not be created."
        Signal err1
    End
    start = ""
    finis = ""
    break = ""

    Do i=1 To 28
        j = i // 7
        If j = 0 Then j = 7
        dow = SUBSTR(days,(j-1)*9+1,9)
        dow = STRIP(dow)
        key = i
        "ISPEXEC TBMOD &TABLE"
    End
    Return 0

/*--------------------------------------------------------------------*/
/* Populate table with dummy 'TEST' data                              */
/*--------------------------------------------------------------------*/
dummytb:
    st1=8.00;fn1=5.00;br1=0.30
    st2=8.00;fn2=5.00;br2=0.30
    st3=8.00;fn3=5.00;br3=0.30
    st4=8.00;fn4=5.00;br4=0.30
    st5=8.00;fn5=5.00;br5=0.30
    st6=8.00;fn6=5.00;br6=0.30
    st7=8.00;fn7=5.00;br7=0.30

    Do i=1 To 7
        start = VALUE("st"i)
        finis = VALUE("fn"i)
        break = VALUE("br"i)
        key = i
        "ISPEXEC TBMOD &TABLE"
    End
    Call bldtab
    Return 0

/*--------------------------------------------------------------------*/
/* Read 'NORMAL' table                                                */
/*--------------------------------------------------------------------*/
readtab:
    "ISPEXEC TBTOP &TABLE"
    Do i=1 To 7
        "ISPEXEC TBSKIP &TABLE"
        data = "dw"i" = dow"
        INTERPRET data
        data = "da"i" = date"
        INTERPRET data
        data = "st"i" = start"
        INTERPRET data
        data = "fn"i" = finis"
        INTERPRET data
        data = "br"i" = break"
        INTERPRET data
    End
    "ISPEXEC TBTOP &TABLE"
    "ISPEXEC TBSKIP &TABLE NUMBER(7)"
    Do j=8 To 14
        i = j - 7
        "ISPEXEC TBSKIP &TABLE"
/*      If start = "" Then Leave                                      */
        If VALUE("st"i) = "" Then Do
            data = "st"i" = start"
            INTERPRET data
        End
        If VALUE("fn"i) = "" Then Do
            data = "fn"i" = finis"
            INTERPRET data
        End
        If VALUE("fn"i) = "00.00" Then Do
            If finis /= "00.00" Then Do
                data = "fn"i" = finis"
                INTERPRET data
            End
        End
        If VALUE("br"i) = "" Then Do
            data = "br"i" = break"
            INTERPRET data
        End
        If VALUE("br"i) = "00.00" Then Do
            If break /= "00.00" Then Do
                data = "br"i" = break"
                INTERPRET data
            End
        End
    End
    save = 1
    Call calctab
    Return 0

/*--------------------------------------------------------------------*/
/* Create actual table                                                */
/*--------------------------------------------------------------------*/
readtaba:
    "ISPEXEC TBTOP &TABLE"
    "ISPEXEC TBSKIP &TABLE NUMBER(7)"
    Do j=8 To 14
        i = j - 7
        "ISPEXEC TBSKIP &TABLE"
        data = "dw"i" = dow"
        INTERPRET data
        data = "da"i" = date"
        INTERPRET data
        data = "st"i" = start"
        INTERPRET data
        data = "fn"i" = finis"
        INTERPRET data
        data = "br"i" = break"
        INTERPRET data
    End

    "ISPEXEC TBTOP &TABLE"
    Do i=1 To 7
        "ISPEXEC TBSKIP &TABLE"
/*      If start = "" Then Leave                                      */
        If VALUE("st"i) = "" Then Do
            data = "st"i" = start"
            INTERPRET data
        End
        If VALUE("fn"i) = "" Then Do
            data = "fn"i" = finis"
            INTERPRET data
        End
        If VALUE("br"i) = "" Then Do
            data = "br"i" = break"
            INTERPRET data
        End
/*      If VALUE("br"i) = "00.00" Then Do                             */
/*          If break /= "00.00" Then Do                               */
/*              data = "br"i" = break"                                */
/*              INTERPRET data                                        */
/*          End                                                       */
/*      End                                                           */
    End
    save = 2
    Call calctab
    Return 0

/*--------------------------------------------------------------------*/
/* Populate 'NORMAL' table from display screen                        */
/*--------------------------------------------------------------------*/
bldtab:
    "ISPEXEC TBTOP &TABLE"
    Do i=1 To 7
        "ISPEXEC TBSKIP &TABLE"
        data = "dow = dw"i
        INTERPRET data
        data = "start = st"i
        INTERPRET data
        data = "finis = fn"i
        INTERPRET data
        data = "break = br"i
        INTERPRET data
        "ISPEXEC TBMOD &TABLE"
    End
    Return 0

/*--------------------------------------------------------------------*/
/* Populate 'ACTUAL' table from display screen                        */
/*--------------------------------------------------------------------*/
bldtaba:
    "ISPEXEC TBTOP &TABLE"
    "ISPEXEC TBSKIP &TABLE NUMBER(7)"
    Do j=8 To 14
        i = j - 7
        "ISPEXEC TBSKIP &TABLE"
        data = "dow = dw"i
        INTERPRET data
        data = "start = st"i
        INTERPRET data
        data = "finis = fn"i
        INTERPRET data
        data = "break = br"i
        INTERPRET data
        "ISPEXEC TBMOD &TABLE"
    End
    Return 0

/*--------------------------------------------------------------------*/
/* Back up 'NORMAL' and 'ACTUAL' table into records 15-28 respectively*/
/*--------------------------------------------------------------------*/
bkuptab:
    x = MSG('Off')
    Address TSO "ALLOC F(ISPFILE) DA('"budsn"') SHR REU"
    If rc /= 0 Then ,
        Address TSO "ALLOC F(ISPFILE) DA('"budsn"') NEW CATALOG",
            "TRACKS SPACE(15,5) DSORG(PO) RECFM(F B) LRECL(80)",
            "BLKSIZE(0) DIR(20) UNIT(SYSALLDA)"
    Do i=1 To 7
        data = 'da = da'i
        INTERPRET data
        dmember = 'D'SUBSTR(da,9,2)||,
                     SUBSTR(da,4,2)||,
                     SUBSTR(da,1,2)
        If SYSDSN("'"budsn"("dmember")'") /= 'OK' Then Leave
    End
    "ISPEXEC FTOPEN"
    type = "Normal"
    "ISPEXEC FTINCL &SKEL"

    Call readtaba
    type = "Actual"
    "ISPEXEC FTINCL &SKEL"

    "ISPEXEC FTCLOSE NAME("dmember")"
    Address TSO "FREE F(ISPFILE)"
    x = MSG('On')

    "ISPEXEC TBTOP &TABLE"
    Do i=1 To 14
        "ISPEXEC TBSKIP &TABLE"
        key = i + 14
        "ISPEXEC TBMOD &table"
        "ISPEXEC TBSKIP &TABLE NUMBER(-14)"
    End
    Return 0

/*--------------------------------------------------------------------*/
/* Restore from old data                                              */
/*--------------------------------------------------------------------*/
bldotab:
    x = Sysdsn("'"budsn"(D"parm1")'")
    If x /= 'OK' Then Do
        gc009 = x
        "ISPEXEC SETMSG MSG(GC009)"
        Signal scr1
    End
    dd = '$T'Time('s')
    Address TSO "ALLOC F("dd") DSN('"budsn"(D"parm1")') SHR REU"
    Address TSO "EXECIO * DISKR "dd" (STEM line. FINIS)"
    Address TSO "FREE F("dd")"

    "ISPEXEC TBTOP &TABLE"

    Parse VAR line.4 . . . . . . xdate .
    Do i=1 To 7
        j = i // 7
        If j = 0 Then j = 7
        date = xdate
        disp = j - 1
        date = $DATEMAN('E-N',date,,disp)
        j = i +8
        Parse VAR line.j . dow . start . finis . break .
        If Datatype(start) /= 'NUM' Then Do
            start  = ''
            finis = ''
            break  = ''
        End
        key = i
        "ISPEXEC TBMOD &TABLE"
    End
    Do i=8 To 14
        j = i // 7
        If j = 0 Then j = 7
        date = xdate
        disp = j - 1
        date = $DATEMAN('E-N',date,,disp)
        j = i +17
        Parse VAR line.j . dow . start . finis . break .
        If Datatype(start) /= 'NUM' Then Do
            start  = ''
            finis = ''
            break  = ''
        End
        key = i
        "ISPEXEC TBMOD &TABLE"
    End
    Return 0

/*--------------------------------------------------------------------*/
/* Restore 'NORMAL' and 'ACTUAL' table from backup records            */
/*--------------------------------------------------------------------*/
resttab:
    "ISPEXEC TBTOP &TABLE"
    "ISPEXEC TBSKIP &TABLE NUMBER(14)"
    Do i=15 To 28
        "ISPEXEC TBSKIP &TABLE"
        key = i - 14
        "ISPEXEC TBMOD &table"
        "ISPEXEC TBSKIP &TABLE NUMBER(14)"
    End
    Return 0

/*--------------------------------------------------------------------*/
/* Prepare for print                                                  */
/*--------------------------------------------------------------------*/
printit:
    Call readtab
    "ISPEXEC CONTROL ERRORS CANCEL"
    gc009 = "Use your favourite print routine to print."
    "ISPEXEC SETMSG MSG(GC009)"
    "ISPEXEC FTOPEN TEMP"
    type = "Normal"
    "ISPEXEC FTINCL &SKEL"

    Call readtaba
    type = "Actual"
    "ISPEXEC FTINCL &SKEL"

    "ISPEXEC FTCLOSE"
    "ISPEXEC VGET ZTEMPF"
    ADDRESS TSO "ALLOC DD(ZTEMPF) DS('"ztempf"') OLD REU"
    "ISPEXEC LMINIT DATAID(DATAID) DDNAME(ZTEMPF)"
    "ISPEXEC EDIT DATAID(&DATAID)"
    "ISPEXEC LMFREE DATAID(&DATAID)"
    ADDRESS TSO "FREE DD(ZTEMPF)"
    Return 0

/*--------------------------------------------------------------------*/
/* End Of Processing                                                  */
/*--------------------------------------------------------------------*/
eop:
    "ISPEXEC TBCLOSE &TABLE"
    "ISPEXEC LIBDEF ISPTLIB"
    "ISPEXEC LIBDEF ISPTABL"
    Exit

err1:
    "ISPEXEC SETMSG MSG(gc009)"
    Return 8

err2:
   Say '** error **' csr1 i hh mm time
    gc009 = "Invalid time."
    "ISPEXEC SETMSG MSG(gc009)"
    Signal scr1d

