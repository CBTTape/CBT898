)ATTR DEFAULT(%¢_)
  @ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
  ` TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW) JUST(RIGHT)
  ! TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW) CAPS(OFF)
  ~ TYPE(INPUT) INTENS(HIGH) COLOR(GREEN)
  % TYPE(TEXT) INTENS(HIGH) SKIP(ON)
  ¢ TYPE(TEXT) INTENS(LOW) SKIP(ON)
  # TYPE(OUTPUT) INTENS(LOW) CAPS(OFF)
  $ TYPE(OUTPUT) INTENS(LOW) CAPS(OFF) COLOR(RED) JUST(RIGHT)
)BODY EXPAND(\\) LMSG(MYLMSG)
@&TIMO\-\ TIMESHEET \-\-----
@&SID%===>_ZCMD\ \
!MYLMSG
¢
¢Enter parameters in table:@&TYPE    ¢&BE1 @&BE2 ¢&BE3 @&BE4
¢
+------------+------------+-------+-------+-------+--------+---------+---------+
| Day        | Date       | Start |Finish |Breaks | Total  | Worked  | Owing   |
+------------+------------+-------+-------+-------+--------+---------+---------+
|#DW1       ¢|_DA1       ¢|~ST.1 ¢|~FN.1 ¢|~BR1  ¢| #DT1  ¢|`RT1    ¢|$TL1    ¢|
|#DW2       ¢|_DA2       ¢|~ST.2 ¢|~FN.2 ¢|~BR2  ¢| #DT2  ¢|`RT2    ¢|$TL2    ¢|
|#DW3       ¢|_DA3       ¢|~ST.3 ¢|~FN.3 ¢|~BR3  ¢| #DT3  ¢|`RT3    ¢|$TL3    ¢|
|#DW4       ¢|_DA4       ¢|~ST.4 ¢|~FN.4 ¢|~BR4  ¢| #DT4  ¢|`RT4    ¢|$TL4    ¢|
|#DW5       ¢|_DA5       ¢|~ST.5 ¢|~FN.5 ¢|~BR5  ¢| #DT5  ¢|`RT5    ¢|$TL5    ¢|
|#DW6       ¢|_DA6       ¢|~ST.6 ¢|~FN.6 ¢|~BR6  ¢| #DT6  ¢|`RT6    ¢|$TL6    ¢|
|#DW7       ¢|_DA7       ¢|~ST.7 ¢|~FN.7 ¢|~BR7  ¢| #DT7  ¢|`RT7    ¢|$TL7    ¢|
+------------+------------+-------+-------+-------+--------+---------+---------+
¢
    NEw%>_Z¢ACtual%>_Z¢NOrmal%>_Z¢BAckup%>_Z¢REstore%>_Z¢TEst%>_Z¢CReate%>_Z¢
)INIT
    .ZVARS = '(NEW ACTUAL NORMAL BACKUP RESTORE TEST CREATE)'
    &SID     = &ZSYSID
    &NEW     = 'N'
    &ACTUAL  = 'N'
    &NORMAL  = 'N'
    &BACKUP  = 'N'
    &RESTORE = 'N'
    &TEST    = 'N'
    &CREATE  = 'N'
    &ACTSEL  = 'N'
    .HELP  = HNOHELP
    IF (&SAVE = 2) &TYPE = 'Actual'
    ELSE           &TYPE = 'Normal'
    &GC001 = 'Selections are mutually exclusive.'
)PROC
    REFRESH(ZCMD)
    &ZCMD  = TRUNC (&ZCMD,' ')
    &PARM1 = .TRAIL
    &PARM1 = TRUNC (&PARM1,' ')
    &PARM2 = .TRAIL
    IF (&NEW     = 'Y')
      IF (&ACTSEL  = 'Y') VER(&NEW,LIST,INVALID,MSG=GC001)
      &ACTSEL  = 'Y'
      &ZCMD = NEW
    IF (&ACTUAL  = 'Y')
      IF (&ACTSEL  = 'Y') VER(&ACTUAL,LIST,INVALID,MSG=GC001)
      &ACTSEL  = 'Y'
      &ZCMD = ACTUAL
    IF (&NORMAL  = 'Y')
      IF (&ACTSEL  = 'Y') VER(&NORMAL,LIST,INVALID,MSG=GC001)
      &ACTSEL  = 'Y'
      &ZCMD = NORMAL
    IF (&BACKUP  = 'Y')
      IF (&ACTSEL  = 'Y') VER(&BACKUP,LIST,INVALID,MSG=GC001)
      &ACTSEL  = 'Y'
      &ZCMD = BACKUP
    IF (&RESTORE = 'Y')
      IF (&ACTSEL  = 'Y') VER(&RESTORE,LIST,INVALID,MSG=GC001)
      &ACTSEL  = 'Y'
      &ZCMD = RESTORE
    IF (&TEST    = 'Y')
      IF (&ACTSEL  = 'Y') VER(&TEST,LIST,INVALID,MSG=GC001)
      &ACTSEL  = 'Y'
      &ZCMD = TEST
    IF (&CREATE  = 'Y')
      IF (&ACTSEL  = 'Y') VER(&CREATE,LIST,INVALID,MSG=GC001)
      &ACTSEL  = 'Y'
      &ZCMD = CREATE
)END
