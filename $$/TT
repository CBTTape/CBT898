/******************************** REXX *************************************/
/*                                                                    */
/* TT: Terse Toggler with self-extracting Load module (TTL version).  */
/*                                                                    */
/* This routine will use the IBM TRSMAIN program to Toggle between    */
/* tersing and untersing datasets. For further details invoke with    */
/* parm of '?' or browse bottom of member.                            */
/*                                                                    */
/* To simplify packaging, just copy TTL$ to the bottom of member TT   */
/* and change the '-' to a '+' on line 13 (for doco purposes).        */
/*                                                                    */
/*--------------------------------------------------------------------*/
tt: tt_ver='3.12 + loadmod'
    Arg parm#
Defaults:ml1=Mark(+1)
    space_fixed=0                           /* 1-fixed, 0-calculated  */
    d_prim=750;d_sec=750;d_dirb=150         /* Customise for site     */

Parameters:
    Signal on Syntax Name error_off_$00
    volp='UNIT(SYSALLDA)';volt=volp
    volp=$alkuvol('SMS');volt=$alkuvol('$ZTEMPF')
error_off_$00:Signal off Syntax
    If Wordpos('/T',parm#)>0 Then Do
        Trace r;parm#=Delword(parm#,Wordpos('/T',parm#),1)
    End
    If Wordpos('/L',parm#)>0 Then Do
        cre_Load=1;parm#=Delword(parm#,Wordpos('/L',parm#),1)
    End;Else cre_Load=0
    If Wordpos('/LK',parm#)>0 Then Do
        cre_Load=1;k_load=1;parm#=Delword(parm#,Wordpos('/LK',parm#),1)
    End;Else k_load=0
    If Wordpos('/B',parm#)>0 Then Do
        btchx=1;parm#=Delword(parm#,Wordpos('/B',parm#),1)
    End;Else btchx=0
    If Wordpos('/D',parm#)>0 Then Do
        parm#=Delword(parm#,Wordpos('/D',parm#),1)
        Parse Value Date('e') With dd '/' mm '/' yy;dsuff='.D'yy||mm||dd
    End;Else dsuff=
    If Wordpos('/U',parm#)>0 Then Do
        uncat=1;parm#=Delword(parm#,Wordpos('/U',parm#),1)
    End;Else uncat=0
    If Wordpos('/ME',parm#)>0 Then Do
        myhlq=1;parm#=Delword(parm#,Wordpos('/ME',parm#),1)
    End;Else myhlq=0
    If Wordpos('/P',parm#)>0 Then Do
        pre_alloc=1;parm#=Delword(parm#,Wordpos('/P',parm#),1)
    End;Else pre_alloc=0
    If Wordpos('/S',parm#)>0 Then Do
        operx=1;parm#=Delword(parm#,Wordpos('/S',parm#),1)
    End;Else operx=0
    If Wordpos('/#',parm#)>0 Then Do
        addpop=1;parm#=Delword(parm#,Wordpos('/#',parm#),1)
    End;Else addpop=0
    If Wordpos('/F',parm#)>0 Then Do
        space_fixed=1;parm#=Delword(parm#,Wordpos('/F',parm#),1)
    End
    If Wordpos('/C',parm#)>0 Then Do
        space_fixed=0;parm#=Delword(parm#,Wordpos('/F',parm#),1)
    End
    Parse VAR parm# ifil ofil oper btch sprt dnzr dirb prim sec vol pdse wmWM
    Select
      When Index(ifil,',')>0 Then Parse VAR parm#,
        ifil','ofil','oper','btch','sprt','dnzr','dirb','prim','sec','vol',' ||,
        pdse','wmWM
      When ofil='' Then Parse VAR parm#,
        ifil,ofil,oper,btch,sprt,dnzr,dirb,prim,sec,vol,pdse,wmWM
      Otherwise Nop
    End

    Address TSO
    userid=Userid();Parse Value '' With zedsmsg zedlmsg csr1;rc1=0
    Signal On Error  Name help_me
    Parse Source . . xcmd .
    If ifil='' Then ifil='?'
    If ifil='?'  Then Do;'%$BR' xcmd '??';Return 0;End
    Signal Off Error
    If ifil='??' Then Signal help_me

    ispf= Sysvar(Sysispf)

    Signal On Error Name error_trap_#1;Signal On Syntax Name error_trap_#1
    Address ISPEXEC "VGET (zacctnum)";acct=zacctnum
error_trap_#1: Signal Off Error;Signal Off Syntax
    ifil=Strip(Strip(ifil),,"'");ofil=Strip(Strip(ofil),,"'")
    sprt=Strip(Strip(sprt),,"'")
    If uncat Then Do
        Address ISPEXEC "VGET (zdlvol) SHARED"
        If zdlvol/='' Then ivol='VOLUME('zdlvol')';Else ivol=
    End
    Else ivol=
    If ivol='' & Sysdsn("'"ifil"'")/='OK' Then Do
        zedlmsg="Dataset '"ifil"' not found."
        Call put_message;Return 8
    End
    xx=Listdsi("'"ifil"'" ivol)
    If xx<5 | sysreason=9 | sysreason=25 Then Nop;Else Do
        zedlmsg="Dataset '"ifil"' not found."
        Call put_message;Return 8
    End
    val_oper='P S or U'                     /* Hope no one enters 'or'*/
    If operx Then oper='SPACK'
    Else Do
        If oper='' | oper='.' Then Do
            If syslrecl=1024 Then ch1='U';Else ch1='P'
        End
        Else Do
            ch1=Substr(oper,1,1)
            If Wordpos(ch1,val_oper)>0 Then Nop
            Else Do
                zedlmsg='Requested operation (4th. parm) not "'val_oper'".'
                Call put_message;Return 8
            End
        End
        If ch1='S' Then oper='SPACK'
        Else If ch1='U' Then oper='UNPACK';Else oper='PACK'
    End
    If oper='UNPACK' Then pref='UN';Else pref=
    Parse VAR ifil dsn0 '(' .
/* Choon-arism (imbedded spaces for Choon's benefit)                  */
    If ofil = '.' Then ofil =
    If btchx Then btch='Y'
    Else If btch = '.' Then btch =
    If sprt = '.' Then sprt =
    If dnzr = '.' Then dnzr =
    If dirb = '.' Then dirb =
    If prim = '.' Then prim =
    If sec  = '.' Then sec  =
    If vol  = '.' Then vol  =
    If pdse = '.' Then pdse =
    If Substr(pdse,1,3) = 'LIB' Then pdse = 'DSNTYPE(LIBRARY)'
    Else                             pdse =
    If dirb = ''  Then dirb = d_dirb
    If prim = ''  Then prim = d_prim
    If sec  = ''  Then sec  = d_sec
    If vol /= ''  Then vol  = 'VOLUME('vol')'
    If myhlq Then Do
        Parse VAR ifil . '.' ofil
        ofil=Sysvar(Syspref)'.'ofil
    End
    Else If ofil = ''  Then ofil = dsn0'.'pref'TERSED'
    If sprt = ''  Then sprt = ofil'.SYSPRINT'
/* End-Choonarism                                                     */
    If ofil/='' Then ofil=ofil||dsuff
    If Length(ofil)>44 Then Do
        zedlmsg='Output filename has been truncated from "'ofil'".',
                'Please ensure it is what you want.'
        ofil=Substr(ofil,1,44);addpop=1;csr1='OFIL'
    End
    Signal On Syntax Name error_trap_#2
    If cre_Load Then loadlib=ttl$()
    Signal scr1
error_trap_#2: Signal Off Error;cre_Load=0;loadlib=
scr1:
    If \space_fixed Then Do
        xx=Listdsi("'"ifil"' DIRECTORY")
        If sysadirblk='NO_LIM' Then Do
            zedlmsg='You cannot TERSE a PDS/E. XMIT to a flat file and',
                    'terse that.'
            Address ISPEXEC "SETMSG MSG(ISRZ001)"
            Signal ext1
        End
        If syslrecl=1024 Then mult=6;Else mult=.2
        If sysunits='CYLINDER' Then sysused=sysused*15
        prim=Format(sysused*mult,8,0)
        sec=Format(prim*.15,8,0);If sec=0 Then sec=1
        If mult=6 Then prim=prim+5
    End
    If Length(sprt)>44 Then sprt=userid'.$TRSMAIN.SYSPRINT'
    If addpop Then Do
        If first_time/='N' Then Do
            Call build_panel
            first_time='N';zwinttl='Terse Toggler';#popr=6;#popc=12
        End
        Address ISPEXEC
        zcmd=;"SETMSG MSG(ISRZ001)"
        "ADDPOP ROW(&#POPR) COLUMN(&#POPC)"
        If vol='' Then Parse VAR volp . 'VOLUME(' vol ')' .
        "DISPLAY PANEL(TTP) CURSOR(&CSR1)";rc1=rc;"REMPOP"
        If rc1/=0 Then Do
            zedlmsg="Parameter entry screen abandoned."
            "SETMSG MSG(ISRZ001)"
            Signal ext1
        End
        Address
        If zcmd='?' Then Do;"%"xcmd "?";Signal scr1;End
    End
    If btch/='' Then Signal batch_JCL
    If vol/='' Then Do
        If Substr(vol,1,7)/='VOLUME(' Then vol='VOLUME('vol')'
        Parse VAR volp p1 'VOLUME(' . ')' p2;volp=Space(p1 vol p2)
    End
    #msg=Msg('Off')
    If Sysdsn("'"sprt"'")='OK' Then "DELETE '"sprt"'"
    x=Msg(#msg)
    "ALLOC F(INFILE)  DA('"ifil"') SHR REU" ivol
    If \pre_alloc Then Do
        If Sysdsn("'"ofil"'")='OK' Then "DELETE '"ofil"'"
        "ALLOC F(OUTFILE) DA('"ofil"')",
                 'NEW CATALOG TRACKS SPACE('prim','sec')',
                 'RELEASE REU' volp
    End
    "ALLOC F(SYSPRINT) DA('"sprt"') NEW CATALOG SPACE(1,1)",
             volt 'REU TRACK'
    If cre_Load Then prog="'"loadlib"(TRSMAIN)' '"oper"'"
    Else prog="*(TRSMAIN) '"oper"'"
    "CALL" prog
    rc1=rc
    Do While rc=12                          /* Hopefully rc for PDS in*/
        x=Msg('Off');"DELETE '"ofil"'";x=Msg(#msg)
        "ALLOC F(OUTFILE) DA('"ofil"')",
                 volp 'NEW CATALOG TRACKS SPACE('prim','sec')',
                 'RELEASE REU DSORG(PO) DIR('dirb')' pdse
        "CALL" prog;If rc=rc1 Then Leave
        If rc=40 & pdse/='' Then Do;rc=12;pdse=;Iterate;End
        rc1=rc
    End
    "FREE F(INFILE,OUTFILE)"
    x=Msg('Off')
    If rc1/=0 & Sysdsn("'"ofil"'")='OK' Then "DELETE '"ofil"'"
    If rc1/=0 & ispf='ACTIVE' Then Do
        Address ISPEXEC "LMINIT DATAID(DATAID) DDNAME(SYSPRINT)"
        Address ISPEXEC "BROWSE DATAID(&DATAID)"
        Address ISPEXEC "LMFREE DATAID(&DATAID)"
        "FREE F(SYSPRINT)"
        "DELETE '"sprt"'"
    End
    Else Do
        "FREE F(SYSPRINT)"
        zedlmsg="RC="rc1 "from the TERSE operation."
        If rc1/=0 Then Do
            If dnzr/='' Then Do
                zedlmsg=zedlmsg 'SYSPRINT has been deleted on your',
                        'request. Suggest re-run with Delete Non Zero',
                        'Return code turned off (blank or ".").'
                "DELETE '"sprt"'"
            End
            Else zedlmsg=zedlmsg "SYSPRINT '"sprt"' has been kept for your",
                     "perusal. Check it out and don't forget to delete it."
        End
        Else "DELETE '"sprt"'"
        Call put_message
    End
ext1:
    Address TSO "DELSTACK"
    #msg=Msg('Off')
    If addpop Then Do
        Address ISPEXEC "LIBDEF ISPPLIB";Address TSO "DELETE '"dsn"'"
    End
    If cre_load Then Do
        Address ISPEXEC "LIBDEF ISPLLIB"
        If k_load Then Do
            zedlmsg="Dataset '"loadlib"' retained.  Take a copy of",
                    'module "TRSMAIN" and then delete the dataset',
                    'manually.'
            Address ISPEXEC "SETMSG MSG(ISRZ001)"
        End
        Else Address TSO "DELETE '"loadlib"'"
    End
    x=Msg(#msg)
    Return rc1

put_message:
    zedsmsg=
    If ispf='ACTIVE' Then Address ispexec "SETMSG MSG(ISRZ001)";Else Say zedlmsg
    Return 0

batch_JCL:
    Prognm='Batch terse'
    Signal on Syntax Name error_off_alkjcpg
    x=$Alkjcpg(prognm);If x/='' Then prognm=x
error_off_alkjcpg:Signal off Syntax
    "DELSTACK"
    "NEWSTACK"
    Queue "//"userid"B JOB "acct",'"prognm"',"
    Queue '//             CLASS=A,COND=(4,LT),'
    Queue '//             MSGCLASS=X,TIME=1440,'
    Queue '//             NOTIFY=&SYSUID'
    Queue '//*'
    Queue "//* Gen'd from """xcmd""" command. Parameters:"
    Queue "//*   ifil ofil oper btch sprt dirb prim sec vol pdse"
    Queue '//*'
    Queue '//ISPFBTCH EXEC PGM=IKJEFT01,DYNAMNBR=65,REGION=4096K'
    If \cre_load | k_load Then Do
        loadlib=Get_dataset('ISPLLIB','TRSMAIN');ldisp='SHR'
        If loadlib/='Missing.dataset' Then,
            Queue '//STEPLIB  DD DISP='ldisp',DSN='loadlib
    End
    Else Do
        Queue '//STEPLIB  DD DSN='loadlib','
        Queue '//            DISP=(SHR,DELETE,DELETE)'
    End
    Queue '//SYSPROC  DD DISP=SHR,DSN='Get_dataset('SYSEXEC SYSPROC',xcmd)
    If pre_alloc Then,
        Queue '//OUTFILE  DD DISP=SHR,DSN='ofil
    Queue '//SYSTSPRT DD SYSOUT=X'
    Queue '//SYSOUT   DD SYSOUT=*'
    Queue '//SYSTERM  DD SYSOUT=*'
    Queue '//SYSTSIN  DD *'
    Queue '  %'xcmd '+'
    Queue '    'Substr(ifil,1,40) '+'
    Queue '    'Substr(ofil,1,40) '+'
    Queue '    'Substr(oper,1,40) '+'
    Queue '    'Substr('. ',1,40) '+'
    Queue '    'Substr(sprt,1,40) '+'
    If dnzr='' Then dnzr='.'
    Queue '    'Substr(dnzr,1,40) '+'
    Queue '    'Substr(dirb,1,40) '+'
    Queue '    'Substr(prim,1,40) '+'
    Queue '    'Substr(sec ,1,40) '+'
    If vol='' Then vol='.'
    Queue '    'Substr(vol ,1,40) '+'
    If pdse='' Then pdse='.'
    If pre_alloc Then Do
        Queue '    'pdse '+'
        Queue '    /P'
    End
    Else Queue '    'pdse
    Queue '/*'
    Queue ''
    dd='TT'Time('s')
    Address ISPEXEC "VGET ZTEMPF"
    "ALLOC DD("dd") DS('"ztempf"') SHR REU"
    "EXECIO * DISKW" dd "(FINIS"
/*  "DELSTACK"                                                        */
    Address ISPEXEC "LMINIT DATAID(DATAID) DDNAME("dd")"
    zedlmsg="Modify to your liking and submit manually. END PF key",
            "without submission will do nothing."
    Call put_message
    Address ISPEXEC "SETMSG MSG(ISRZ001)"
    Address ISPEXEC "EDIT DATAID(&DATAID)"
    Address ISPEXEC "LMFREE DATAID(&DATAID)"
    "FREE DD("dd")"
    Signal ext1

Get_dataset: Arg a_dsn,a_memb
    Signal On Syntax Name error_trap_#3
    xxx=$ddalloc(a_dsn)
    Do While xxx/=''
        Parse Var xxx xx xxx;If Sysdsn("'"xx"("a_memb")'")='OK' Then Return xx
    End
error_trap_#3: Signal Off Error
    Return 'Missing.dataset'

help_me:
ms=mark(2)
/*
   Good &TOD. &CNAME..

   TT: Terse Toggler.
       --------------

   This routine will use the IBM TRSMAIN program to Toggle between
   tersing and untersing datasets.
   Tersing creates a highly compressed dataset to minimise data transfer
   between nodes.

   Parameters (positional space or comma seperated):
    Pos : 1    2    3    4    5    6    7    8    9   10  11   12
    Parm: ifil ofil oper btch sprt dnzr dirb prim sec vol pdse wmWM

     1. - ifil -
        Input dataset (Fully Qualified and Unquoted[FQU]). Allocated to
        DD(INFILE). This parameter is mandatory. PDS is OK.
        Do not use a member.  It will work but you work out the
        result....
     2. - ofil -
        Output dataset [FQU]. Allocated to DD(OUTFILE).
     3. - oper -
        Explicit operation. If passed, must be PACK/SPACK/UNPACK (can be
        truncated to P/S/U).
     4. - btch -
        Batch processing. Generate and submit JCL. (Non-blank char other
        than '.'.)
     5. - sprt -
        SYSPRINT dataset [FQU]. Allocated to DD(SYSPRINT).
     6. - dnzr -
        Delete non-zero.  Delete SYSPRINT if RC/=0 for batch use.
        (Non-blank char other than '.'.)
     7. - dirb -
        Number of directory blocks.
     8. - prim -
        Primary allocation (in tracks).
     9. - sec -
        Secondary allocation (in tracks).
    10. - vol -
        Output volume.
    11. - pdse -
        Literal 'LIBrary' to create a PDSE. (Does not work but there in
        case IBM fix TRSMAIN.)
    12. - wmWM -
        (for whatchamean WhiteMan).
   Parameters (keyword):
    /# -Pop up a parameter entry/verification panel. This parameter will
        create a temporary dataset '{syspref.}&USERID..$$$TEMP.TTPANEL'
        to store panel TTP and will be deleted at end of processing.
    /B -Generate batch JCL. If this keyword is used, you must still
        supply a '.' placeholder for parameter 4 (batch processing) if
        some of the following parameters are to be supplied.
        The JCL will be presented under the editor and must be manually
        submitted.
        Note - If you are batch processing you could probably afford the
               "SPACK" ('/S') overhead.
    /C -Calculate space required.  If the dataset is tersed, the primary
        allocation will be 5x the size of the tersed dataset and an
        additional 5 tracks will be allocated for directory bloicks (to
        partially cover for the default 150 blocks).  If it is untersed
        it will be 1/5th. the size.  The secondary allocation will be
        set to 15% of primary in both cases. (This is the default.)
        NOTE:- This default may be toggled with the '/F' at site's
               discretion.
    /D -Append todays date in the format of '.Dyymmdd'. Use this parm
        for periodic unique tersing.
    /F -Fixsed space alloation. Use the default of,
          dirb = &D_DIRB.
          prim = &D_PRIM.
          sec  = &D_SEC.
        This flag is used to negate the default '/C' flag.
        NOTE:- This default may be toggled with the '/F' at site's
               discretion.
    /L -Self-extract load module TRSMAIM. This parameter will create a
        temporary dataset '{syspref.}&USERID..$$$TEMP.LOAD' to store
        prog TRSMAIN and will be deleted at end of processing or end of
        batch job.  (Multiple sametime uses may cause unpredictable ENQ
        type results.)
        For this feature member "TTL$" has to be:
           - Copied into the base "TT" member during build/packaging.
                               - or -
           - Make member "TTL$" available in the SYSEXEC concatenation.
    /LK-Same as '/L' except that at the end of processing the temporary
        load module is not deleted so it can be copied into a permanent
        loadlib for future access. Once this copy is made, the '/L' or
        '/LK' option is no longer required.
    /ME-Replace the hlq of output dataset with my 'prefix'.
    /P -Dataset is pre allocated.  Pre-allocated and assigned. Usually
        used for batch purposes. You will still need the '/B' parameter
        as well for batch.  The '/P' will be passed to the batch process
        in the JCL.
    /S -SPACK it.  If this keyword is used, you must still supply a '.'
        placeholder for parameter 4 (batch processing) if some of the
        following parameters are to be supplied.
    /T -Trace. For debuging.
    /U -Input dataset is uncataloged.  If invoked and the dataset is not
        catalogued, it will be assumed TT is invoked from ISPF 3.4 and
        will get and try to use varible "ZDLVOL" from the shared
        profile.

   Parameter notes:
     1. UNTERSing is a destructive processe as it delete/defines the
        output dataset. DO NOT unterse to one of your favourite
        datasets. (Actually so does TERSEing.)
     2. SPACK is supposed to compress better than PACK but may take up
        to 3 times longer to execte than PACK. SPACK must be explicitly
        requested.
     3. Defaulted positonal parameters may be represented by a "."
        placeholder IF space seperated option is used.
     4. Operation of pack/unpack will be determined by LRECL of the
        input file. LRECL=1024=UNPACK all else will be pack. If you
        wish to pack a 1024 dataset use the explicit PACK operation
        indicator of parm3, observing the placeholder rules.
     5. Output dataset will default to:
            PACK   - 'infile.TERSE'
            SPACK  - 'infile.TERSE'
            UNPACK - 'infile.UNTERSED'
     6. Use the batch feature (parm4 or /B) to process large datasets in
        batch.
     7. SYSPRINT dataset will default to:
            'outfile.SYSPRINT'
        unless the resultant length is >44 in which case
            '&USERID..$TRSMAIN.SYSPRINT'
        will be used.
     8. SYSPRINT dataset will be presenter under browse during online
        execution if RC/=0. In batch, it will be kept for perusal unless
        parm6 has a non-blank value to delete it on non-zero RC.
     9. If default output or SYSPRINT will conflict with existing
        datasets, specify them (or cream them).
    10. The defaults are set to be invoked from ISPF 3.4 with the
        minimum of parameters.  You may fine tune this by using '.'
        placeholders or alternatively call from a REXX routine using the
        following values (at line &ML1. and next):
        Defaults are (variable names)
           dirb - &D_DIRB. (directory blocks)
           prim - &D_PRIM. (primary)
           sec  - &D_SEC. (secondary)
        While the space allocations are over generous theys are designed
        for a generic solution. Allocation is made in tracks and
        released after completion. Unfortunately the number of directory
        blocks are your concern. (If this is an issue, pass 'LIBrary' as
        parameter 10; has been catered for but gives RC=40.)
    11. DDs explicitly used are INFILE, OUTFILE and SYSPRINT. If already
        allocated, they will be re-used.
    12. If PDSE is requested (ie. parm10='LIB') a PDSE will be created.
        However, if RC=40 then a normal PDS output will be created and
        retried.
    13. If the batch option is used and TRSMAIN is not found in the
        ISPLLIB cancatenation, it is assumed that the program is link
        listed and no STEPLIB DD statement will be included in the batch
        JCL.
    14. Parameters 12 onwards are ignored.

   Sample ISPF 3.4 invocation:
      TT / &USERID..$LOAD.UNTERSED UNPACK Batch . DEL-NZERO
      TT /,&USERID..$LOAD.UNTERSED,UNPACK,Batch,.,DEL-NZERO

    This command will force an unpack operation against selected dataset
    and output to '&USERID..$LOAD.UNTERSED' and execute in batch (present
    JCL for submission).

   Sample REXX invocation:
      /* REXX */
      infile   = '&USERID..$LOAD'
      outfile  = '&USERID..$LOAD.TERSED.SPACK'
      oper     = 'SPACK'
      batch    = 'Y'
      sysprint = '.'
      dnzr     = '.'
      dirb     = 50
      prim     = '.'
      sec      = '.'
      vol      = 'ALEX02'
      pdse     = 'LIB'
      xx=TT(infile outfile oper batch sysprint dirb prim sec vol pdse)
                     - or -
      xx=TT(infile,outfile,oper,batch,,dirb,,,vol,pdse)
      If outfile/='' Then,
         If xx=0 Then Address ISPEXEC "BROWSE DATASET('"outfile"')"
      Exit

   Packaging (members marked with 'o' seperator are optional):
      REXX:
        $BR      o PUTLINE browser for help. Without this member, you
                   get an error message and a heap of non-scrollable red
                   screen.
        $DDALLOC o Dataset allocated to a particular DD. Used to find
                   location of REXX "TT" and load module "TRSMAIN" if
                   not linklisted. This is only required for batch
                   processing. (Not required for batch if the
                   self-extracting option ('TTL$') is available.
        TT       - Main driver (may be packaged as "TTL").
        TTL$     o Optional if:
                     - TRSMAIN is available on an accessable loadlib
                                      - or -
                     - TTL$ member is included/copied into distributed
                       member TT/TTL.
      Load modules:
        TRSMAIN  - IBM supplied terse program.  This module may be
                   made available using the "TTL$" defined above.


   GOTCHA's:
      1. If untersing fails and you get a message similar to
           STOW FAILURE FOR MEMBER XRPL      REASON CODE 12
         suggest you look at space allocation, in particular the number
         of directory blocks.
                           *****

*/
me=mark(-2)
    Parse Value Time() With hh ':' 1 time +5
    Select
        When hh<12 Then tod='morning'
        When hh<18 Then tod='afternoon'
        Otherwise tod='evening'
    End
    chgchar='&';cname=userid
    Signal on Syntax Name error_off_$WHOAMI
    cname=$Whoami('C')
error_off_$WHOAMI: Signal Off Syntax

    Do i=ms To me
        line=Sourceline(i)
        Do While Index(line,chgchar)>0
            Interpret "Parse VAR line p1 '"chgchar"' var '.' p2"
            Interpret 'line=p1||'var'||p2'
        End
        Say Substr(line,1,79)
    End
Exit 0
/*--------------------------------------------------------------------*/
/* Allocate panel                                                     */
/*--------------------------------------------------------------------*/
build_panel:
    u=Sysvar(Sysuid);p=Sysvar(Syspref);If u/=p&p/='' Then u=p'.'u;hlq=u
    dsn= hlq'.$$$TEMP.TTPANEL'
    #msg=Msg('Off')
    Address TSO
    "DELETE '"dsn"'"
    "ALLOC DA('"dsn"') NEW CATALOG TRACK SPACE(1,1)",
       "DSORG(PO) LRECL(80) BLKSIZE(0)" volt "DIR(1)",
       "RECFM(F B) REU"
    "FREE DA('"dsn"')"
    "NEWSTACK"
    Call make_mem_1;#tr=Trace('o')
    Do i=n_st To n_en;Queue Sourceline(i);End;Queue ''
    x=Trace(#tr);dd='TT'Time('s')
    "ALLOC F("dd") DA('"dsn"(TTP)') SHR REU"
    "EXECIO * DISKW "dd" (FINIS"
    "FREE  F("dd")"
    Address
    Address ISPEXEC "LIBDEF ISPPLIB DATASET ID('&DSN') STACK"
    x=Msg(#msg)
    Return 0

 Mark:If Datatype(Arg(1))/='NUM' Then Arg(1)=1;Return sigl+Arg(1)
/*--------------------------------------------------------------------*/
/* Create help panel(s) from sourcelines between the '/* */'          */
/*--------------------------------------------------------------------*/
make_mem_1:
    n_st = mark(2)                          /* Mark start of data     */
/*
)ATTR DEFAULT(%+_)
    _ TYPE(INPUT)   INTENS(HIGH) COLOR(RED)    HILITE(USCORE)
    @ TYPE(TEXT)    INTENS(HIGH) COLOR(YELLOW)
    + TYPE(TEXT)    INTENS(LOW)  COLOR(GREEN)
    $ TYPE(TEXT)    INTENS(LOW)  COLOR(TURQ)
    ~ TYPE(TEXT)    INTENS(LOW)  COLOR(BLUE)
)BODY EXPAND(\\) WINDOW(58,19)
%&SID%=>_ZCMD
+
+Enter parameters below:
+Infile....$&IFIL
+Outfile..._OFIL                                        +
+Operat'n.._OPER  +  Pack, Spack or Unpack
+Batch....._Z+       Y or N
+Sysprint.._SPRT                                        +
+Del......._Z+       Blank for non-deletion above in batch
+Dir.Blk..._DIRB+
+Primary..._PRIM +   (Tracks)
+Scondary.._SEC  +   (Tracks)
+Volume  .._VOL   +
+PDS/E....._Z  +     LIB or blank
+
+Press@ENTER+to use above parameters
+or@END/CANCEL+to abandon.
+Enter@?+for tutorial.
)INIT
 &SID=&ZSYSID
 .ZVARS='(BTCH,DNZR,PDSE)'
)PROC
 VER(&OFIL,NB,DSNAMEQ)
 &OPER=TRANS(TRUNC(&OPER,1) P,PACK S,SPACK U,UNPACK *,*)
 VER(&OPER,NB,LIST,PACK,SPACK,UNPACK)
 VER(&BTCH,LIST,Y,N)
 IF (&OPER = PACK,SPACK)
    VER(&DIRB,NUM)
 VER(&SPRT,NB,DSNAMEQ)
 IF (&DNZR = &Z) &DNZR='.'
 VER(&PRIM,NB,NUM)
 VER(&SEC,NB,NUM)
 VER(&VOL,NAME)
 VER(&PDSE,LIST,LIB)
)END
*/
    n_en = mark(-2)                         /* Mark end of data       */
    Return 0

/*--------------------------------------------------------------------*/
/* Copy member TTL$ after here if required                            */
/*--------------------------------------------------------------------*/
tt_End:
