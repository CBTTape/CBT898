/* REXX USR2301: Region Build facility                                */
/*                                          David Edwards   20/09/93  */
/*--------------------------------------------------------------------*/
Trace r
arg debug
    Parse SOURCE . . xcmd . dsn_rtn .

x = msg(off)

if debug = 'Y' then
   trace all
else
   trace off

ADDRESS ISPEXEC
'VGET (zusvsn zusrel) PROFILE'
zvsnrel = zusvsn||'.'||zusrel
ADDRESS ISPEXEC
'Vput (zvsnrel) PROFILE'

sysuser = Userid()

user_table. = ' '
/* Corporate ------------- */
user_table.1  = ' T32SMS Steve    Sommers'
user_table.2  = ' T32RXR Russell  Rooke'
user_table.3  = ' T32MMD Memet    Doruk'
user_table.4  = ' T32PXC Paul     Cosgrave'
user_table.5  = ' T32RXZ Rob      Zanon'
user_table.6  = ' T32BXW Brian    Walker'

/*                                                                  */
DO i = 1 WHILE user_table.i \= ' '
  PARSE VAR user_table.i tsouser firstnam surname
  IF tsouser = sysuser THEN LEAVE
END
IF user_table.i = ' ' THEN
  DO
    Say 'USR2301: Userid' sysuser 'not found'
    EXIT
  END

ADDRESS ISPEXEC
'Vput (firstnam,surname) PROFILE'

/*--------------------------------------------------------------------*/
/* The following table lists all of the components for building a new */
/* new CICS region. It includes the routine name for each component   */
/* to be called. This is the only place a new component needs to be   */
/* added. The avl column indicates if this component is available.    */
/*--------------------------------------------------------------------*/
opt_list.   = ' '
           /* opt avl routine  description                */
opt_list.1  = '1   Y  USR2302  Request ACB from COMNET                '
opt_list.2  = '2   Y  USR2313  Request DASD placement                 '
opt_list.3  = '3   Y  USR2303  ACF2 rule setup (HLQ must exist)       '
opt_list.4  = '4   Y  USR2304  Define region JCL base                 '
opt_list.5  = '5   Y  USR2305  Build for third party products         '
opt_list.6  = '6   Y  USR2306  Build Region seqt files                '
opt_list.7  = '7   Y  USR2307  Build Region VSAM files                '
opt_list.8  = '8   Y  USR2308  *** No Longer Required ***             '
opt_list.9  = '9   Y  USR2309  Add/Update RDO definitions             '
opt_list.10 = '10  Y  USR2310  Add batch table definitions (new MRO)  '
opt_list.11 = '11  Y  USR2311  Add parmlib members                    '
opt_list.12 = '13  Y  USR2312  Define the region to CA7               '
opt_list.13 = '14  Y  USR2314  Request to add region to Service Centre'
opt_list.14 = '15  Y  USR2315  Notify Capacity Planning / CMISIAS     '
opt_list.15 = '16  N  USR23xx  Update the region list                 '
opt_list.16 = '17  Y  USR2317  Qstart update (%CICU)                  '
opt_list.17 = '18  Y  USR2318  CA7 Schedules                          '
opt_list.18 = '19  Y  USR2319  Final Tasks                            '

/*--------------------------------------------------------------------*/
/* The following entries list all of the variables for the new        */
/* region. If you add a new variable you should check that there are  */
/* no region builds currently in progress (check for table ZUSxxxHD)  */
/* in ISPTABL and then add the variable below and on the add screen   */
/* USP2301A.                                                          */
/*--------------------------------------------------------------------*/
zuskey = 'ZUSREG'                                     /* KEY... leave */
zusnam = 'ZUSRDSC,ZUSRBG,ZUSSYS,ZUSRTYP,ZUSBUS'      /* NAMES... add */
zusnam = zusnam||',ZUSVOL,ZUSACCT,ZUSBNEW,ZUSTOR,ZUSDB2'

ADDRESS ISPEXEC 'DISPLAY PANEL(USP2301)'
locrc = rc

if locrc = 0 then do
   x = msg(off)
   ADDRESS TSO
     "FREE DD(ISPTABL)"
     "ALLOC FI(ISPTABL)  DSN('PZUS.ISPTLIB') SHR "
   x = msg(on)
end

do while locrc = 0

   regtbl = 'ZUS'||zusreg||'HD'

   ADDRESS ISPEXEC 'TBOPEN' regtbl 'NOWRITE'
   disprc = rc

   if disprc > 8 then do
      tblcall = 1
      ADDRESS ISPEXEC 'SETMSG MSG(USM204)'
      leave
   end

   err = 'N'
   if disprc = 8 then
      call BLDINFO
   else
      call GETINFO

   if err = 'N' then
      call BLDTEMP

   if err = 'N' then do
      ADDRESS ISPEXEC 'TBDISPL' tmptbl 'PANEL(USP2301B)'
      scrnrc = rc
/*                                                                    */
/* This loop (test of scrnrc) will redisplay the component panel      */
/* until PF3 is hit. If a valid component is selected it will go      */
/* into the subroutine that loops through the components (OPTLOOP)    */
/*                                                                    */
      do while scrnrc = 0
         if zcmd = 'UPD' then do
            zcmd = ' '
            call UPDINFO
            scrnrc = 0
         end
         else do
            zustopt = zcmd
            ADDRESS ISPEXEC 'TBGET' tmptbl
            getrc = rc
            if getrc > 0 then
               ADDRESS ISPEXEC 'SETMSG MSG(USM205)'
            else
               call OPTLOOP
         end
         ADDRESS ISPEXEC 'TBDISPL' tmptbl 'PANEL(USP2301B)'
         scrnrc = rc
      end /* scrnrc loop */

      ADDRESS ISPEXEC 'TBCLOSE' tmptbl
      ADDRESS ISPEXEC 'VERASE ('||zuskey||','||zusnam||')'
   end

   ADDRESS ISPEXEC 'DISPLAY PANEL(USP2301)'
   locrc = rc
end /* locrc loop */

   x = msg(off)
   ADDRESS TSO "FREE DD(ISPTABL)"
   x = msg(on)

exit
/*--------------------------------------------------------------------*/
/* Build the table with region details                                */
/*--------------------------------------------------------------------*/
BLDINFO:
ADDRESS ISPEXEC 'DISPLAY PANEL(USP2301A)'
if rc > 4 then do
   ADDRESS ISPEXEC 'SETMSG MSG(USM217)'
   err = 'Y'
   return
end

ADDRESS ISPEXEC 'TBCREATE' regtbl 'NAMES('||zusnam||')'
if rc > 4 then do
   tblcall = 3
   ADDRESS ISPEXEC 'SETMSG MSG(USM204)'
   err = 'Y'
   return
end

if err = 'N' then do
   ADDRESS ISPEXEC 'TBADD' regtbl
   if rc > 0 then do
      tblcall = 4
      ADDRESS ISPEXEC 'SETMSG MSG(USM204)'
      err = 'Y'
   end
end

ADDRESS ISPEXEC 'TBCLOSE' regtbl
if rc > 0 then do
   tblcall = 5
   ADDRESS ISPEXEC 'SETMSG MSG(USM204)'
   err = 'Y'
end

if err = 'N' then do
   call SAVEVAR
   ADDRESS ISPEXEC 'SETMSG MSG(USM216)'
end

return

/*--------------------------------------------------------------------*/
/* Get the region details from the existing table                     */
/*--------------------------------------------------------------------*/
GETINFO:
ADDRESS ISPEXEC 'TBSKIP' regtbl
if rc > 0 then do
   tblcall = 12
   ADDRESS ISPEXEC 'SETMSG MSG(USM204)'
   err = 'Y'
end

if err = 'N' then do
   ADDRESS ISPEXEC 'TBGET' regtbl
   if rc > 0 then do
      tblcall = 13
      ADDRESS ISPEXEC 'SETMSG MSG(USM204)'
      err = 'Y'
   end
end

ADDRESS ISPEXEC 'TBCLOSE' regtbl
if rc > 0 then do
   tblcall = 14
   ADDRESS ISPEXEC 'SETMSG MSG(USM204)'
   err = 'Y'
end

if err = 'N' then
   call SAVEVAR

return

/*--------------------------------------------------------------------*/
/* Update the table with region details                               */
/*--------------------------------------------------------------------*/
UPDINFO:
ADDRESS ISPEXEC 'TBOPEN' regtbl 'WRITE'
if rc > 0 then do
   tblcall = 6
   ADDRESS ISPEXEC 'SETMSG MSG(USM204)'
   err = 'Y'
end

if err = 'N' then do
   ADDRESS ISPEXEC 'TBSKIP' regtbl
   if rc > 0 then do
      tblcall = 7
      ADDRESS ISPEXEC 'SETMSG MSG(USM204)'
      err = 'Y'
   end
end

if err = 'N' then do
   ADDRESS ISPEXEC 'TBGET' regtbl
   if rc > 0 then do
      tblcall = 8
      ADDRESS ISPEXEC 'SETMSG MSG(USM204)'
      err = 'Y'
   end
end

if err = 'N' then do
   ADDRESS ISPEXEC 'DISPLAY PANEL(USP2301A)'
   disprc = rc

   select
      when disprc = 0 then do
         ADDRESS ISPEXEC 'TBPUT' regtbl
         if rc > 0 then do
            tblcall = 9
            ADDRESS ISPEXEC 'SETMSG MSG(USM204)'
            err = 'Y'
         end
      end
      when disprc > 8 then do
         tblcall = 10
         ADDRESS ISPEXEC 'SETMSG MSG(USM204)'
         err = 'Y'
      end
      otherwise do
         err = 'Y'
         ADDRESS ISPEXEC 'SETMSG MSG(USM217)'
      end
   end  /* select */
end

/* Even if we have had errors, attempt to close the table             */
ADDRESS ISPEXEC 'TBCLOSE' regtbl
if rc > 0 then do
   tblcall = 11
   ADDRESS ISPEXEC 'SETMSG MSG(USM204)'
   err = 'Y'
end

if err = 'N' then do
   call SAVEVAR
   ADDRESS ISPEXEC 'SETMSG MSG(USM216)'
end

return

/*--------------------------------------------------------------------*/
/* Save the variables in the pool so that the components can get at   */
/* them (we are dynamically calling the components so we don't know   */
/* which variables they need). The variables are defined at the top.  */
/*--------------------------------------------------------------------*/
SAVEVAR:

ADDRESS ISPEXEC 'VPUT ('||zuskey||','||zusnam||')'

return

/*--------------------------------------------------------------------*/
/* Build the temp table with region build components                  */
/*--------------------------------------------------------------------*/
BLDTEMP:
tmptbl = 'ZUS'||zusreg||'TP'
tmpn   = 'ZUSTAVL,ZUSTRXX,ZUSTDSC'
tmpk   = 'ZUSTOPT'

ADDRESS ISPEXEC
    'TBCREATE' tmptbl 'KEYS('||tmpk||') NAMES('||tmpn||') NOWRITE'
ADDRESS
if rc > 4 then do
   tblcall = 15
   ADDRESS ISPEXEC 'SETMSG MSG(USM204)'
   err = 'Y'
   return
end

do i = 1 WHILE opt_list.i \= ' '
   parse var opt_list.i zustopt zustavl zustrxx zustdsc
   ADDRESS ISPEXEC 'TBADD' tmptbl
   if rc > 0 then do
      err = 'Y'
      leave
   end
end

if err = 'Y' then do
   ADDRESS ISPEXEC 'TBCLOSE' tmptbl
   tblcall = 16
   ADDRESS ISPEXEC 'SETMSG MSG(USM204)'
end
else do
   ADDRESS ISPEXEC 'TBTOP' tmptbl
end

return

/*--------------------------------------------------------------------*/
/* Loop through the components until the end or the user backs out    */
/*--------------------------------------------------------------------*/
OPTLOOP:

/*                                                                    */
/* if the option has been flagged as unavailable in the table above a */
/* dummy panel will be displayed, otherwise the option will be called */
/*                                                                    */
   if zustavl = 'N' then do
      zcmd = ''
      ADDRESS ISPEXEC 'DISPLAY PANEL(USP2301C)'
      comprc = rc
   end
   else do
      if Length(zustopt) = 1 then
         zusjobn = 'ZUS'||zusreg||'0'||zustopt
      else
         zusjobn = 'ZUS'||zusreg||zustopt
      interpret 'call' zustrxx zusjobn debug ';comprc = result'
   end

/*                                                                    */
/* a RC = 1 from the component indicates that the user has chosen to  */
/* to terminate the cycle                                             */
/* a RC = 1 from the component indicates that there has been an error */
/* in the cycle (eg. FT error) which would affect all other steps     */
/*                                                                    */

   select
      when comprc = 1 then do
         ADDRESS ISPEXEC 'SETMSG MSG(USM206)'
         end
      otherwise
         ADDRESS ISPEXEC 'TBSKIP' tmptbl
         skiprc = rc
         if skiprc = 8 then do
            ADDRESS ISPEXEC 'SETMSG MSG(USM207)'
         end
         else
            if skiprc > 8 then do
               tblcall = 17
               ADDRESS ISPEXEC 'SETMSG MSG(USM204)'
            end
   end

return
