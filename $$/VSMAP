/* REXX */
/*
  |
  | Name: VSMAP
  |
  | Author: David Alcock
  |         Modified - A.Kara (ASYSTS P/L)
  |
  | Purpose: Show the Virtual Storage Map of a OS/390 (MVS)
  |
  | Written: 21 November 1997
  |          Modified 06/08/98 to emulate XAMAP program.
  |
  | Tested: OS/390 v1.2 (should work MVS/XA and higher)
  |
  */

 call get_vsmap        /* Call inline routine and obtain V/S map */

 if vsmap.0 == 0 then do
    say "%VSMAP is OS/390 (MVS) dependent and can't run on "address()
    exit
    end

 if address() == "TSO" then ,
    "clearscr"   /* Installation dependant - Clear the screen */

 call get_smfid /* Call inline routine to obtain the SMFID */

 say "Virtual Storage Map - SMFID="smfid
 say " "
 say left("Area",12) left("Start",8) left("End",8),
     left("Length (K)",10) left("%Full",5)
 say left("-",12,"-") left("-",8,"-") left("-",8,"-"),
     left("-",10,"-") left("-",5,"-")
 do i = vsmap.0 to 1 by -1
       Parse VAR vsmap.i v1 13 v2 v3 v4 v5
       j = 0
       if v2 = 0 & v3 = 0 Then Do
           v2 = right('--',8)
           v3 = right('--',8)
           v4 = right('--',10)
       End
       Else do Forever
           xx = Length(v4)
           yy = (j*4)+3
           If xx <= yy Then Leave
           v4 = Insert(',',v4,xx-yy)
           j = j+1
       End
       If v5 = '' Then v5 = right('--',5)
       Say v1 right(v2,8,'0') right(v3,8,'0') right(v4,10),
           right(v5,5)
    if i = 12 then say Substr('-',1,47,'-') 'The line.'
    end

 gdapvtsz = c2d(storage(d2x(cvtgda + o_GDAPVTSZ),4))
 gdapvtsz = gdapvtsz/1024
 say " "
 say "The Private region below the line:" gdapvtsz"K"
 If Sysvar(Sysispf) = 'ACTIVE' Then ,
     Address ISPEXEC "CONTROL DISPLAY REFRESH"
 exit

 /*---------------------------------------------------------------------
  | Routine: Get SMFID
  | Author: David Alcock dalcock@csw.com davea@ticnet.com
  | Returns: smfid in variable smfid
  ------------------------------------------------------------------- */
 Get_SMFID:

 if address() == "TSO" then ,
    if sysvar(systsoe) > "2040" then do         /* At v2.5 or higher? */
       smfid = mvsvar(syssmfid)                 /* Yes, use IBM func  */
       return
       end

 cvt    = storage(10,4)
 dcvt   = c2d(cvt)
 smca   = storage(c2x(d2c(dcvt+x2d(c5))),3)
 dsmca  = c2d(smca)
 smfid  = storage(c2x(d2c(dsmca+x2d(10))),4)

 return

 /*---------------------------------------------------------------------
  | Routine: Get Virtual Storage Map
  | Author: David Alcock @20-Nov-1997 dalcock@csw.com davea@ticnet.com
  | Returns: vsmap. array with VSM storage areas
  ------------------------------------------------------------------- */
 get_vsmap:

 select
   when address() == "TSO" then nop
   when address() == "MVS" then nop
   otherwise
      vsmap.0 = 0
      return
      end

 vsmap.0 = 19 /* number of VSM areas */
 numeric digits 20

 /*
  | Set offsets in control blocks (taken from DA$ADATA output)
  */

 o_CVTGDA   = 560 ; o_CVTSMEXT = 1196
 o_CVTMLPAS = 8   ; o_CVTMLPAE = 12
 o_CVTEMLPE = 76  ; o_CVTEMLPS = 72
 o_CVTEFLPE = 68  ; o_CVTEFLPS = 64
 o_CVTEPLPE = 60  ; o_CVTEPLPS = 56
 o_CVTERWNE = 52  ; o_CVTERWNS = 48
 o_CVTRWNE  = 36  ; o_CVTRWNS  = 32
 o_CVTRONE  = 44  ; o_CVTRONS  = 40
 o_CVTPLPAE = 28  ; o_CVTPLPAS = 24
 o_CVTFLPAE = 20  ; o_CVTFLPAS = 16
 o_CVTREAL  = 284

 o_GDAEPVT  = 168 ; o_GDAEPVTS = 172
 o_GDAECSA  = 124 ; o_GDAECSAS = 128
 o_GDACSA   = 108 ; o_GDACSASZ = 112
 o_GDAESQA  = 152 ; o_GDAESQAS = 156
 o_GDASQA   = 144 ; o_GDASQASZ = 148
 o_GDAPVT   = 160 ; o_GDAPVTSZ = 164
 o_GDAVR    = 192 ; o_GDAVRSZ  = 196

 /*
  | Locate global areas
  */

 cvt      = c2d(storage(10,4))                    /* -> CVT */
 cvtgda   = c2d(storage(D2X(cvt + o_CVTGDA),4))   /* -> GDA */
 cvtsmext = c2d(storage(D2X(cvt + o_CVTSMEXT),4)) /* -> CVTSMEXT */

 /*
  |  Area number 19 - Ext-Private
  */

 gdaepvt  = c2d(storage(D2X(cvtgda + o_GDAEPVT),4))
 vsmap.19 = Substr('E-Private',1,12),
            d2x(gdaepvt) "7FFFFFFF" ,
            Format((x2d("7FFFFFFF") - gdaepvt) / 1024,,0)

 /*
  |  Area number 18 - Ext-CSA
  */
/*
 fbqe1  =  c2x(storage(d2x(cvtgda + x2d(74)),4))
 fbqel  =  c2x(storage(d2x(cvtgda + x2d(78)),4))
 If fbqe1 /= fbqel Then Do
     ecsasz =  c2x(storage(d2x(cvtgda + x2d(80)),4))
     tsize = 0
     fbqen = fbqe1
     Do While fbqen /= fbqel
         fsize = c2x(storage(d2x(x2d(fbqen) + x2d(8)),4))
         tsize = tsize + x2d(fsize)
         fbqen = c2x(storage(d2x(x2d(fbqen)),4))
     End
     fsize = c2x(storage(d2x(x2d(fbqen) + x2d(8)),4))
     tsize = tsize + x2d(fsize)
     pcu =  Format(100-(tsize / x2d(ecsasz)*100),,0)
 End
 Else pcu = 100
*/
 gdaecsa  = c2d(storage(D2X(cvtgda + o_GDAECSA),4))
 end = (gdaecsa + c2d(storage(D2X(cvtgda + o_GDAECSAS),4))) - 1
 alloc  =  c2d(storage(d2x(cvtgda + x2d(1B4)),4))
 pcu = Format(alloc/(end - gdaecsa)*100,,0)
 vsmap.18 = Substr('E-CSA',1,12) ,
            d2x(gdaeCSA) d2x(end),
            Format((end - gdaecsa) / 1024,,0) pcu

 /*
  |  Area number 17 - Ext-MLPA
  */
 cvtemlps = c2d(storage(D2X(cvtsmext + o_CVTEMLPS),4))
 cvtemlpe = c2d(storage(d2x(cvtsmext + o_CVTEMLPE),4))
 vsmap.17 = Substr('E-MLPA',1,12),
            d2x(cvtemlps) d2x(cvtemlpe),
            Format((cvtemlpe - cvtemlps) / 1024,,0)

 /*
  |  Area number 16 - Ext-FLPA
  */
 cvteflps = c2d(storage(D2X(cvtsmext + o_CVTEFLPS),4))
 cvteflpe = c2d(storage(d2x(cvtsmext + o_CVTEFLPE),4))
 vsmap.16 = Substr('E-FLPA',1,12),
            d2x(cvteflps) d2x(cvteflpe),
            Format((cvteflpe - cvteflps) / 1024,,0)

 /*
  |  Area number 15 - Ext-PLPA
  */
 cvteplps = c2d(storage(D2X(cvtsmext + o_CVTEPLPS),4))
 cvteplpe = c2d(storage(d2x(cvtsmext + o_CVTEPLPE),4))
 vsmap.15 = Substr('E-PLPA',1,12),
            d2x(cvteplps) d2x(cvteplpe),
            Format((cvteplpe - cvteplps) / 1024,,0)

 /*
  |  Area number 14 - Ext-SQA
  */
 gdaesqa  = c2d(storage(D2X(cvtgda + o_GDAESQA),4))
 end = (gdaesqa + c2d(storage(D2X(cvtgda + o_GDAESQAS),4))) - 1
 vsmap.14 = Substr('E-SQA',1,12),
            d2x(gdaesqa) d2x(end),
            Format((end - gdaesqa) / 1024,,0)

 /*
  |  Area number 13 - Ext-R/W Nucleus
  */

 cvterwns = c2d(storage(D2X(cvtsmext + o_CVTERWNS),4))
 cvterwne = c2d(storage(d2x(cvtsmext + o_CVTERWNE),4))
 vsmap.13 = Substr('E-Nuc (R/W)',1,12),
            d2x(cvterwns) d2x(cvterwne),
            Format((cvterwne - cvterwns) / 1024,,0)

 /*
  |  Area number 12 - Ext-R/O Nucleus
  */

 end = cvterwns - 1
 vsmap.12 = Substr('E-Nuc (R/O)',1,12),
            "1000000" d2x(end),
            Format((end - x2d('1000000')) / 1024,,0)

 /*
  |  Area number 11 - R/O Nucleus
  */
 cvtrons = c2d(storage(D2X(cvtsmext + o_CVTRONS),4))
 cvtrone = c2d(storage(d2x(cvtsmext + o_CVTRONE),4))
 vsmap.11 = Substr('Nuc (R/O)',1,12),
            d2x(cvtrons) "FFFFFF",
            Format((x2d('FFFFFF') - cvtrons) / 1024,,0)

 /*
  |  Area number 10 - R/W Nucleus
  */
 cvtrwns = c2d(storage(D2X(cvtsmext + o_CVTRWNS),4))
 cvtrwne = c2d(storage(d2x(cvtsmext + o_CVTRWNE),4))
 vsmap.10 = Substr('Nuc (R/W)',1,12),
            d2x(cvtrwns) d2x(cvtrwne),
            Format((cvtrwne - cvtrwns) / 1024,,0)

 /*
  |  Area number 9  - SQA
  */

 gdasqa   = c2d(storage(D2X(cvtgda + o_GDASQA),4))
 end = (gdasqa + c2d(storage(D2X(cvtgda + o_GDASQASZ),4))) - 1
 vsmap.9  = Substr('SQA',1,12),
            d2x(gdasqa) d2x(end),
            Format((end - gdasqa) / 1024,,0)

 /*
  |  Area number 8  - PLPA
  */
 cvtplpas = c2d(storage(D2X(cvtsmext + o_CVTPLPAS),4))
 cvtplpae = c2d(storage(D2X(cvtsmext + o_CVTPLPAE),4))
 vsmap.8  = Substr('PLPA',1,12),
            d2x(cvtplpas) d2x(cvtplpae),
            Format((cvtplpae - cvtplpas) / 1024,,0)

 /*
  |  Area number 7  - FLPA
  */
 cvtflpas = c2d(storage(D2X(cvtsmext + o_CVTFLPAS),4))
 cvtflpae = c2d(storage(D2X(cvtsmext + o_CVTFLPAE),4))
 vsmap.7  = Substr('FLPA',1,12),
            d2x(cvtflpas) d2x(cvtflpae),
            Format((cvtflpae - cvtflpas) / 1024,,0)

 /*
  |  Area number 6  - MLPA
  */
 cvtmlpas = c2d(storage(D2X(cvtsmext + o_CVTMLPAS),4))
 cvtmlpae = c2d(storage(D2X(cvtsmext + o_CVTMLPAE),4))
 vsmap.6  = Substr('MLPA',1,12),
            d2x(cvtmlpas) d2x(cvtmlpae),
            Format((cvtmlpae - cvtmlpas) / 1024,,0)

 /*
  |  Area number 5  - CSA
  */
/*
 fbqe1 =  c2x(storage(d2x(cvtgda + x2d(64)),4))
 fbqel =  c2x(storage(d2x(cvtgda + x2d(68)),4))
 If fbqe1 /= fbqel Then Do
     csasz =  c2x(storage(d2x(cvtgda + x2d(70)),4))
     tsize = 0
     fbqen = fbqe1
     Do While fbqen /= fbqel
         fsize = c2x(storage(d2x(x2d(fbqen) + x2d(8)),4))
         tsize = tsize + x2d(fsize)
         fbqen = c2x(storage(d2x(x2d(fbqen)),4))
     End
     fsize = c2x(storage(d2x(x2d(fbqen) + x2d(8)),4))
     tsize = tsize + x2d(fsize)
     pcu = Format(100-(tsize / x2d(csasz)*100),,0)
 End
 Else pcu = 100
*/
 gdacsa   = c2d(storage(D2X(cvtgda + o_GDACSA),4))
 end = (gdacsa + c2d(storage(D2X(cvtgda + o_GDACSASZ),4))) - 1
 alloc  =  c2d(storage(d2x(cvtgda + x2d(1B0)),4))
 pcu = Format(alloc/(end - gdacsa)*100,,0)
 vsmap.5  = Substr('CSA',1,12),
            d2x(gdacsa) d2x(end),
            Format((end - gdacsa) / 1024,,0) pcu

 /*
  |  Area number 4  - Private
  */
 gdapvt   = c2d(storage(cvtgda + o_GDAPVT),4)
 gdapvt   = x2d('5000')
 end      = (gdacsa-1)
 vsmap.4  = Substr('Private',1,12),
            d2x(gdapvt) d2x(end),
            Format((end - gdapvt) / 1024,,0)

 /*
  |  Area number 3  - Private V=R
  */
 gdavr    = c2d(storage(cvtgda + o_GDAVR),4)
 gdavrsz  = c2d(storage(cvtgda + o_GDAVRSZ),4)
 if gdavrsz /= 0 Then end = (gdavrsz-1)
 else                 end = gdavrsz
 vsmap.3  = Substr('V=R (If any)',1,12),
            d2x(gdavr) d2x(gdavr+end),
            Format((end - gdavr) / 1024,,0)

 /*
  |  Area number 2  - System Area
  */
 vsmap.2  = Substr('System_Area',1,12),
            "1000" "4FFF",
            Format((x2d('4FFF')-x2d('1000'))/1024,,0)

 /*
  |  Area number 1  - PSA
  */
 vsmap.1  = Substr('PSA',1,12),
            "0" "FFF",
            Format((x2d('FFF')-x2d('0'))/1024,,0)

 return
 /*---------------------------------------------------------------------
  | END END END END END - End of VSMAP exec - END END END END END
  ------------------------------------------------------------------- */
