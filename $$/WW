/******************************** REXX ********************************/
/*--------------------------*/ wwver='1.3' /*-------------------------*/
/*                                                                    */
/* WW: World Watch.                                                   */
/* Execute command with '?' for help.                                 */
/*                                                                    */
/* For update requires access to routine                              */
/*                                                                    */
/*--------------------------------------------------------------------*/
    Arg parm#;Address ISPEXEC;"CONTROL ERRORS RETURN";im_a_macro=0
    If parm#/='' Then Signal byp1
    "ISREDIT MACRO (parm#) NOPROCESS"
    If rc=0 Then im_a_macro=1

byp1:
/*  "CONTROL ERRORS CANCEL"                                           */

ini1:
    Parse Source . . xcmd .
    If Wordpos(parm#,'? /? /HELP HELP')>0 Then Signal help_me

    cities='Delware/Newark,06,24',
           'GCR,08,21',
           'Ponca_City,07,17',
           'Melbourne/Sydney,17,66',
           'Dallas,09,17',
           'Perth,18,60',
           'Bad_Homburg,05,41',
           'A/P,11,60,R',
           'Berlin,06,40',
           'London,07,37,R',
           'NY,07,26',
           ''
    ds_by_zone='0 1 2 3 4 5 6 7 * 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3'

    taillen=2                               /* Pointer length         */
    zedsmsg=
    "VGET (wwparm) SHARED"
#tr=Trace('o')
    If wwparm/='' Then Do;wwparm=;"VPUT (wwparm) SHARED";End
    Else Do
        zedlmsg='Negative times indicate the day before while positive',
              'is the next day. "*" under time indicates',
              'zone has been subjected to daylight saving',
              'while reverse yellow is your home zone.'
        "SETMSG MSG(ISRZ001)"
        Call build_panel
    End

map1:
    Parse VAR cities . ',' . ',' csrp .

    Signal on Syntax Name error_off_00
    Parse Value Translate(WWMYHOME()) With city ',' .;cities_u=Translate(cities)
    If Index(cities_u,city)>0 Then Do
        Interpret "Parse VAR cities_u . '"city",' . ',' csrp ."
        Parse VAR csrp csrp ',' .
    End
error_off_00:
    Signal off Syntax

m.0 =20;equator=12
z_n ='  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23'
z_n ='-11-10 -9 -8 -7 -6 -5 -4 -3 -2 -1  0  1  2  3  4  5  6  7  8  9 10 11 12'
m.1 ='...   ...   ...   ... HH###HHH#..   ...   ...   ...  ....   ...   ...   '
m.2 ='...   ...   ...H H#..  H###HHH#..   ...   ...   ...  H###   ....   ...   '
m.3 ='...   ... HH### HH###   ###HHH...   ...HH ...   ###HHH###HHH###HH  ...   '
m.4 ='..#HHH###HHH###HHH#.#H  ###H  .#.   .##HHH###HHH###HHH###HHH###HHH###HHH '
m.5 ='...HHH.##HHH###HH .##   .#.   ...   ##.HHH###HHH###HHH###HHH###HHH ##.   '
m.6 ='...   ...HHH###HHH###HH ...   ...HH ###HHH###HHH###HHH###HHH###.  #...   '
m.7 ='...   ... HH###HHH###H H...   ... HH###HHH###HHH###HHH###HHH###.   ...   '
m.8 ='...   ...  H###HHH##.   ...   ...HH .##HHH##.HHH###HHH###HHH...H   ...   '
m.9 ='...   ...   ###HHH#..   ...   ...HHH#..  H###HHH###HHH###HH ..#.   ...   '
m.10='...   ...   .##H  ...   ...   ..#HHH###HHH###H H###HHH###HH ....   ...   '
m.11='...   ...   ...HHH...   ...   .##HHH###HHH###   .##   ###   ....   ...   '
m.12='...   ...   ...   .##HH ...   ..#HHH###HHH##.   .#.   ...   ....   ...   '
m.13='...   ...   ...   .##HHH#..   ...   ###HHH#..   ...   .#.H  .##    ...   '
m.14='...   ...   ...   .##HHH###H  ...   .##HHH...   ...   ...   ...H   ...   '
m.15='...   ...   ...   ...HHH###   ...   .##HHH.#.   ...   ...  H###H   ...   '
m.16='...   ...   ...   ...HHH#..   ...   .##HH ...   ...   ....HH###HH  ...   '
m.17='...   ...   ...   ..#HHH...   ...   ..#H  ...   ...   ....HH..#HH  ...   '
m.18='...   ...   ...   ..#H  ...   ...   ...   ...   ...   ...   ...H   ..H   '
m.19='...   ...   ...   ..#H  ...   ...   ...   ...   ...   ...   ....   ...   '
m.20='...   ...   ...   ...H  ...   ...   ...   ...   ...   ...   ....   ...   '

Do i=1 To m.0
  Interpret "WWDATA"Right(i,2,'0')"='02'X"
  Interpret "WWATTR"Right(i,2,'0')"=' "Translate(m.i,'03040506'x,' H.#')"'"
End

    wwdata01=overlay(z_n,wwdata01,2)
    rtime=Substr(time(),1,5);Parse VAR rtime rh ':' rm
    rdate=Date('E')
    #ww20=wwdata20
ref1:
    Do i=1 To Words(cities)
        Parse Value Word(cities,i) With city ',' lin ',' col ',' just .
        olay=city||Copies('-',taillen)'*'
        If Length(olay)+1>col | just='R' Then Do
            olay='*'Copies('-',taillen)city;col=col-1
        End
        Else col=col-Length(olay)
        Interpret 'wwdata'lin'=Overlay(olay,wwdata'lin',col+1)'
    End
    #dls=
    Do i=1 To 24
        If Datatype(Word(ds_by_zone,i))='CHAR' Then flag='*';Else flag=
        Interpret 'DS'i-1'=flag'
    End
scr1:
    wwdata20=#ww20
    Parse VAR rtime rh ':' rm
    zon_c=(csrp-2)%3+1
    If Datatype(Word(ds_by_zone,zon_c))='CHAR' Then plus=-1;Else plus=0
    time0=((rh*60+rm)%60)-(zon_c+plus)

    Do i=1 To 24
      time=time0+i
      If Datatype(Word(ds_by_zone,i))='CHAR' Then time=time-1
      If time<0   Then xx=Adjust(-1)
      If time>=24 Then xx=Adjust(+1)
      wwdata20=wwdata20 || Right(time,3,' ')
      If i=zon_c Then hz=i-1
    End

scr1a:
    zcmd=
    "DISPLAY PANEL(WWP1)"
    If rc/=0 Then Do
        "LIBDEF ISPPLIB"
        #msg=Msg('Off');Address TSO "DELETE '"dsn"'";Exit
    End
    rh=Right(rh,2,'0');rm=Right(rm,2,'0');rtime=rh':'rm
    If Wordpos('/R',Translate(zcmd))>0 Then Do
        just=',R';zcmd=Space(Delword(zcmd,Wordpos('/R',Translate(zcmd)),1))
    End;Else just=
    #zcmd=zcmd;zcmd=Translate(zcmd)
    If Word(zcmd,1)='TRACE' Then Do
        Select
            When Word(zcmd,2)='ON'  Then #tr='N'
            When Word(zcmd,2)='OFF' Then #tr='R'
            Otherwise Do
               If Verify(#tr,'NO','M')>0 Then #tr='R';Else #tr='O'
            End
            x=Trace(#tr)
        End
        Signal scr1a
    End
    If zcmd='?' Then Do
        Signal On Error  Name help_me
        x=$Br(xcmd '?')
        Signal Off Error
        Signal scr1a
    End
    If zcmd='??' Then Do
        Signal On Error  Name help_me
        x=wwdh()
        Signal Off Error
        Signal scr1a
    End
    If Substr(csr,1,6)='WWDATA' Then csrp=csp
    #dz=ds_by_zone
    Do i=1 To 24
        x=Value('ds'i-1);If x='' | x='*' Then Iterate
        If x='N' Then ow=i//10-1;Else Do;ow='*';Interpret 'ds'i-1'=ow';End
        ds_by_zone=Overlay(ow,ds_by_zone,(i-1)*2+1)
    End
    If zcmd='UPDATE' Then Do
         Call update_REXX
         Signal scr1a
    End
    If Substr(zcmd,1,4)='TAIL' Then Do
         Parse VAR zcmd '(' xx ')'
         If Datatype(xx,'W') Then Do;taillen=xx;Signal map1;End
         zedlmsg='Invalid "TAIL" value.'
         "SETMSG MSG(ISRZ001)"
         Signal scr1a
    End
    If zcmd='HOME' & Substr(csr,1,6)='WWDATA' Then Do
        lin=Substr(csr,7);col=Right(csp+0,2,'0')
        xx=Index(cities,','lin','col)
        If xx=0 Then Do
            zedlmsg='The cursor must be placed on an existing city',
                    'marker to define a "HOME".'
            "SETMSG MSG(ISRZ001)"
            Signal scr1a
        End
        wd=$wordat(cities,xx)
        wp=Wordpos(wd,cities)
        If wp>0 Then Do
            cities=Delword(cities,wp,1);cities=wd cities
        End
        zedlmsg='City "'wd'" has been marked as your default home base.',
              'Issue "UPDATE" command to change REXX.'
        "SETMSG MSG(ISRZ001)"
        Signal map1
    End
    If zcmd='DELETE' & Substr(csr,1,6)='WWDATA' Then Do
        lin=Substr(csr,7);col=Right(csp+0,2,'0')
        xx=Index(cities,','lin','col)
        If xx=0 Then Do
            zedlmsg='Place cursor on the city marker to delete city.'
            "SETMSG MSG(ISRZ001)"
            Signal scr1a
        End
        wd=$wordat(cities,xx)
        wp=Wordpos(wd,cities)
        If wp>0 Then cities=Delword(cities,wp,1)
        zedlmsg='City "'wd'" has been deleted. Issue "UPDATE" command',
            'to change REXX.'
        "SETMSG MSG(ISRZ001)"
        Signal map1
    End
/*  zcmd='London(+52,3)'                                              */
    If Index(zcmd,'(')>0 Then Do
        Parse VAR #zcmd city '(' lat ',' lng ')'
        csrp=34+lng%5;If lng//5>0 Then csrp=csrp+1
/*      csrp=35+lng%5;If lng//5>0 Then csrp=csrp+1                    */
        If csrp>72 Then csrp=csrp-72
        lat=lat*-1;lati=lat%lat
        lin=equator+lat%9;If lat//9>0 Then lin=lin+lati
        city=city','Right(lin,2,'0')','Right(csrp,2,'0') || just
        cities=cities city
        Signal map1
    End

    If #zcmd/='' & Substr(csr,1,6)='WWDATA' Then Do
        If zcmd='NEW' Then city=;Else city=#zcmd
        lin=Substr(csr,7);col=Right(csp+0,2,'0')
        If city='' Then city="City_"Words(cities)+1
        Else city=Translate(city,'_',' ')
        city=city','lin','col || just
        cities=cities city
        Signal map1
    End
    If #dz/=ds_by_zone Then Signal ref1
    Signal scr1

Adjust: Arg dif
    time=time-(dif*24)
    If dif>0 Then time='+'time;Else time='-'time
    Return 0

update_REXX:
    "ISREDIT (member)=MEMBER"
    If rc/=0 | member/=xcmd Then Do
        udsn=Get_dataset()
        If udsn='Missing.dataset' Then Do
            zedlmsg='Cannot update unless executing as an edit macro on itself.'
            "SETMSG MSG(ISRZ001)"
            Return 8
        End
        zedlmsg='Unfortunately you were not in UPDATE mode and your changes',
                'have been lost.',
                'You are now in edit mode. If you have access to update',
                "'"udsn"("xcmd")' then repeat your updates otherwise your",
                'changes will be rejected.'
        "SETMSG MSG(ISRZ001)"
        wwparm='Y';"VPUT (wwparm) SHARED"
        "EDIT DATASET('"udsn"("xcmd")') MACRO(&XCMD)"
        "LIBDEF ISPPLIB"
        #msg=Msg('Off');Address TSO "DELETE '"dsn"'";Exit
    End
    @adr=Address();Address ISREDIT;"(status)=USER_STATE"

    "F 'ds_by_zone' FIRST 5";If rc/=0 Then Return 8
    "(line)=LINE .ZCSR"
    Parse VAR line p1 '=' p2
    If p2/=ds_by_zone Then Do
        line=p1"='"ds_by_zone"'"
        "LINE .ZCSR=(line)"
    End

    "F 'taillen' 5 FIRST";If rc/=0 Then Return 8
    "(line)=LINE .ZCSR"
    Parse VAR line p1 '=' p2 .
    If p2/=taillen Then Do
        xx=Index(line,'=')
        line=Overlay(taillen,line,xx+1,10)
        "LINE .ZCSR=(line)"
    End

    "F 'cities' FIRST 5";If rc/=0 Then Return 8
    "(lin#)=LINENUM .ZCSR";"LABEL" lin#"=.LINEF"
    Parse VAR line . '='
    j=0
    Do i=lin# To 999
        "(line)=LINE" i
        If Strip(line)/="''" Then Iterate
        "LABEL" i"=.LINET";Leave
    End
    lead='    cities='
    Do i=1 To Words(cities)
        city=lead"'"Word(cities,i)"',"
        "LINE_BEFORE .LINEF=(city)"
        lead='           '
    End
    city=lead"''"
    "LINE_BEFORE .LINEF=(city)"

    "DEL ALL NX .LINEF .LINET"
    "USER_STATE=(status)"
    "SAVE"
    Address(@adr)
    zedlmsg='Member has been updated and saved.'
    "SETMSG MSG(ISRZ001)"
    Return 0

$Wordat: Parse Arg i_strg,s_col,r_split
    If s_col<1 Then s_col=1
    #i_i=Lastpos(' ',i_strg,s_col);r_split=Translate(r_split)
    If #i_i=0 Then #i_i=1
    Select
        When r_split='L' Then Return Strip(Substr(i_strg,1,#i_i-1))
        When r_split='T' Then Return Strip(Substr(i_strg,#i_i))
        Otherwise Do
            Parse Value Substr(i_strg,#i_i) With i_strg .
            Return i_strg
        End
    End

Get_dataset:
    xxx=$ddalloc('SYSEXEC') $ddalloc('SYSPROC')
    Do While xxx/=''
        Parse Var xxx xx xxx
        If Sysdsn("'"xx"("xcmd")'")='OK' Then Return xx
    End
    Return 'Missing.dataset'


help_me:
    ms=mark(2)
/*

 WW: World Watch.

 With the advent of the follow the sun principle it is nice to keep track of the
 times around the world.  If you are a PC nerd and live for the WEB then read no
 further and hit your [END] PF key repeatedly untill you break the keyboard.
 However, if you are a real person and love MVS, read further.

 As you may have noticed that a 3270 display is not quite as pretty as a Windows
 one and you may have trouble finding the borders of countries, but you can
 generally guess where things are.

 The display consists of the following feature:
   1. Input field to change the current local time to whatever time you like.
      Just tab to it and type. No wanky pull down menus.  Note, that this is a
      24 hour clock.
   2. The first line contains a basic grid to zone the Atlas, relative to GMT
      (which is zone 0).
   3. The second last line is the time in respective zones relative to the time
      entered in point 1 above against your "home_zone". More on the "home_zone"
      later. A plus(+) in front of the time indicates that the time zone is one
      day ahead while a minus(-) signifies one day behind. Without a sign
      indicator, it is the same date zone as yours.
   4. The last line is an indicator of DayLight Saving (DLS). Zones with an '*'
      indicates that you have marked that zone subject to DLS.  The DLS
      indicator with a   (reverse yellow block to indicate a full day of sun-
      shine) is your current "home_zone". Home_zone subject to DLS will be
      displayed as *. (Unfortunately individual DLS zones
      zones have to be 'manually' defined. More on this later.)

 Controlling display:
   1. Indicate a zone under daylight saving using any non-blank or '*' in the
      appropriate column of the DLS indicator line.  You may remove DLS by
      typing 'N' in the column (blanking it out just removes the '*' but will
      not adjust the time).
   2. You may change your current "home_zone" by placing the cursor in the
      desired zone and hitting [ENTER].
      Notes: - This zone will be set to the value of the time field and, subject
               to DLS, will radiate the times from it accordingly.
             - Any zone subject to DLS will have 1 hour added to its time hence
               two adjacent zones can show the same time.
             - This change is only affective for the session.
   3. You can make any marker your "home_zone" by entering "HOME" on the command
      line, place the cursor on the spotting "*" and hit [ENTER].
      Note: - To make this permanent you will need to issue the UPDATE command
              (refer below).
   4. Alternatively, you can create member WWMYHOME at the top of your
      SYSPROC/SYSEXEC concatenation with the following contents:
          /* REXX */ Return 'My_Home_City'
      where " 'My_Home_City'," (note the leading space and trailing comma) must
      be a city in the variable "cities" in the WW driver (refer below).
      The purpose of this feature is to prevent creaming your "home_zone" by
      upgrades to the WW driver which may have another home.
      Note: - Without this member or misspelt city, the "home_zone" will revert
              to defaults (1st. city in variable "cities").  The first match of
              setting from WWMYHOME in variable "cities" will be used.
   5. You can enter cities or landmarks on your map for quick reference. Note
      that no validation is performed so you can place Sydney in Alaska if you
      like and overlaps WILL overlap.  To place a marker on your map, enter the
      name on the command line and place the cursor within the map and hit
      [ENTER].  Imbedded spaces will be changed to '_'.
   6. You can enter cities or landmarks using latitude and longitude.   The
      format is "name(h.lat,lng)", where:
         name - any name.
         h.   - '+' for Northern hemisphere.
                '-' for Southern hemisphere.
         lat  - Latitute to the nearest minute.
         ','  - Seperator.
         lng  - Longitude to the nearest minute.
   7. You can remove markers/cities by entering "DELETE" on the command line,
      place the cursor on the spotting "*" and hit [ENTER].
   8. Each marker has a "tail" pointing to the spot. To alter the length of the
      tail (the number of '-'s), enter "TAIL(n)" on the command line, where 'n'
      is the number of '-'s.

 Self modifying feature:
   To activate this feature you will need to be editting your WW member and
   issue command WW.  Note:

   Once you have modified your DLS details, added/removed markers and tagged one
   as your home, enter "UPDATE" on the command line to activate the self
   modification of this REXX program.
   The variable settings for "cities" and "ds_by_zone" will be updated to your
   new values and saved. The member will be presented on termination.  If you
   changed the "tail" value, variable "taillen" will be updated.

   Notes: - The marker/city you tagged as "home" will be the first definition in
            the "cities" variable an will be used as the default home_zone.
            Every time you tag a marker as the "home" and issue the "UPDATE"
            command, it will be moved to the top.
          - If you are not editing the member and issue the UPDATE command the
            first member found in the SYSEXEC or SYSPROC concatenation will be
            edited.  All changes will be lost and have to be re-applied.
            Furthermore, if you don't have update access, you will loose your
            changes.  You will be informed accordingly but it will be too late.
            Wont it?
          - By default all markers/cities are left justified.  If you add a
            marker/city and the length of the name combined with the "tail" is
            too long to fit inside the left hand screen boundary it will
            automatically be left justified.  You can force any marker/city to
            be Right justified by using a parameter of /R (either case).

   You can add/modify your own DLSs and markers.
     1. For DLS, overtype any zone with a single numeric character.  To remove
        DLS change the character to a 'N'. The zone equates have been set up
        incrementally for easier manual reference.  (Variable is "ds_by_zone".)
     2. You can add your own markers by adding a word to the variable "cities"
        in the format "name,line#,column#{,R}".  You can append ",R" to force
        right justification.

        Notes:
        - both line# and column# must be a two digit number with leading zeros.
        - line# is actually the field number in the map which ranges from 1-20.
          The first field is relative line number 4 when not in split screen
          mode. If you use the auto cursor placement feature all this is done
          for you.

   Summary of commands:
     DELETE   - plus cursor to remove a marker.
     HOME     - plus cursor to mark a new "home_zone"
                Note: If you use member WWMYHOME to tag your "home_zone" this
                      command will update the WW driver and not WWMYHOME. You
                      will need to cut/paste the top city (or whichever you
                      wish) into your member.
     NEW      - plus cursor to add a new marker called "CITYn", where n is
                the number of existing markers +1.
     TAIL(n)  - length of marker tail, where n is numeric.
     UPDATE   - to  update the REXX routine with your changes.
     name     - plus cursor to add a marker. 'name' cannot be one of the above
                values.
     name,line#,column#
              - if you know your screen layout
     name(h.lat,lng)
              - if you know the latitude and longitude
     ... /R   - use paramerter to force right justification of name.  This
                parameter can be appended to NEW or name.. commands.

                            ( End of Instructions. )

*/
    me=mark(-2)
    Do i=ms To me;Say Substr(Sourceline(i),2,79);End
    If zcmd='?' THen Signal scr1a;Else Return 0

Mark:If Datatype(Arg(1))/='NUM' Then Arg(1)=1;Return sigl+Arg(1)

/*--------------------------------------------------------------------*/
/* Allocate panel                                                     */
/*--------------------------------------------------------------------*/
build_panel:
    dd='WW'Time('s')
    hlq=Sysvar(syspref);If hlq='' Then hlq=Userid();Else hlq=hlq'.'Userid()
    dsn= hlq'.$$$TEMP.'dd

    #msg=Msg('Off')
    Address TSO
    "DELETE '"dsn"'"
    Signal on Syntax Name error_off_$ALKUVOL
    unitvol="UNIT(SYSALLDA)";unitvol=$ALKUVOL('$ZTEMPF')
error_off_$ALKUVOL:Signal off Syntax
    "ALLOC DA('"dsn"') NEW CATALOG TRACK SPACE(1,1)",
       "DSORG(PO) LRECL(80) BLKSIZE(0)" unitvol "DIR(1)",
       "RECFM(F B) REU"
    "FREE DA('"dsn"')"

    Call make_mem_1
    Call build_queue('WWP1')

    Address
    "LIBDEF ISPPLIB DATASET ID('&DSN') STACK"
    #msg=Msg(#msg)
    Return 0

/*--------------------------------------------------------------------*/
/* Populate the queue from the source lines                           */
/*--------------------------------------------------------------------*/
build_queue:
    "NEWSTACK"
    Do i=n_st To n_en;Queue Sourceline(i);End;Queue ''
    "ALLOC F("dd") DA('"dsn"("Arg(1)")') SHR REU"
    "EXECIO * DISKW "dd" (FINIS"
    "FREE  F("dd")"
    "DELSTACK"

    Return 0

/*--------------------------------------------------------------------*/
/* Create help panel(s) from sourcelines between the '/* */'          */
/*--------------------------------------------------------------------*/
make_mem_1:
    n_st = mark(2)                          /* Mark start of data     */
/*
)ATTR DEFAULT(%+_)

  # TYPE(TEXT)   COLOR(YELLOW) INTENS(LOW)  SKIP(ON)
  + TYPE(TEXT)   COLOR(BLUE)   INTENS(LOW)  SKIP(ON)
  ' TYPE(OUTPUT) COLOR(BLUE)   INTENS(LOW)  CAPS(OFF)
  " TYPE(OUTPUT) COLOR(YELLOW) INTENS(HIGH) CAPS(OFF)
  ~ TYPE(INPUT)  COLOR(YELLOW) INTENS(HIGH) CAPS(ON)
  _ TYPE(INPUT)  COLOR(RED)    INTENS(HIGH) CAPS(OFF) HILITE(USCORE)

  @ AREA(DYNAMIC)
 01 TYPE(DATAIN)
 02 TYPE(DATAOUT)
 03 TYPE(CHAR)   COLOR(GREEN)
 04 TYPE(CHAR)   COLOR(GREEN) HILITE(REVERSE)
 05 TYPE(CHAR)   COLOR(BLUE)
 06 TYPE(CHAR)   COLOR(BLUE)  HILITE(REVERSE)

)BODY EXPAND(\\) CMD(ZCMD) SMSG(MSG) LMSG(MSG)
#&ZTIME &RDATE08 \-\ World Watch \-\ V&WV
%&SID ===>_ZCMD \ \ %=>_RH+:_RM+
"MSG
@WWDATA01,WWATTR01                                                             @
@WWDATA02,WWATTR02                                                             @
@WWDATA03,WWATTR03                                                             @
@WWDATA04,WWATTR04                                                             @
@WWDATA05,WWATTR05                                                             @
@WWDATA06,WWATTR06                                                             @
@WWDATA07,WWATTR07                                                             @
@WWDATA08,WWATTR08                                                             @
@WWDATA09,WWATTR09                                                             @
@WWDATA10,WWATTR10                                                             @
@WWDATA11,WWATTR11                                                             @
@WWDATA12,WWATTR12                                                             @
@WWDATA13,WWATTR13                                                             @
@WWDATA14,WWATTR14                                                             @
@WWDATA15,WWATTR15                                                             @
@WWDATA16,WWATTR16                                                             @
@WWDATA17,WWATTR17                                                             @
@WWDATA18,WWATTR18                                                             @
@WWDATA19,WWATTR19                                                             @
@WWDATA20,WWATTR20                                                             @
+ ~Z+~Z+~Z+~Z+~Z+~Z+~Z+~Z+~Z+~Z+~Z+~Z+~Z+~Z+~Z+~Z+~Z+~Z+~Z+~Z+~Z+~Z+~Z+~Z+
)INIT
  &SID=&ZSYSID
  .CURSOR = ZCMD
  .HELP   = ISR00003
  &DATE   = '&ZDAY..&ZMONTH..&ZYEAR'
  &RDATE08= '&RDATE'
  .ZVARS='(DS0 DS1 DS2 DS3 DS4 DS5 DS6 DS7 DS8 DS9 DS10 +
           DS11 DS12 DS13 DS14 DS15 DS16 DS17 DS18 DS19 DS20 +
           DS21 DS22 DS23)'
  &XXX = 'DS&HZ'
  &WV  = '&WWVER'
  .ATTR (&XXX) = 'HILITE(REVERSE)'
)REINIT
  REFRESH(*)
)PROC
  &CSR = .CURSOR
  &CSP = .CSRPOS
/*VER(&RTIME,NB,ITIME)                                                */
  VER(&RH,NB,NUM)
  VER(&RH,RANGE,0,24)
  VER(&RM,NB,NUM)
  VER(&RM,RANGE,0,59)
)END
*/
    n_en = mark(-2)                         /* Mark end of data       */
    Return 0
