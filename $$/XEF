/*--------------------------ooo00 REXX 00ooo--------------------------*/
/* XEF: Fix Multi-Procs help for XE.                                  */
/*                                                                    */
/* The line is split into individual commands per line. The attribute */
/* line is also split and appended after the command prefixed by a    */
/* '!' starting in column 22. This appendage will be used to build    */
/* the attribute line.  If attribute details are missing, a reverse   */
/* red 'R' attribute is set to remind you to colourise it properly.   */
/*                                                                    */
/* Parameter(s):                                                      */
/*  /A  - Apply process result and delete original lines, otherwise   */
/*        results are presented as NOTELINES.                         */
/*  /J  - Join                                                        */
/*  /S  - Split (default)                                             */
/*                                                                    */
/*--------------------------------------------------------------------*/
XEMPH_ver='1.03'
    ARG parm#;Address ISPEXEC;"CONTROL ERRORS RETURN";ima_macro=0
    If parm#/='' Then Signal byp1
    "ISREDIT MACRO (parm#) NOPROCESS";If rc=0 Then ima_macro=1

byp1:
/*  "CONTROL ERRORS CANCEL"                                           */

ini1:
    Parse Upper VAR parm# parm#
    Address ISREDIT;"(status)=USER_STATE"
    "SCAN=OFF";"(caps)=CAPS";"CAPS=OFF";"(last)=LINENUM .ZLAST"
    If Wordpos('/J',parm#)>0 Then Do
        join=1;parm#=Delword(parm#,Wordpos('/J',parm#),1)
    End;Else join=0
    If Wordpos('/A',parm#)>0 Then Do
        parm#=Delword(parm#,Wordpos('/A',parm#),1)
        noteline=;where='LINE_AFTER .ZLAST'
    End;Else where='LINE_BEFORE .ZFIRST'
    If \join Then Do
        Address TSO "NEWSTACK"
        Do i=1 While i<last
            "(line)=LINE" i;Parse VAR line 1 p0 +1 2 p1 +20 p2 +20 p3 +20 p4
            If Wordpos(p0,'! *')>0 Then Iterate
            i=i+1;"(linea)=LINE" i
            Parse VAR linea 2 v1 +20 v2 +20 v3 +20 v4 +20
            Do j=1 To 4
                Interpret "xx=p"j";yy='!'v"j
                If xx/='' Then x=pl(Left(xx,20) yy)
            End
        End
        If noteline='' Then Do
            "DELETE ALL" 1 last;"SORT"
            xx='* Change and hit with:  XEF /J /A'
            "LINE_BEFORE .ZFIRST=NOTELINE (xx)"
        End
    End
    Else Do
        linex='  ';lineh='! 'Copies(Substr('y  tg',1,20),4)
        lineh='! '
        Do i=1 To last
            "(line)=LINE" i;Parse VAR line 2 xx +20 1 '!' yy 1 ast +2
            If ast='* ' Then Iterate
            If yy='' Then yy=' 'Left('y  R',20)
            linex=linex || xx
            lineh=lineh || Substr(yy,2,20)
            If Length(linex)>65 Then Do
                x=pl(linex);linex='  ';x=pl(lineh)
                lineh='! '
            End
        End
        If Length(linex)>2 Then Do;x=pl(linex);x=pl(lineh);End
        If noteline='' Then "DELETE ALL" 1 last
    End
    Signal get_out


Get_out:"CAPS=(caps)";"USER_STATE=(status)";Exit
pl:Parse Arg n#;where"="noteline "(n#)";Return 0
