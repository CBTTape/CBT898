*
*        PROGRAM TO SCAN A LOAD LIBRARY AND LIST THE NAMES OF ALL
*        MEMBERS LINK-EDITED LATER THAN OR EQUAL TO A DATE SUPPLIED
*        ON THE EXEC CARD.
*
*        JCL TO RUN THE PROGRAM:-
*
*            //STEP010  EXEC PGM=ALKLMDAT,PARM='DDMMYY,PROGRAM*'
*            //STEPLIB  DD DSN=PRTA.BATCH.LOAD,DISP=SHR
*            //LMODLIB  DD DSN=THE.LOADLIB.TO.BE.SCANNED,DISP=SHR
*            //LMODLIST DD SYSOUT=*
*
*
R0       EQU   0      SYSTEM PARM REG
R1       EQU   1      SYSTEM PARM REG
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11     INTERNAL RETURN ADDR.
R12      EQU   12     BASE REG
R13      EQU   13     SAVEAREA ADDR
R14      EQU   14     SYSTEM RETURN ADDR
R15      EQU   15     STANDARD BRANCH ADDR REG
*
ALKLMDAT CSECT
         STM   R14,R12,12(R13)
         LR    R12,R15
         USING ALKLMDAT,R12
         LA    R14,SAVEAREA
         ST    R14,8(R13)
         ST    R13,SAVEAREA+4
         LA    R13,SAVEAREA
*
*        OPEN FILES AND PROCESS PARM FIELD
*
         L     R3,0(R1)            SAVE PARM ADDRESS
         OPEN  (PRINTLIN,OUTPUT)
         MVI   PRINTBUF,C' '       BLANK BUFFER
         MVC   PRINTBUF+1(L'PRINTBUF-1),PRINTBUF
         LH    R4,0(R3)            LOAD LENGTH OF PARM
         CH    R4,=H'6'            6 BYTE PARM PASSED?
         BNL   GO001               YES - PARM OK
         MVC   PRINTBUF(L'EMSG01),EMSG01  ERROR MESSAGE TO PRINTLINE
         BAL   R11,PRINTIT         AND PRINT IT
         B     FINISH              AND THEN FINISH UP
*
GO001    DS    0H
         CH    R4,=H'6'            6 BYTE PARM PASSED?
         BE    GO009               YES - PARM OK
         CLI   8(R3),C','          Q. SEPERATOR
         BNE   GO009               NO - IGNORE REST
         CH    R4,=H'7'            NO ADDITIONAL PARAMETER
         BE    GO009               YES - PARM OK
         SH    R4,=H'7'            GET LENGTH OF DATA
         BE    GO009               YES - PARM OK
         CH    R4,=H'8'            FULL LENGTH
         BNH   GO002               YES - PARM OK
         LA    R4,8                FORCE LENGTH OF 8
GO002    DS    0H
FINDELM0 TRT   9(0,3),STARTAB          FIND COMMA/SPACE IN NAME
         BCTR  4,0                     -1 BECAUSE OF NEXT +1
         EX    4,FINDELM0              FIND DELIMITERS
         BZ    GO003                   BYPASS IF FULL LENGTH USED
         LR    4,1                     DETERMINE LENGTH OF THIS FIELD
         LA    1,9(3)                  START OF DATA
         SR    4,1                     LENGTH OF DATA
         BCTR  4,0                     POINT BEFORE DELIMITER
GO003    DS    0H
         LA    4,1(4)                  RESTORE TO ACTUAL LENGTH
         STH   4,MASKL                 SAVE MASK LENGTH
         BCTR  4,0                     PREPARE FOR EX COMMAND
MOVELEN0 MVC   MASK(*-*),9(3)
         EX    4,MOVELEN0
GO009    DS    0H
         XR    R4,R4               ZERO REG 4
         LR    R5,R4               ZERO REG 5
         LR    R6,R4               ZERO REG 6
         STM   R4,R6,POINTRSV      INIT. POINTER SAVE AREA TO 0
         MVI   DIRFLAG,X'00'       INIT. DIRECTORY EOF FLAG
         RDJFCB LOADLIB            READ JFCB FOR DSN
         MVC   PRINTBUF(L'HEADER1),HEADER1 MOVE HEADER TO PRINTLINE
         TIME
         ST    R1,WDATSTOR         SAVE PACK DEC JUL DATE
         BAL   R11,JULGRG          CONVERT TO GREGORIAN
         UNPK  ZDATOUT(7),DAT(4)   UNPACK IT FOR DISPLAY
         MVC   PRINTBUF+14(2),ZDATOUT+5  TODAY DAY
         MVC   PRINTBUF+17(2),ZDATOUT+3  TODAY MONTH
         MVC   PRINTBUF+20(2),ZDATOUT+1  TODAY YEAR
         MVC   PRINTBUF+65(2),2(R3)    MOVE IN DAY
         MVC   PRINTBUF+68(2),4(R3)    MOVE IN MONTH
         MVC   PRINTBUF+71(2),6(R3)    MOVE IN YEAR
         MVC   ZDATIN(2),6(R3)         MOVE IN YEAR
         MVC   ZDATIN+2(2),4(R3)       MOVE IN MONTH
         MVC   ZDATIN+4(2),2(R3)       MOVE IN DAY
         PACK  PDATIN(4),ZDATIN(6)     AND PACK IT FOR COMPARES
         BAL   R11,PRINTIT         AND PRINT HEADLINE
         CLI   PDATIN+1,X'70'          Q. AFTER YEAR 70
         BH    CONT#100                   Y. MUST BE IN 1900's
         MVI   PDATIN,X'20'            SET Y2K
CONT#100 DS    0H
         MVC   PRINTBUF+26(L'HEADER2),HEADER2 MOVE HEADER TO PRINTLINE
         LA    3,44                    MAXIMUM LENGTH
         BCTR  3,0                     PREPARE FOR EX COMMAND
FINDELIM TRT   BUFFER(*-*),COMMATAB    FIND COMMA/SPACE IN NAME
         EX    3,FINDELIM              FIND DELIMITERS
         BZ    MOVLENOK                BYPASS IF FULL LENGTH USED
         LR    3,1                     DETERMINE LENGTH OF THIS FIELD
         LA    1,BUFFER                START OF DATA
         SR    3,1                     LENGTH OF DATA
         BCTR  3,0                     PREPARE FOR EX COMMAND
MOVLENOK DS    0H
         LA    11,PRINTBUF+L'HEADER2+26 POINT PAST HEADER
MOVEDSN1 MVC   0(0,11),BUFFER          MOVE ON EXECUTE
         EX    3,MOVEDSN1              EXECUTE THE MOVE
         AR    11,3                    ADD LENGTH OF DATA
         LA    11,1(11)                POINT TO NEXT AVAILABLE BYTE
         MVC   0(2,11),=C'''.'         SET CLOASING BRACKETS
         BAL   R11,PRINTIT             AND PRINT HEADLINE
         MVI   PRINTBUF+1,C'-'         UNDERLINE HEADLINE
         MVC   PRINTBUF+2(78),PRINTBUF+1
         BAL   R11,PRINTIT         AND PRINT UNDERLINE
         BAL   R11,PRINTIT         AND PRINT BLANK LINE
*
         OPEN  (LOADLIB,INPUT,DIRECTRY,INPUT)
*
*        GET NEXT DIRECTORY ENTRY - REG 2 WILL POINT TO NAME
*
NXTENTRY DS    0H
         BAL   R11,GETENTRY        GET ENTRY FROM DIRECTORY BLOCK
         CLI   DIRFLAG,DIREOF      END OF FILE ON DIRECTORY?
         BE    CLOSEINP            YES - FINISH UP
         TM    11(R2),X'80'        IS IT AN ALIAS?
         BO    NXTENTRY            YES.. GET NEXT ENTRY
         MVC   MEMBER,0(R2)        SAVE MEMBER NAME
         CLC   MASKL(2),=H'0'      Q. ANY MASK
         BE    OK4DATEC               N. TEST DATE
         LH    11,MASKL            LOAD MASK LENGTH
         BCTR  11,0                PREPARE FOR EX COMMAND
MASKCOMP CLC   MEMBER(*-*),MASK    Q. TEST WITH MASK
         EX    11,MASKCOMP         TEST MASK
         BL    NXTENTRY            NEXT IF LOWER
         BH    CLOSEINP            EXIT IF HIGHER
OK4DATEC DS    0H
         MVC   MEMTTR(3),8(R2)          MODULE START TTR
         POINT LOADLIB,MEMTTR      POINT TO FIRST LMOD RECORD
         BAL   R11,LMODSCAN
         B     NXTENTRY            AND GET NEXT ENTRY NAME
*
*
CLOSEINP DS    0H                  NORMAL EXIT - CLOSE INPUT FILES
         CLOSE (LOADLIB,,DIRECTRY)
*
FINISH   DS    0H
         CLOSE (PRINTLIN,)
         L     R13,SAVEAREA+4
         LM    R14,R12,12(R13)
         SR    R15,R15
         BR    R14
*
*
*        SUBROUTINES
*
*
*        RETURN ADDRESS OF NEXT DIRECTORY ENTRY NAME IN REG 2
*
GETENTRY DS    0H
         LM    R2,R4,POINTRSV      LOAD POINTERS
*                                  R2 > NAME IN DIR BLOCK
*                                  R3 > LAST BYTE IN DIR BLOCK
*                                  R4 = # OF BYTES IN DIR ENTRY
         LA    R2,12(R2,R4)        BUMP R2 TO NEXT ENTRY
         CR    R2,R3               R2 UP TO END OF BLOCK YET?
         BL    UPDPOINT            NO  - GO UPDATE POINTERS
         GET   DIRECTRY,DIRBUF     YES - GET THE NEXT DIR BLOCK
         LA    R2,DIRBUF+2         ADJ R2 TO POINT TO NAME
         LH    R3,DIRBUF           NUMBER OF BYTES IN BLOCK
         LTR   R3,R3               IS BLOCK EMPTY
         BZ    UPDPT01             YES - SET EOF FLAG
         LA    R3,DIRBUF(R3)       NO  - ADD BYTES TO START ADDR
UPDPOINT DS    0H                  UPDATE POINTERS
*        LAST NAME IN LAST BLOCK IS X'FFFFFFFFFFFFFFFF'
         CLI   0(R2),X'FF'         IS IT END OF DIRECTORY
         BNE   UPDPT02             NO.. CONTINUE
UPDPT01  DS    0H                  YES..
         MVI   DIRFLAG,DIREOF      SET FLAG TO SHOW EOF ON DIR.
         B     GETENTXX            AND RETURN
UPDPT02  DS    0H
         IC    R4,11(R2)           NO. OF HALFWORDS
         LA    R5,X'1F'            SET MASK
         NR    R4,R5               AND TO REMOVE OTHER FLAGS
         SLL   R4,1                HALFWORDS X 2 FOR BYTES
         STM   R2,R4,POINTRSV      SAVE POINTERS
GETENTXX DS    0H
         BR    R11                 RETURN
*
*
*        SCAN THE LOAD MODULE FOR DATE RECORD AND COMPARE
*
LMODSCAN DS    0F
         STM   R0,R3,LMSAVE        SAVE REGISTERS
         LR    R3,R11              SAVE RETURN ADDRESS
*
LMBLKRD  DS    0H
         LA    R2,LMODBUF
         READ  RDECB,SF,LOADLIB,(R2),'S'
         CHECK RDECB
         CLI   0(R2),X'80'         IS IT REQUIRED RECORD TYPE?
         BNE   LMBLKRD             NO
         CLI   1(R2),X'15'         IS IT THE DATE RECORD? (ASMA90)
         BE    DATERECD            YES
         CLI   1(R2),X'11'         IS IT THE DATE RECORD?
         BNE   LMBLKRD             NO
DATERECD DS    0H
         L     R0,14(R2)           PICK UP 3 BYTE JUL PACKED DATE
*                                   WITH LEADING UNWANTED BYTE
         N     R0,=X'00FFFFFF'     ZERO HIGH BYTE
         ST    R0,WDATSTOR         AND SAVE DATE
         BAL   R11,JULGRG          CONVERT JUL TO GREG DATE
         CLC   DAT,PDATIN          COMPARE DATES
         BL    LMSCANXX            OUT OF RANGE - RETURN
         MVC   PRINTBUF+1(8),MEMBER
         MVC   DISPDAT+9(2),ZDATOUT+5
         MVC   DISPDAT+12(2),ZDATOUT+3
         MVC   DISPDAT+15(2),ZDATOUT+1
         MVC   PRINTBUF+12(L'DISPDAT),DISPDAT
         BAL   R11,PRINTIT         PRINT THE MEMBER NAME
LMSCANXX DS    0H
         LR    R11,R3              RESTORE RETURN ADDRESS
         LM    R0,R3,LMSAVE
         BR    R11
*
*
*        PRINT LINE OF OUTPUT AND CLEAR TO SPACES
*
PRINTIT  DS    0H
         LR    R2,R11              SAVE RETURN ADDRESS
         PUT   PRINTLIN,PRINTBUF   PRINT THE OUTPUT
         MVI   PRINTBUF,C' '
         MVC   PRINTBUF+1(L'PRINTBUF-1),PRINTBUF  ALL SPACES
         LR    R11,R2              RESTORE RETURN ADDRESS
         BR    R11                 AND RETURN
*
*
*        CONVERT PACKED DECIMAL JULIAN DATE TO DISPLAY GREGORIAN
*
JULGRG   DS    0H
         STM   R1,R14,SAVE2        SAVE REGISTERS
*
         LA    R11,WDATSTOR
         MVC   WMDAYS(48),MDAYS COPY DAYS CONSTANTS TO WORK AREA
         L     R2,WDATSTOR
         L     R4,=F'4'         DIVISOR 4 FOR LEAPYEAR CHECK
         SRDL  R2,44
         O     R3,=X'0000000F'  LOW ORDER NIBBLE FOR PACKED DEC.
         STM   R2,R3,WYEAR
         CVB   R2,WYEAR
         SRDL  R2,32
         DR    R2,R4            REMAINDER IN REG 2
         C     R2,=F'0'         IF ZERO THEN LEAP YEAR
         BNE   MON01
         L     R2,=F'29'        SET DAYS IN FEB
         ST    R2,WMDAYS+4
*
MON01    L     R3,WDATSTOR
         N     R3,=X'0000FFFF'  ZERO HIGH ORDER 16 BITS
         L     R2,=F'0'         ZERO REG 2
         STM   R2,R3,WDAYS
         CVB   R2,WDAYS
         L     R6,=F'12'
         LA    R7,WMDAYS
         L     R4,=F'1'         MONTH NUMBER
MON02    C     R2,0(R7)
         BNH   MON03
         S     R2,0(R7)
         A     R4,=F'1'
         LA    R7,4(R7)
         BCT   R6,MON02
MON03    CVB   R7,WYEAR         BINARY YEAR IN REG 7
         M     R6,=F'10000'     MULTIPLY YEAR BY 10000
         AR    R7,R2            ADD DAYS
         LR    R5,R4
         M     R4,=F'100'       MULTIPLY MONTH BY 100
         AR    R7,R5            ADD MONTH
         CVD   R7,WYEAR         SAVE WHOLE DATE AS PD IN YEAR
         MVC   DAT(4),WYEAR+4
         L     R0,DAT
         N     R0,=X'0FFFFFFF'  TURN OFF HIGH NIBBLE
         O     R0,=X'0000000F'  FIX SIGN NIBBLE
         ST    R0,DAT
         UNPK  ZDATOUT(7),DAT(4)
         CLC   DAT(2),=X'0700'     Q. AFTER YEAR 70
         BH    CONT#200               Y. MUST BE IN 1900's
         OI    DAT,X'20'           SET Y2K
CONT#200 DS    0H
         LM    R1,R14,SAVE2        RESTORE REGISTERS
         BR    R11                 AND RETURN
*
*
*
*
SAVEAREA DS    18F
SAVE2    DS    18F
LMSAVE   DS    4F
BUFFER   DS    64F                 JFCB & DIRECTORY BUFFER.
DIRBUF   EQU   BUFFER
POINTRSV DS    3F                  DIRECTORY POINTER SAVE
MASKL    DC    H'0'                NAME OF MEMBER
MEMBER   DS    CL8                 NAME OF MEMBER
MASK     DC    CL8' '              NAME OF MEMBER
MEMTTR   DS    F                   SAVE TTR ADDRESS OF LMOD
PDATIN   DS    CL4                 PACKED PARMDATE IN 0YYMMDDF
ZDATIN   DS    CL6                 ZONED PARMDATE IN YYMMDD
ZDATOUT  DS    CL7                 DISPLAY DATE IN 0YYMMDD
         DS    0F
DAT      DS    CL4
WMDAYS   DS    12F
WTIMSTOR DS    1D
WDAYS    DS    1D
WYEAR    DS    1D
WDATSTOR DS    1F
DIRFLAG  DS    C
DIREOF   EQU   X'FF'
*
PRINTBUF DC    CL132' '
EMSG01   DC    CL39' Six byte date parm (DDMMYY) not passed'
HEADER1  DS    0CL77
         DC    CL25'1ALKLMDAT run DD/MM/YY - '
         DC    CL40' List of load modules link-edited since '
         DC    CL12'DD/MM/YY in'
HEADER2  DC    C'dataset : '''
DISPDAT  DC    CL17' Changed DD/MM/YY'
*
MDAYS    DC    F'31',F'28',F'31',F'30',F'31',F'30'
         DC    F'31',F'31',F'30',F'31',F'30',F'31'
*
*
DCBEXIT  DS    0F
         DC    X'07'
         DC    AL3(BUFFER)
         DC    X'80000000'
*
COMMATAB DC    XL256'00'
         ORG   COMMATAB+C','
         DC    C','
         ORG   COMMATAB+C' '
         DC    C' '
         ORG
*
STARTAB  DC    XL256'00'
         ORG   STARTAB+C'*'
         DC    C','
         ORG   STARTAB+C' '
         DC    C' '
         ORG
*
         LTORG
         PRINT GEN
PRINTLIN DCB   DDNAME=LMODLIST,DSORG=PS,MACRF=PM,                      C
               RECFM=FBA,LRECL=80,BLKSIZE=6160
*
LOADLIB  DCB   DDNAME=LMODLIB,DSORG=PO,MACRF=R,EXLST=DCBEXIT,          C
               EODAD=NXTENTRY
*
DIRECTRY DCB   DDNAME=LMODLIB,DSORG=PS,MACRF=GM,EODAD=CLOSEINP,        C
               RECFM=F,BLKSIZE=256,LRECL=256
*
         DS    0D
LMODBUF  DS    32000C
*
         END
