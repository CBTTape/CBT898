***********************************************************************
*                                                                     *
*  Title:    SYSIN variables in batch jobs                            *
*  System:   Batch jobs                                               *
*  Module:   BATCHSIN                                                 *
*  Program:  BATCHSIN                                                 *
*  Function: Permit SYSIN data to be passed as JCL set variables.     *
*            This program will permit JCL to be sculptured in such a  *
*            way that JCL variables (either from a SET command or     *
*            PROC parameters) may be 'used' within SYSIN statements.  *
*                                                                     *
*  Method:   Include step(s), for each SYSIN line that contains a     *
*            variable whereby the line is built from the parameter    *
*            passed to this program. JCL will permit variable use in  *
*            program parameter lists. This parameter will then be     *
*            output to a one line dataset that can be concatenated to *
*            the SYSIN DD statement in the appropriate position, eg.  *
*                                                                     *
*   //*                                                               *
*   //VARS SET MEMBER=PROGDUMP                                        *
*   //     SET INCLUDES='TRACER1,TRACER2'                             *
*   //*                                                               *
*   //*------------------------------------------------------------*  *
*   //PARML1   EXEC PGM=BATCHSIN,                                     *
*   // PARM='    INCLUDE SYSLIB(&INCLUDES.)'                          *
*   //STEPLIB  DD DISP=SHR,DSN=SPALK.LOADLIB                          *
*   //SYSOUT   DD DISP=(NEW,PASS),DSN=&&LINKP1,                       *
*   //            UNIT=SYSDA,SPACE=(TRK,(1,1))                        *
*   //PARML2   EXEC PGM=BATCHSIN,                                     *
*   // PARM='    ENTRY &MEMBER'                                       *
*   //STEPLIB  DD DISP=SHR,DSN=SPALK.LOADLIB                          *
*   //SYSOUT   DD DISP=(NEW,PASS),DSN=&&LINKP2,                       *
*   //            UNIT=SYSDA,SPACE=(TRK,(1,1))                        *
*   //PARML3   EXEC PGM=BATCHSIN,                                     *
*   // PARM='    NAME &MEMBER.(R)'                                    *
*   //STEPLIB  DD DISP=SHR,DSN=SPALK.LOADLIB                          *
*   //SYSOUT   DD DISP=(NEW,PASS),DSN=&&LINKP2                        *
*   //*------------------------------------------------------------*  *
*   //LKED     EXEC PGM=IEWL,COND=(5,LT),                             *
*   //         PARM='MAP,LET,LIST,AMODE=31'                           *
*   //SYSUT1   DD UNIT=SYSALLDA,SPACE=(1024,(100,10))                 *
*   //SYSLMOD  DD DISP=SHR,DSN=SPALK.LOADLIB                          *
*   //SYSPRINT DD SYSOUT=*                                            *
*   //SYSLIB   DD DISP=SHR,DSN=SPALK.LOADLIB,                         *
*   //SYSLIN   DD DISP=(OLD,DELETE),DSN=&LOADSET                      *
*   //         DD DDNAME=SYSIN                                        *
*   //*------------------------------------------------------------*  *
*   //SYSIN    DD *                                                   *
*       SETCODE AC(1)                                                 *
*   // DD DCB=(BLKSIZE=0,RECFM=FB),DISP=(OLD,DELETE),DSN=&&LINKP1     *
*   // DD DCB=(BLKSIZE=0,RECFM=FB),DISP=(OLD,DELETE),DSN=&&LINKP2     *
*   /*                                                                *
*   //                                                                *
*                                                                     *
*---------------------------------------------------------------------*
*  Author:   ASYSTS Pty. Ltd. (A. Kara)                               *
*=====================================================================*
*
BATCHSIN KICKOFF (R12),WORKAREA,WORKAREL,LIST=YES
                                                                SPACE 1
         LA    R15,4                   Set return code
         TM    0(R1),X'80'             Q. Parameter address
         BNO   EXITPROG                   N. GoTo common exit
                                                                SPACE 1
TESTPARM DS    0H
         L     R6,0(R1)                Load address of parameter
         LH    R1,0(R6)                Load length of parameter
         LTR   R1,R1                   Q. Parameter length zero
         BZ    EXITPROG                   Y. GoTo common exit
         LA    R2,2(R6)                Point to parameter
         BCTR  R1,0                    Prepare for 'EX' command
         MVC   SYSPARM,SPACES          Initialise parameter field
MOVEPARM MVC   SYSPARM(0),0(R2)        Move parameter
         EX    R1,MOVEPARM             Actually move parameter
                                                                SPACE 1
         MVC   SYSOUT(SYSOUTL),SYSOUTC Move constant to DSECT
         MVC   OPENL(OPENSKLL),OPENSKL Move constant to DSECT
                                                                SPACE 1
         LA    R3,SYSOUT               DCB for SYSOUT
         LA    R1,OPENL                Open list
         OPEN  ((R3),(OUTPUT)),MF=(E,(R1)) Open output file
         USING IHADCB,R3               and tell assembler about it
         TM    DCBOFLGS,DCBOFOPN       Q. Is it open
         BO    PUTDATA                    Y. Put data to file
         LA    R15,8                   Set error return code
         B     EXITPROG                GoTo common exit
                                                                SPACE 1
PUTDATA  DS    0H
         PUT   (R3),SYSPARM            Put parameter details to file
                                                                SPACE 1
         LA    R1,OPENL                Open list
         CLOSE ((R3)),MF=(E,(R1))      Close output file
         XR    R15,R15                 Initialise return code
                                                                SPACE 1
EXITPROG DS    0H
         RACKOFF RC=(R15),LIST=YES     Return to caller
*=====================================================================*
*
*---------------------------------------------------------------------*
         LTORG
*---------------------------------------------------------------------*
*
SPACES   DC    CL256' '
*
*---------------------------------------------------------------------*
SYSOUTC DCB    DDNAME=SYSOUT,                                          X
               DSORG=PS,                SEQUENTIAL                     X
               MACRF=(PM),                                             X
               LRECL=80
SYSOUTL EQU    *-SYSOUTC
*---------------------------------------------------------------------*
OPENSKL  OPEN  (),MF=L
OPENSKLL EQU   *-OPENSKL
*
*---------------------------------------------------------------------*
WORKAREA DSECT
         DS    18F                      Register save area
SYSPARM  DC    CL80' '
*---------------------------------------------------------------------*
SYSOUT DCB     DDNAME=SYSOUT,                                          X
               DSORG=PS,                SEQUENTIAL                     X
               MACRF=(PM),                                             X
               LRECL=80
*
OPENL    OPEN  (),MF=L
*
WORKAREL EQU   *-WORKAREA
*
         DCBD
*
         END
