*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
*                                                                     *
*        TITLE:    'BMS MAPS FROM ISPF PANELS'                        *
*        SYSTEM:   N/A                                                *
*        MODULE:   BMSFISPF                                           *
*        PROGRAM:  BMSFISPF                                           *
*        FUNCTION: DESIGN A PANELS UNDER ISPF, TEST IT UNDER DIALOG   *
*                  FUNCTION TESTING AND ONCE SATISFIED, CONVERT IT TO *
*                  A BMS MAP.                                         *
*                                                                     *
*        PARAMETERS:                                                  *
*                  THE PARAMETER MAY BE AS FOLLOWS:                   *
*                  1ST RECORD: COLS     VALUE                         *
*                              -------  ----------------------------  *
*                              01 - 08  MAPSET NAME                   *
*                              09 - 16  MAP NAME                      *
*                              ETC....                                *
*                  2ND RECORD: NUMBER OF VARIABLES REQUIRING 'Z' VAR  *
*                              SUBSTITUTION.                          *
*                  3RD RECORD: NUMBER OF VARIABLES REQUIRING 'FSET'   *
*                              DEFINITION.                            *
*                  4RD & 5TH:  '.ZVARS' VALUES. EACH FIELD 8 BYTES    *
*                              LONG.                                  *
*                  6RD & 7TH:  '&FSET' VALUES. EACH FIELD 8 BYTES     *
*                              LONG.                                  *
*                        BYTE.                                        *
*                                                                     *
*        REGISTER USAGE:                                              *
*                  R1   - AVAILABLE                                   *
*                  R2   - AVAILABLE                                   *
*                  R3   - 2ND. BASE REGISTER                          *
*                  R4   - 3RD. BASE REGISTER                          *
*                  R5   - AVAILABLE                                   *
*                  R6   - AVAILABLE                                   *
*                  R7   - AVAILABLE                                   *
*                  R8   - AVAILABLE                                   *
*                  R9   - AVAILABLE                                   *
*                  R10  - AVAILABLE                                   *
*                  R11  - AVAILABLE                                   *
*                  R12  - AVAILABLE                                   *
*                  R13  - R13 SAVEAREA POINTER AND 1ST. BASE REGISTER *
*                  R14  - AVAILABLE                                   *
*                  R15  - AVAILABLE                                   *
*                                                                     *
*        NOTES:    PROGRAM IS NON RE-ENTRANT.                         *
*        AUTHOR:   A. KARA (ASYSTS P/L).                              *
*        DATE:     .....................                              *
*                                                                     *
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
*        PUSH PRINT
*        COPY @MACROS                    COMMON USED MACROS
*        POP  PRINT
*---------------------------------------------------------------------*
BMSFISPF KICKOFF (R13,R3,R4)
         LA    R6,TABLE             POINT R6 TO START OF TABLE
OPENFILS DS    0H
         OPEN  (PRINTER1,(OUTPUT))  OPEN PRINTFILE
         OPEN  (PRINTER2,(OUTPUT))  OPEN PRINTFILE
         BAL   R14,HEADLINS         GO PROCESS HEADLINES
RETHEAD  DS    0H
         OPEN  (MACLIB,(OUTPUT))    OPEN OUTPUT FILE
         OPEN  (ISPPLIB,(INPUT))    OPEN INPUT FILE
         OPEN  (SYSIN,(INPUT))      OPEN INPUT FILE
         LA    R10,GETREC           USE R10 AS RETURN TO AFTER GETREC
         ST    R10,BRNCHST          USE R10 AS RETURN TO AFTER GETREC
         B     SMAPSET
GETREC   DS    0H
         GET   ISPPLIB,INREC        GET FIRST RECORD(PARAMETER)
         LA    R11,INREC            POINT TO START OF INREC
TSTATTR  CLC   ATTR(5),0(R11)       Q. FIRST 5 CHAR = ")ATTR"
         BE    ATTRSECT             Y - PROCESS ATTR SECTION
TSTBODY  CLC   BODY(5),0(R11)       N - Q. FIRST 5 CHAR = ")BODY"
         BNE   TSTINIT                  N - TEST INIT
         LA    R10,BODYSECT         Y - PROCESS BODY SECTION
         ST    R10,BRNCHST          USE R10 AS RETURN TO AFTER GETREC
         B     GETREC                   GET NEXT RECORD
TSTINIT  CLC   INIT(5),0(R11)       N - Q. FIRST 5 CHAR = ")INIT"
         BNE   TSTPROC                  N - TEST INIT
         BE    INPTEND              Y - "END" OF INPUT
         LA    R10,INITSECT         Y - PROCESS INIT SECTION
         ST    R10,BRNCHST          USE R10 AS RETURN TO AFTER GETREC
         B     GETREC                   GET NEXT RECORD
TSTPROC  CLC   PROC(5),0(R11)       N - Q. FIRST 5 CHAR = ")PROC"
         BNE   TSTENDX                  N - TEST END
         BE    INPTEND              Y - "END" OF INPUT
         LA    R10,PROCSECT         Y - PROCESS PROC SECTION
         ST    R10,BRNCHST          USE R10 AS RETURN TO AFTER GETREC
         B     GETREC                   GET NEXT RECORD
TSTENDX  CLC   ENDB(5),0(R11)       N - Q. FIRST 5 CHAR = ")END "
         BE    INPTEND              Y - "END" OF INPUT
*                                   Q. IS BRACH STORAGE = GETREC
*                                      IE. NO ")BODY" IDENTIFIER
         L     R2,BRNCHST           LOAD 'NEXT BRANCH TO' ADDRESS
         LA    R12,GETREC           LOAD ADDRESS OF 'GETREC'
         CR    R12,R2               Q. ARE THEY THE SAME
         BNE   BPCHGBRN                N. DO NOT CHANGE BRANCH
         LA    R10,BODYSECT            Y. CHANGE TO BODYSECT
         ST    R10,BRNCHST                STORE
BPCHGBRN DS    0H
         L     R10,BRNCHST          USE R10 AS RETURN TO AFTER GETREC
         BR    R10                  N - BRANCH TO LAST TYPE OF OPER
ATTRSECT DS    0H
         MVI   ATTRFLAG,C'Y'        ATTRIBUTES DEFINE = YES
         LA    R10,ATTRCHAR         PROCESSING ATTR SECTION
         ST    R10,BRNCHST          USE R10 AS RETURN TO AFTER GETREC
         CLC   INREC+5(75),=CL75' ' USING DEFAULT ATTRIBUTES
         BE    SETDEFS              BRANCH TO FIND KEY
DEFAULTU DS    0H                   REDEFINE DEFAULTS
         LA    R11,6(R11)           INC CARD POINTER PAST ")ATTR "
         LA    R8,74(R0)            SET R8 TO COLUMN LIMIT
ATTRLOOP DS    0H
         CLC   DEFAULT(8),0(R11)    Q. IS NEXT 8 CHARS = "DEFAULT("
         BE    DEFSTART             Y - BRANCH TO START OF DEFAULT
         LA    R11,1(R11)           N - INC CARD POINTER BY 1
         BCT   R8,ATTRLOOP          Q. CARD LIMIT REACHED, N - LOOP
         B     ERR1                 Y - ERROR
DEFSTART DS    0H
         LA    R11,8(R11)           SET CARD PTR PAST "DEFAULT("
         MVC   0(1,R6),0(R11)       SET TEXT HIGH DEFAULTS ATTR
         BAL   R10,STOTRT##         STORE TRTABLE ENTRY
         MVC   1(1,R6),=CL1'T'      SET TEXT HIGH DEFAULT TYPE
         MVC   2(1,R6),=CL1'H'      SET TEXT HIGH DEFAULT INTENSITY
         MVC   3(1,R6),=CL1'W'      SET TEXT HIGH DEFAULT COLOR
         MVC   4(1,R6),=CL1'O'      SET TEXT HIGH DEFAULT HILITE
         LA    R11,1(R11)           POINT R6 TO NEXT SET OF ATTRIBUTES
         LA    R6,5(R6)             POINT R6 TO NEXT SET OF ATTRIBUTES
         MVC   0(1,R6),0(R11)       SET TEXT LOW DEFAULTS ATTR
         BAL   R10,STOTRT##         STORE TRTABLE ENTRY
         MVC   1(1,R6),=CL1'T'      SET TEXT LOW DEFAULTS TYPE
         MVC   2(1,R6),=CL1'L'      SET TEXT LOW DEFAULTS INTENSITY
         MVC   3(1,R6),=CL1'B'      SET TEXT LOW DEFAULTS COLOR
         MVC   4(1,R6),=CL1'O'      SET TEXT LOW DEFAULT HILITE
         LA    R11,1(R11)           POINT R6 TO NEXT SET OF ATTRIBUTES
         LA    R6,5(R6)             POINT R6 TO NEXT SET OF ATTRIBUTES
         MVC   0(1,R6),0(R11)       SET TEXT INPUT DEFAULTS ATTR
         BAL   R10,STOTRT##         STORE TRTABLE ENTRY
         MVC   1(1,R6),=CL1'I'      SET TEXT INPUT DEFAULTS TYPE
         MVC   2(1,R6),=CL1'H'      SET TEXT INPUT DEFAULTS INTENSITY
         MVC   3(1,R6),=CL1'R'      SET TEXT INPUT DEFAULTS COLOR
         MVC   4(1,R6),=CL1'O'      SET TEXT INPUT DEFAULT HILITE
         B     STOTRT#              INCREMENT TABLE POINTER
SETDEFS  DS    0H                   SET DEFAULT ATTRIBUTES '%+_'
         MVC   0(1,R6),=CL1'%'      SET TEXT HIGH DEFAULTS ATTR
         BAL   R10,STOTRT##         STORE TRTABLE ENTRY
         MVC   1(1,R6),=CL1'T'      SET TEXT HIGH DEFAULTS TYPE
         MVC   2(1,R6),=CL1'H'      SET TEXT HIGH DEFAULTS INTENSITY
         MVC   3(1,R6),=CL1'W'      SET TEXT HIGH DEFAULTS COLOR
         MVC   4(1,R6),=CL1'O'      SET TEXT HIGH DEFAULT HILITE
         LA    R6,5(R6)             POINT R6 TO NEXT SET OF ATTRIBUTES
         MVC   0(1,R6),=CL1'+'      SET TEXT LOW DEFAULTS ATTR
         BAL   R10,STOTRT##         STORE TRTABLE ENTRY
         MVC   1(1,R6),=CL1'T'      SET TEXT LOW DEFAULTS TYPE
         MVC   2(1,R6),=CL1'L'      SET TEXT LOW DEFAULTS INTENSITY
         MVC   3(1,R6),=CL1'B'      SET TEXT LOW DEFAULTS COLOR
         MVC   4(1,R6),=CL1'O'      SET TEXT LOW DEFAULT HILITE
         LA    R6,5(R6)             POINT R6 TO NEXT SET OF ATTRIBUTES
         MVC   0(1,R6),=CL1'_'      SET TEXT INPUT DEFAULTS ATTR
         BAL   R10,STOTRT##         STORE TRTABLE ENTRY
         MVC   1(1,R6),=CL1'I'      SET TEXT INPUT DEFAULTS TYPE
         MVC   2(1,R6),=CL1'H'      SET TEXT INPUT DEFAULTS INTENSITY
         MVC   3(1,R6),=CL1'R'      SET TEXT INPUT DEFAULTS COLOR
         MVC   4(1,R6),=CL1'O'      SET TEXT INPUT DEFAULT HILITE
         B     STOTRT#              INCREMENT TABLE POINTER
ATTRCHAR DS    0H                   GET SELF DEFINED ATTRS
         LA    R8,80(R0)            SET R8 AS COLUMN LIMIT
ACHARLOP CLI   0(R11),C' '          IS CHAR A SPACE
         BE    ACHARINC                Y. GET NEXT CHAR
         MVC   0(1,R6),0(R11)          N. STORE ATTR CHAR
         B     ATTRTYPE             FIND ATTR TYPE
ACHARINC DS    0H
         LA    R11,1(R11)           POSITION ON FIRST CHAR OF TYPE
         BCT   R8,ACHARLOP
         B     GETREC               GET NEXT RECORD (BLANK LINE)
ATTRTYPE DS    0H                   GET SELF DEFINED ATTRS TYPE
         LA    R8,80(R0)            SET R8 AS COLUMN LIMIT
         LA    R11,INREC            REPOSITION R11 TO START
ATYPELOP CLC   0(5,R11),TYPE        IS TYPE DEFINED
         BE    ATYPEDEF                Y. ESTABLISH TYPE
         LA    R11,1(R11)           POSITION R11 ON NEXT CHAR
         BCT   R8,ATYPELOP             N. TRY NEXT STRING
         MVC   1(1,R6),=CL1'T'      SET OUTPUT DEFAULT TYPE
         B     ATTRINTE             FIND ATTR INTENSITY
ATYPEDEF DS    0H
         LA    R11,5(R11)           POSITION ON FIRST CHAR OF TYPE
         MVC   1(1,R6),0(R11)       SET ATTR TYPE
ATTRINTE DS    0H                   GET SELF DEFINED ATTRS INTENSITY
         LA    R11,INREC            REPOSITION R11 TO START
         LA    R8,80(R0)            SET R8 AS COLUMN LIMIT
AINTELOP CLC   0(7,R11),INTENS      IS INTENSITY DEFINED
         BE    AINTEDEF                Y. ESTABLISH INTENSITY
         LA    R11,1(R11)           POSITION R11 ON NEXT CHAR
         BCT   R8,AINTELOP             N. TRY NEXT STRING
         MVC   2(1,R6),=CL1'L'      SET LOW DEFAULTS INTENSITY
         B     ATTRHILI             FIND ATTR HILITE
AINTEDEF DS    0H
         LA    R11,7(R11)           POSITION ON FIRST CHAR OF INTENSITY
         MVC   2(1,R6),0(R11)       SET ATTR INTENSITY
ATTRHILI DS    0H                   GET SELF DEFINED ATTRS HILITE
         LA    R11,INREC            REPOSITION R11 TO START
         LA    R8,80(R0)            SET R8 AS COLUMN LIMIT
AHILILOP CLC   0(7,R11),HILITE      IS HILITE DEFINED
         BE    AHILIDEF                Y. ESTABLISH HILITE
         LA    R11,1(R11)           POSITION R11 ON NEXT CHAR
         BCT   R8,AHILILOP             N. TRY NEXT STRING
         MVC   4(1,R6),=CL1'O'      SET OFF DEFAULT HILITE
         B     ATTRCOLO             FIND ATTR COLOR
AHILIDEF DS    0H
         LA    R11,7(R11)           POSITION ON FIRST CHAR OF HILITE
         MVC   4(1,R6),0(R11)       SET ATTR HILITE
ATTRCOLO DS    0H                   GET SELF DEFINED ATTRS COLOR
         LA    R11,INREC            REPOSITION R11 TO START
         LA    R8,80(R0)            SET R8 AS COLUMN LIMIT
ACOLOLOP CLC   0(6,R11),COLOR       IS COLOR DEFINED
         BE    ACOLODEF                Y. ESTABLISH INTENSITY
         LA    R11,1(R11)           POSITION R11 ON NEXT CHAR
         BCT   R8,ACOLOLOP             N. TRY NEXT STRING
         B     ACOLOSET             UNDEFINED COLOR
ACOLODEF DS    0H
         LA    R11,6(R11)           POSITION ON FIRST CHAR OF COLOR
         MVC   3(1,R6),0(R11)       SET ATTR COLOR
         B     STOTRT#              INCREMENT POINTER
ACOLOSET DS    0H                   SET UNDEFINED COLOR
TESTTEXT CLC   1(1,R6),=CL1'T'      IS ATTR TYPE = TEXT
         BNE   TESTINPU                N. TRY INPUT
TESTINTH CLC   2(1,R6),=CL1'H'      IS ATTR INTENSITY = HIGH
         BNE   TESTINTL                N. TRY LOW
         MVC   3(1,R6),=CL1'W'      SET ATTR COLOR = WHITE
         B     STOTRT#              INCREMENT POINTER
TESTINTL CLC   2(1,R6),=CL1'L'      IS ATTR INTENSITY = LOW
         BNE   STOTRT#                 N. INCREMENT TABLE POINTER
         MVC   3(1,R6),=CL1'B'      SET ATTR COLOR = WHITE
TESTINPU CLC   1(1,R6),=CL1'I'      IS ATTR TYPE = INPUT
         BNE   TESTOUTP                N. MUST BE OUTPUT
         MVC   3(1,R6),=CL1'R'      SET ATTR COLOR = RED
         B     STOTRT#              INCREMENT POINTER
TESTOUTP MVC   3(1,R6),=CL1'W'      SET ATTR COLOR = WHITE
         B     STOTRT#              INCREMENT POINTER
STOTRT#  DS    0H                   UPDATE TRT WITH ATTR
         LA    R8,TRTABLE           STORE START OF TRANSLATE TABLE
         SR    R2,R2                INIT R2
         IC    R2,0(R6)             USE ATTR CHAR AS ADDRESS QUALIFIER
         AR    R8,R2                ESTABLIST ATTR CHAR ADDRESS IN TRT
         STC   R2,0(R8)             SET TRTABLE ATTR CHAR ON
INCRPTR  DS    0H                   INCREMENT POINTER
         LA    R6,5(R6)             POSITION R6 TO NEXT SET OF ATTRS
         B     GETREC               GET NEXT RECORD
STOTRT## DS    0H                   UPDATE TRT WITH DEFAULT ATTRS
         LA    R8,TRTABLE           STORE START OF TRANSLATE TABLE
         SR    R2,R2                INIT R2
         IC    R2,0(R6)             USE ATTR CHAR AS ADDRESS QUALIFIER
         AR    R8,R2                ESTABLIST ATTR CHAR ADDRESS IN TRT
         STC   R2,0(R8)             SET TRTABLE ATTR CHAR ON
         BR    R10
NOATTRLN DS    0H                   NO ")ATTR" CARD IN PANEL
         MVC   TABLE(15),=CL15'%THWO+TLBO_IHRO'
         SR    R2,R2
         IC    R2,TABLE
         STC   R2,TRTABLE(R2)       SET TRTABLE ATTR CHAR ON
         IC    R2,TABLE+5
         STC   R2,TRTABLE(R2)       SET TRTABLE ATTR CHAR ON
         IC    R2,TABLE+10
         STC   R2,TRTABLE(R2)       SET TRTABLE ATTR CHAR ON
         MVI   ATTRFLAG,C'Y'
         B     ATTRDEFD
BODYSECT DS    0H                   PREMATURE EXIT
         CLI   ATTRFLAG,C'N'
         BE    NOATTRLN
ATTRDEFD DS    0H
         L     R12,LINECNT          LOAD LINE NUMBER
         LA    R12,1(R12)           INCREMENT LINENUMBER
         ST    R12,LINECNT          SAVE LINE NUMBER
         BAL   R14,UNPACK           UNPACK LINE NUMBER
         MVC   ALINE(2),LENGTH+1
         LA    R9,INREC             R9 WILL CONTAIN START OF ATTR FLD
         LA    R1,INREC             R1 WILL CONTAIN FOUND ATTR CHAR
         LA    R11,INREC            R1 WILL CONTAIN FOUND ATTR CHAR
         LA    R6,INREC+79          STORE END OF RECORD IN R6
         LR    R5,R6                USE R5 FOR LENGTH OF SCAN
FIRSTIME DS    0H                   FIRST TIME THRU FOR LINE
         SR    R5,R1                GET LENGTH OF SCAN
         SR    R2,R2                INITIALISE R2 TO ZERO
         EX    R5,TRANS             FIND NEXT ATTRIBUTE CHAR
         BZ    NOATTR               NO ATTRS, FOUND
         CR    R1,R6                Q. IS R1 LESS THAN R6
         BNL   DUMFIL                  N. ATTR LAST CHAR
         BAL   R10,GETDETS          GET FOUND ATTRIBUTE DETAILS
         LA    R9,1(R1)             POINT R9 PAST FIRST ATTR CHAR
         CLC   INREC+1(79),SPACES   Q. FIRST CHAR ATTR
         BE    DUMFIL                  Y. GO DUMMY FILL
         LA    R1,1(R1)
         LR    R5,R6                USE R5 FOR LENGTH OF SCAN
         B     FATTRLOP
NOATTR   DS    0H
         MVI   ATTRIB,C'+'
         MVC   ATYPE,=CL7'INITIAL'
         MVC   AINTEN,=CL4'NORM'
         MVC   ACOLOR(9),SPACES
         MVC   ACOLOR(4),=CL4'BLUE'
         LA    R12,4(R0)            SET COLOR LENGTH
         ST    R12,COLENGTH         STORE COLOR LENGTH
         MVC   AHILITE(9),SPACES
         MVC   AHILITE(3),=CL3'OFF'
         LA    R12,3(R0)            SET COLOR LENGTH
         ST    R12,HILENGTH         STORE COLOR LENGTH
         LA    R1,INREC+79          POINT R1 TO END OF RECORD
         LA    R9,INREC+1           POINT R9 PAST FIRST FILD (DEF ATTR)
         CLC   INREC(80),SPACES     Q. IS LINE ALL SPACES
         BNE   BPDUMFIL                N. BRANCH PAST DUMMY FILL
DUMFIL   DS    0H
         LA    R1,INREC+79          POINT R1 TO END OF RECORD
         CLI   TRUNC,C'A'           Q. TRANSLATE "ASIS"
         BE    BPDUMFIL                Y. BYPASS BLANK TEST
         LA    R1,INREC+2           POINT R1 TO END OF RECORD
         LA    R9,INREC+1           POINT R9 PAST FIRST FILD (DEF ATTR)
         MVC   INREC+1(1),=XL1'00'
BPDUMFIL DS    0H
         BAL   R10,MOVEFLDE
         B     GETREC               GET NEXT RECORD
FATTRLOP SR    R5,R1                GET LENGTH OF SCAN
         SR    R2,R2                INITIALISE R2 TO ZERO
         EX    R5,TRANS             FIND NEXT ATTRIBUTE CHAR
         BZ    BENDREC              NO ATTRS, FOUND
         ST    R1,SAVER1
         BAL   R10,GETFIELD             Y. GET FIELD VALUE/LENGTH
         L     R1,SAVER1
         CR    R1,R6                Q. R1 < R6
         BE    GETREC                   Y. LAST CHAR ATTR/NO PROCESS
         BAL   R10,GETDETS          GET FOUND ATTRIBUTE DETAILS
         LR    R5,R6                RESTORE R5 AFTER "EX" OPERATION
         LA    R9,1(R1)             POSITION PAST FOUND ATTR
         LA    R1,1(R1)             POSITION PAST FOUND ATTR
         ST    R1,SAVER1
         CR    R9,R6                REACHED END OF RECORD
         BL    FATTRLOP                 N. LOOK FOR NEXT ATTR CHAR
BENDREC  DS    0H                   END OF BODY RECORD
         LA    R1,INREC+79
         BAL   R10,MOVEFLDE
         B     GETREC               GET NEXT RECORD
HTRANS   DS    0H
TRANS    TRT   0(0,R1),TRTABLE      TRANSLATE FROM CURRENT COL (R1)
GETDETS  DS    0H
         ST    R10,SAVER10
         STC   R2,ATTRIB            STORE FOUND ATTRIBUTE FROM R2
         LA    R8,TABLE             STORE START OF TABLE IN R8
         LA    R7,64(R0)            STORE MAX TABLE ENTRY COUNTER
GETALOP  DS    0H
         CLC   0(1,R8),ATTRIB       FND ATTR THIS ONE IN TABLE
         BE    SETDETS                  Y. SET DETAILS
         LA    R8,5(R8)                 N. POINT TO NEXT ATTR
         BCT   R7,GETALOP                  GET NEXT ATTR DETAILS
         B     ERR3                 END OF ATTRIBUTE TABLE
SETDETS  DS    0H
         CLI   1(R8),C'T'           IS ATTR "TEXT"
         BNE   TRYTYPEI                N. TRY INPUT
         MVC   ATYPE,=CL7'INITIAL'
         B     TRYINTEH             FIND INTENSITY
TRYTYPEI CLI   1(R8),C'I'           IS ATTR "INPUT"
         BNE   TRYTYPEO                N. MUST BE OUTPUT
         MVC   ATYPE,=CL7'UNPROT'
         B     TRYINTEH             FIND INTENSITY
TRYTYPEO DS    0H
         MVC   ATYPE,=CL7'PROT'
         B     TRYINTEH             FIND INTENSITY
TRYINTEH CLI   2(R8),C'H'           IS ATTR "HIGH" INTENSITY
         BNE   TRYINTEL                N. TRY LOW
         MVC   AINTEN,=CL4'BRT'
         B     TRYCOLOW             FIND COLOR
TRYINTEL CLI   2(R8),C'L'           IS ATTR "LOW" INTENSITY
         BNE   TRYINTEN                N. MUST BE NON
         MVC   AINTEN,=CL4'NORM'
         B     TRYCOLOW             FIND COLOR
TRYINTEN DS    0H
         MVC   AINTEN,=CL4'DRK'
TRYCOLOW DS    0H                   NO COLOR AT THIS STAGE
         MVC   ACOLOR(9),SPACES     CLEAR COLOR FIELD
         CLI   3(R8),C'W'           IS ATTR COLOR "WHITE"
         BNE   TRYCOLOB                N. TRY "BLUE"
         MVC   ACOLOR(7),=CL7'NEUTRAL'
         LA    R12,7(R0)            SET COLOR LENGTH
         ST    R12,COLENGTH         STORE COLOR LENGTH
         B     TRYHILIO             FIND COLOR
TRYCOLOB DS    0H                   NO COLOR AT THIS STAGE
         CLI   3(R8),C'B'           IS ATTR COLOR "BLUE"
         BNE   TRYCOLOR                N. TRY "RED"
         MVC   ACOLOR(4),=CL4'BLUE'
         LA    R12,4(R0)            SET COLOR LENGTH
         ST    R12,COLENGTH         STORE COLOR LENGTH
         B     TRYHILIO             FIND COLOR
TRYCOLOR DS    0H                   NO COLOR AT THIS STAGE
         CLI   3(R8),C'R'           IS ATTR COLOR "RED"
         BNE   TRYCOLOG                N. TRY "GREEN"
         MVC   ACOLOR(3),=CL3'RED'
         LA    R12,3(R0)            SET COLOR LENGTH
         ST    R12,COLENGTH         STORE COLOR LENGTH
         B     TRYHILIO             FIND COLOR
TRYCOLOG DS    0H                   NO COLOR AT THIS STAGE
         CLI   3(R8),C'G'           IS ATTR COLOR "GREEN"
         BNE   TRYCOLOY                N. TRY "YELLOW"
         MVC   ACOLOR(5),=CL5'GREEN'
         LA    R12,5(R0)            SET COLOR LENGTH
         ST    R12,COLENGTH         STORE COLOR LENGTH
         B     TRYHILIO             FIND COLOR
TRYCOLOY DS    0H                   NO COLOR AT THIS STAGE
         CLI   3(R8),C'Y'           IS ATTR COLOR "YELLOW"
         BNE   TRYCOLOP                N. TRY "PINK"
         MVC   ACOLOR(6),=CL6'YELLOW'
         LA    R12,6(R0)            SET COLOR LENGTH
         ST    R12,COLENGTH         STORE COLOR LENGTH
         B     TRYHILIO             FIND COLOR
TRYCOLOP DS    0H                   NO COLOR AT THIS STAGE
         CLI   3(R8),C'P'           IS ATTR COLOR "PINK"
         BNE   TRYCOLOT                N. MUST BE "TURQ"
         MVC   ACOLOR(4),=CL4'PINK'
         LA    R12,4(R0)            SET COLOR LENGTH
         ST    R12,COLENGTH         STORE COLOR LENGTH
         B     TRYHILIO             FIND COLOR
TRYCOLOT DS    0H                   NO COLOR AT THIS STAGE
         MVC   ACOLOR(9),=CL9'TURQUOISE'
         LA    R12,9(R0)            SET COLOR LENGTH
         ST    R12,COLENGTH         STORE COLOR LENGTH
TRYHILIO DS    0H
         MVC   AHILITE(9),SPACES    CLEAR HILITE OUTPUT FIELD
         CLI   4(R8),C'O'           IS ATTR HILITE "OFF"
         BNE   TRYHILIR                N. TRY "REVERSE"
         MVC   AHILITE(3),=CL3'OFF'
         LA    R12,3(R0)            SET COLOR LENGTH
         ST    R12,HILENGTH         STORE COLOR LENGTH
         B     ENDHILI              FIND COLOR
TRYHILIR DS    0H
         CLI   4(R8),C'R'           IS ATTR HILITE "REVERSE"
         BNE   TRYHILIB                N. TRY "BLINK"
         MVC   AHILITE(7),=CL7'REVERSE'
         LA    R12,7(R0)            SET COLOR LENGTH
         ST    R12,HILENGTH         STORE COLOR LENGTH
         B     ENDHILI              FIND COLOR
TRYHILIB DS    0H
         CLI   4(R8),C'B'           IS ATTR HILITE "BLINK"
         BNE   TRYHILIU                N. MUST BE "UNDERLINE"
         MVC   AHILITE(5),=CL5'BLINK'
         LA    R12,5(R0)            SET COLOR LENGTH
         ST    R12,HILENGTH         STORE COLOR LENGTH
         B     ENDHILI              FIND COLOR
TRYHILIU DS    0H
         MVC   AHILITE(9),=CL9'UNDERLINE'
         LA    R12,9(R0)            SET COLOR LENGTH
         ST    R12,HILENGTH         STORE COLOR LENGTH
ENDHILI  DS    0H
         L     R10,SAVER10
         BR    R10
GETFIELD DS    0H
         ST    R10,SAVER10
         CR    R1,R9                Q. NEXT CHAR AN ATTR CHAR
         BH    CONTINU2                 Y. CONTINUE
         BR    R10                        RETURN
CONTINU2 DS    0H
         BCTR  R1,0                 DECREASE R1 BY 2
         B     MOVEFLD          MOVE PREVIOUS FIELD
MOVEFLDE DS    0H
         ST    R10,SAVER10
MOVEFLD  DS    0H
         MVC   AVALUE(88),SPACES    INITIALISE OUTPUT AREA
         CLI   TRUNC,C'A'           Q. TRANSLATE "ASIS"
         BE    NOMOLSPC                Y. BYPASS BLANK TEST
LDSPCLOP DS    0H
         CLI   0(R9),C' '
         BNE   NOMOLSPC
         LA    R9,1(R9)
         CR    R1,R9
         BL    NOCHARSF
         B     LDSPCLOP
NOCHARSF DS    0H
         BR    R10
NOMOLSPC DS    0H
         LR    R12,R9               NOTE R9 IS 1 CHAR PAST ATTR BYTE
         SR    R12,R11              SUBTRACT START OF FIELD
         CR    R9,R11               Q. IS FIRST BYTE ATTR BYTE
         BNE   GETCOLPO                N. GET COLUMN POSITION
         LA    R12,1(R12)              Y. COL MUST BE 01
GETCOLPO DS    0H
         BAL   R14,UNPACK
         MVC   ACOL(2),LENGTH+1
         LA    R8,1(R8)
         LR    R8,R1                SET R8 TO NEXT ATTR
         SR    R8,R9                SUBTRACT PREV ATTR POSITION
         LR    R12,R8               USE R12 TO UNPACK FIELD
         ST    R8,SAVER8
         LA    R12,1(R12)           USE R12 TO UNPACK FIELD
         BAL   R14,UNPACK              **** TBD ****
         MVC   ALENGTH(2),LENGTH+1
         MVC   OVALUE(88),SPACES    CLEAR A VALUE
         EX    R8,MOVFLD
         LA    R1,1(R1)             RESTORE REGISTER
         CLI   TRUNC,C'A'           Q. TRANSLATE "ASIS"
         BE    TESTH00                 Y. BYPASS BLANK TEST
         CLC   OVALUE(88),SPACES    Q. FIELD ALL SPACES
         BE    EXITDEFS                Y. RETURN
TESTH00  DS    0H
         CLI   OVALUE,X'00'         Q. FIRST CHAR HEX "00"
         BNE   BPH00                   Y. BYPASS
         MVI   OVALUE,C' '             N. REPLACE BY SPACE
BPH00    DS    0H
         CLI   ATYPE,C'I'           Q. FIELD TYPE "INITIAL"
         BE    LITFIELD                N. BYPASS NEW LENGTH CALC
         MVC   AVALUE(8),OVALUE
         B     TEMPPRNT
         B     EXITDEFS
LITFIELD DS    0H
         CLI   TRUNC,C'A'           Q. TRANSLATE "ASIS"
         BE    EOFIELD1                Y. BYPASS BLANK TEST
         LA    R7,OVALUE            SET UP END POINTER
         AR    R7,R8                SET R7 POINT END OF FIELD
QUOTLOP1 DS    0H
         CLI   0(R7),C' '           SCAN FOR 1ST NON SPACE FROM END
         BNE   EOFIELD1
         BCTR  R7,0                 DECREMENT END POINTER
         BCT   R8,QUOTLOP1
EOFIELD1 DS    0H
         LR    R12,R8
         LA    R12,1(R12)
         BAL   R14,UNPACK
         MVC   ALENGTH(2),LENGTH+1
         LA    R7,OVALUE            SET UP POINTER TO INPUT FIELD
         MVI   AVALUE,X'7D'         QUOTE IN FIRST CHAR
         LA    R12,AVALUE+1         SET UP POINTER TO OUTPUT FIELD
         LA    R8,1(R8)             INCREASE R8 BY 1
QUOTLOP2 DS    0H
         CLI   0(R7),X'7D'          Q. CHARACTER A QUOTATION MARK
         BNE   TESTAMPR                N. TEST FOR AMPERSAND
PUTQUOT2 DS    0H
         MVI   0(R12),X'7D'         MOVE QUOTATION MARK
         LA    R12,1(R12)           UP DESTINATION POINTER
         B     MOV1CHAR             BYPASS AMPRESAND TEST
TESTAMPR DS    0H
         CLI   0(R7),X'50'          Q. CHARACTER AN AMPERSAND
         BNE   MOV1CHAR                N. GO AND MOVE CHARACTER
PUTAMPR2 DS    0H
         MVI   0(R12),X'50'         MOVE AMPERSAND
         LA    R12,1(R12)           UP DESTINATION POINTER
MOV1CHAR MVC   0(1,R12),0(R7)       MOVE CHARACTER
         LA    R7,1(R7)             UP SOURCE POINRTER
         LA    R12,1(R12)           UP DESTINATION POINRTER
         BCT   R8,QUOTLOP2          LOOP TILL END
         MVI   0(R12),X'7D'         CLOSING QUOTE
*  DELETE BELOW \|/
TEMPPRNT DS    0H
         ST    R1,SAVER1
         MVC   LINEIO(132),ATTRLINE
         PUT   PRINTER1,PRLINE
         MVC   LINEIO(132),SPACES
         L     R1,SAVER1
*  DELETE ABOVE /|\
         B     DETAILS
DETSRET  DS    0H                   PREMATURE EXIT
EXITDEFS DS    0H                   PREMATURE EXIT
         L     R10,SAVER10
         BR    R10
HMOVFLD  DS    0H
MOVFLD   MVC   OVALUE(0),0(R9)      MOVE CHARACTERS
DETAILS  DS    0H
         ST    R1,SAVER1
*---------------------------------------------------------------------*
* TEST IF TRUNCATION, LITERAL LENGTH 1 VALUE SPACE, -> IGNORE         *
*---------------------------------------------------------------------*
         CLI   TRUNC,C'A'              Q. TRANSLATE "ASIS"
         BE    PROCLINE                   Y. PROCESS FIELD
         CLI   ATYPE,C'I'              Q. ATTR TYPE = INITIAL
         BNE   PROCLINE                   N. PROCESS FIELD
         CLC   =C'01',ALENGTH          Q. LENGTH 1 BYTE
         BNE   PROCLINE                   N. PROCESS FIELD
         CLI   AVALUE+1,C' '           Q. SINGLE BYTE SPACE
         BNE   PROCLINE                   N. PROCESS FIELD
         MVC   LINEIO(55),=C'<<<<< ABOVE LINE IGNORED BECAUSE IT IS ONLY
               Y SPAES >>>>>'
         PUT   PRINTER1,PRLINE
         MVC   LINEIO(132),SPACES
         B     DETSRET                 RETURN FOR NEXT FIELD
PROCLINE DS    0H
*---------------------------------------------------------------------*
         LA    R12,OLINE2
         MVC   OLINE2(80),SPACES    CLEAR FIELD
         CLI   ATYPE,C'I'           Q. ATTR TYPE = INITIAL
         BE    NOFLDNM                 Y. NO FIELD NAME
         MVC   FLDNAME(8),AVALUE    SET UP FIELD NAME
         CLC   FLDNAME(8),=CL8'Z       '
         BNE   TESTTRNK             GO TOEST FOR TRUNCATION
         L     R8,ZVARSCNT          LOAD ZVAR COUNT
         LA    R8,1(R8)             UP BY ONE
         ST    R8,ZVARSCNT          STORE
         L     R8,ZVARPTR           LOAD ZVAR POINTER
         CLC   0(8,R8),SPACES       Q. NO MORE  ZVARS SPECIFIED
         BE    ERR5                    Y. ERROR (ISPF SHOULD'VE FOUND)
         MVC   FLDNAME(8),0(R8)     MOVE ZVAR VARIABLE NAME
         MVC   AVALUE(8),0(R8)
         MVC   LINEIO(30),=CL30'**** ABOVE Z VAR REPLACED BY "'
         MVC   LINEIO+30(8),0(R8)
         MVC   LINEIO+38(6),=CL6'" ****'
         PUT   PRINTER1,PRLINE
         MVC   LINEIO(132),SPACES
         LA    R8,8(R8)
         ST    R8,ZVARPTR
TESTTRNK DS    0H
         CLI   AVALUE+7,C' '        Q. BYTE 8 OF FIELD-NAME SPACE
         BE    NOFLDNM                 Y. BYPASS
         MVC   LINEIO(34),=CL34'**** ABOVE VARIABLE TRUNCATED TO "'
         MVC   LINEIO+34(7),FLDNAME MOVE NEW VAR NAME TO OUTPUT AREA
         MVC   LINEIO+41(6),=CL6'" ****'
         PUT   PRINTER1,PRLINE
         MVC   LINEIO(132),SPACES
         MVI   FLDNAME+7,C' '       MOVE SPACE TO TRUNCATED VARIABLE
NOFLDNM  DS    0H
         MVC   8(12,R12),=CL12'DFHMDF POS=(' SET LITERAL
         MVC   20(2,R12),ALINE      SET UP LINE NUMBER
         MVI   22(R12),C','         COLUMN SEPERATOR
         MVC   23(2,R12),ACOL       SET UP COLUMN NUMBER
         MVC   25(9,R12),=CL9'),ATTRB=('
         CLI   AINTEN,C'N'          Q. IS INTENS "NORM"
         BNE   CHAR3INT                N. 3 CHAR INTENS
CHAR4INT DS    0H                      Y. 4 CAHR INTENS
         MVC   34(4,R12),AINTEN
         LA    R12,38(R12)
         B     TSTTYPE
CHAR3INT DS    0H
         MVC   34(3,R12),AINTEN
         LA    R12,37(R12)
TSTTYPE  DS    0H
         CLI   ATYPE,C'U'           Q. ATTR TYPE = UNPROT (INPUT)
         BNE   ASKIPTYP    N. TYPE = INITIAL/OUTPUT
         MVC   0(7,R12),=CL7',UNPROT'
         LA    R12,7(R12)
         B     TSTCURS
ASKIPTYP DS    0H
         MVC   0(6,R12),=CL6',ASKIP'
         LA    R12,6(R12)
TSTCURS  DS    0H
         CLC   CURSOR(7),AVALUE
         BNE   TSTFSET
         MVC   0(3,R12),=CL3',IC'
         LA    R12,3(R12)
TSTFSET  DS    0H
         STM   R5,R6,SAVER5            SAVER REGISTERS
         CLI   ATYPE,C'I'              Q. ATTR TYPE = INITIAL
         BE    BPFSET                     Y. NO FIELD NAME
         L     R5,FSETCTR              USE # OF FSET'S AS LOOP COUNTER
         LTR   R5,R5                   Q. # OF FSET'S = 0
         BZ    BPFSET                     Y. BYPASS FSET PROCESSING
         LA    R6,FSETVARS             LOAD START OF FSETS
FSETLOOP DS    0H
         CLC   FLDNAME(7),0(R6)        Q. FSET SPECIFIED FOR FIELD
         BE    SETFSET                    Y. SET FSET
         LA    R6,8(R6)                N. TRY NEXT FSET FIELD SPECIFIED
         BCT   R5,FSETLOOP
         B     BPFSET                  END OF LOOP AND NO MATCH
SETFSET  DS    0H
         MVC   0(5,R12),=CL5',FSET'
         LA    R12,5(R12)
BPFSET   DS    0H
         LM    R5,R6,SAVER5            RESTORE REGISTERS
         MVC   0(9,R12),=CL9'),LENGTH='
         MVC   9(2,R12),ALENGTH
         MVI   11(R12),C','
         MVI   OLINE2+71,C'X'
         PUT   MACLIB,OLINE2           PRINT LINE
         PUT   PRINTER2,OLINE2O        PRINT LINE
         MVC   OLINE2(80),SPACES       CLEAR FIELD
         LA    R12,OLINE2
         MVC   15(6,R12),=CL6'COLOR='
         MVC   21(9,R12),ACOLOR
         LA    R12,21(R12)
         L     R1,COLENGTH
         AR    R12,R1
         MVC   0(9,R12),=CL9',HILIGHT='
         MVC   9(9,R12),AHILITE
         CLI   ATYPE,C'I'           Q. ATTR TYPE = INITIAL
         BE    MOVREST                 Y. BYPASS
         B     PRINTIT
MOVREST  DS    0H
         LA    R12,9(R12)
         L     R1,HILENGTH
         AR    R12,R1
         MVI   0(R12),C','
         MVI   OLINE2+71,C'X'
         PUT   MACLIB,OLINE2       PRINT LINE
         PUT   PRINTER2,OLINE2O    PRINT LINE
         MVC   OLINE2(80),SPACES    CLEAR FIELD
         LA    R12,OLINE2
         MVC   15(8,R12),=CL8'INITIAL='
         MVC   23(48,R12),AVALUE
         CLC   AVALUE+48(41),SPACES
         BE    PRINTIT
         MVI   OLINE2+71,C'X'
         PUT   MACLIB,OLINE2       PRINT LINE
         PUT   PRINTER2,OLINE2O    PRINT LINE
         MVC   OLINE2(80),SPACES    CLEAR FIELD
         MVC   OLINE2+15(41),AVALUE+48
PRINTIT  DS    0H
         PUT   MACLIB,OLINE2       PRINT LINE
         PUT   PRINTER2,OLINE2O    PRINT LINE
         L     R1,SAVER1
         B     DETSRET             RETURN
SMAPSET  DS    0H
         MVI   OLINE2,C'*'
         PUT   MACLIB,OLINE2       PRINT LINE
         PUT   PRINTER2,OLINE2O    PRINT LINE
         MVC   OLINE2(80),SPACES
         MVC   OLINE2(37),=CL37'* THE L.B.D. U BYUTE UNPATTENTED SYS.'
         PUT   MACLIB,OLINE2       PRINT LINE
         PUT   PRINTER2,OLINE2O    PRINT LINE
         MVC   OLINE2(80),SPACES
         MVI   OLINE2,C'*'
         PUT   MACLIB,OLINE2       PRINT LINE
         PUT   PRINTER2,OLINE2O    PRINT LINE
         MVC   OLINE2(80),SPACES
         MVC   ERROR4+10(70),SPACES
         MVC   ERROR4+10(29),=CL29'NO MAPNAME PARAMETER DEFINED.'
         GET   SYSIN,INREC          GET FIRST RECORD(PARAMETER)
         MVC   CURSOR(8),INREC+32   GET CURSOR INIT FIELD
         MVC   TRUNC(1),INREC+40    GET TRUNCATION FIELD
         MVC   MAPNAME(8),INREC     SET UP MAPNAME
         LA    R12,OLINE2
         MVC   OLINE2(80),SPACES    CLEAR FIELD
         MVC   0(8,R12),INREC+8
         MVC   8(26,R12),=CL26'DFHMSD TYPE= SYSPARM,MODE='
         MVI   20(R12),X'50'        MOVE AMPERSAND BEFORE SYSPARM
         LA    R12,34(R12)
         CLC   INREC+16(2),=CL2'IN'
         BNE   MTYPEOU
         MVC   0(8,R12),=CL8'IN,LANG='
         LA    R12,8(R12)
         B     SMAPREST
MTYPEOU  DS    0H
         CLC   INREC+16(2),=CL2'OU'
         BNE   MTYPEIO
         MVC   0(9,R12),=CL9'OUT,LANG='
         LA    R12,9(R12)
         B     SMAPREST
MTYPEIO  DS    0H
         MVC   0(11,R12),=CL11'INOUT,LANG='
         LA    R12,11(R12)
SMAPREST DS    0H
         CLI   INREC+24,C'C'
         BNE   NOTCOB
         MVC   0(6,R12),=CL6'COBOL,'
         B     SMAPWRT1
NOTCOB   DS    0H
         MVC   0(3,R12),INREC+24
         MVI   3(R12),C','
SMAPWRT1 DS    0H
         MVI   OLINE2+71,C'X'
         PUT   MACLIB,OLINE2       PRINT LINE
         PUT   PRINTER2,OLINE2O    PRINT LINE
         MVC   OLINE2(80),SPACES
         MVC   OLINE2+15(25),=CL25'STORAGE=AUTO,TIOAPFX=YES,'
         MVI   OLINE2+71,C'X'
         PUT   MACLIB,OLINE2       PRINT LINE
         PUT   PRINTER2,OLINE2O    PRINT LINE
         MVC   OLINE2(80),SPACES
*        MVC   OLINE2+15(34),=CL34'EXTATT=MAPONLY,CTRL=(PRINT,FREEKB)'
         MVC   OLINE2+15(14),=CL34'EXTATT=MAPONLY'
         PUT   MACLIB,OLINE2       PRINT LINE
         PUT   PRINTER2,OLINE2O    PRINT LINE
         MVC   OLINE2(80),SPACES
         MVC   MAPNAME(8),INREC     SET UP MAPNAME
         PUT   MACLIB,OLINE1        WRITE FIRST LINE
         PUT   PRINTER2,OLINE1O     WRITE FIRST LINE
GETVCNT  DS    0H
         LA    R12,ZVARS
         ST    R12,ZVARPTR
         MVC   ERROR4+10(70),SPACES
         MVC   ERROR4+10(33),=CL33'NO ZVAR COUNT PARAMETER SUPPLIED.'
         GET   SYSIN,INREC          GET FIRST RECORD(PARAMETER)
         MVC   OVARCNT(4),INREC
         MVC   VARCOUNT(4),INREC
         PACK  DWORK8(8),VARCOUNT(4)
         CVB   R12,DWORK8
         ST    R12,VARCOUNT
         LA    R11,1(R0)
         CR    R12,R11
         BL    GETFSET
GETZVAR1 DS    0H
         MVC   ERROR4+10(70),SPACES
         MVC   ERROR4+10(27),=CL27'NO ZVAR PARAMETER SUPPLIED.'
         GET   SYSIN,INREC          GET FIRST RECORD(PARAMETER)
         MVC   ZVARS(80),INREC
         LA    R11,11(R0)
         CR    R12,R11
         BL    GETFSET
GETZVAR2 DS    0H
         MVC   ERROR4+10(70),SPACES
         MVC   ERROR4+10(21),=CL21'EXPECTING MORE ZVARS.'
         GET   SYSIN,INREC          GET FIRST RECORD(PARAMETER)
         MVC   ZVARS+80(80),INREC
GETFSET  DS    0H
         MVC   ERROR4+10(70),SPACES
         MVC   ERROR4+10(33),=CL33'NO FSET COUNT PARAMETER SUPPLIED.'
         GET   SYSIN,INREC          GET FIRST RECORD(PARAMETER)
         MVC   FSETCNT(4),INREC
         PACK  DWORK8(8),FSETCNT(4)
         CVB   R12,DWORK8
         ST    R12,FSETCTR
         LA    R11,1(R0)
         CR    R12,R11
         BL    GETREC
GETFSET1 DS    0H
         MVC   ERROR4+10(70),SPACES
         MVC   ERROR4+10(27),=CL27'NO FSET PARAMETER SUPPLIED.'
         GET   SYSIN,INREC          GET FIRST RECORD(PARAMETER)
         MVC   FSETVARS(80),INREC
         LA    R11,11(R0)
         CR    R12,R11
         BL    GETREC
GETFSET2 DS    0H
         MVC   ERROR4+10(70),SPACES
         MVC   ERROR4+10(21),=CL21'EXPECTING MORE FSETS.'
         GET   SYSIN,INREC          GET FIRST RECORD(PARAMETER)
         MVC   FSETVARS+80(80),INREC
         B     GETREC
INITSECT DS    0H                   PREMATURE EXIT
PROCSECT DS    0H                   PREMATURE EXIT
ENDSECT  DS    0H                   PREMATURE EXIT
INPTEND  DS    0H
         CLOSE SYSIN                CLOSE INPUT FILE
         CLOSE ISPPLIB              CLOSE INPUT FILES
         PUT   PRINTER1,PRLINE
         MVC   LINEIO(4),=CL4'VCNT'
         MVC   LINEIO+5(13),=CL13'DEFINED ZVARS'
         PUT   PRINTER1,PRLINE
         MVC   LINEIO(132),SPACES
         MVI   PRLINE,C'-'
         MVC   PRLINE+1(132),PRLINE
         MVI   PRLINE,C' '
         MVI   PRLINE+5,C' '
         PUT   PRINTER1,PRLINE
         MVC   LINEIO(132),SPACES
         MVC   LINEIO(4),OVARCNT
         MVC   LINEIO+5(80),ZVARS
         PUT   PRINTER1,PRLINE
         MVC   LINEIO(132),SPACES
         MVC   LINEIO+5(80),ZVARS+80
         MVC   LINEIO(132),SPACES
         PUT   PRINTER1,PRLINE
         MVC   LINEIO(4),=CL4'FSET'
         MVC   LINEIO+5(13),=CL13'DEFINED FSETS'
         PUT   PRINTER1,PRLINE
         MVC   LINEIO(132),SPACES
         MVI   PRLINE,C'-'
         MVC   PRLINE+1(132),PRLINE
         MVI   PRLINE,C' '
         MVI   PRLINE+5,C' '
         PUT   PRINTER1,PRLINE
         MVC   LINEIO(132),SPACES
         MVC   LINEIO(4),FSETCNT
         MVC   LINEIO+5(80),FSETVARS
         PUT   PRINTER1,PRLINE
         MVC   LINEIO(132),SPACES
         MVC   LINEIO+5(80),FSETVARS+80
         PUT   PRINTER1,PRLINE
         MVC   LINEIO(132),SPACES
         PUT   PRINTER1,PRLINE
         MVC   LINEIO(10),=CL10'ATTRIBUTES'
         PUT   PRINTER1,PRLINE
         MVI   PRLINE,C'-'
         MVC   PRLINE+1(132),PRLINE
         MVI   PRLINE,C' '
         PUT   PRINTER1,PRLINE
         MVC   LINEIO(132),SPACES
         MVC   LINEIO(132),TABLE
         PUT   PRINTER1,PRLINE
         MVC   LINEIO(132),SPACES
         MVC   LINEIO(132),TABLE+80
         PUT   PRINTER1,PRLINE
*        MVC   LINEIO(132),TRTABLE
*        PUT   PRINTER1,PRLINE
*        MVC   LINEIO(132),TRTABLE+133
*        PUT   PRINTER1,PRLINE
         CLOSE PRINTER1             CLOSE PRINTFILE
FINALISE DS    0H
         MVC   OLINE2(80),SPACES    CLEAR FIELD
         MVC   OLINE2+8(17),=CL17'DFHMSD TYPE=FINAL'
         PUT   MACLIB,OLINE2       PRINT LINE
         PUT   PRINTER2,OLINE2O    PRINT LINE
         MVC   OLINE2(80),SPACES    CLEAR FIELD
         MVC   OLINE2+8(3),=CL3'END'
         PUT   MACLIB,OLINE2       PRINT LINE
         PUT   PRINTER2,OLINE2O    PRINT LINE
         CLOSE MACLIB               CLOSE INPUT FILES
         CLOSE PRINTER2             CLOSE INPUT FILES
         B     EXIT                 BRANCH TO NORMAL EXIT
PARMEND  DS    0H
         B     ERR4                 BRANCH TO ERR4
UNPACK   DS    0H
         CVD   R12,DWORK8
         OI    DWORK8+7,X'0F'
         UNPK  LENGTH(3),DWORK8+6(2)
         BR    R14
*
*---------------------------------------------------------------------*
* SETUP HEAD LINES                                                    *
*---------------------------------------------------------------------*
HEADLINS DS    0H
         STM   R14,R12,SAVSUBR1        SAVE REGISTERS
         BAL   R14,GETDATE             GO GET DATE
RETDATE  DS    0H
         MVC   LINEIO(29),=CL29'ISPF PANELS TO BMS CONVERSION'
         MVC   LINEIO+30(6),=CL6'AS AT '
         MVC   LINEIO+36(8),DATE1
         PUT   PRINTER1,PRLINE
         MVC   PRLINE(133),SPACES
         MVI   PRLINE,C'0'
         MVC   LINEIO(2),=CL2'LN'
         MVC   LINEIO+3(2),=CL2'CL'
         MVC   LINEIO+6(1),=CL2'A'
         MVC   LINEIO+8(4),=CL4'TYPE'
         MVC   LINEIO+16(4),=CL4'INTE'
         MVC   LINEIO+21(5),=CL5'COLOR'
         MVC   LINEIO+31(7),=CL7'HILIGHT'
         MVC   LINEIO+41(2),=CL2'LG'
         MVC   LINEIO+45(24),=CL24'INITIAL VALUE/FIELD NAME'
         PUT   PRINTER1,PRLINE
         MVI   PRLINE,C'-'
         MVC   PRLINE+1(123),PRLINE
         MVI   PRLINE,C' '
         MVI   LINEIO+2,C' '
         MVI   LINEIO+5,C' '
         MVI   LINEIO+7,C' '
         MVI   LINEIO+15,C' '
         MVI   LINEIO+20,C' '
         MVI   LINEIO+30,C' '
         MVI   LINEIO+40,C' '
         MVC   LINEIO+43(2),=CL2'  '
         PUT   PRINTER1,PRLINE
         MVC   PRLINE(133),SPACES
         MVC   OLINE2(29),=CL29'ISPF PANELS TO BMS CONVERSION'
         MVC   OLINE2+30(6),=CL6'AS AT '
         MVC   OLINE2+36(8),DATE1
         PUT   PRINTER2,OLINE2O
         MVC   OLINE2O(81),SPACES
         LM    R14,R12,SAVSUBR1        SAVE REGISTERS
         BR    R14                     RETURN TO CALLER
*
*---------------------------------------------------------------------*
* SETUP TODAYS DATE                                                   *
*---------------------------------------------------------------------*
GETDATE  DS    0H
         STM   R14,R12,SAVSUBR2        SAVE REGISTERS
         TIME
UNPACKTM DS    0H
         ST    R1,DWORK8+4
         UNPK  IDATE1(5),DWORK8+5(3)
         PACK  YEAR,IDATE1(2)          GET YEAR
         MVC   DATE1+6(2),IDATE1       SET UP YEAR
         DP    YEAR,=P'4'              DIVIDE YEAR BY 4
         CP    YEAREM,=P'0'            IS REMAINDER 0
         BNE   NLEAPYR1                ...NO, NOT LEAP YEAR
         MVC   DATETAB+2(2),=X'029C'   ...YES, FEB = 29 DAYS
NLEAPYR1 DS    0H
         LA    R9,1(R0)                SET MONTH COUNTER TO 1
         LA    R8,DATETAB              SET REG 8 AS MONTH POINTER
         PACK  DAYSREM(2),IDATE1+2(3)  PACK DAYS INTO DAYS REMAINING
LOOP1    DS    0H
         MVC   DAY(2),DAYSREM          SAVE DAYS REMAINING
         SP    DAYSREM(2),0(2,R8)      SUBTRACT DAY IN MONTH FROM DAYS
         CP    DAYSREM(2),=P'0'        COMPARE IF NEGATIVE
         BL    EXLOOP1                 ... YES, EXIT LOOP
         CP    DAYSREM(2),=P'0'        ... NO, COMPARE IF ZERO
         BZ    EXLOOP1                 ... YES, EXIT LOOP
         LA    R8,2(R8)                ... NO, POINT TO NEXT MONTH
         LA    R9,1(R9)                ... NO, INCREMENT MONTH COUNTER
         B     LOOP1                   RECALCULATE
EXLOOP1  DS    0H
         UNPK  DDD(3),DAY(2)           SAVE CURRENT DAYS
         OI    DD+1,X'F0'              CHANGE SIGN OF LAST DECIMAL BYTE
         MVC   DATE1(2),DD             MOVE 2 BYTES OF DAY TO OUT FIELD
         CVD   R9,DWORK8               CONVERT MONTH TO DECIMAL/PACKED
         UNPK  MMM(3),DWORK8+6(2)      UNPACK MONTH
         OI    MM+1,X'F0'              CHG SIGN OF LAST BYTE OF MONTH
         MVC   DATE1+3(2),MM           MOVE MONTH TO OUT FIELD
         LM    R14,R12,SAVSUBR2        SAVE REGISTERS
         BR    R14                     RETURN TO CALLER
*
DAY      DC    PL2'0'
DAYSREM  DC    PL2'0'
IDATE1   DC    CL5' '
RM       DC    CL1' '
YEAR     DS    0CL3
         DS    CL2
YEAREM   DS    CL1
MMM      DS    0CL3
         DS    CL1
MM       DS    CL2
DDD      DS    0CL3
         DS    CL1
DD       DS    CL2
YY       DS    CL2
DATE1    DS    0CL8
         DS    CL2
         DC    CL1'/'
         DS    CL2
         DC    CL1'/'
         DS    CL2
DATETAB  DS    0CL24              DAYS OF MONTH IN YEAR TABLE
         DC    P'31'              J
         DC    P'28'              F
         DC    P'31'              M
         DC    P'30'              A
         DC    P'31'              M
         DC    P'30'              J
         DC    P'31'              J
         DC    P'31'              A
         DC    P'30'              S
         DC    P'31'              O
         DC    P'30'              N
         DC    P'31'              D
ERR1     DS    0H
         PUT   PRINTER1,ERROR1      PRINT ERROR MESSAGE 1
         B     ERREXIT              BRANCH TO ERROR EXIT ROUTINE
ERR2     DS    0H
         PUT   PRINTER1,ERROR2      PRINT ERROR MESSAGE 2
         CLOSE PRINTER1             CLOSE PRINTFILE
         B     ERREXIT              BRANCH TO ERROR EXIT ROUTINE
ERR3     DS    0H
         PUT   PRINTER1,ERROR3      PRINT ERROR MESSAGE 3
         B     ERREXIT              BRANCH TO ERROR EXIT ROUTINE
ERR4     DS    0H
         PUT   PRINTER1,ERROR4      PRINT ERROR MESSAGE 4
         B     ERREXIT              BRANCH TO ERROR EXIT ROUTINE
ERR5     DS    0H
         PUT   PRINTER1,ERROR5      PRINT ERROR MESSAGE 5
         B     ERREXIT              BRANCH TO ERROR EXIT ROUTINE
EXIT     DS    0H
         RACKOFF RC=0               RETURN WITH ZERO RETURN CODE
ERREXIT  DS    0H
         CLOSE PRINTER1             CLOSE PRINTFILE
         CLOSE SYSIN                CLOSE INPUT FILE
         CLOSE ISPPLIB              CLOSE INPUT FILES
         CLOSE MACLIB               CLOSE INPUT FILES
         CLOSE PRINTER2             CLOSE INPUT FILES
         RACKOFF RC=8               RETURN WITH RETURN CODE 8
                                                                SPACE 1
*######################################################################
                                                                SPACE 1
         LTORG                      LOAD LITERAL POOL HERE
                                                                SPACE 1
*---------------------------------------------------------------------*
VARBLS   DS    0H                   START OF DATA STORAGE
         DS    0D
DWORK8   DS    PL8
H80      DC    H'80'
ATTRFLAG DC    C'N'
ATTR     DC    C')ATTR'
BODY     DC    C')BODY'
PROC     DC    C')PROC'
INIT     DC    C')INIT'
ENDB     DC    C')END '
DEFAULT  DC    C'DEFAULT('
TYPE     DC    C'TYPE('
INTENS   DC    C'INTENS('
COLOR    DC    C'COLOR('
HILITE   DC    C'HILITE('
ID1      DC    C'START OVALUE'
CURSOR   DC    CL8' '
TRUNC    DC    CL1' '
OVALUE   DS    CL88
         DS    0D
INREC    DS    CL80
ID2      DC    C'END OVALUE'
LENGTH   DS    CL3
LINECNT  DC    F'0000'
SPACES   DC    CL133' '
*
SAVSUBR1 DS    16F
SAVSUBR2 DS    16F
SAVER5   DS    2F
SAVER8   DS    F
SAVER10  DS    F
SAVER14  DS    F
SAVER1   DS    F
BRNCHST  DS    F
COLENGTH DS    F
HILENGTH DS    F
COM1     DC    CL10'TRTABLE'
TRTABLE  DC    256X'00'
COM2     DC    CL10'TABLE'
TABLE    DC    CL200' '
ZVARS    DC    CL160' '
ZVARSCNT DC    F'0000'
VARCOUNT DC    F'0000'
OVARCNT  DS    CL4
ZVARPTR  DS    F
FSETVARS DC    CL160' '
FSETCNT  DC    F'0000'
FSETCTR  DC    F'0000'
TRACE    DC    CL80' TRACE - STARTING DISPLAYS.'
ERROR1   DC    CL80' ERROR1 - USE ISPF OPTION 7.2 BEFORE TRYING AGAIN.'
ERROR2   DC    CL80' ERROR2 - NO INTENSITY ATTRIBUTE SPECIFIED.'
ERROR3   DC    CL80' ERROR3 - END OF ATTRIBUTE TABLE REACHED ????'
ERROR4   DC    CL80' ERROR4 - NO MAP NAME SUPPLIED IN SYSIN.'
ERROR5   DC    CL90' ERROR5 - RAN OUT OF ZVARS.'
                                                                SPACE 1
PRINTER1 DCB   DDNAME=PRINTER1,                                        X
               DSORG=PS,                                               X
               MACRF=(PM),                                             X
               LRECL=133,                                              X
               BLKSIZE=1330,                                           X
               RECFM=FBA
PRINTER2 DCB   DDNAME=PRINTER2,                                        X
               DSORG=PS,                                               X
               MACRF=(PM),                                             X
               LRECL=133,                                              X
               BLKSIZE=1330,                                           X
               RECFM=FBA
SYSIN    DCB   DDNAME=SYSIN,                                           X
               DSORG=PS,                                               X
               MACRF=(GM),                                             X
               EODAD=PARMEND
ISPPLIB  DCB   DDNAME=ISPPLIB,                                         X
               DSORG=PS,                                               X
               MACRF=(GM),                                             X
               EODAD=INPTEND
MACLIB   DCB   DDNAME=MACLIB,                                          X
               DSORG=PS,                                               X
               MACRF=(PM)
                                                                SPACE 1
PRLINE   DS    CL133
         ORG   PRLINE
         DC    CL1'1'
LINEIO   DS    CL132' '
         ORG   PRLINE
         DS    CL1
LOOPATTR DS    CL1
         DS    CL1
LOOP#    DS    CL2
         DS    CL1
LOOPNAME DS    CL8
         DS    CL119
         ORG
ATTRLINE DC    CL133' '
         ORG ATTRLINE
ALINE    DS    CL2
         DS    CL1
ACOL     DS    CL2
         DS    CL1
ATTRIB   DS    CL1
         DS    CL1
ATYPE    DS    CL7
         DS    CL1
AINTEN   DS    CL4
         DS    CL1
ACOLOR   DS    CL9
         DS    CL1
AHILITE  DS    CL9
         DS    CL1
ALENGTH  DS    CL3
         DS    CL1
AVALUE   DS    CL88
         ORG
OLINE1O  DS    CL81
         ORG OLINE1O
         DC    C' '
OLINE1   DC    CL80' '
         ORG OLINE1
MAPNAME  DS    CL8
         DC    C'DFHMDI SIZE=(24,80),CTRL=(PRINT,FREEKB)'
         ORG
OLINE2O  DS    CL81
         ORG OLINE2O
         DC    C'1'
OLINE2   DC    CL80' '
         ORG OLINE2
FLDNAME  DS    CL8
REST     DS    CL71
         ORG
PATTENT  DS    CL80
         ORG   PATTENT
         DC    C'*    THE L.B.D''S UNPAINTENTED BUT U BYUTE PROD'
         DS    CL34' '
         ORG
         END
