*
**       TITLE:    CONVERT ISPF PANELS TO "SBA" DATA STRINGS FOR TPUT
**       SYSTEM:   ISPF/MONITOR 1.0.0
**       MODULE:   BUFFBODY
**       PROGRAM:  BUFFISPF
**       FUNCTION: PARSE A LINE OF THE ISPF PANEL'S "BODY" DETAILS.
**       AUTHOR:   A. KARA.
*
BUFFBODY KICKOFF (R11,R12)
         LR    R10,R1
         USING BUFFCOMA,R10
*---------------------------------------------------------------------*
START    DS    0H
         LH    R3,LINECNT           LOAD LINE NUMBER
         LA    R3,1(R3)             INCREMENT LINENUMBER
         STH   R3,LINECNT           SAVE LINE NUMBER
         UNPACK R3,2,ALINE          UNPACK LINE NUMBER
         LH    R1,LASTLIN           Q. LINE NUMBER > END LINE
         CH    R3,FIRSTLIN          Q. LINE NUMBER < START LINE
         BL    EXITPROG                Y. EXIT PROGRAM
         CH    R3,LASTLIN           Q. LINE NUMBER > END LINE
         BH    EXITPROG                Y. EXIT PROGRAM
BODYSECT DS    0H                   PREMATURE EXIT
         CLI   ATTRFLAG,C'N'        Q. ATTRIBUTES DEFINED FLAG NOT SET
         BNE   ATTRDEFD                N. BYPASS
         BAL   R14,NOATTRLN         BRANCH AND DEFINE DEFAULT ATTRIBS
ATTRDEFD DS    0H
         LA    R9,INREC             R9 WILL CONTAIN START OF ATTR FLD
         LA    R1,INREC             R1 WILL CONTAIN FOUND ATTR CHAR
         LA    R6,INREC+79          STORE END OF RECORD IN R6
         LR    R5,R6                USE R5 FOR LENGTH OF SCAN
FIRSTIME DS    0H                   FIRST TIME THRU FOR LINE
         SR    R5,R1                GET LENGTH OF SCAN
         XR    R2,R2                INITIALISE R2 TO ZERO
         EX    R5,TRANS             FIND NEXT ATTRIBUTE CHAR
         BZ    NOATTR               NO ATTRS, FOUND
         CR    R1,R6                Q. IS R1 LESS THAN R6
         BNL   DUMFIL                  N. ATTR LAST CHAR
         BAL   R14,GETDETS          GET FOUND ATTRIBUTE DETAILS
         LA    R9,1(R1)             POINT R9 PAST FIRST ATTR CHAR
         CLC   INREC+1(79),SPACES   Q. FIRST CHAR ATTR
         BE    DUMFIL                  Y. GO DUMMY FILL
         LA    R1,1(R1)
         LR    R5,R6                USE R5 FOR LENGTH OF SCAN
         B     FATTRLOP
NOATTR   DS    0H
         MVI   ATTRIB,C'+'
         MVC   ATYPE,=CL7'INITIAL'
         MVC   AINTEN,=CL4'LOW '
         MVC   ACOLOR(9),SPACES
         MVC   ACOLOR(4),=CL4'BLUE'
         LA    R3,4(R0)             SET COLOR LENGTH
         ST    R3,COLENGTH          STORE COLOR LENGTH
         MVC   AHILITE(9),SPACES
         MVC   AHILITE(3),=CL3'OFF'
         LA    R3,3(R0)             SET COLOR LENGTH
         ST    R3,HILENGTH          STORE COLOR LENGTH
         LA    R1,INREC+79          POINT R1 TO END OF RECORD
         LA    R9,INREC+1           POINT R9 PAST FIRST FILD (DEF ATTR)
         CLC   INREC(80),SPACES     Q. IS LINE ALL SPACES
         BNE   BPDUMFIL                N. BRANCH PAST DUMMY FILL
DUMFIL   DS    0H
         LA    R1,INREC+79          POINT R1 TO END OF RECORD
         CLI   TRUNC,C'A'           Q. TRANSLATE "ASIS"
         BE    BPDUMFIL                Y. BYPASS BLANK TEST
         LA    R1,INREC+2           POINT R1 TO END OF RECORD
         LA    R9,INREC+1           POINT R9 PAST FIRST FILD (DEF ATTR)
         MVC   INREC+1(1),=XL1'00'
BPDUMFIL DS    0H
         BAL   R14,MOVEFLDE
         B     GOODEXIT             GET NEXT RECORD
FATTRLOP SR    R5,R1                GET LENGTH OF SCAN
         XR    R2,R2                INITIALISE R2 TO ZERO
         EX    R5,TRANS             FIND NEXT ATTRIBUTE CHAR
         BZ    BENDREC              NO ATTRS, FOUND
         ST    R1,SAVER1
         BAL   R14,GETFIELD             Y. GET FIELD VALUE/LENGTH
         L     R1,SAVER1
         CR    R1,R6                Q. R1 < R6
         BE    GOODEXIT                 Y. LAST CHAR ATTR/NO PROCESS
         BAL   R14,GETDETS          GET FOUND ATTRIBUTE DETAILS
         LR    R5,R6                RESTORE R5 AFTER "EX" OPERATION
         LA    R9,1(R1)             POSITION PAST FOUND ATTR
         LA    R1,1(R1)             POSITION PAST FOUND ATTR
         ST    R1,SAVER1
         CR    R9,R6                REACHED END OF RECORD
         BL    FATTRLOP                 N. LOOK FOR NEXT ATTR CHAR
BENDREC  DS    0H                   END OF BODY RECORD
         LA    R1,INREC+79
         BAL   R14,MOVEFLDE
         B     GOODEXIT             GET NEXT RECORD
HTRANS   DS    0H
TRANS    TRT   0(0,R1),TRTABLE      TRANSLATE FROM CURRENT COL (R1)
*---------------------------------------------------------------------*
GETDETS  DS    0H
         ST    R14,SAVER14
         STC   R2,ATTRIB            STORE FOUND ATTRIBUTE FROM R2
         LA    R8,TABLE             STORE START OF TABLE IN R8
         LA    R7,64(R0)            STORE MAX TABLE ENTRY COUNTER
GETALOP  DS    0H
         CLC   0(1,R8),ATTRIB       FND ATTR THIS ONE IN TABLE
         BE    SETDETS                  Y. SET DETAILS
         LA    R8,5(R8)                 N. POINT TO NEXT ATTR
         BCT   R7,GETALOP                  GET NEXT ATTR DETAILS
         B     ERR3                 END OF ATTRIBUTE TABLE
SETDETS  DS    0H
         CLI   1(R8),C'T'           IS ATTR "TEXT"
         BNE   TRYTYPEI                N. TRY INPUT
         MVC   ATYPE,=CL7'INITIAL'
         B     TRYINTEH             FIND INTENSITY
TRYTYPEI CLI   1(R8),C'I'           IS ATTR "INPUT"
         BNE   TRYTYPEO                N. MUST BE OUTPUT
         MVC   ATYPE,=CL7'UNPROT'
         B     TRYINTEH             FIND INTENSITY
TRYTYPEO DS    0H
         MVC   ATYPE,=CL7'PROT'
         B     TRYINTEH             FIND INTENSITY
TRYINTEH CLI   2(R8),C'H'           IS ATTR "HIGH" INTENSITY
         BNE   TRYINTEL                N. TRY LOW
         MVC   AINTEN,=CL4'HIGH'
         B     TRYCOLOW             FIND COLOR
TRYINTEL CLI   2(R8),C'L'           IS ATTR "LOW" INTENSITY
         BNE   TRYINTEN                N. MUST BE NON
         MVC   AINTEN,=CL4'LOW '
         B     TRYCOLOW             FIND COLOR
TRYINTEN DS    0H
         MVC   AINTEN,=CL4'NON '
TRYCOLOW DS    0H                   NO COLOR AT THIS STAGE
         MVC   ACOLOR(9),SPACES     CLEAR COLOR FIELD
         CLI   3(R8),C'W'           IS ATTR COLOR "WHITE"
         BNE   TRYCOLOB                N. TRY "BLUE"
         MVC   ACOLOR(5),=CL5'WHITE'
         B     TRYHILIO             FIND COLOR
TRYCOLOB DS    0H                   NO COLOR AT THIS STAGE
         CLI   3(R8),C'B'           IS ATTR COLOR "BLUE"
         BNE   TRYCOLOR                N. TRY "RED"
         MVC   ACOLOR(4),=CL4'BLUE'
         B     TRYHILIO             FIND COLOR
TRYCOLOR DS    0H                   NO COLOR AT THIS STAGE
         CLI   3(R8),C'R'           IS ATTR COLOR "RED"
         BNE   TRYCOLOG                N. TRY "GREEN"
         MVC   ACOLOR(3),=CL3'RED'
         B     TRYHILIO             FIND COLOR
TRYCOLOG DS    0H                   NO COLOR AT THIS STAGE
         CLI   3(R8),C'G'           IS ATTR COLOR "GREEN"
         BNE   TRYCOLOY                N. TRY "YELLOW"
         MVC   ACOLOR(5),=CL5'GREEN'
         B     TRYHILIO             FIND COLOR
TRYCOLOY DS    0H                   NO COLOR AT THIS STAGE
         CLI   3(R8),C'Y'           IS ATTR COLOR "YELLOW"
         BNE   TRYCOLOP                N. TRY "PINK"
         MVC   ACOLOR(6),=CL6'YELLOW'
         B     TRYHILIO             FIND COLOR
TRYCOLOP DS    0H                   NO COLOR AT THIS STAGE
         CLI   3(R8),C'P'           IS ATTR COLOR "PINK"
         BNE   TRYCOLOT                N. MUST BE "TURQ"
         MVC   ACOLOR(4),=CL4'PINK'
         B     TRYHILIO             FIND COLOR
TRYCOLOT DS    0H                   NO COLOR AT THIS STAGE
         MVC   ACOLOR(9),=CL9'TURQUOISE'
TRYHILIO DS    0H
         MVC   AHILITE(9),SPACES    CLEAR HILITE OUTPUT FIELD
         CLI   4(R8),C'O'           IS ATTR HILITE "OFF"
         BNE   TRYHILIR                N. TRY "REVERSE"
         MVC   AHILITE(3),=CL3'OFF'
         LA    R3,3(R0)             SET COLOR LENGTH
         ST    R3,HILENGTH          STORE COLOR LENGTH
         B     ENDHILI              FIND COLOR
TRYHILIR DS    0H
         CLI   4(R8),C'R'           IS ATTR HILITE "REVERSE"
         BNE   TRYHILIB                N. TRY "BLINK"
         MVC   AHILITE(7),=CL7'REVERSE'
         LA    R3,7(R0)             SET COLOR LENGTH
         ST    R3,HILENGTH          STORE COLOR LENGTH
         B     ENDHILI              FIND COLOR
TRYHILIB DS    0H
         CLI   4(R8),C'B'           IS ATTR HILITE "BLINK"
         BNE   TRYHILIU                N. MUST BE "UNDERLINE"
         MVC   AHILITE(5),=CL5'BLINK'
         LA    R3,5(R0)             SET COLOR LENGTH
         ST    R3,HILENGTH          STORE COLOR LENGTH
         B     ENDHILI              FIND COLOR
TRYHILIU DS    0H
         MVC   AHILITE(9),=CL9'UNDERLINE'
         LA    R3,9(R0)             SET COLOR LENGTH
         ST    R3,HILENGTH          STORE COLOR LENGTH
ENDHILI  DS    0H
         L     R14,SAVER14
         BR    R14
*---------------------------------------------------------------------*
GETFIELD DS    0H
         ST    R14,SAVER14
         CR    R1,R9                Q. NEXT CHAR AN ATTR CHAR
         BH    CONTINU2                 Y. CONTINUE
         BR    R14                        RETURN
CONTINU2 DS    0H
         BCTR  R1,0                 DECREASE R1 BY 2
         B     MOVEFLD              MOVE PREVIOUS FIELD
MOVEFLDE DS    0H
         ST    R14,SAVER14
MOVEFLD  DS    0H
         MVC   AVALUE(88),SPACES    INITIALISE OUTPUT AREA
         CLI   TRUNC,C'A'           Q. TRANSLATE "ASIS"
         BE    NOMOLSPC                Y. BYPASS BLANK TEST
LDSPCLOP DS    0H
         CLI   0(R9),C' '
         BNE   NOMOLSPC
         LA    R9,1(R9)
         CR    R1,R9
         BL    NOCHARSF
         B     LDSPCLOP
NOCHARSF DS    0H
         BR    R14
NOMOLSPC DS    0H
         LA    R4,INREC             R4 WILL CONTAIN STRAT OF INPUT
         LR    R3,R9                NOTE R9 IS 1 CHAR PAST ATTR BYTE
         SR    R3,R4                SUBTRACT START OF FIELD
         CR    R9,R4                Q. IS FIRST BYTE ATTR BYTE
         BNE   GETCOLPO                N. GET COLUMN POSITION
         LA    R3,1(R3)                Y. COL MUST BE 01
GETCOLPO DS    0H
         UNPACK R3,2,ACOL           UNPACK COLUMN NUMBER
         LA    R8,1(R8)
         LR    R8,R1                SET R8 TO NEXT ATTR
         SR    R8,R9                SUBTRACT PREV ATTR POSITION
         LR    R3,R8                USE R3 TO UNPACK FIELD
         ST    R8,SAVER8
         LA    R3,1(R3)             USE R3 TO UNPACK FIELD
         UNPACK R3,2,ALENGTH        UNPACK LENGTH OF FIELD
         MVC   OVALUE(88),SPACES    CLEAR A VALUE
         EX    R8,MOVFLD
         LA    R1,1(R1)             RESTORE REGISTER
         CLI   TRUNC,C'A'           Q. TRANSLATE "ASIS"
         BE    TESTH00                 Y. BYPASS BLANK TEST
         CLC   OVALUE(88),SPACES    Q. FIELD ALL SPACES
         BE    EXITDEFS                Y. RETURN
TESTH00  DS    0H
         CLI   OVALUE,X'00'         Q. FIRST CHAR HEX "00"
         BNE   BPH00                   Y. BYPASS
         MVI   OVALUE,C' '             N. REPLACE BY SPACE
BPH00    DS    0H
         CLI   ATYPE,C'I'           Q. FIELD TYPE "INITIAL"
         BE    LITFIELD                N. BYPASS NEW LENGTH CALC
         MVC   AVALUE(8),OVALUE
         B     TEMPPRNT
         B     EXITDEFS
LITFIELD DS    0H
         CLI   TRUNC,C'A'           Q. TRANSLATE "ASIS"
         BE    EOFIELD1                Y. BYPASS BLANK TEST
         LA    R7,OVALUE            SET UP END POINTER
         AR    R7,R8                SET R7 POINT END OF FIELD
QUOTLOP1 DS    0H
         CLI   0(R7),C' '           SCAN FOR 1ST NON SPACE FROM END
         BNE   EOFIELD1
         BCTR  R7,0                 DECREMENT END POINTER
         BCT   R8,QUOTLOP1
EOFIELD1 DS    0H
*---------------------------------------------------------------------*
         LA    R8,1(R8)             INCREASE R8 BY 1
         UNPACK R8,2,ALENGTH        STORE LENGTH TO DISPLAY FORMAT
         LA    R7,OVALUE            SET UP POINTER TO INPUT FIELD
         MVI   AVALUE,X'7D'         QUOTE IN FIRST CHAR
         LA    R3,AVALUE+1          SET UP POINTER TO OUTPUT FIELD
*---------------------------------------------------------------------*
         STM   R0,R14,SAVREGS1      STORE REGISTERS
         XR    R5,R5                INIT R0 USED FOR # OF ' FOUND
         XR    R6,R6                INIT R1 USED FOR - NO. OF & FOUND
QUOTTEST DS    0H
         CLI   0(R7),X'7D'          Q. CHARACTER "'"
         BNE   AMPSTEST                 N. BYPASS
         MVI   0(R3),X'7D'             Y. MOVE ANOTHER "'"
         B     DOUBLEUP
AMPSTEST DS    0H
         CLI   0(R7),X'50'          Q. CHARACTER "&"
         BNE   MOV1CHAR                N. BYPASS
         MVI   0(R3),X'50'             Y. MOVE ANOTHER "'"
DOUBLEUP DS    0H
         LA    R5,1(R5)             INCREASE COUNTER BY 1
         LA    R3,1(R3)             INCREASE POINTER BY 1
MOV1CHAR DS    0H
         MVC   0(1,R3),0(R7)        MOVE ORIGINAL CHARACTER
         LA    R7,1(R7)             NEXT SOURCE CHAR
         LA    R3,1(R3)             NEXT DEST CHAR
         BCT   R8,QUOTTEST          LOOP IF NOT ZERO
         MVI   0(R3),X'7D'          MOVE ENDING ' TO DATA
         STH   R5,APOSFND           STORE NUMBER OF APOSTROPHES FOUND
         LM    R0,R14,SAVREGS1      RESTORE REGISTERS
*---------------------------------------------------------------------*
TEMPPRNT DS    0H
         ST    R1,SAVER1
         MVC   LINEIO(132),ATTRLINE MOVE TO OUTPUT LINE
         BAL   R14,PUTPR1           COMMON PUT ROUTINE
         CLC   APOSFND(2),=H'39'    Q. NUMBER OF APOSTROPHES FOUND > 39
         BNH   NOWARNIG                N. NO POTENTIAL ERROR
         LH    R5,APOSFND           LOAD NUMBER OF APS/QUOT FOUND
         UNPACK R5,2,LINEIO         UNPACK NUMBER OF REP APOST/QOUTES
         MVC   LINEIO+3(88),=C'- GREATER THEN 39 APOSTROPHES/AMPERSANDSX
                FOUND. MAY RESULT IN INCORRECT COPYBOOK BUFFER.'
         BAL   R14,PUTPR1           COMMON PUT ROUTINE
NOWARNIG DS    0H
         L     R1,SAVER1            RESTORE SAVED REGISTER
         B     DETAILS              BYPASS ALL THIS CRAP
DETSRET  DS    0H                   PREMATURE EXIT
EXITDEFS DS    0H                   PREMATURE EXIT
         L     R14,SAVER14          RESTORE SAVED REGISTER
         BR    R14                  RETURN TO WHERE ONCE CAME
HMOVFLD  DS    0H
MOVFLD   MVC   OVALUE(0),0(R9)      MOVE CHARACTERS
DETAILS  DS    0H
         ST    R1,SAVER1            STORE REGISTER
         MVI   REPTRALI,C'N'        TRAIL REPEAT INDIC SET (CONT'D)
DETAILS1 DS    0H
         MVI   REPLEADI,C'N'        SET LEADING REPEAT INDICATOR OFF
         MVI   REPCHARI,C'N'        SET TRAILING BLANKS INDICATOR
DETAILS2 DS    0H
         LA    R3,OLINE2            USE R3 AS BASE FOR OUTPUT LINE
         MVC   OLINE2(80),SPACES    CLEAR FIELD
         MVI   RADCIND,C'N'         MOVE NO TO REPEAT ADDRESS INDICATOR
*---------------------------------------------------------------------*
*   IF A TEXT FIELD, TEST IF ALL CHARS THE  SAME                      *
*---------------------------------------------------------------------*
         CLI   ATYPE,C'I'           Q. ATYPE = "INITIAL"
         BNE   SETBUFAD                Y. BYPASS
         STM   R0,R14,SAVREGS1      STORE REGISTERS
DETAILS3 DS    0H
         LA    R9,1                 SET REPEAT TO 1 (IT DOES WORK)
         PACK  DWORK8(8),ALENGTH(2) PACK LENGTH OF LITTERAL
         CVB   R5,DWORK8            CONVER LENGTH TO BINARY
*---------------------------------------------------------------------*
*   IS THE LENGTH > 4 (LENGTH OF 'REPEAT TO ADDRESS' STRING)          *
*---------------------------------------------------------------------*
         CH    R5,=H'4'             Q. IS LENGTH > 4
         BNH   NOTALSAM                N. BYPASS
         LR    R6,R5                LOOP COUNTER
         BCTR  R6,0                 LOOP COUNTER (LENGTH - 1)
         LA    R7,AVALUE            ADDRESS OF LITERAL
         LA    R7,1(R7)             POINT PAST 1ST BYTE WHICH IS "'"
         LA    R8,1(R7)             NEXT BYTE IN LITERAL
REPTLOOP DS    0H
         CLC   0(1,R7),0(R8)        Q. IS NEXT BYTE THE SAME AS THIS
         BNE   NOTALSAM                N. BYPASS
         LA    R7,1(R7)             NEXT "1ST" BYTE
         LA    R8,1(R8)             NEXT "2ND" BYTE
         LA    R9,1(R9)             UP REPEAT CHAR COUNTER
         BCT   R6,REPTLOOP          LOOP
*---------------------------------------------------------------------*
*   AT THIS STAGE ALL CHARS ARE THE SAME AND LITERAL > 4 CHARS IN LEN *
*---------------------------------------------------------------------*
         MVI   RADCIND,C'Y'         MOVE NO TO REPEAT ADDRESS INDICATOR
         MVC   10(6,R3),=CL6'RADC  ' SET BUFFER ADDRESS
         LM    R0,R14,SAVREGS1      RESTORE REGISTERS
         B     SETBUFRS             BYPASS "SBADC"
*---------------------------------------------------------------------*
NOTALSAM DS    0H
         CH    R9,=H'4'             Q. IS REPEAT > 4
         BNH   NOLEADRP                N. BYPASS
*---------------------------------------------------------------------*
*   AT THIS STAGE WE HAVE >4 LEADING CHARS THE SAME. R9 = COUNT.      *
*---------------------------------------------------------------------*
         CLI   AVALUE+1,C''''       Q. IS REPEAT CHAR '
         BE    APQUREPT                Y. GO PROCESS APOSTROPHE/QUOTE
         CLI   AVALUE+1,C'&&'       Q. IS REPEAT CHAR &
         BE    APQUREPT                Y. GO PROCESS APOSTROPHE/QUOTE
         PACK  DWORK8(8),ALENGTH(2) PACK LENGTH OF LITTERAL
         CVB   R4,DWORK8            CONVER LENGTH TO BINARY
         LR    R5,R4                WORK REGISTER
         AH    R5,APOSFND           NUMBER OF APOSTROPHES
         LR    R6,R5                TOTAL LENGTH
         SR    R6,R9                CHARACTERS LEFT
         UNPACK R6,2,LLLENGTH       LITERAL TRAIL  LENGTH (INC APOST)
         BCTR  R6,0                 -1 FOR RELATIVE LENGTH
         LA    R7,AVALUE+1          START OF LITERAL
         AR    R7,R9                START OF NON REPEAT STRING
         MVC   LVALUE,SPACES        CLEAR DESTINATION FIELD
         EX    R6,MOVTRLNR          MOVE FOR STORAGE
         LA    R6,1(R6)             +1 FOR RELATIVE LENGTH INCL LAST '
         EX    R6,MOVSPCNR          SPACE FILL REST
         MVI   0(R7),C''''          INSERT TRAILING '
         MVI   REPLEADI,C'Y'        SET LEADING REPEAT INDICATOR ON
         UNPACK R9,2,ALENGTH        UNPACK NEW LENGTH
         SR    R4,R9                TAKE OFF REPEAT FROM LENGTH
         UNPACK R4,2,LLENGTH        UNPACK TRAIL  LENGTH
         PACK  DWORK8(8),ACOL(2)    PACK COLUMN OF LITTERAL
         CVB   R4,DWORK8            CONVER LENGTH TO BINARY
         AR    R4,R9                ADD LENGTH OF NEXTOM LENGTH
         UNPACK R4,2,LCOL           UNPACK COL OF TRAILING DATA
*---------------------------------------------------------------------*
         MVC   LINEIO(40),=C'**** LEADING REPEATED CHARATERS REMOVED.'
         MVC   LINEIO+40(17),=C' REFER BELOW ****'
         BAL   R14,PUTPR1           COMMON PUT ROUTINE
*---------------------------------------------------------------------*
         MVC   LINEIO(132),ATTRLINE MOVE LEADING REPEATS TO OUTPUT
         BAL   R14,PUTPR1           COMMON PUT ROUTINE
         B     DETAILS3             GO RECALCULATE
*---------------------------------------------------------------------*
APQUREPT DS    0H
         CH    R9,=H'8'             Q. IS REPEAT > 8 (1/2 DOUBLE UP)
         BNH   NOLEADRP                N. BYPASS
*---------------------------------------------------------------------*
*   AT THIS STAGE WE HAVE >8 LEADING '/&. R9 = COUNT.                 *
*---------------------------------------------------------------------*
         PACK  DWORK8(8),ALENGTH(2) PACK LENGTH OF LITTERAL
         CVB   R4,DWORK8            CONVER LENGTH TO BINARY
         LR    R5,R4                WORK REGISTER
         AH    R5,APOSFND           NUMBER OF APOSTROPHES
         LR    R6,R5                TOTAL LENGTH
         SR    R6,R9                CHARACTERS LEFT
         UNPACK R6,2,LLLENGTH       LITERAL TRAIL  LENGTH (INC APOST)
         LA    R7,AVALUE+1          START OF LITERAL
         AR    R7,R9                START OF NON REPEAT STRING
         XR    R8,R8                ZEROISE ODD/EVEN PAIR
         D     R8,=F'2'             DIVIDE BY 2
         LH    R1,APOSFND           DECREASE # OF APS/QUOT FOUND
         SR    R1,R9                   BY THE NUMBER
         STH   R1,APOSFND              MOVED.......
         LR    R2,R5                TOTAL LENGTH
         SR    R2,R9                CHARACTERS LEFT
         BCTR  R2,0                 -1 FOR RELATIVE LENGTH
         MVC   LVALUE,SPACES        CLEAR DESTINATION FIELD
         EX    R6,MOVTRLNR          MOVE FOR STORAGE
         LA    R6,1(R6)             +1 FOR RELATIVE LENGTH INCL LAST '
         EX    R6,MOVSPCNR          SPACE FILL REST
         MVI   0(R7),C''''          INSERT TRAILING '
         MVI   REPLEADI,C'Y'        SET LEADING REPEAT INDICATOR ON
         LR    R5,R4                ORIGINAL REPEAT FROM LENGTH
         SR    R4,R9                TAKE OFF REPEAT FROM LENGTH
         UNPACK R4,2,LLENGTH        UNPACK TRAIL  LENGTH
         UNPACK R9,2,ALENGTH        UNPACK NEW LENGTH
         PACK  DWORK8(8),ACOL(2)    PACK COLUMN OF LITTERAL
         CVB   R4,DWORK8            CONVER LENGTH TO BINARY
         AR    R4,R9                ADD LENGTH OF NEXTOM LENGTH
         UNPACK R4,2,LCOL           UNPACK COL OF TRAILING DATA
*---------------------------------------------------------------------*
         MVC   LINEIO(40),=C'**** LEADING REPEATED CHARATERS REMOVED.'
         MVC   LINEIO+40(17),=C' REFER BELOW ****'
         BAL   R14,PUTPR1           COMMON PUT ROUTINE
*---------------------------------------------------------------------*
         MVC   LINEIO(132),ATTRLINE MOVE LEADING REPEATS TO OUTPUT
         BAL   R14,PUTPR1           COMMON PUT ROUTINE
         B     DETAILS3             GO RECALCULATE
*---------------------------------------------------------------------*
MOVTRLNR MVC   LVALUE(0),0(R7)      MOVE TRAILING NON REPEAT CHARS
MOVSPCNR MVC   0(0,R7),SPACES       MOVE SPACES TO REST OF AVALUE
*---------------------------------------------------------------------*
NOLEADRP DS    0H
         LM    R0,R14,SAVREGS1      RESTORE REGISTERS
*---------------------------------------------------------------------*
*   SET UP "SET-BUFFER-ADDRESS-DEFINE-CONSTANT" MACRO + DETAILS.      *
*---------------------------------------------------------------------*
SETBUFAD DS    0H
         MVC   10(6,R3),=CL6'SBADC ' SET BUFFER ADDRESS
SETBUFRS DS    0H
         MVC   16(2,R3),ALINE       SET UP LINE NUMBER
         MVI   18(R3),C','          COLUMN SEPERATOR
         MVC   19(2,R3),ACOL        SET UP COLUMN NUMBER
         MVI   21(R3),C','          DELIMITER
         MVC   22(1,R3),ATYPE       FIELD TYPE
         CLI   ATYPE,C'I'           Q. ATYPE = "INITIAL"
         BNE   INITBPAS                Y. BYPASS
         MVI   22(R3),C'P'          SET PROTECT DEFAULT FOR "INITIAL"
INITBPAS DS    0H
         MVC   23(1,R3),AINTEN      INTENSITY
         MVI   24(R3),C'N'          MDT 'OFF'
         CLI   ATYPE,C'I'           Q. ATYPE = "INITIAL"
         BE    MDTBYPAS               Y. BYPASS
*---------------------------------------------------------------------*
         OC    AVALUE(8),SPACES    UPPER TO LOWER
         MVC   FLDNAME(8),AVALUE   SET UP FIELD NAME TEMPORARILY
         CLC   FLDNAME(2),=C'Z '   Q. IS FIELD A ZVAR
         BNE   TSTFSET                N. GO TEST FOR MTD ON
         L     R8,ZVARSCNT         LOAD NO OF ZVARS PROCESSED
         LA    R8,1(R8)            UP BY ONE
         ST    R8,ZVARSCNT         STORE ZVARS PROCESSED COUNT
         L     R8,ZVARPTR          LOAD ZVAR SUB POINTER
         CLC   0(8,R8),SPACES      Q. IS THE ZVAR SUB SPACES
         BE    ERR5                   Y. BRANCH TO ERROR ROUTINE
         MVC   FLDNAME(8),0(R8)    MOVE TO FIELD NAME
*---------------------------------------------------------------------*
TSTFSET  DS    0H
         STM   R5,R6,SAVER5         SAVE REGISTERS
         L     R5,FSETCTR           USE # OF FSET'S AS LOOP COUNTER
         LTR   R5,R5                Q. # OF FSET'S = 0
         BZ    BPFSET                  Y. BYPASS FSET PROCESSING
         LA    R6,FSETVARS          LOAD START OF FSETS
FSETLOOP DS    0H
         CLC   FLDNAME(8),0(R6)     Q. FSET SPECIFIED FOR FIELD
         BE    SETFSET                 Y. SET FSET
         LA    R6,8(R6)             N. TRY NEXT FSET FIELD SPECIFIED
         BCT   R5,FSETLOOP
         B     BPFSET               END OF LOOP AND NO MATCH
SETFSET  DS    0H
         MVI   24(R3),C'Y'          MDT 'ON'
         MVC   LINEIO(28),=C'**** MDT TURNED ON FOR VAR "'
         MVC   LINEIO+28(8),FLDNAME
         MVC   LINEIO+36(12),=C'" ABOVE ****'
         BAL   R14,PUTPR1           COMMON PUT ROUTINE
BPFSET   DS    0H
         LM    R5,R6,SAVER5         RESTORE SAVED REGISTERS
         MVC   FLDNAME(8),SPACES    CLEAR FIELD NAME
*---------------------------------------------------------------------*
MDTBYPAS DS    0H
         MVI   25(R3),C','          DELIMITER
         MVC   26(1,R3),ACOLOR      COLOR
*        CLI   EXTATR,C'Y'          Q. EXTENDED ATTR REQT'D
*        BE    HAVCOLR                 Y. BYPASS
*        MVI   26(R3),C'M'          SET MONO-CHROME INDICATOR
HAVCOLR  DS    0H
         LA    R3,27(R3)            REPOSITION BASE
TSTHILI1 DS    0H
*        CLI   AHILITE,C'O'         Q. HILITE = "OFF"
*        BE    HIBYPAS                 Y. BYPASS
         MVI   0(R3),C','           DELIMITER
         MVC   1(1,R3),AHILITE      HILITE
         LA    R3,2(R3)             REPOSITION BASE
HIBYPAS  DS    0H
*---------------------------------------------------------------------*
*   AT THIS STAGE ALL CHARS ARE THE SAME AND LITERAL > 4 CHARS IN LEN *
*---------------------------------------------------------------------*
         CLI   RADCIND,C'Y'         Q. IS REPEAT TO ADDRESS SET ON
         BNE   TSBACNTD                N. GO TEST IF SBA IS CONT'D
         MVI   0(R3),C','           DELIMITER AFTER HILITE
         MVI   3(R3),C','           COLUMN SEPERATOR
         STM   R0,R14,SAVREGS1      STORE REGISTERS
         PACK  DWORK8(8),ACOL(2)    PACK STARTING COLUMN
         CVB   R3,DWORK8            CONVER LENGTH TO BINARY
         PACK  DWORK8(8),ALENGTH(2) PACK LENGTH OF LITTERAL
         CVB   R6,DWORK8            CONVER LENGTH TO BINARY
         AR    R3,R6                ADD LENGTH TO START
         LA    R3,1(R3)             ADD 1 TO REPEAT TO ADR 1 BYTE PAST
         CH    R3,=H'81'            Q. REPEAT TO BYTE 1 ON NEXT LINE
         BL    ONSAMLIN                N. BYPASS
         MVC   ACOL(2),=C'01'       SET UP COLUMN NUMBER NEXT LINE
         CLC   ALINE(2),=C'24'      Q. IS LINE NUMBER 24
         BL    ONNXTLIN                N. GET NEXT LINE NUMBER
*        MVC   ACOL(2),=C'80'       SET UP LAST BYTE
         MVC   ALINE(2),=C'01'      SET UP LINE 01,01 AS LAST BYTE
         B     RACOMDAT                N. BYPASS
ONNXTLIN DS    0H
         PACK  DWORK8(8),ALINE(2)   PACK LINE NUMBER
         CVB   R3,DWORK8            CONVER LENGTH TO BINARY
         LA    R3,1(R3)             ADD 1 FOR NEXT LINE
         UNPACK R3,2,ALINE          UNPACK LINE NUMBER
         B     RACOMDAT             GOTO MOVE COMMON STUFF
ONSAMLIN DS    0H
         UNPACK R3,2,ACOL           UNPACK COLUMN NUMBER
RACOMDAT DS    0H
         LM    R0,R14,SAVREGS1      STORE REGISTERS
         MVC   1(2,R3),ALINE        SET UP LINE NUMBER
         MVC   4(2,R3),ACOL         SET UP COLUMN NUMBER
         MVI   6(R3),C','           DELIMITER
         MVI   7(R3),C''''          MOVE QUOTE
         MVC   8(1,R3),AVALUE+1     MOVE CHARACTER TO BE REPEATED
         LA    R3,9(R3)             REPOSITION BASE
         CLI   AVALUE+1,C''''       Q. IS THE CHARACTER '
         BE    DUBLCHAR                Y. DUBLE UP ON THE CHARACTER
         CLI   AVALUE+1,C'&&'       Q. IS THE CHARACTER '
         BNE   NOTDUBLC                N. BYPASS
DUBLCHAR DS    0H
         MVC   0(1,R3),AVALUE+1     MOVE CHARACTER TO BE REPEATED
         LA    R3,1(R3)             REPOSITION BASE
NOTDUBLC DS    0H
         MVI   0(R3),C''''          MOVE QUOTE
         LA    R3,1(R3)             REPOSITION BASE
TSBACNTD DS    0H
         CLI   REPTRALI,C'Y'        Q. TRAIL REPEAT INDIC SET (CONT'D)
         BNE   NOTTRAIL                N. BYPASS
         MVI   0(R3),C','           DELIMITER
         MVC   1(29,R3),=C'''CONT.D FROM PREV "SBA" DETS'''
NOTTRAIL DS    0H
         CLI   RADCIND,C'Y'         Q. IS REPEAT TO ADDRESS SET ON
         BNE   PUTSBADC                N. GO TO PUT "SBADC"
*---------------------------------------------------------------------*
         MVC   LINEIO(30),=C'**** ABOVE LINE TRANSLATED TO '
         MVC   LINEIO+30(30),=C'REPEAT-TO-ADDRESS ..,.. CHAR "'
         MVC   LINEIO+48(2),ALINE   SET UP LINE NUMBER
         MVC   LINEIO+51(2),ACOL    SET UP COLUMN NUMBER
         MVC   LINEIO+60(1),AVALUE+1      REPEAT VALUE
         MVC   LINEIO+61(7),=C'". ****'
         BAL   R14,PUTPR1           COMMON PUT ROUTINE
         MVC   AVALUE,SPACES        CLEAR AVALUE
*---------------------------------------------------------------------*
         B     TSTLEADR             GO TEST IF NON REPEAT TRAIL TO PROC
*        B     RETMAIN1             GO TO COMMON RETURN POINT
*---------------------------------------------------------------------*
*    INSERT HERE CODE TO TAKE OFF TRAILING SAME CHARACTERS            *
*---------------------------------------------------------------------*
PUTSBADC DS    0H
         BAL   R14,PUTMACLB         PRINT LINE
         LA    R3,OLINE2            POINT R3 TO DESTINATION
MOVREST  DS    0H
         MVC   15(2,R3),=CL9'CL'    MOVE LITERAL "CL"
         MVC   17(2,R3),ALENGTH     MOVE LENGTH OF CHARACTER STRING
         CLI   ATYPE,C'I'           Q. ATTR TYPE = INITIAL
         BE    NOFLDNM                 Y. NO FIELD NAME
         MVC   10(2,R3),=CL2'DS'    SET DEFINE
         CLI   ATYPE,C'U'           Q. ATTR TYPE = UNPROT (INPUT)
         BNE   NODEFDC1                N. BYPASS INSERTIONOF 'DC'
         MVC   10(2,R3),=CL2'DC'    SET DEFINE CONSTANT
         MVC   19(3,R3),=C''' '''   MOVE INITIALISED TO SPACES
NODEFDC1 DS    0H
         MVC   FLDNAME(8),AVALUE    SET UP FIELD NAME
         CLC   FLDNAME(8),=CL8'Z       ' Q. IS FIELD A ZVAR
         BNE   TSTCURS                      N. GO TEST FOR CURSOR POS
         L     R8,ZVARSCNT         LOAD NO OF ZVARS PROCESSED
         LA    R8,1(R8)            UP BY ONE
         ST    R8,ZVARSCNT         STORE ZVARS PROCESSED COUNT
         L     R8,ZVARPTR          LOAD ZVAR SUB POINTER
         CLC   0(8,R8),SPACES      Q. IS THE ZVAR SUB SPACES
         BE    ERR5                   Y. BRANCH TO ERROR ROUTINE
         MVC   FLDNAME(8),0(R8)    MOVE TO FIELD NAME
         MVC   LINEIO(30),=CL30'**** ABOVE Z VAR REPLACED BY "'
         MVC   LINEIO+30(8),0(R8)
         MVC   LINEIO+38(6),=CL6'" ****'
         BAL   R14,PUTPR1                COMMON PUT ROUTINE
         LA    R8,8(R8)            POINT TO NEXT ZVAR SUBSTITUTE
         ST    R8,ZVARPTR          STORE
         B     TSTCURS             TEST CURSOR POSITIONING
NOFLDNM  DS    0H
*---------------------------------------------------------------------*
*  TEST TRAILING CHARACTERS AND IF > 5 SPACES SUB "RADC........       *
*  NOTE ESTABLISHED NOT ALL SPACES.                                   *
*---------------------------------------------------------------------*
         STM   R0,R14,SAVREGS1      STORE REGISTERS
         PACK  DWORK8(8),ALENGTH(2) PACK LENGTH OF LITTERAL
         CVB   R6,DWORK8            CONVER LENGTH TO BINARY
         XR    R5,R5                NO OF TRAIL BLANK COUNTER
         LA    R3,AVALUE            START OF LITERAL VALUE
         AR    R3,R6                ADD THE LENGTH
         AH    R3,APOSFND           ADD # OF "'" FOUND
         MVC   RPTCHAR(1),0(R3)     STORE THE LAST CHARACTER
         B     PREVCHAR             ASSUME ONE MATCH
TRCLOOP  DS    0H
         CLC   0(1,R3),RPTCHAR      Q. IS THE CHARACTER SAME AS PREV
         BNE   TRCLOOPE                N. BYPASS
PREVCHAR DS    0H
         BCTR  R3,0                 PREVIOUS CHARACTER
         LA    R5,1(R5)             UP COUNTER BY 1
         B     TRCLOOP              LOOP AROUND
TRCLOOPE DS    0H       N. BYPASS
         CH    R5,=H'6'             Q. IS NUMBER OF SPACES FOUND < 6
         BL    MOVELITL                Y. GO PROCESS LITERAL AS IS
REMTRBLK DS    0H
         LA    R3,AVALUE+1          START OF LITERAL VALUE PAST "'"
         AH    R3,APOSFND           ADD # OF "'" FOUND
         AR    R3,R6                ADD THE LENGTH
         MVI   0(R3),C' '           BLANK OUT "'"
         SR    R6,R5                SUBTRACT NO OF SPACES MOVED
         LA    R3,AVALUE+1          START OF LITERAL VALUE PAST "'"
         AR    R3,R6                ADD THE LENGTH
         AH    R3,APOSFND           ADD # OF "'" FOUND
         MVI   0(R3),C''''          INSERT CLOSING APOSTROPHE
*---------------------------------------------------------------------*
         CLI   RPTCHAR,C''''        Q. IS THE REPEAT CHAR '
         BE    SUBAPFND                Y. SUBTRACT APOS/QUOT FOUND
         CLI   RPTCHAR,C'&&'        Q. IS THE REPEAT CHAR &
         BE    SUBAPFND                Y. SUBTRACT APOS/QUOT FOUND
         B     NEWLENG1             BYPASS SUBTRACT APOS/AUOT FOUND
SUBAPFND DS    0H
         PACK  DWORK8(8),ALENGTH(2) PACK LENGTH OF LITTERAL
         CVB   R6,DWORK8            CONVER LENGTH TO BINARY
         LR    R9,R5                NUMBER OF APOS/QUOTES FOUND
         XR    R8,R8                ZEROISE EVEN REG OF ODD/EVEN PAIR
         D     R8,=F'2'             DIVIDE BY 2 (DOUBLED UP)
         SR    R6,R9                SUBTRACT NO OF APOST/QOUTS FOUND
NEWLENG1 DS    0H
*---------------------------------------------------------------------*
         UNPACK R6,2,ALENGTH        CONVER LENGTH TO BINARY
         UNPACK R5,2,RLENGTH        CONVER LENGTH TO BINARY
         EX    R5,SPACEFIL          SPACE FILL THE REST OF THE FIELD
         PACK  DWORK8(8),ACOL(2)    PACK STARTING COLUMN
         CVB   R3,DWORK8            CONVER LENGTH TO BINARY
         AR    R3,R6                REPEAT FROM
         UNPACK R3,2,RCOL           CONVER RA COL TO BINARY
         MVI   REPCHARI,C'Y'        SET TRAILING CHAR SAME INDIC
         MVI   REPTRALI,C'Y'        SET TRAILING CHAR SAME FOUND INDIC
         MVC   LINEIO(30),=C'**** "."S CONVERTED TO REPEAT-'
         MVC   LINEIO+6(1),RPTCHAR  MOVE REPEAT CHAR FOR RIPPLE MOVE
         MVC   LINEIO+30(26),=C'TO-ADDRESS FOR ABOVE LINE.'
         MVC   LINEIO+57(16),=C'REFER BELOW ****'
         BAL   R14,PUTPR1           COMMON PUT ROUTINE
         B     MOVELITL             BYPASS "EX" COMMAND
*---------------------------------------------------------------------*
SPACEFIL MVC   1(0,R3),SPACES       MOVE SPACES TO REST OF FIELD
*---------------------------------------------------------------------*
*---------------------------------------------------------------------*
MOVELITL DS    0H
         LM    R0,R14,SAVREGS1      RESTORE REGISTERS
         MVC   17(2,R3),ALENGTH     REPUT LENGTH IN CASE CHANGED
         MVC   10(2,R3),=CL2'DC'    SET DEFINE
         MVC   19(52,R3),AVALUE     MOVE VALUE OF LITERAL TO OUTPUT
         CLC   AVALUE+52(56),SPACES Q. LITERALS AFTER BYTE 52 = SPACES
         BE    TSTLEADR                Y. GO TEST LEADING REPEATS
         MVI   OLINE2+71,C'¢'       PUT CONTINUATION INDICATOR
         BAL   R14,PUTMACLB         WRITE PREV SETUP LINE
         MVC   OLINE2+15(56),AVALUE+52 MOVE BYTES AFTER 52
TSTLEADR DS    0H
*---------------------------------------------------------------------*
         CLI   REPLEADI,C'N'        Q. LEADING REPEAT INDICATOR OFF
         BE    TSTTRBLK                Y. GO TEST FOR TRAILIN REPEATS
         BAL   R14,PUTMACLB         WRITE PREV SETUP LINE
*---------------------------------------------------------------------*
*   SET UP AVALUE FOR TRAILING NON REPEAT CHARACTER PROCESSING        *
*---------------------------------------------------------------------*
         STM   R0,R14,SAVREGS1      STORE REGISTERS
         MVI   REPTRALI,C'Y'        SET TRAILING CHAR SAME FOUND INDIC
         PACK  DWORK8(8),LLLENGTH(2) PACK LITERAL LENGTH (INC APOST)
         CVB   R5,DWORK8            CONVER LENGTH TO BINARY
         MVC   AVALUE,SPACES        CLEAR AVALUE
         MVC   ALENGTH(2),LLENGTH   CALCULATED LENGTH (NOT INC APOST)
         MVC   ACOL(2),LCOL         NEW STARTING COLUMN
         LA    R6,AVALUE+1          START OF AVALUE + 1
*        LR    R7,R6                WORK REGISTER
         AR    R6,R5                ADD LITERAL LENGTH
         MVI   AVALUE,C''''         LEADING '
         MVI   0(R6),C''''          TRAILING '
         BCTR  R5,0                 SUBTRACT 1 FOR RELATIVE "EX" LENGTH
         EX    R5,MOVLLITR          MOVE STORED NON REPEAT LITERAL
         MVC   LINEIO(132),ATTRLINE NEW LINE WITH REPEAT LEADS REMOVED
         BAL   R14,PUTPR1           COMMON PUT ROUTINE
         LM    R0,R14,SAVREGS1      STORE REGISTERS
         B     DETAILS1             REPROCESS TRAILING BLANKS 4 "RADC"
*---------------------------------------------------------------------*
MOVLLITR MVC   AVALUE+1(0),LVALUE   MOVE STORED NON  REPEAT LITERAL
*---------------------------------------------------------------------*
TSTTRBLK DS    0H
         CLI   REPCHARI,C'N'        Q. TRAILING BLANKS INDICATOR SET
         BE    RETMAIN1                N. GO TO COMMON RETURN POINT
         BAL   R14,PUTMACLB         WRITE PREV SETUP LINE
*---------------------------------------------------------------------*
*   SET OF AVALUE FOR TRAILING SPACES RE-PROCESSING                   *
*---------------------------------------------------------------------*
         STM   R0,R14,SAVREGS1      STORE REGISTERS
         MVI   REPCHARI,C'N'        SET TRAILING BLANKS INDICATOR
         PACK  DWORK8(8),RLENGTH(2) PACK STARTING COLUMN
         CVB   R6,DWORK8            CONVER LENGTH TO BINARY
         MVC   AVALUE,SPACES        CLEAR AVALUE
         LA    R5,AVALUE+1          START OF AVALUE + 1
         AR    R5,R6                ADD LENGTH
         MVI   AVALUE,C''''         MOVE ' TO START
         MVI   0(R5),C''''          MOVE ' TO END
         BCTR  R6,0                 SUBTRACT 1 FOR RELATIVE "EX" LENGTH
         BCTR  R6,0                 SUBTRACT 1 FOR RIPPLE MOVE
         MVC   AVALUE+1(1),RPTCHAR  MOVE REPEAT CHAR FOR RIPPLE MOVE
         EX    R6,MOVRPTCH          MOVE REPEAT CHARACTERS
         MVC   ACOL(2),RCOL         MOVE REPEAT FOUND COL ADDRESS
         MVC   ALENGTH(2),RLENGTH   MOVE REPEAT FOUND LENGTH
         MVC   LINEIO(132),ATTRLINE REPEAT TRAILING LINE
         BAL   R14,PUTPR1           COMMON PUT ROUTINE
         LM    R0,R14,SAVREGS1      STORE REGISTERS
         B     DETAILS1             REPROCESS TRAILING BLANKS 4 "RADC"
*---------------------------------------------------------------------*
MOVRPTCH MVC   AVALUE+2(0),AVALUE+1 MOVE REPAT CHARACTER TO LITERAL
*---------------------------------------------------------------------*
TSTCURS  DS    0H
         CLC   CURSOR(8),FLDNAME    Q. CURSOR ON THIS FIELD
         BNE   RETMAIN1                N. GO TO COMMON RETURN POINT
         BAL   R14,PUTMACLB         WRITE PREV SETUP LINE
         MVC   10(5,R3),=CL6'ICDC ' SET BUFFER ADDRESS
         MVC   16(2,R3),ALINE       SET UP LINE NUMBER
         MVI   18(R3),C','          COLUMN SEPERATOR
         PACK  DWORK8(8),ACOL(2)    PACK COLUMN
         CVB   R8,DWORK8            CONVERT TO BINARY
         LA    R8,1(R8)             INCREASE BY 1
         UNPACK R8,2,DWORK8         CONVERT TO DECIMAL FORMAT
         MVC   19(2,R3),DWORK8      SET UP COLUMN NUMBER
RETMAIN1 DS    0H                   COMMON RETURN POINT
         BAL   R14,PUTMACLB         PRINT LINE
         L     R1,SAVER1
         B     DETSRET              RETURN
*---------------------------------------------------------------------*
NOATTRLN DS    0H                   NO ")ATTR" CARD IN PANEL
         STM   R0,R14,SAVREGS1      STORE REGISTERS
         MVC   TABLE(15),=CL15'%THWO+TLBO_IHRO'
         XR    R2,R2
         IC    R2,TABLE
         STC   R2,TRTABLE(R2)       SET TRTABLE ATTR CHAR ON
         IC    R2,TABLE+5
         STC   R2,TRTABLE(R2)       SET TRTABLE ATTR CHAR ON
         IC    R2,TABLE+10
         STC   R2,TRTABLE(R2)       SET TRTABLE ATTR CHAR ON
         MVI   ATTRFLAG,C'Y'
         LM    R0,R14,SAVREGS1      RESTORE REGISTERS
         BR    R14                  RETURN
*---------------------------------------------------------------------*
*---------------------------------------------------------------------*
ERR3     DS    0H
         MVC   LINEIO(45),ERROR3       MOVE ERROR 1 TO LINE OUTPUT
         MVI   RCODE,C'3'              SET ERRORNEAOUS RETURN CODE
         B     EXITPROG
ERR5     DS    0H
         MVC   LINEIO(27),ERROR5       MOVE ERROR 1 TO LINE OUTPUT
         MVI   RCODE,C'5'              SET ERRORNEAOUS RETURN CODE
         B     EXITPROG
*---------------------------------------------------------------------*
GOODEXIT DS    0H
         MVI   RCODE,C'0'              SET GOOD RETURN CODE
*---------------------------------------------------------------------*
EXITPROG RACKOFF
*---------------------------------------------------------------------*
*---------------------------------------------------------------------*
*     COMMON PUT "PRLINE" TO PRINTER1 ROUTINE                        -*
*---------------------------------------------------------------------*
PUTPR1   DS    0H
         STM   R14,R1,PUTSAVR1
         PUT   PRINTER1,PRLINE
         MVC   PRLINE(133),SPACES
PUTPR1X  DS    0H
         LM    R14,R1,PUTSAVR1
         BR    R14
PUTSAVR1 DS    4F
*---------------------------------------------------------------------*
*---------------------------------------------------------------------*
*     COMMON PUT "PRLINE" TO PRINTER1 ROUTINE                        -*
*---------------------------------------------------------------------*
PUTMACLB DS    0H
         STM   R14,R1,PUTSAVR2
*        CLI   EXTATR,C'N'          Q. EXTENDED ATTRIBS
*        BE    MUSTEXPD                N. MUST EXPAND HERE (MACRO CANT
*                                         HANDLE MONO
         CLI   LINE#ON,C'Y'         Q. LINE NUMBER MODE
         BE    MUSTEXPD                Y. MUST EXPAND HERE (MACRO CANT
*                                         HANDLE MONO
         CLI   MACROE,C'N'          Q. MACROS TO BE EXPANDED
         BE    DONTEXPD                N. BYPASS EXPANSION
MUSTEXPD DS    0H
         LA    R1,BUFFCOMA          COMMON DATA AREA
         CALL  BUFFEXPD             CALL BUFFER EXPAND
         B     PUTPR2X              BYPASS
DONTEXPD DS    0H
         PUT   MACLIB,OLINE2        WRITE PREV SETUP LINE
         PUT   PRINTER2,OLINE2O
         MVC   OLINE2O(81),SPACES
PUTPR2X  DS    0H
         LM    R14,R1,PUTSAVR2
         BR    R14
PUTSAVR2 DS    4F
*---------------------------------------------------------------------*
*=====================================================================*
         LTORG
LLENGTH  DS    CL2                  LENGTH OF NON REPEAT LEADING
LLLENGTH DS    CL2                  ABOVE LENGTH INCLUDING ' AND &
LCOL     DS    CL2
LVALUE   DS    108C' '
REPLEADI DS    C'N'
         DS    0D
BUFFCOMA DSECT
         COPY  BUFFCOMA
         END
