***********************************************************************
*                                                                     *
*  Title:    INVENTORY/PRINT OF CICS DUMPS                            *
*  System:   CICSDUMP 2.0.0                                           *
*  Module:   CDMP3XX                                                  *
*  Program:  CDMP3XX                                                  *
*  Function: This program has two basic functions:                    *
*            1. Prepare an inventory of dumps on the allocated dump   *
*               dataset. This function is pertformed, if no           *
*               parameters are passed using the SYSIN dataset.        *
*                                                                     *
*            2. Extract selected dump using details reported from     *
*               function 1 above. This function is invoked by passing *
*               1 or more parameters via the SYSIN dataset.           *
*                                                                     *
*            Parameter format (Different format to 2XX):              *
*             byte  1 -  4 : Task id or "ALL "                        *
*                   5 -  8 : Aben code or "ALL "                      *
*                   9 - 14 : start time format 'HHMMSS'               *
*                  15 - 20 : End time format 'HHMMSS'. (Should be     *
*                            at least 1 second greater than start     *
*                            time.)                                   *
*                  21 - 27 : Start date format 'YYYMMDD'.             *
*                  28 - 34 : end date format 'YYYMMDD'.               *
*                  35 - 38 : Number of dumps to print from matches.   *
*                            (Should be "0001".)                      *
*                  39 - 46 : Program name or leave blank for all      *
*                            programs.                                *
*             Eg1  M25DASRA133444133445199031619903160001MSO25D       *
*             Eg2  ALL ASRA080000240000199031619903160010             *
*             Eg3  TR#1ALL 080000240000199031619903160003PROGTR#1     *
*                                                                     *
*            Files:                                                   *
*             SYSIN   - Input parameters (selected dumps)             *
*                       Forces inventory only without data.           *
*             UT1     - CICS dump dataset.                            *
*             UT3     - Temporary dataset of inventory of dumps to    *
*                       be used to create selection ISPF table.       *
*                       Allocate as DUMMY for function 2.             *
*             UT2     - Extracted dump to be used as input to the     *
*                       CICS dump formatting program DFHDUP.          *
*                       Allocate as DUMMY for function 1.             *
*             SYSPRINT- SDSF output of UT3.                           *
*                                                                     *
*  Author:   A. Kara.                                                 *
*                                                                     *
***********************************************************************
CDMP3XX  KICKOFF (R13,R12)
#MAXALLW EQU   30 ******TO DETERMINE MAX ENTRIES WHICH MAY BE REQUESTED
#MAXLALL EQU   60 ******TO DETERMINE MAX LINES PER PRINT PAGE
BEGIN    DS    0H
         LA    R6,INREC           SET REG 12 AS I/O POINTER FOR DUMPS
         LA    R8,INREC           SET REG 8 AS I/O POINTER FOR CARDS
         USING REQTASK,R11        USE REQUEST TABLE DSECT
         USING INTASK,R8          USE REQUEST TABLE DSECT
         USING DCRECLEN,R6        USE DFHDCRDS DSECT
         TIME  DEC                GET CURRENT DATE/TIME
         ST    R0,TIME            SAVE CURRENT TIME
         ST    R1,DATE            SAVE CURRENT DATE
         MVO   TIME(5),TIME(4)    DEL THOUSANDS
         UNPK  HEADDT,DATE        PUT JULIAN DATE IN HEADER
         OI    HEADDT+3,X'F0'     MAKE DATE NUMERIC
         UNPK  WORK,TIME(5)       MAKE TIME CHARS
         MVC   HEADTM(2),WORK+1   MOVE HOURS TO HEADER
         MVC   HEADTM+3(2),WORK+3 MOVE MINUTES TO HEADER
         MVC   HEADTM+6(2),WORK+5 MOVE SECONDS TO HEADER
         MVC   HEADTM+9(2),WORK+7 MOVE HUNDREDS TO HEADER
         OPEN  (CARD,(INPUT))     SELECTION CRITERIA
         OPEN  (PRINTER,(OUTPUT)) SEL/DET/REQ DUMP STATS
         OPEN  (INPUT,(INPUT))    DUMP FILE FROM CICS
         OPEN  (INVENTRY,(OUTPUT)) OPEN INVENTORY OUTPUT
         OPEN  (OUTPUT,(OUTPUT))  SELECTED DUMPS
         RDJFCB (INPUT)           GET FILE INFO ON CICS DUMP FILE
         LA    R10,INJFCB         POINT TO JFCB
         MVC   HEADDSN,JFCBDSNM-INFMJFCB(R10) MOVE CICS DUMP FILE DSN
         L     R11,=A(TABLE)      POINT TO SAVE SELECTION TABLE
         L     R9,#MAXENT         SET MAXIMUN SELECTIONS ALLOWED
         SR    R10,R10            CLEAR REG 10
         BAL   R14,PUTHDR         GO PRINT HEADER LINES
INPARMS  DS    0H
         GET   CARD,INREC         READ REQUESTED DUMPS
         MVC   REQTASK,INTASK     SAVE SELECTED TASK
         MVC   REQABEND,INABEND   SAVE SELECTED ABEND CODE
         MVC   REQPROG,INPROG     SAVE SELECTED PROGRAM NAME
         MVC   REQBTIME,INBTIME   SAVE REQ BEGIN TIME
         MVC   REQETIME,INETIME   SAVE REQ END TIME
         MVC   REQBDATE,INBDATE   SAVE REQ BEGIN DATE
         MVC   REQEDATE,INEDATE   SAVE REQ BEGIN DATE
         PACK  REQNUM,INNUM       SAVE REQ NUMBER
         PACK  REQSEL,ZEROS       INIT NUMBER OF DUMPS SELECTED
         LA    R11,#REQLEN(R11)   INCREMENT TABLE
         LA    R10,1(R10)         COUNT NUMBER OF REQUESTS
         BCT   R9,INPARMS         LOOP UNTIL TABLE IS FULL
EOJCARD  DS    0H
         ST    R10,#MAXREQ        SAVE NUMBER OF REQUESTS
READ     BAL   R14,GETFILE        READ CICS DUMP FILE
         CLI   DCIRTSI,X'10'      IS THIS DUMP HEADER
         BE    SEARCH             ...YES, SEARCH FOR REQUEST
         MVC   MESSAGE(07),=C'TYPE - '
         MVC   MESSAGE+7(23),=C'SUPERVISOR SYSTEM DUMP '
         CLI   DCIRTSI,X'42'      IS THIS SUPREVISOR DUMP HEADER
         BE    SEARCHS            ...YES, SEARCH FOR REQUEST
         MVC   MESSAGE+7(23),=C'PARTITIONED SYSTEM DUMP'
         CLI   DCIRTSI,X'43'      IS THIS PARTITIONED DUMP HEADER
         BE    SEARCHS            ...YES, SEARCH FOR REQUEST
         MVC   MESSAGE+7(23),=C'FORMATTED SYSTEM DUMP  '
         CLI   DCIRTSI,X'41'      IS THIS FORMATTED DUMP HEADER
         BE    SEARCHS            ...YES, SEARCH FOR REQUEST
         CLI   PICK,X'01'         HAS THIS DUMP BEEN REQUESTED
         BNE   READ               ...NO, CONTINUE TO READ CICSDUMP FILE
         BAL   R14,PUTFILE        ...YES, WRITE DUMP RECORD TO SEL FILE
         B     READ               GO READ AGAIN
SEARCH   MVI   PICK,X'00'         CLEAR SELECTD SWITCH
         L     R11,=A(TABLE)      POINT TO SELECT TABLE
         L     R9,#MAXREQ         SET MAX SELECTIONS
*---------------------------------------------------------------------*
         MVC   DETRAN,DCTASKID    MOVE TASK TO PRINT
         MVC   DECODE,DCDUMPC     MOVE ABEND TO PRINT
         MVC   DEBTIME,DCTIME     MOVE TIME TO PRINT
         MVC   DEBDATE+0(3),DCDATE+4 MOVE DATE TO PRINT YY
         MVC   DEBDATE+3(2),DCDATE+2 MOVE DATE TO PRINT MM
         MVC   DEBDATE+5(2),DCDATE+0 MOVE DATE TO PRINT DD
*---------------------------------------------------------------------*
         LH    R1,INREC           LENGTH OF BLOCK
         CH    R1,=H'200'         Q. IS LENGTH GREATER THAN BUFFER
         BH    TOOBIGL               Y. TOO BIG GO TELL
         BCTR  R1,0               RELATIVE LENGTH
         EX    R1,MOVE1STR        GO AND STORE 1ST. RECORD
         BAL   R14,GETFILE        GO GET NEXT RECORD
         MVC   MESSAGE(07),=C'PROG - '
         MVC   MESSAGE+7(08),SPACES CLEAR FIELD
         CLC   =C'RIDS/',INREC+60-5 Q. PROGRAM NAME AVAILABLE
         BNE   NOPROGNM                N. BYPASS
         MVC   MESSAGE+7(08),INREC+60 PROGRAM NAME FROM LINE 2
NOPROGNM DS    0H
         MVI   MESSCNT,C' '       RIPPLE CLEAR
         MVC   MESSCNT+1(61),MESSCNT
         B     HAVEMACH           GO PROCESS REMAINING RECORDS
*---------------------------------------------------------------------*
TOOBIGL  DS    0H
         MVC   DETAIL,SPACES      CLEAR DETAIL AREA
         MVC   DETAIL(58),=C' RECORD LENGTH OF FIRST BLOCK > 200 BYTES.X
                CANNOT PROCESS-'
         UNPACK R1,8,DETAIL+58    UNPACK RECORD LENGTH
         MVC   DETAIL+67(60),INREC FILL REST OF RECORD WITH THE DATA
         BAL   R14,PUTPRT         GO PUT PRINT LINE
         B     LOOPX              BYPASS THIS SELECTION
*---------------------------------------------------------------------*
MOVE1STR MVC   TARGET(0),INREC    MOVE THE FIRST BLOCK
*---------------------------------------------------------------------*
HAVEMACH DS    0H
         LA    R6,TARGET          TARGET IS 1ST RECORD
*---------------------------------------------------------------------*
LOOP1    DS    0H
         LTR   R9,R9              IS REG 9 ZERO
         BZ    TESTEOF            ...YES, FORMAT THIS DUMP
         CLC   REQTASK,=C'ALL '   SELECT ALL TASKS?
         BE    LOOP2              ...YES, CHECK ABEND CODE
         CLC   REQTASK,DCTASKID   SELECT THIS TASK?
         BNE   LOOPX              ...NO, INCREMENT SEL TABLE
LOOP2    CLC   REQABEND,=C'ALL '  SELECT ALL ABEND CODES?
         BE    LOOP3              ...YES, CHECK DATE
         CLC   REQABEND,DCDUMPC   SELECT THIS ABEND CODE?
         BNE   LOOPX              ...NO, INCREMENT SEL TABLE
LOOP3    DS    0H
         CLC   REQPROG,SPACES     Q. SELECT ALL PROGRAMS
         BE    LOOP4                 Y. CHECK DATE
         CLC   REQPROG,MESSAGE+7  Q. IS THIS THE REQUESTED PROGRAM
         BNE   LOOPX                 N. BYPASS THIS SELECTION
LOOP4    DS    0H
         MVC   DUMPDATE+0(3),DCDATE+4 MOVE DATE TO TEMP YY
         MVC   DUMPDATE+3(2),DCDATE+2 MOVE DATE TO TEMP MM
         MVC   DUMPDATE+5(2),DCDATE+0 MOVE DATE TO TEMP DD
         CLC   DUMPDATE,REQBDATE  SELECT THIS DATE?
         BL    LOOPX              ...NO, INCREMENT SEL TABLE
         CLC   DUMPDATE,REQEDATE  SELECT THIS DATE?
         BH    LOOPX              ...NO, INCREMENT SEL TABLE
         CLC   DCTIME,REQBTIME    SELECT THIS TIME?
         BL    LOOPX              ...NO, INCREMENT SEL TABLE
         CLC   DCTIME,REQETIME    SELECT THIS TIME?
         BH    LOOPX              ...NO, INCREMENT SEL TABLE
         MVI   PICK,X'01'         SET TO SELECT THIS DUMP
         AP    REQSEL,=P'1'       INCREMENT NUMBER SELECTED
         MVC   MESSAGE,=CL15'MATCHED      ' SET TO SHOW DUMP MATCHED
         CP    REQSEL,REQNUM      COMPARE SELECTION WITH NO. REQSTED
         BH    TESTEOF            ...GT, INCREMENT SEL TABLE
         MVC   MESSAGE,=CL15'SELECTED <===' SET TO SHOW DUMP SELECTED
         PUT   OUTPUT,TARGET      PUT FIRST RECORD
         LA    R6,INREC           INREC HAS 2ND RECORD
         BAL   R14,PUTFILE        GO WRITE TO DUMP FILE (2ND RECORD)
         B     TESTEOF            GO PRINT DUMP HEADER
LOOPX    LA    R11,#REQLEN(R11)   INCR TABLE POINTER
         BCT   R9,LOOP1           GO CHECK AGAIN
TESTEOF  EQU   *
         LA    R6,TARGET          POINT TO 1ST RECORD WITH DATES
         CLC   DEBDATE,COMPDATE   IS DATE LESS THAN SAVE DATE
         BL    EOJ                ...YES, READ NO MORE
         MVC   COMPDATE,DEBDATE   ...NO, UPDATE SAVE DATE
         BAL   R14,PUTPRT         GO PUT PRINT LINE
         LA    R6,INREC           RESTORE THE RIGHT R12 ADDRESS
         B     READ               READ NEXT DUMP RECORD
*---------------------------------------------------------------------*
SEARCHS  MVI   PICK,X'00'         CLEAR SELECTD SWITCH
         L     R11,=A(TABLE)      POINT TO SELECT TABLE
         L     R9,#MAXREQ         SET MAX SELECTIONS
*---------------------------------------------------------------------*
         MVC   DETRAN,=C'SYSD'    MOVE SYSTEM DUMP-ID TO PRINT
         MVC   DECODE,=C'    '    MOVE SPACES TO ABEND IN PRINT
         MVC   DEBTIME,DCTIME     MOVE TIME TO PRINT
         MVC   DEBDATE+0(3),DCDATE+4 MOVE DATE TO PRINT YY
         MVC   DEBDATE+3(2),DCDATE+2 MOVE DATE TO PRINT MM
         MVC   DEBDATE+5(2),DCDATE+0 MOVE DATE TO PRINT DD
*---------------------------------------------------------------------*
         LH    R1,INREC           LENGTH OF BLOCK
         CH    R1,=H'200'         Q. IS LENGTH GREATER THAN BUFFER
         BH    STOOBIGL              Y. TOO BIG GO TELL
         BCTR  R1,0               RELATIVE LENGTH
         EX    R1,SMOV1STR        GO AND STORE 1ST. RECORD
         BAL   R14,GETFILE        GO GET NEXT RECORD
*        MVC   DECODE,INREC+55    MOVE ABEND TO PRINT
         B     HAVESMAC           GO PROCESS REMAINING RECORDS
*---------------------------------------------------------------------*
STOOBIGL DS    0H
         MVC   DETAIL,SPACES      CLEAR DETAIL AREA
         MVC   DETAIL(58),=C' RECORD LENGTH OF FIRST BLOCK > 200 BYTES.X
                CANNOT PROCESS-'
         UNPACK R1,8,DETAIL+58    UNPACK RECORD LENGTH
         MVC   DETAIL+67(60),INREC FILL REST OF RECORD WITH THE DATA
         BAL   R14,PUTPRT         GO PUT PRINT LINE
         B     SLOOPX             BYPASS THIS SELECTION
*---------------------------------------------------------------------*
SMOV1STR MVC   TARGET(0),INREC    MOVE THE FIRST BLOCK
*---------------------------------------------------------------------*
HAVESMAC DS    0H
         LA    R6,TARGET          TARGET IS 1ST RECORD
*---------------------------------------------------------------------*
SLOOP1   DS    0H
         LTR   R9,R9              IS REG 9 ZERO
         BZ    STESTEOF           ...YES, FORMAT THIS DUMP
         CLC   REQTASK,=C'SYSD'   SELECT ALL TASKS?
         BE    SLOOP3             ...YES, CHECK ABEND CODE
         CLC   REQTASK,DCTASKID   SELECT THIS TASK?
         BNE   SLOOPX             ...NO, INCREMENT SEL TABLE
SLOOP2   CLC   REQABEND,=C'ALL '  SELECT ALL ABEND CODES?
         BE    SLOOP3             ...YES, CHECK DATE
         CLC   REQABEND,DECODE    SELECT THIS ABEND CODE?
         BNE   SLOOPX             ...NO, INCREMENT SEL TABLE
SLOOP3   DS    0H
         MVC   DUMPDATE+0(3),DCDATE+4 MOVE DATE TO TEMP YY
         MVC   DUMPDATE+3(2),DCDATE+2 MOVE DATE TO TEMP MM
         MVC   DUMPDATE+5(2),DCDATE+0 MOVE DATE TO TEMP DD
         CLC   DCDATE,REQBDATE    SELECT THIS DATE?
         BL    SLOOPX             ...NO, INCREMENT SEL TABLE
         CLC   DCDATE,REQEDATE    SELECT THIS DATE?
         BH    SLOOPX             ...NO, INCREMENT SEL TABLE
         CLC   DCTIME,REQBTIME    SELECT THIS TIME?
         BL    SLOOPX             ...NO, INCREMENT SEL TABLE
         CLC   DCTIME,REQETIME    SELECT THIS TIME?
         BH    SLOOPX             ...NO, INCREMENT SEL TABLE
         MVI   PICK,X'01'         SET TO SELECT THIS DUMP
         AP    REQSEL,=P'1'       INCREMENT NUMBER SELECTED
         MVC   MESSAGE,=CL15'MATCHED      ' SET TO SHOW DUMP MATCHED
         CP    REQSEL,REQNUM      COMPARE SELECTION WITH NO. REQSTED
         BH    STESTEOF           ...GT, INCREMENT SEL TABLE
         MVC   MESSAGE,=CL15'SELECTED <===' SET TO SHOW DUMP SELECTED
         PUT   OUTPUT,TARGET      PUT FIRST RECORD
         LA    R6,INREC           INREC HAS 2ND RECORD
         BAL   R14,PUTFILE        GO WRITE TO DUMP FILE (2ND RECORD)
         B     STESTEOF           GO PRINT DUMP HEADER
SLOOPX   LA    R11,#REQLEN(R11)   INCR TABLE POINTER
         BCT   R9,SLOOP1          GO CHECK AGAIN
STESTEOF EQU   *
         LA    R6,TARGET          POINT TO 1ST RECORD WITH DATES
         CLC   DEBDATE,COMPDATE   IS DATE LESS THAN SAVE DATE
         BL    EOJ                ...YES, READ NO MORE
         MVC   COMPDATE,DEBDATE   ...NO, UPDATE SAVE DATE
         BAL   R14,PUTPRT         GO PUT PRINT LINE
         LA    R6,INREC           RESTORE THE RIGHT R12 ADDRESS
         B     READ               READ NEXT DUMP RECORD
EOJ      DS    0H
         L     R11,=A(TABLE)      POINT TO BOGINNING OF REQ TABLE
         L     R9,#MAXREQ         SET MAXIMUM NUMBER OF REQUESTS
EOJLOOP  LTR   R9,R9              IS REG 9 ZEROS?
         BZ    EOJEND             ...YES, THROUGH PRINTING REQS
         MVC   MESSAGE(18),=CL15'<= INPUT PARAMETER'
         MVI   MESSCNT,C' '       RIPPLE CLEAR
         MVC   MESSCNT+1(61),MESSCNT
         MVC   DETRAN,REQTASK     MOVE REQUESTED TASK
         MVC   DECODE,REQABEND    MOVE REQUESTED ABEND CODE
         MVC   DEBTIME,REQBTIME   MOVE REQUESTED BEGIN TIME
         MVC   DEETIME,REQETIME   MOVE REQUESTED END TIME
         MVC   DEBDATE,REQBDATE   MOVE REQUESTED BEGIN DATE
         MVC   DEEDATE,REQEDATE   MOVE REQUESTED END DATE
         UNPK  DENUM,REQNUM       MOVE REQUESTED MAX NO OF DUMPS
         UNPK  DESEL,REQSEL       MOVE NUMBER OF DUMPS ENCOUTERED
         BAL   R14,PUTPRT         GO PRINT REQUEST
         LA    R11,#REQLEN(R11)   INCR TABLE POINTER
         BCT   R9,EOJLOOP         LOOP UNTIL FINISHED
*---------------------------------------------------------------------*
EOJEND   CLOSE INPUT              **CICS DUMP FILE **
         CLOSE CARD               **DUMP SELECTIONS**
         CLOSE PRINTER            **PRINTED REPORTS**
         CLOSE INVENTRY           CLOSE PRINTER
         CLOSE OUTPUT             **SELECTED DUMPS **
EXITPROG RACKOFF RC=0             RETURN TO CALLER
*=====================================================================*
GETFILEH DS    F
GETFILEI DS    4F
GETFILE  ST    R14,GETFILEH       SAVE RETURN ADDR
         STM   R2,R5,GETFILEI     SAVE REGISTERS
         LM    R2,R3,BLOCKP       GET BLOCK POINTERS
         LTR   R3,R3              IF MORE RECS IN BLOCK
         BNZ   GETFILEP              PROCESS THEM...
         MVI   GETFLAG,C'0'       INIT GET FLAG
         L     R14,=AL4(BLOCK)    POINT TO BLOCK
         XC    0(8,R14),0(R14)    CLEAR THE FRONT
         READ  CICDUMP,SF,INPUT,BLOCK   READ NEXT BLOCK
         CHECK CICDUMP             AND CHECK FOR COMPLETION
         CLI   GETFLAG,C'E'       GET FLAG IN ERROR
         BE    EOJ                ...YES, END OF JOB
         MVC   BLOCKP,=AL4(BLOCK)
         L     R2,BLOCKP          POINT TO BLOCK
         CLC   2(2,R2),=H'0'      IF NOT VALID BLOCK,
         BNE   EOJ                   GET OUT...
         CLC   0(2,R2),=H'0'      IF NO LENGTH
         BE    EOJ                   GET OUT...
         CLC   0(2,R2),=H'32760'  IF TOO LONG
         BH    EOJ                   GET OUT...
*        CLC   0(2,R2),=H'4'      IF TOO SHORT
*        BL    EOJ                   GET OUT...
         LH    R3,0(R2)           ELSE GET BLOCK LENGTH
         SH    R3,=H'4'
         ST    R3,BLOCKL          SAVE FOR NEXT TIME
         LA    R2,4(R2)           BYPASS LENGTH
         ST    R2,BLOCKP          SAVE FOR NEXT TIME
GETFILEP DS    0H
*
**       CHECK RECORD FORMAT
*
         CLC   2(2,R2),=H'0'      IF NOT A RECORD
         BNE   EOJ                   GET OUT...
         CLC   0(2,R2),=H'0'      IF NO LENGTH
         BE    EOJ                   GET OUT...
         CLC   0(2,R2),=H'32756'  IF TOO LONG
         BH    EOJ                   GET OUT...
*        CLC   0(2,R2),=H'4'      IF TOO SHORT
*        BL    EOJ                   GET OUT...
*
**       SETUP POINTERS FOR NEXT TIME
*
         LR    R14,R2             ELSE
         AH    R14,0(R2)            SETUP POINTERS
         ST    R14,BLOCKP             FOR NEXT TIME
         SH    R3,0(R2)             AND TAKEAWAY
         BM    EOJ                     (GET OUT IF SHORT BLOCK...)
         ST    R3,BLOCKL              LENGTH
*
**       MOVE RECORD TO RECORD AREA
*
         LH    R3,0(R2)           PUT LENGTH IN R3
         L     R4,=AL4(INREC)     ADDRESS INREC AREA
         LR    R5,R3              LENGTH IN R5 AS WELL
         MVCL  R4,R2              AND MOVE TO INREC AREA
         LM    R2,R5,GETFILEI
         L     R14,GETFILEH       RESTORE REG 14
         BR    R14                GO BACK
GETERRHR DS    F
DCBABEX  MVI   3(R1),X'04'
GETERR   MVI   GETFLAG,C'E'       SET GET ERROR FLAG
         BR    R14                GO BACK
GETERRA  DC    F'0'
PUTFILEH DS    F
PUTFILE  ST    R14,PUTFILEH       SAVE RETURN ADDR
         PUT   OUTPUT,INREC       WRITE DUMP RECORD
         L     R14,PUTFILEH       RESTORE REG 14
         BR    R14                GO BACK
PUTPRTHR DS    F
PUTPRT   ST    R14,PUTPRTHR       SAVE RETURN ADDR
         PUT   PRINTER,DETAIL     WRITE DUMP RECORD
         CLC   #MAXREQ,=F'0'      Q. ANY SELECTION PARAMETER
         BNE   CONT#200              N. BYPASS CLOSE
         PUT   INVENTRY,DETAIL    WRITE DUMP RECORD TO INVENTORY
CONT#200 DS    0H
         MVC   DETAIL+1(132),DETAIL CLEAR PRINT LINE
         LA    R5,1(R5)           INCR LINE COUNT
         C     R5,#MAXLINE        CHECK FOR PAGE OVERFLOW
         BL    PUTPRTBY           ...NO, BYPASS HEADER
         BAL   R14,PUTHDR         GO DO HEADER PRINT
PUTPRTBY L     R14,PUTPRTHR       RESTORE REG 14
         BR    R14                GO BACK
PUTHDRHR DS    F
PUTHDR   ST    R14,PUTHDRHR       SAVE RETURN ADDR
         PUT   PRINTER,HEADER
         PUT   PRINTER,HEADER2
         PUT   PRINTER,HEADER3
         PUT   PRINTER,DETAIL     FOR BLANK LINE AFTER HEADER LINES
         CLC   #MAXREQ,=F'0'      Q. ANY SELECTION PARAMETER
         BNE   CONT#300              N. BYPASS CLOSE
         PUT   INVENTRY,HEADER
         PUT   INVENTRY,HEADER2
         PUT   INVENTRY,HEADER3
         PUT   INVENTRY,DETAIL    FOR BLANK LINE AFTER HEADER LINES
CONT#300 DS    0H
         LH    R5,=H'4'           INCR LINE COUNT FOR HEADER LINES
         L     R14,PUTHDRHR       RESTORE REG 14
         BR    R14                GO BACK
                                                                SPACE 1
*---------------------------------------------------------------------*
******************************* D A T A *******************************
         LTORG
************************** C O N S T A N T S **************************
#MAXENT  DC    A(#MAXALLW)
#MAXREQ  DC    A(0)
#MAXLINE DC    A(#MAXLALL)
PICK     DC    X'00'
TIME     DS    F
         DC    X'0F'
DATE     DS    F
WORK     DS    CL9
ZEROS    DC    C'000000'
COMPDATE DC    C'0000000'
DUMPDATE DS    CL7                DATE OF DUMP PROCESSED
GETFLAG  DS    CL1
HEADER   DS    0CL133
         DC    C'1'
         DC    C'CICS DUMP REQUEST AS OF '
HEADDT   DC    CL5' '
         DC    C'  TIME '
HEADTM   DC    C'  :  :  :  '
         DC    CL5' '
         DC    C'DSN='
HEADDSN  DC    CL44' '
         DC    CL32' '
HEADER2  DS    0CL133
         DC    C' '
         DC    C'TASK CODE BEG TM  END TM BEG DTE END DTE '
         DC    C' NO.REQ NO.FND REMARKS'
         DC    CL75' '
HEADER3  DS    0CL133
         DC    C' '
         DC    C'---- ---- ------  ------ ------- ------- '
         DC    C' ------ ------ ------------------------------------'
         DC    CL40' '
DETAIL   DS    0CL133
PRTCHAR  DC    C' '
DETRAN   DC    CL4' '
         DC    CL1' '
DECODE   DC    CL4' '
         DC    CL1' '
DEBTIME  DC    CL6' '
         DC    CL1' '
DEETIME  DC    CL6' '
         DC    CL2' '
DEBDATE  DC    CL7' '
         DC    CL1' '
DEEDATE  DC    CL7' '
         DC    CL1' '
DENUM    DC    CL6' '
         DC    CL2' '
DESEL    DC    CL6' '
         DC    CL1' '
MESSAGE  DC    CL15' '
MESSCNT  DC    CL62' '
CARD     DCB   DSORG=PS,MACRF=GM,EODAD=EOJCARD,DDNAME=SYSIN
INPUT    DCB   DSORG=PS,MACRF=R,EODAD=EOJ,DDNAME=UT1,EXLST=LSTA,       X
               SYNAD=GETERR
OUTPUT   DCB   DSORG=PS,MACRF=PM,DDNAME=UT2
PRINTER  DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,RECFM=FBA,LRECL=133
INVENTRY DCB   DSORG=PS,MACRF=PM,DDNAME=UT3,RECFM=FB,LRECL=133,        X
               BLKSIZE=19019
LSTA     DS    0F
         DC    X'07'
         DC    AL3(INJFCB)
         DC    X'80'
INJFCB   DS    0F
         DS    CL176
         DS    0D
         IEFJFCBN LIST=NO
TARGET   DS    CL200
SPACES   DC    CL256' '
LINE#    DC    F'0'
BLOCKP   DC    AL4(BLOCK)
BLOCKL   DC    AL4(0)
INREC    DS    CL32760
BLOCK    DS    CL32760
TABLE    DC    32CL(#MAXALLW)' '
         COPY  DFHDCRDS
         DSECT
INTASK   DS    CL4
INABEND  DS    CL4
INBTIME  DS    CL6
INETIME  DS    CL6
INBDATE  DS    CL7
INEDATE  DS    CL7
INNUM    DS    PL4
INPROG   DS    CL8
         DSECT
REQTASK  DS    CL4
REQABEND DS    CL4
REQBTIME DS    CL6
REQETIME DS    CL6
REQBDATE DS    CL7
REQEDATE DS    CL7
REQNUM   DS    PL4
REQSEL   DS    PL4
REQPROG  DS    CL8
#REQLEN  EQU   *-REQTASK
         END
