*ASM XOPTS(SP)
*
*   Program:  CGUDSAMX
*   Function: PLTPI program to increase CICS DSA to 8M.
*             If there is insufficient storage, it will decrease each
*             attempt by 256KB untill successful. If fails to allocate
*             above 7M then it will exit as the SIT override should
*             already be set to 7M.
*             The program will prematurely terminate if 8M is already
*             allocated.
*
*             Message is put to TD queue 'CSML'. No date time stamp
*             is generated as program is launched during PLTPI
*             processing and we should know when that is.
*
*   Author:   A. Kara.
*   Date:     08/05/2000
*
*=====================================================================*
DFHEISTG DSECT                     Dynamic storage
DWORK8   DS    D                   Double word work area
         ORG   DWORK8
CURDSA   DS    F                   Current DSA size
         ORG   CURDSA
NEWDSA   DS    F                   New DSA size
         ORG
MESS1    DC    CL80' '             Generic mesage buffer

*---------------------------------------------------------------------*
* Interface with CICS                                                 *
*---------------------------------------------------------------------*
CGUDSAMX DFHEIENT

         MVI   MESS1,C' '          Ripple clear message area
         MVC   MESS1+1(L'MESS1-1),MESS1
         MVC   MESS1(11),=C'CGUDSAMX - '
         MVC   MESS1+11(17),=C'Already over 8M.' Prime message

         EXEC  CICS INQUIRE SYSTEM DSALIMIT(CURDSA)

         CLC   CURDSA,DSAMX        Q. At or above Max
         BNL   RETURN                 Y. Go to return spot

*---------------------------------------------------------------------*
* Up it to 8M                                                         *
*---------------------------------------------------------------------*
         MVC   CURDSA,DSAMX        Move in desired value
TRYUPIT  DS    0H
         EXEC  CICS SET SYSTEM DSALIMIT(NEWDSA)                        +
               NOHANDLE
*---------------------------------------------------------------------*
* Test if new DSA size successfully set.                              *
*---------------------------------------------------------------------*
         CLC   EIBRESP,DFHRESP(NORMAL) Q. Sucessful SET command
         BE    TELLNEWV                   Y. Tell of new limit
DROP1KB  DS    0H
         L     R1,NEWDSA           Load new value
         S     R1,KB256            Drop by 256KB
         ST    R1,NEWDSA           Save New value
         CLC   NEWDSA,DSA7M        Q. Below 7M
         BNL   TRYUPIT                N. Try smaller value
         MVC   MESS1+11(33),=C'Exiting, cannot even allocate 7M.'
         B     RETURN              Go to return spot
TELLNEWV DS    0H
         L     R1,NEWDSA           Load new value
         CVD   R1,DWORK8           Convert to decimal
         OI    DWORK8+7,X'0F'      Prepare for unpack
         UNPK  MESS1+11(8),DWORK8(8) Unpack to message area
         MVC   MESS1+19(15),=C' new DSA limit.'
RETURN   DS    0H
         EXEC  CICS WRITEQ TD QUEUE('CSML') FROM(MESS1) LENGTH(=H'80')
         EXEC  CICS RETURN
*---------------------------------------------------------------------*
* Constant storage                                                    *
*---------------------------------------------------------------------*
DSAMX    DC    F'10485760'         10240KB (10M)
DSA7M    DC    F'07340032'          7168KB ( 7M)
KB256    DC    F'262144'             256KB
         YREGS
         END
