*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
**
**       TITLE:    'DISPLAY ALL "CONFLICT"ING ENQS ON THE SYSTEM'
**       SYSTEM:   N/A
**       MODULE:   CONFLICT
**       PROGRAM:  CONFLICT
**       FUNCTION: PROVIDES INFO ON ALL ENQ'S ON THE SYSTEM FOR ALL
**                 RESOURCES (NOT JUST DATASETS).
**
**                 THIS PROGRAM MAY BE RUN UNDER THE FOLLOWING
**                 ENVIRONMENTS:
**                 1. TSO - EITHER DIRECT "CONFLICT PARAMETER" OR
**                    "CALL 'LOADLIBRARY(CONFLICT)' 'PARAMETER'"
**                    PERMISSABLE PARAMETER UNDER TSO IS "ISPF".
**                    IF THE PARAMETER IS NOT PASSED, THE DISPLAY WILL
**                    BE THROUGH LINE BY LINE TPUTS. WITH THE PARA-
**                    METER, UNDER AN ISPF ENVIRONMENT WITH PANEL
**                    "CONFLICT" IN THE 'ISPPLIB' CONCATENATION, THE
**                    DATA WILL BE PRESENTED IN EITHER A TABLE OR A
**                    PANEL DISPLAY IF NO ENQ'S FOUND.
**                 2. BATCH - EITHER AS A JOB OR AS A STARTED TASK:
**                    JCL REQUIRED IS,
**                    //STEP1    EXEC  PGM=CONFLICT,PARM='SDSF'
**                    //STEPLIB  DD DISP=SHR,DSN=LOADLIB.DSN
**
**       NOTES:    PROGRAM IS RE-ENTRANT.
**       AUTHOR:   A. KARA.
*
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
*        PRINT OFF
*        COPY  @MACROS                 COMMON MACROS
*        PRINT ON
CONFLICT KICKOFF (R11,R12),WORKAREA,WORKLEN,LIST=NO
*---------------------------------------------------------------------*
START    DS    0H
         LR    R7,R1                   CPPL ADDR
         ST    R1,R1SAVER              STORE REGISTER 1 LATER USE
         USING CPPL,R7                 ADDRESABILITY TO CPPL
         USING GETMAINA,R10            ESTABLISH ADDRESABILITY
         BAL   R14,GETMAIN1            GO AND GET WORK AREA
RETGETM  DS    0H
         MVC   GQSCAN1(GQSCANL),GQSCANF MOVE LIST AREA TO GETMAIN
         MVI   ENVMNT,C'N'             SIGNAL NON-ISPF ENVIRONMENT
************************************************************
*                                                          *
*        SET UP IOPL FOR PUTLINE                           *
*                                                          *
************************************************************
         LA    R15,MYIOPL              LOAD ADDRESS TO IOPL
         USING IOPL,R15                ESTABLISH ADDRESABILITY
         MVC   IOPLUPT(4),CPPLUPT      MOVE ADDRESS OF UPT TO IOPL
         MVC   IOPLECT(4),CPPLECT      MOVE ADDRESS OF ECT TO IOPL
         LA    R0,MYECB                LOAD ADDRESS OF MY ECB
         ST    R0,IOPLECB              STORE ADDRESS IN IOPL
         XC    MYECB,MYECB             CLEAR ECB ADDRESS
         LA    R0,MYPTPB               LOAD @ OF PUTLINE PARM BLOCK
         ST    R0,IOPLIOPB             STORE IT IN IOPL
         DROP  R15                     LELINQUISH ADDRESABILITY
         TM    444(R15),X'80'          Q. IS PUTLINE LOADED? (MVS)
         BNO   PUTLOAD                    N. BRANCH TO LOAD
         L     R15,444(,R15)           USE CVTPUTL
         B     PUTLOADX                BRANCH AROUND LOAD
PUTLOAD  DS    0H
         LA    R0,=CL8'IKJPUTL '       LOAD PROGRAM NAME
         LOAD  EPLOC=(0)               LOAD PROGRAM
         LR    R15,R0                  GET ENTRY ADDRESS
         LA    R15,0(,R15)             CLEAR HI BYTE FOR DELETE ROUTINE
PUTLOADX DS    0H
         ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS
*---------------------------------------------------------------------*
         MVC   MESSAGEH(79),=C'----------------------------- ENQUEUE ACT
               TIVITY --------------------------------'
         MVI   MESSAGET,C'-'           CLEAR MESSAGE TAIL
         MVC   MESSAGET+1(78),MESSAGET     AREA
         MVC   TIME(8),=C'..:..:..'    TIME TEMPLATE
         BAL   R14,TIMERTN             FORMAT TIME INTO VAR TIME
         MVC   MESSAGEH(8),TIME        MOVE TIME TO HEADER
         MVI   MESSAGEH+8,C' '         MOVE SEPERATOR
         LA    R1,TPUTRTN              LINE MESSAGE ADDRESS
         ST    R1,RTNADRS1             STORE ROUTINE ADDRESS
         ST    R1,RTNADRS2             STORE ROUTINE ADDRESS
         L     R6,CPPLCBUF             GET COMMAND BUFFER ADDR
*---------------------------------------------------------------------*
*  BEFORE PROCESSING COMMAND BUFFER TEST IF CONVENTINOAL PARAMETER    *
*  PASSED THROUG A JOB OR STC... (DIFFERENT FORMAT TO PARMS PASSED    *
*  THROUGH THE COMMAND PROCESSOR.)                                    *
*---------------------------------------------------------------------*
         L     R7,0(R7)                LOAD ADDRESS OR PARAMETER
         LH    R9,0(R7)                LOAD LENGTH OF PARAMETER
         LTR   R9,R9                   Q. IS PARAMETER LENGTH ZERO
         BZ    NOPARAM                    Y. GO PROCESS 'SYSIN'
         LA    R8,2(R7)                POINT PAST PARAMETER LENGTH
         MVC   DWORK8(4),0(R8)         MOVE PARAMETER PASSED
         OC    DWORK8(4),SPACES        CONVERT TO UPPER CASE
TSTSDSF1 DS    0H
         CLC   DWORK8(4),=C'SDSF'      Q. IN AN SDSF ENVIRONMENT
         BE    PROCSDSF                   Y. PROCESS SDSF ENVIRONMENT
TSTISPF1 DS    0H
         CLC   DWORK8(4),=C'ISPF'      Q. IN AN ISPF ENVIRONMENT
         BE    PROCISPF                   Y. PROCESS ISPF ENVIRONMENT
NOPARAM  DS    0H
         LH    R9,0(R6)                TOTAL COMMAND LENGTH
         S     R9,=F'2'                SUBTRACT LENGTH OF ITSELF
         LH    R3,2(R6)                OPERAND DISPLACEMENT
         SR    R9,R3                   SUBTRACT LENGTH OF COMMAND PART
         BZ    CONT#10                 IF ZERO NO PARAMETER PASSED
         LA    R8,4(R6)                ADDR OF START OF COMMAND
         AR    R8,R3                   ADD DISPLACEMENT TO OPERAND
         MVC   DWORK8(4),0(R8)         MOVE PARAMETER PASSED
         OC    DWORK8(4),SPACES        CONVERT TO UPPER CASE
TSTISPF2 DS    0H
         CLC   DWORK8(4),=C'ISPF'      Q. IN AN ISPF ENVIRONMENT
         BNE   TSTSDSF2                   N. NEXT TEST
PROCISPF DS    0H
         MVI   ENVMNT,C'I'             SIGNAL ISPF ENVIRONMENT
         LA    R1,TBADDRTN             LINE MESSAGE ADDRESS
         ST    R1,RTNADRS1             STORE ROUTINE ADDRESS
         LA    R1,TBDISRTN             LINE MESSAGE ADDRESS
         ST    R1,RTNADRS2             STORE ROUTINE ADDRESS
         BAL   R14,DEFISPF             GO AND DEFINE ISPF AND TABLE
         CLI   ENVMNT,C'I'             Q. HAS ENVIRONMENT CHANGED
         BNE   CONT#10                    Y. PROCESS NON-ISPF ACTION
         B     CONT#111                CONTINUE PROCESSING
TSTSDSF2 DS    0H
         CLC   DWORK8(4),=C'SDSF'      Q. TO SYSTEM LOG
         BNE   CONT#00                    N. NEXT TEST
PROCSDSF DS    0H
         MVI   ENVMNT,C'S'             SIGNAL SDSF ENVIRONMENT
         LA    R1,WTORTN               LINE MESSAGE ADDRESS
         ST    R1,RTNADRS1             STORE ROUTINE ADDRESS
         ST    R1,RTNADRS2             STORE ROUTINE ADDRESS
         MVC   WTODET1(WTODETL),WTODETF MOVE WTO DATA TO GETMAINED
         MVC   MESSAGEH+69(10),SPACES  CLEAR LAST BIT OF MESSAGE LINE
         MVI   MESSAGEH,C'-'           REPLACE '-' OVER DATE AS SDSF
         MVC   MESSAGEH+1(8),MESSAGEH      ALREDY HAS TIME STAMP
         MVC   MESSAGET+69(10),SPACES  CLEAR LAST BIT OF MESSAGE LINE
         MVC   MESSAGEG,SPACES         CLEAR MESSAGE AREA
         L     R15,RTNADRS1            LAOD LINE ROUTINE ADDRESS
         BALR  R14,R15                 PUT OUT LINE MESSAGE
         B     CONT#11                 CONTINUE PROCESSING
CONT#00  DS    0H
         CLC   0(4,R8),SPACES          Q. SPACES PASSED
         BE    CONT#10                    Y. CONTINUE PROCESSING
         LA    R1,TPUTRTN              LINE MESSAGE ADDRESS
         ST    R1,RTNADRS1             STORE ROUTINE ADDRESS
         ST    R1,RTNADRS2             STORE ROUTINE ADDRESS
CONT#10  DS    0H
         L     R1,R1SAVER              RESTORE REGISTER 1 LATER USE
         CALL  CLEARSCR                CALL CLEAR SCREEN PROGRAM
CONT#11  DS    0H
         MVC   MESSAGEG(L'MESSAGEG),MESSAGEH MOVE HEADLINE
         L     R15,RTNADRS1            LAOD LINE ROUTINE ADDRESS
         BALR  R14,R15                 PUT OUT LINE MESSAGE
CONT#111 DS    0H
         XC    TOKEN@,TOKEN@           INITIALISE TOKEN ADDRESS
         MVI   ENQFND,C'N'             INITIALISE ENQ FOUND FIELD
ISSUE0   DS    0H
         BAL   R14,ISSUE1              GO ISSUE 'GQSCAN' MACRO
         XR    R15,R15                 INITIALISE R15
         ICM   R15,B'1111',R15SAVER    Q. ALL RIB'S RETURNED
         BNZ   ISSUE0                     N. GOGET NEXT
         CLI   ENQFND,C'Y'             Q. ENQ FOUND FLAG SET
         BE    FOUNDEQ                    Y. BYPASS NO ENQ MESSAGE
         MVC   MESSAGEG,SPACES         CLEAR MESSAGE AREA
         MVC   MESSAGEG(15),=C'No ENQ''s found.'
         L     R15,RTNADRS1            LOAD FINAL MESSAGE ROUTINE
         BALR  R14,R15                 GO PERFORM FINAL ROUTINE
         CLI   ENVMNT,C'I'             Q. ISPF ENVIRONMENT
         BE    LASTDISP                   Y. NO EXIT PROGRAM
         MVC   MESSAGEG(L'MESSAGEG),MESSAGET MOVE TAIL
         L     R15,RTNADRS1            LOAD FINAL MESSAGE ROUTINE
         BALR  R14,R15                 GO PERFORM FINAL ROUTINE
         B     EXITPRG0                EXIT PROGRAM
FOUNDEQ DS    0H
         CLI   ENVMNT,C'I'             Q. ISPF ENVIRONMENT
         BNE   EXITPRG0                   Y. NO EXIT PROGRAM
LASTDISP DS    0H
         L     R15,RTNADRS2            LOAD FINAL MESSAGE ROUTINE
         BALR  R14,R15                 GO PERFORM FINAL ROUTINE
         LTR   R15,R15                 Q. ZERO RETURN CODE
         BZ    CONT#111                   Y. REDISPLAY
EXITPRG0 DS    0H
         XR    R15,R15                 SET ZERO RETURN CODE
*---------------------------------------------------------------------*
EXITPROG DS    0H
         LR    R5,R15                  SAVE PRE-SET RETURN CODE
         L     R1,MYARPTR1             SET FREEMAIN ADDRESS
         FREEMAIN RC,LV=GETMAINL,A=(1) FREE THE WORK AREA
         LR    R15,R5                  RESTORE EXIT CODE
GETOUT   DS    0H
         RACKOFF RC=(R15)
*=====================================================================*
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
*   GET DATA WORK AREA                                                *
*---------------------------------------------------------------------*
GETMAIN1 DS    0H
         GETMAIN RC,LV=GETMAINL        ACQUIRE A WORK AREA
         LTR   R15,R15                 Q. ZERO RETURN CODE FROM GETMAIN
         BNZ   GETOUT                     Y. CONTINUE PROCESSING
         LR    R10,R1                  USE R10 AS GETMAIN POINTER
         ST    R10,MYARPTR1            STORE GETMAIN ADDRESS
         B     RETGETM                 RETURN TO CALLER
*---------------------------------------------------------------------*
GETMLENG DC    A(GETMAINL)             GET MAIN LENGTH
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
*   ISSUE THE QSCAN MACRO AND PARSE THE DATA RETURNED, FORMAT IT AND  *
*   DISPLAY IT.                                                       *
*   PARSE THE RETURNED RESOURCE AND IF THE LENGTH IS GREATER THAN     *
*   63 CHARACTERS, REPLACE THE LAST BYTE BY '>' TO UNDICATE TRUNCATION*
*   HAS OCCURED.                                                      *
*---------------------------------------------------------------------*
ISSUE1   DS    0H
         STM   R14,R12,SAVSUBR1        SAVE REGISTERS
         L     R2,GETMLENG             SET R2 FOR LENGTH OF AREA
         LA    R9,TOKEN@               LOAD TOKEN'S ADDRESS
         LA    R5,GQSCAN1              LOAD ADDRESS OF GQSCAN AREA
         GQSCAN AREA=((R10),(R2)),TOKEN=(R9),                          X
               MF=(E,(R5))            ISSUE GQSCAN
*
*             SCOPE=ALL,                                              X
*             SCOPE=GLOBAL,                                           X
*
         ST    R0,R0SAVER              SAVE REG 0
         ST    R1,R1SAVER              SAVE REG 1
         ST    R15,R15SAVER            SAVE REG 15
         L     R9,#OFRIBS              LOAD NUMBER OF RIBS RETURNED
         L     R6,MYARPTR1             START ADDRESS OF DATA RETURNED
RIBLOOP  DS    0H
         USING RIB,R6                  ESTABLISH ADDRESABILITY TO RIB
         MVC   RESOURCL(1),RIBRNMLN    MOVE RNAME LENGTH
*---------------------------------------------------------------------*
         MVC   RESOURCE,SPACES         CLEAR RESOURCE
         XR    R1,R1                   INITIALISE REGISTER
         IC    R1,RESOURCL             LOAD LENGTH OF NAME
         CH    R1,=H'63'               Q. LENGTH > DISPLAY LIMIT
         BNH   DSNLENOK                   N. BYPASS
         LA    R1,62                   MOVE SHORTENED LENGTH
         MVI   RESOURCE+62,C'>'        MOVE MORE CHAR INDICATOR
DSNLENOK DS    0H
*---------------------------------------------------------------------*
         BCTR  R1,0                    RELATIVE LENGTH
         LR    R2,R6                   POINT TO RIB START
         AH    R2,#RIBFLEN             ADD LENGTH OF RIB => VAR PART
         EX    R1,MOVEDSN2             MOVE DATASET NAME
         MVC   QNAME,RIBQNAME          MOVE QNAME
         L     R1,RIBTRIBE             LOAD TOTAL # OF RIBES
         S     R1,RIBNRIBE             SUBTRACT RIBES RETURNED
         STH   R1,#RIBNR               STORE #LEFT DUE TO LACK OF AREA
         ICM   R1,B'1111',RIBNTWE      Q. ANY EXCL ENQ'S POSTED
         BNZ   HAVEENQ                    Y. PROCESS ENQ
         ICM   R1,B'1111',RIBNTWS      Q. ANY SHR ENQ'S POSTED
         BNZ   HAVEENQ                    Y. PROCESS ENQ
         B     NOENQS                  BYPASS ENQ PROCESSING
HAVEENQ  DS    0H
         MVI   ENQFND,C'Y'             SET ENQ FOUND FLAG
         MVC   MESSAGEG,SPACES         CLEAR MESSAGE
         MVC   MESSAGEG(15),=C'Resource name :'
         MVC   MESSAGEG+16(63),RESOURCE MOVE MESSAGE TO OUTPUT AREA
         L     R15,RTNADRS1            LAOD LINE ROUTINE ADDRESS
         BALR  R14,R15                 PUT OUT LINE MESSAGE
         MVC   MESSAGEG,SPACES         CLEAR MESSAGE
         MVC   MESSAGEG(15),=C'Queue name    :'
         MVC   MESSAGEG+16(8),QNAME    MOVE QUEUE NAME
         L     R15,RTNADRS1            LAOD LINE ROUTINE ADDRESS
         BALR  R14,R15                 PUT OUT LINE MESSAGE
         MVC   MESSAGEG,SPACES         CLEAR MESSAGE
         L     R15,RTNADRS1            LAOD LINE ROUTINE ADDRESS
         BALR  R14,R15                 PUT OUT LINE MESSAGE
         L     R8,RIBNRIBE             LOAD # OF RIBES TO PROCESS
         LH    R1,RIBVLEN              LOAD LENGTH OF VARIABLE PART
         AH    R6,#RIBFLEN             POINT PAST FIXED PART OF RIBE
         AR    R6,R1                   POINT PAST VARIABLE PART
         DROP  R6                      DROP ADDRESABILITY TO RIB
RIBELOOP DS    0H
         USING RIBE,R6                 ADDRESABILITY TO RIBE
         MVC   MESSAGEG,SPACES         CLEAR OUTPUT AREA
         LA    R2,MESSAGEG             OUTPUT AREA
         MVC   0(8,R2),RIBEJBNM        MOVE JOB NAME
*        LH    R1,RIBEASID             LOAD ASID
*        CVD   R1,DWORK8               CONVERT TO DECIMAL
*        MVC   08(4,R2),PATTERN        MOVE EDIT PATTERN TO OUTPUT AREA
*        ED    08(4,R2),DWORK8+6       EDIT OVER PATTERN
         HEXCHMAC RIBEASID,9(R2),2,MF=E CONVERT TO HEX
         MVC   14(8,R2),RIBESYSN       MOVE SYSTEM NAME
         MVC   24(3,R2),=C'SHR'        MOVE SHARE DISPOSITION
         TM    RIBERFLG,X'80'          Q. IS RIBE TYPE SHARE
         BO    CONT#20                    Y. BYPASS
         MVC   24(4,R2),=C'EXCL'       MOVE EXCLUSIVE DISPOSITION
CONT#20  DS    0H
         MVC   29(5,R2),=C'OWNER'      MOVE SHARE DISPOSITION
         TM    RIBESFLG,X'80'          Q. IS RIBE TYPE OWNER
         BO    CONT#30                    Y. BYPASS
         MVC   29(7,R2),=C'WAITING'    MOVE WAITING
         MVC   37(4,R2),=C'<==='       MOVE ARROW
CONT#30  DS    0H
         L     R15,RTNADRS1            LAOD LINE ROUTINE ADDRESS
         BALR  R14,R15                 PUT OUT LINE MESSAGE
         AH    R6,#RIBELEN             POINT PAST THAT RIBE
         BCT   R8,RIBELOOP             LOOP TILL END OF RIBES
         MVC   MESSAGEG(L'MESSAGEG),MESSAGET MOVE TAIL
         L     R15,RTNADRS1            LAOD LINE ROUTINE ADDRESS
         BALR  R14,R15                 PUT OUT LINE MESSAGE
         B     NEXTRIB                 GO GET NEXT RIB
NOENQS   DS    0H
         DROP  R6                      DROP ADDRESABILITY TO RIBE
         USING RIB,R6                  ADDRESABILITY TO RIB
         L     R8,RIBNRIBE             LOAD # OF RIBES TO PROCESS
         MH    R8,#RIBELEN             LOAD RIBE'S LENGTH
         LH    R1,RIBVLEN              LOAD LENGTH OF VARIABLE PART
         AH    R6,#RIBFLEN             POINT PAST FIXED PART OF RIBE
         AR    R6,R1                   POINT PAST VARIABLE PART
         AR    R6,R8                   POINT PAST ALL THE RIBES
NEXTRIB  DS    0H
         BCT   R9,RIBLOOP              LOOP TILL END OF RIB
RETMAIN1 DS    0H
         LM    R14,R12,SAVSUBR1        RESTORE REGISTERS
         BR    R14                     RETURN TO CALLER
*---------------------------------------------------------------------*
         USING RIBVAR,R2               ADDRESABILITY TO VAR PART OF RIB
MOVEDSN2 MVC   RESOURCE(0),RIBRNAME    MOVE RESOURCE
         DROP  R2                      DROP ADDRESABILITY
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
*  DEFINE ISPF ENVIRONMENT AND CREATE A TABLE                         *
*  TRY TO DUMMY DISPLAY THE PANEL, AND IF RETURN CODE IS NOT 0, IE.   *
*  PANEL NOT FOUND, CONVERT TO NON-ISPF ENVIRONMENT.                  *
*  AS TABLE IS CREATED AS NOWRITE, THE SHARE OPTION IS REDUNDANT AND  *
*  TABLE CANNOT BE SHARED. IF AN ATTEMPT IS MADE TO DOUBLE CREATE     *
*  THE TABLE (EG. SPLIT SVREEN MODE - OTHER SESSION) THE SECOND       *
*  SESSION WILL BE CONVERTED TO NON-ISPF MODE.                        *
*---------------------------------------------------------------------*
DEFISPF  DS    0H
         STM   R14,R12,SAVSUBR1        SAVE REGISTERS
         ISPEXEC INIT=Y,MF=E           INITIALISE PROGRAM'S ISPF ENV
         ISPEXEC 'CONTROL ERRORS RETURN'
         ISPEXEC 'CONTROL NONDISPL ENTER'
         ISPEXEC 'DISPLAY PANEL(CONFLICT)'
         LTR   R15,R15                 Q. COULD DISPLAY THE PANEL
         BZ    PANELFND                   Y. CAN DISPLAY PANEL
TRNISPOF DS    0H
         MVI   ENVMNT,C'N'             SET NON-ISPF ENVIRONMENT
         LA    R1,TPUTRTN              NEW LINE MESSAGE ADDRESS
         ST    R1,RTNADRS1             STORE NEW ROUTINE ADDRESS
         ST    R1,RTNADRS2             STORE NEW ROUTINE ADDRESS
         B     RETMAIN2                EXIT ROUTINE
PANELFND DS    0H
         ISPVDEFX INM=(TIME),ANM=TIME,FORMAT=CHAR,LEN=8,MF=E
         ISPVDEFX INM=(GC009),ANM=GC009,FORMAT=CHAR,LEN=79,MF=E
         ISPVDEFX INM=(MESSAGEG),ANM=MESSAGEG,FORMAT=CHAR,LEN=79,MF=E
         ISPEXEC 'TBCREATE CONFLICT NAMES(MESSAGEG) NOWRITE SHARE'
         LTR   R15,R15                 Q. COULD CREATE A TABLE
         BNZ   TRNISPOF                   N. GO AND TURN ISPF OFF
RETMAIN2 DS    0H
         LM    R14,R12,SAVSUBR1        RESTORE REGISTERS
         BR    R14                     RETURN TO CALLER
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
*  DISPLAY FOR NON-ISPF SUBROUTINES 1 AND 2.                          *
*---------------------------------------------------------------------*
TPUTRTN  DS    0H
         ST    R14,R14SAVER            SAVE RETURN REGISTERS
         XC    MYSEG1(4),MYSEG1        INITIALISE LENGTH
         MVC   MYPTPB(12),MODLPTPB     MOVE IN MODEL FROM CONSTANT
         LA    R14,79                  LENGTH OF MESSAGE
         LA    R14,4(,R14)             ADD 4
         STH   R14,MYSEG1              STORE LENGTH
         L     R15,MYPUTLEP
         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),MF=(E,MYIOPL),       +
               ENTRY=(15)
         LA    R15,4                   SET NON ZERO RETURN CODE
         L     R14,R14SAVER            RESTORE RETURN REGISTERS
         BR    R14                     RETURN TO CALLER
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
*  DISPLAY FOR ISPF SUBROUTINES 1.                                    *
*---------------------------------------------------------------------*
TBADDRTN DS    0H
         ST    R14,R14SAVER            SAVE RETURN REGISTERS
         ISPEXEC 'TBADD CONFLICT'
         L     R14,R14SAVER            RESTORE RETURN REGISTERS
         BR    R14                     RETURN TO CALLER
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
*  DISPLAY FOR ISPF SUBROUTINES 1.                                    *
*  DISPLAYS THE TABLE CREATED. IF <ENTER> IS HIT, REDISPLAY THE       *
*  UPDATED DETAILS (NEW DETAILS IF COMMAND LINE IS NOT BLANK - TREATED*
*  AS NEW DATASET NAME). EXIT IF 'END' PF KEY IS USED.                *
*---------------------------------------------------------------------*
TBDISRTN DS    0H
         ST    R14,R14SAVER            SAVE RETURN REGISTERS
         CLI   ENQFND,C'Y'             Q. ENQ FOUND FLAG SET
         BE    DISPTAB                    Y. DISPLAY TABLE
         ISPEXEC 'DISPLAY PANEL(CONFLICT)'
         LTR   R15,R15                 Q. ZERO RETURN CODE
         BNZ   ENDTABLE                   N. EXIT W/O RETURN FOR REDISP
         B     DISPRET                 RETURN FOR REDISPLAY
DISPTAB  DS    0H
         ISPEXEC 'TBTOP CONFLICT'
         ISPEXEC 'TBDISPL CONFLICT PANEL(CONFLICT)'
         LTR   R15,R15                 Q. ZERO RETURN CODE
         BNZ   ENDTABLE                   N. EXIT W/O RETURN FOR REDISP
DISPRET  DS    0H
         ISPEXEC 'TBEND CONFLICT'      END THE TABLE
         ISPEXEC 'TBCREATE CONFLICT NAMES(MESSAGEG) NOWRITE SHARE'
         MVC   GC009,SPACES            CLEAR GENERAL COMMENT
         MVC   GC009(23),=C'** Refreshed details **'
         ISPEXEC 'SETMSG MSG(GC009)'   SET MESSAGE FOR NEXT DISPLAY
         BAL   R14,TIMERTN             FORMAT TIME INTO VAR TIME
         XR    R15,R15                 SET ZERO RETURN CODE
         B     DISPEXIT                EXIT WITH ZERO RETURN CODE
ENDTABLE DS    0H
         ISPEXEC 'TBEND CONFLICT'      END THE TABLE
         LA    R15,4                   SET NON ZERO RETURN CODE
DISPEXIT DS    0H
         L     R14,R14SAVER            RESTORE RETURN REGISTERS
         BR    R14                     RETURN TO CALLER
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
*  DISPLAY FOR SDSF SUBROUTINES 1 AND 2.                              *
*---------------------------------------------------------------------*
WTORTN   DS    0H
         ST    R14,R14SAVER            SAVE RETURN REGISTERS
         LA    R5,WTODET1              LOAD ADDRESS OF WTO AREA
         MVC   WTODET1+4(73),MESSAGEG  MOVE MESSAGE DETAILS
         WTO   MF=(E,(R5))             ISSUE MSG
         L     R14,R14SAVER            RESTORE RETURN REGISTERS
         LA    R15,4                   SET NON ZERO RETURN CODE
         BR    R14                     RETURN TO CALLER
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
*       GET AND CONVERT TIME DO DISPLAYABLE FORMAT                    *
*---------------------------------------------------------------------*
TIMERTN  DS    0H
         STM   R14,R12,SAVSUBR2        SAVE REGISTERS
         TIME  DEC                     GET TIME  => IN R0
         ST    R0,DWORK8               SAVE TIME IN FULLWORD
         HEXCHMAC DWORK8,GC009,3,MF=E  CONVERT HEX TO CHAR
         MVC   TIME(2),GC009           INSERT HH
         MVC   TIME+3(2),GC009+2       INSERT MM
         MVC   TIME+6(2),GC009+4       INSERT SS
         LM    R14,R12,SAVSUBR2        RESTORE REGISTERS
         BR    R14                     RETURN TO CALLER
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
*=====================================================================*
*---------------------------------------------------------------------*
         LTORG
*---------------------------------------------------------------------*
SPACES   DC    CL256' '
PATTERN  DC    X'40202120'
WTODETF  DS    0F
         WTO   '                                                       *
                                 ',                                    *
               ROUTCDE=(2,12),DESC=(7),                                *
               MF=L
WTODETL  EQU   *-WTODETF
GQSCANF  GQSCAN SCOPE=ALL,SYSNAME=0,MF=L
GQSCANL  EQU   *-GQSCANF
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
*---------------------------------------------------------------------*
WORKAREA DSECT
$REGSAVE DS    18F                  LINKAGE STD REG SAVE AREA
SAVSUBR1 DS    15F                  SUBROUTINE REGISTER SAVE AREA
SAVSUBR2 DS    15F                  SUBROUTINE REGISTER SAVE AREA
RTNADRS1 DS    A                    ADDRESS ENQ MSG ISSUE ROUTINE
RTNADRS2 DS    A                    ADDRESS FINAL MSG ISSUE ROUTINE
*---------------------------------------------------------------------*
MYPUTLEP DS    F                    USED BY PUTLINE ROUTINE
MYECB    DS    F                    USED BY PUTLINE ROUTINE
MYIOPL   DS    4F                   USED BY PUTLINE ROUTINE
MYPTPB   DS    3F                   USED BY PUTLINE ROUTINE
MYSEG1   DS    2H                   USED BY PUTLINE ROUTINE
MESSAGEG DS    CL79                 GENERAL MESSAGE LINE
*---------------------------------------------------------------------*
         DS    0D
DWORK8   DS    PL8
MYARPTR1 DS    F
QNAME    DS    CL8                  MAJOR RESOURCE NAME
RESOURCL DS    H
RESOURCE DS    CL63
MESSAGEH DS    CL79                 GENERAL HEAD LINE
MESSAGET DS    CL79                 GENERAL TAIL LINE
GC009    DS    CL79                 GENERAL COMMENT
TIME     DC    CL8'..:..:..'        GENERAL COMMENT
R0SAVER  DS    0F
#RIBFLEN DS    H
#RIBELEN DS    H
R1SAVER  DS    0F
#OFRIBS  DS    F
#RIBNR   DS    H
R14SAVER DS    F
R15SAVER DS    F
ENQFND   DS    CL1
ENVMNT   DS    CL1
TOKEN@   DS    F
WTODET1  DS    0F
         WTO   '                                                       *
                                 ',                                    *
               ROUTCDE=(2,12),DESC=(7),                                *
               MF=L
GQSCAN1  GQSCAN SCOPE=ALL,SYSNAME=0,MF=L
ISPINIT1 ISPEXEC  INIT=Y,MF=L
ISPVDEF1 ISPVDEFX MF=L
HEXCHMC1 HEXCHMAC MF=L
WORKLEN  EQU   *-WORKAREA
*---------------------------------------------------------------------*
GETMAINA DSECT
DATAGOT  DS    CL30000
         DS    CL30000
         DS    CL30000
GETMAINL EQU   *-GETMAINA
*---------------------------------------------------------------------*
RIB      DSECT
         ISGRIB
         IKJCPPL COMMAND           PROCESSOR PARAMETER LIST
         IKJIOPL                   I/O SERVICE ROUTINE PARAMETER LIST
*---------------------------------------------------------------------*
         END
