***********************************************************************
**                                                                   **
**    PROGRAM: CSGCSDDC                                              **
**    AUTHOR:  DAVID HALLIWELL                                       **
**    PURPOSE: BATCH PROGRAM WHICH READS A CICS VSAM CSD FILE        **
**             AND LISTS ALL CHANGES MADE BETWEEN TWO SUPPLIED       **
**             DATES AND TIMES.                                      **
**             WORKS WITH V3, V4 AND TS 1.3 (MAY WORK WITH EARLIER   **
**             VERSIONS BUT HAS NOT BEEN TESTED).                    **
**             Works with zOS/CICS V2.2                  - A. Kara   **
**                                                                   **
**    JCL:                                                           **
**                                                                   **
**    //STEP010  EXEC PGM=CSGCSDDC,                                  **
**    //        PARM='01/01/1998-HH:MM:SS TO 31/01/1998-HH:MM:SS'    **
**    //STEPLIB  DD DISP=SHR,DSN=CICS.V41UTIL.LOADLIB                **
**    //SYSPRINT DD SYSOUT=*                                         **
**    //SYSUDUMP DD SYSOUT=*                                         **
**    //SYSOUT   DD SYSOUT=*                                         **
**    //REPORT   DD SYSOUT=*                                         **
**    //DFHCSD   DD DISP=SHR,DSN=CICS.xxxxxx.DFHCSD                  **
**                                                                   **
**                                                                   **
***********************************************************************
*                                                                     *
         YREGS
*
OBJTBL   DSECT
OBJNAME  DS    CL8
OBJFLAG  DS    CL1
OBJENTLN EQU   *-OBJTBL            LENGTH OF EACH ENTRY
OBJNUMNT EQU   100000              NUMBER OF ENTRIES
OBJTBLLN EQU   OBJENTLN*OBJNUMNT   LENGTH OF TABLE
*
         USING OBJTBL,R9
*
CSGCSDDC AMODE 31
CSGCSDDC RMODE 24
CSGCSDDC CSECT
         STM   R14,R12,12(R13)
         LR    R10,R15
         USING CSGCSDDC,R10
         LR    R15,R13             SAVE THEIR SAVE PTR
         LA    R13,SAVE            GET @ MY SAVEAREA
         ST    R15,4(R13)          SAVE CALLERS SAVE PTR
         ST    R13,8(R15)          SAVE MINE IN THEIRS
*
*
*        OPEN FILES AND PROCESS PARM FIELD
*        PARM FIELD MUST BE IN THE FORMAT:-
*             PARM='DD/MM/CCYY-HH:MM:SS TO DD/MM/CCYY-HH:MM:SS'
*        THE VALUE OF THE DELIMITTERS IS NOT IMPORTANT BUT THE
*        LENGTH OF THE PARAMETER STRING CANNOT BE CHANGED.
*
         L     R3,0(R1)            SAVE PARM ADDRESS
         OPEN  (PRINTLIN,OUTPUT)
         MVI   PRINTBUF,C' '       BLANK BUFFER
         MVC   PRINTBUF+1(L'PRINTBUF-1),PRINTBUF
         LH    R4,0(R3)            LOAD LENGTH OF PARM
         CH    R4,=AL2(L'PARMDATS) CORRECT PARM LENGTH PASSED?
         BNE   PARMERR             NO..  PARM ERROR
         MVC   PARMDATS,2(R3)      YES.. SAVE THE PARM DATES
*
         MVC   ZFRDATE(4),PARMFDAT+6   MOVE IN FROM YEAR
         MVC   ZFRDATE+4(2),PARMFDAT+3 MOVE IN FROM MONTH
         MVC   ZFRDATE+6(2),PARMFDAT   MOVE IN FROM DAY
         PACK  PFRDATE,ZFRDATE         AND PACK IT FOR COMPARES
*
         MVC   ZFRTIME(2),PARMFTIM     MOVE IN FROM HH
         MVC   ZFRTIME+2(2),PARMFTIM+3 MOVE IN FROM MM
         MVC   ZFRTIME+4(2),PARMFTIM+6 MOVE IN FROM SS
         PACK  PFRTIME,ZFRTIME         AND PACK IT FOR COMPARES
*
         MVC   ZTODATE(4),PARMTDAT+6   MOVE IN TO YEAR
         MVC   ZTODATE+4(2),PARMTDAT+3 MOVE IN TO MONTH
         MVC   ZTODATE+6(2),PARMTDAT   MOVE IN TO DAY
         PACK  PTODATE,ZTODATE         AND PACK IT FOR COMPARES
*
         MVC   ZTOTIME(2),PARMTTIM     MOVE IN TO HH
         MVC   ZTOTIME+2(2),PARMTTIM+3 MOVE IN TO MM
         MVC   ZTOTIME+4(2),PARMTTIM+6 MOVE IN TO SS
         PACK  PTOTIME,ZTOTIME         AND PACK IT FOR COMPARES
*
         MVI   PRINTBUF,C' '
         MVC   PRINTBUF+1(L'PRINTBUF-1),PRINTBUF  ALL SPACES
         PUT   PRINTLIN,PRINTBUF   PRINT THE BLANK LINE
         MVC   PRINTBUF(L'MSG010),MSG010  HEADER TO PRINTLINE
*
         MVC   PRINTBUF+29(2),PARMFDAT   FROM DD
         MVI   PRINTBUF+31,C'/'
         MVC   PRINTBUF+32(2),PARMFDAT+3 FROM MM
         MVI   PRINTBUF+34,C'/'
         MVC   PRINTBUF+35(4),PARMFDAT+6 FROM CCYY
*
         MVC   PRINTBUF+40(2),PARMFTIM   FROM HH
         MVI   PRINTBUF+42,C':'
         MVC   PRINTBUF+43(2),PARMFTIM+3 FROM MM
         MVI   PRINTBUF+45,C':'
         MVC   PRINTBUF+46(2),PARMFTIM+6 FROM SS
*
         MVC   PRINTBUF+53(2),PARMTDAT   TO DD
         MVI   PRINTBUF+55,C'/'
         MVC   PRINTBUF+56(2),PARMTDAT+3 TO MM
         MVI   PRINTBUF+58,C'/'
         MVC   PRINTBUF+59(4),PARMTDAT+6 TO CCYY
*
         MVC   PRINTBUF+64(2),PARMTTIM   TO HH
         MVI   PRINTBUF+66,C':'
         MVC   PRINTBUF+67(2),PARMTTIM+3 TO MM
         MVI   PRINTBUF+69,C':'
         MVC   PRINTBUF+70(2),PARMTTIM+6 TO SS
*
         PUT   PRINTLIN,PRINTBUF   PRINT THE MESSAGE
         MVI   PRINTBUF,C' '
         MVC   PRINTBUF+1(L'PRINTBUF-1),PRINTBUF  ALL SPACES
         PUT   PRINTLIN,PRINTBUF   PRINT THE BLANK LINE
*
*   GETMAIN SOME STORAGE FOR THE GROUP-NAME TABLE
*
         GETMAIN RU,                                                   X
               LV=OBJTBLLN,                                            X
               BNDRY=DBLWD,                                            X
               LOC=ANY
*
         ST    R1,STBLADR         SAVE THE STORAGE ADDRESS
         XR    R1,R1              CLEAR REG
         ST    R1,STBLNTS         SAVE ENTRY COUNT
*
*   OPEN THE VSAM KSDS FOR SEQUENTIAL READ
*
         OPEN  (DFHCSD)
*
READLP   DS    0H
         GET   RPL=RETRVE
         LTR   R15,R15
         BNZ   READERR
*
         CLC   CSDRECTP,CSDFIRST     FIRST RECORD IN CSD?
         BE    READLP                YES.. SKIP IT
         CLC   CSDRECTP,CSDIBMRC     IBM-INITIAL TYPE RECORD?
         BE    READLP                YES.. SKIP IT
         CLC   CSDRECTP,CSDHDRRC     LIST OR GROUP HEADER RECORD?
         BE    READLP                YES.. SKIP IT
         BAL   R11,TBLADD00          LIST OR GROUP - ADD TO TABLE
         CLC   CSDRECTP,CSDLSTRC     LIST RECORD?
         BE    READLP                YES.. SKIP IT
*
*   MUST BE A GROUP RECORD.. CHECK IT
*
         LA    R2,GRPTBL             ADDRESS OF GROUP TYPE TABLE
         LA    R1,GRPTBNTS           NUMBER OF ENTRIES
SCANTBL  DS    0H
         CLC   CSDRECTP,0(R2)        THIS GROUP TYPE IN TABLE?
         BE    FOUNDGP               YES
         LA    R2,GRPTELN(,R2)       NO... BUMP TABLE POINTER
         BCT   R1,SCANTBL            AND EXAMINE NEXT ENTRY
         B     READLP                READ NEXT RECORD
*
FOUNDGP  DS    0H                    GROUP FOUND..
         MVC   WDATSTOR,CSDDATTM     4 BYTES OF DATE/TIME
         L     R0,WDATSTOR
         SRL   R0,8                  WE ONLY WANT THE JUL DATE PART
         N     R0,=X'00FFFFFF'       TURN OFF HIGH BYTE
         O     R0,=X'0000000F'       SET PACKED SIGN NIBBLE
         ST    R0,WDATSTOR           AND SAVE FOR GREG CONVERSION
         BAL   R11,JULGRG            CONVER TO GREGORIAN
*
         MVC   WTIMSTOR,CSDDATTM+2   4 BYTES OF DATE/TIME
         L     R0,WTIMSTOR
         N     R0,=X'0FFFFFFF'       TURN OFF HIGH NIBBLE
         ST    R0,WTIMSTOR           AND SAVE PACKED TIME
*
*   COMPARE THE CHANGE DATE AND TIME ON THE GROUP RECORD
*
         CLC   TEMPDAT,PFRDATE       LESS THAN FROM DATE?
         BL    READLP                YES.. READ NEXT RECORD
         BNE   COMPR00               NO... NOT EQUAL EITHER
         CLC   WTIMSTOR,PFRTIME      DATE EQUAL, CHECK TIME
         BL    READLP                TOO EARLY. NEXT RECORD
COMPR00  DS    0H
         CLC   TEMPDAT,PTODATE       GREATER THAN TO DATE?
         BH    READLP                YES.. READ NEXT RECORD
         BNE   COMPR10               NO... NOT EQUAL EITHER
         CLC   WTIMSTOR,PTOTIME      DATE EQUAL, CHECK TIME
         BH    READLP                TOO LATE. NEXT RECORD
*
COMPR10  DS    0H
*
*   GROUP RECORD HAS CHANGED WITHIN SELECTED DATES.. PRINT IT
*
         MVI   PRINTBUF,C' '         CLEAR PRINT BUFFER
         MVC   PRINTBUF+1(L'PRINTBUF-1),PRINTBUF
         MVC   PRINTBUF(L'MSG000),MSG000   MOVE IN MESSAGE
*
*        MVC   PRINTBUF+1(L'CSDRECOB),CSDRECOB  OBJECT NAME
*        MVC   PRINTBUF+11(12),2(R2)            OBJECT TYPE
*        MVC   PRINTBUF+34(L'CSDRECGP),CSDRECGP GROUP NAME
*        MVC   PRINTBUF+58(2),ZDATOUT+7         DD
*        MVC   PRINTBUF+61(2),ZDATOUT+5         MM
*        MVC   PRINTBUF+64(4),ZDATOUT+1         CCYY
         MVC   PRINTOBJ(L'CSDRECOB),CSDRECOB    OBJECT NAME
         MVC   PRINTTYP(12),2(R2)               OBJECT TYPE
         MVC   PRINTGRP(L'CSDRECGP),CSDRECGP    GROUP NAME
         MVC   PRINTDAT+0(2),ZDATOUT+7          DD
         MVC   PRINTDAT+3(2),ZDATOUT+5          MM
         MVC   PRINTDAT+6(4),ZDATOUT+1          CCYY
*
*   PUT THE TIME OF CHANGE INTO THE PRINT BUFFER
*
         UNPK  ZTIMOUT,CSDDATTM+2(4)
*        MVC   PRINTBUF+72(2),ZTIMOUT+1         HH
*        MVC   PRINTBUF+75(2),ZTIMOUT+3         MM
*        MVC   PRINTBUF+78(2),ZTIMOUT+5         SS
         MVC   PRINTTIM+0(2),ZTIMOUT+1          HH
         MVC   PRINTTIM+3(2),ZTIMOUT+3          MM
         MVC   PRINTTIM+6(2),ZTIMOUT+5          SS
*
         PUT   PRINTLIN,PRINTBUF   PRINT THE OUTPUT
         B     READLP
*
READERR  DS    0H                  READ ERROR ROUTINE
EOF      DS    0H                  END OF FILE ROUTINE
         CLOSE (DFHCSD)
*
*   NOW PRINT ALL THE GROUP NAMES WHICH DO NOT BELONG
*   TO ANY LIST I.E. ORPHANED GROUPS.
*
         MVI   PRINTBUF,C' '
         MVC   PRINTBUF+1(L'PRINTBUF-1),PRINTBUF  ALL SPACES
         PUT   PRINTLIN,PRINTBUF     PRINT THE BLANK LINE
         PUT   PRINTLIN,PRINTBUF     PRINT THE BLANK LINE
         PUT   PRINTLIN,PRINTBUF     PRINT THE BLANK LINE
         MVC   PRINTBUF(L'MSG020),MSG020  HEADER TO PRINTLINE
         PUT   PRINTLIN,PRINTBUF     PRINT THE HEADER
         MVI   PRINTBUF,C' '
         MVC   PRINTBUF+1(L'PRINTBUF-1),PRINTBUF  ALL SPACES
         PUT   PRINTLIN,PRINTBUF     PRINT THE BLANK LINE
*
         L     R2,STBLNTS            NUMBER OF ENTRIES
         L     R9,STBLADR            ADDRESS OF TABLE
         LTR   R2,R2                 ARE THERE ANY ENTRIES?
         BZ    CLOSPRN               NO... SO SKIP
*
ORPHAN00 DS    0H
         CLI   OBJFLAG,C'*'          IS THIS GROUP IN A LIST?
         BE    ORPHAN10              YES.. NEXT ENTRY
         MVC   PRINTBUF+1(8),OBJNAME   NO... PRINT THE GROUP NAME
         PUT   PRINTLIN,PRINTBUF     PRINT IT
ORPHAN10 DS    0H
         LA    R9,OBJENTLN(,R9)      BUMP TO NEXT ENTRY
         BCT   R2,ORPHAN00           AND CHECK IT
*
CLOSPRN  DS    0H
         CLOSE (PRINTLIN)
         L     R13,SAVE+4
         RETURN (14,12),RC=0
*
*
PARMERR  DS    0H
         MVC   PRINTBUF(L'EMSG01),EMSG01  ERROR MESSAGE TO PRINTLINE
         PUT   PRINTLIN,PRINTBUF   PRINT THE OUTPUT
         MVI   PRINTBUF,C' '
         MVC   PRINTBUF+1(L'PRINTBUF-1),PRINTBUF  ALL SPACES
         B     CLOSPRN
*
*
*        SUBROUTINES
*
*
*        CONVERT PACKED DECIMAL JULIAN DATE TO DISPLAY GREGORIAN
*
JULGRG   DS    0H
         STM   R1,R14,SAVE2        SAVE REGISTERS
*
         LA    R11,WDATSTOR
         MVC   WMDAYS(48),MDAYS COPY DAYS CONSTANTS TO WORK AREA
         L     R2,WDATSTOR
         L     R4,=F'4'         DIVISOR 4 FOR LEAPYEAR CHECK
         SRDL  R2,44
         O     R3,=X'0000000F'  LOW ORDER NIBBLE FOR PACKED DEC.
         STM   R2,R3,WYEAR
         CVB   R2,WYEAR
         SRDL  R2,32
         DR    R2,R4            REMAINDER IN REG 2
         C     R2,=F'0'         IF ZERO THEN LEAP YEAR
         BNE   MON01
         L     R2,=F'29'        SET DAYS IN FEB
         ST    R2,WMDAYS+4
*
MON01    DS    0H
         L     R3,WDATSTOR
         N     R3,=X'0000FFFF'  ZERO HIGH ORDER 16 BITS
         L     R2,=F'0'         ZERO REG 2
         STM   R2,R3,WDAYS
         CVB   R2,WDAYS
         L     R6,=F'12'
         LA    R7,WMDAYS
         L     R4,=F'1'         MONTH NUMBER
MON02    DS    0H
         C     R2,0(R7)
         BNH   MON03
         S     R2,0(R7)
         A     R4,=F'1'
         LA    R7,4(R7)
         BCT   R6,MON02
MON03    DS    0H
         CVB   R7,WYEAR         BINARY YEAR IN REG 7
         M     R6,=F'10000'     MULTIPLY YEAR BY 10000
         AR    R7,R2            ADD DAYS
         LR    R5,R4
         M     R4,=F'100'       MULTIPLY MONTH BY 100
         AR    R7,R5            ADD MONTH
         CVD   R7,WYEAR         SAVE WHOLE DATE AS PD IN YEAR
         MVC   TEMPDAT+1(4),WYEAR+4
         L     R0,TEMPDAT+1
         N     R0,=X'0FFFFFFF'  TURN OFF HIGH NIBBLE
         O     R0,=X'0000000F'  FIX SIGN NIBBLE AND DEFAULT CENTURY
         ST    R0,TEMPDAT+1
         MVI   TEMPDAT,X'02'    DEFAULT TO 2000
         CLI   TEMPDAT+1,X'05'  IS YEAR 50 OR GREATER?
         BL    MON04            YES.. TREAT AS 2000.. DEFAULT OK
         MVI   TEMPDAT,X'01'    NO... TREAT AS 1900
         O     R0,=X'90000000'  SET CENTURY TO 9
         ST    R0,TEMPDAT+1     AND SAVE
MON04    DS    0H
         UNPK  ZDATOUT,TEMPDAT
         LM    R1,R14,SAVE2        RESTORE REGISTERS
         BR    R11                 AND RETURN
*
*
*
*   SEARCH FOR OR ADD GROUP NAME TO THE OBJECT TABLE.
*   THIS TABLE WILL BE USED TO DETERMINE IF A GROUP IS ORPHANED.
*
TBLADD00 DS    0H
         MVC   STBLNAM,CSDRECGP      ASSUME GROUP NAME
         MVI   STBLFLG,C' '          ASSUME GROUP ENTRY
         CLC   CSDRECTP,CSDLSTRC     IS THIS A LIST RECORD?
         BNE   TBLADD02              NO...
         MVC   STBLNAM,CSDRECOB      SAVE GROUP NAME FROM LIST RECORD
         MVI   STBLFLG,C'*'          FLAG ENTRY AS 'FOUND IN LIST'
*
TBLADD02 DS    0H
         L     R1,STBLNTS            NUMBER OF ENTRIES
         L     R9,STBLADR            ADDRESS OF TABLE
         LTR   R1,R1                 ARE THERE ANY ENTRIES YET?
         BZ    TBLADD10              NO... SO ADD THIS ONE
*
TBLADD05 DS    0H
         CLC   OBJNAME,STBLNAM       IS GROUP IN THIS TABLE ENTRY?
         BE    TBLADD20              YES.. JUST SAVE THE FLAG
         LA    R9,OBJENTLN(,R9)      NO... BUMP TO NEXT ENTRY
         BCT   R1,TBLADD05           AND CHECK IT
*
*   ENTRY NOT FOUND IN TABLE .. ADD A NEW ENTRY
*
TBLADD10 DS    0H
         L     R1,STBLNTS            NUMBER OF ENTRIES
         C     R1,=A(OBJNUMNT)       HAVE WE REACHED THE MAXIMUM?
         BNL   TBLADD99              YES.. JUST QUIT
         MVC   OBJNAME,STBLNAM       SAVE THE GROUP NAME FOR LATER
         MVC   OBJFLAG,STBLFLG       SAVE THE FLAG
         LA    R1,1(,R1)             INCREMENT THE ENTRY COUNTER
         ST    R1,STBLNTS            AND SAVE IT FOR NEXT TIME
         B     TBLADD99              AND RETURN
*
TBLADD20 DS    0H
*   ONLY SAVE THE FLAG IF IT IS 'FOUND-IN-LIST' OTHERWISE WE
*   COULD OVERWRITE A PREVIOUS 'FOUND-IN-LIST' STATUS WITH
*   'NOT-FOUND-IN-LIST'.
         CLI   STBLFLG,C'*'          FOUND-IN-LIST?
         BNE   TBLADD99              NO... ALL DONE
         MVC   OBJFLAG,STBLFLG       YES.. SAVE THE FLAG
*
TBLADD99 DS    0H
         BR    R11                   AND RETURN
*
*
PARMDATS DS    0CL42                 DATES/TIMES FROM PARM STATEMENT
PARMFDAT DS    CL10                  FROM DATE DD/MM/CCYY
         DS    CL1
PARMFTIM DS    CL8                   FROM TIME HH:MM:SS
         DS    CL4
PARMTDAT DS    CL10                  TO DATE DD/MM/CCYY
         DS    CL1
PARMTTIM DS    CL8                   TO TIME HH:MM:SS
*
PRINTBUF DS    CL132' '
         ORG   PRINTBUF
         DS    CL01' '
PRINTOBJ DS    CL08'XXXXXXXX'
         DS    CL02' ('
PRINTTYP DS    CL12'XXXXXXXXXXXX'
         DS    CL09')  GROUP('
PRINTGRP DS    CL08'XXXXXXXX'
         DS    CL01')'
         DS    CL03' - '
PRINTDAT DS    CL14'DD/MM/CCYY at '
PRINTTIM DS    CL08'HH:MM:SS'
         ORG
EMSG01   DC    CL37' Invalid Dates/Times parameter passed'
MSG000O  DC    CL80' XXXXXXXX (XXXXXXXXXXXX) IN GROUP XXXXXXXX WAS CHANX
               GED ON DD/MM/CCYY AT HH:MM:SS'
MSG000   DC    CL80' '
         ORG   MSG000
         DC    CL01' '
         DC    CL08'XXXXXXXX'
         DC    CL02' ('
         DC    CL12'XXXXXXXXXXXX'
         DC    CL09')  GROUP('
         DC    CL08'XXXXXXXX'
         DC    CL01')'
         DC    CL03' - '
         DC    CL14'DD/MM/CCYY at '
         DC    CL08'HH:MM:SS'
         ORG
MSG010   DC    CL80' RDO objects changed between DD/MM/CCYY HH:MM:SS anX
               d DD/MM/CCYY HH:MM:SS (incl.)'
MSG020   DC    CL49' The following groups do not belong to any list:-'
MSG030   DC    CL35' CSD created by CICS release: V.R.M'
*
*   FORMAT OF CSD RECORD
*
         DS    0D
CSDREC   DS    0CL1000               CSD RECORD - ALLOW PLENTY
CSDRECKY DS    0CL22                 CSD VSAM KEY
CSDRECGP DS    CL8               --- GROUP OR LIST NAME
CSDLSEQ  DS    XL4         KSDS  |   SEQUENCE NUMBER, LISTS ONLY
CSDRECTP DS    XL2         KEY   |   RECORD TYPE
CSDRECOB DS    CL8               --- OBJECT NAME
CSDDTALN DS    XL2                   DATA LENGTH (RL=KEYLEN+THIS)
CSDDATTM DS    PL6                   DATE/TIME YYJJJHHMMSSF
         DS    XL6
CSDVERSN DS    CL4                   CSD VERSION 0VRM - 1ST RECORD
         DS    CL960                 REST OF RECORD
*
*
*
CSDFIRST DC    X'0001'               FIRST RECORD IN CSD
CSDIBMRC DC    X'0005'               IBM INITIAL TYPE RECORD
CSDHDRRC DC    X'0006'               LIST OR GROUP HEADER
CSDLSTRC DC    X'000D'               LIST RECORD
*
PRINTLIN DCB   DDNAME=REPORT,DSORG=PS,MACRF=PM,                        X
               RECFM=FBA,LRECL=132,BLKSIZE=1320
*
DFHCSD   ACB   AM=VSAM,DDNAME=DFHCSD,MACRF=(KEY,SEQ,IN),EXLST=EXLST1
*
RETRVE   RPL   ACB=DFHCSD,AREA=CSDREC,AREALEN=1000,                    X
               OPTCD=(KEY,SEQ,SYN,NUP,MVE)
*
EXLST1   EXLST EODAD=EOF           END OF FILE ROUTINE
*
*
GRPTBL   DS    0H
         DC    XL2'01F4',CL12'CONNECTION  '
GRPTELN  EQU   *-GRPTBL
         DC    XL2'0226',CL12'CORBASERVER '    New
         DC    XL2'0258',CL12'DJAR        '    New
         DC    XL2'028A',CL12'LSRPOOL     '
         DC    XL2'0320',CL12'FILE        '
         DC    XL2'0384',CL12'JOURNALMODEL'
         DC    XL2'03E8',CL12'MAPSET      '
         DC    XL2'07D0',CL12'PARTITIONSET'
         DC    XL2'09C4',CL12'PARTNER     '
         DC    XL2'0BB8',CL12'PROFILE     '
         DC    XL2'0FA0',CL12'PROGRAM     '
         DC    XL2'10ED',CL12'SESSION     '
         DC    XL2'11CB',CL12'TYPETERM    '
         DC    XL2'123A',CL12'TERMINAL    '
         DC    XL2'1318',CL12'TRANCLASS   '
         DC    XL2'1388',CL12'TRANSACTION '
         DC    XL2'1770',CL12'TDQUEUE     '
         DC    XL2'1B58',CL12'DB2CONN     '
         DC    XL2'1D4C',CL12'DB2ENTRY    '
         DC    XL2'1EDC',CL12'DB2TRAN     '
         DC    XL2'1F40',CL12'TSMODEL     '
         DC    XL2'2134',CL12'PROCESSTYPE '
         DC    XL2'2328',CL12'REQUESTMODEL'
         DC    XL2'238C',CL12'DOCTEMPLATE '    New
         DC    XL2'23F0',CL12'TCPIPSERVICE'
*
*        DC    XL2'0005',CL12'IBMINITIAL  '
*        DC    XL2'0006',CL12'GROUP       '
GRPTBNTS EQU   (*-GRPTBL)/GRPTELN
*
*
MDAYS    DC    F'31',F'28',F'31',F'30',F'31',F'30'
         DC    F'31',F'31',F'30',F'31',F'30',F'31'
*
PFRDATE  DS    CL5                 PACKED FROM DATE 0CCYYMMDDF
PFRTIME  DS    CL4                 PACKED FROM TIME 0HHMMSSF
PTODATE  DS    CL5                 PACKED TO DATE 0CCYYMMDDF
PTOTIME  DS    CL4                 PACKED TO TIME 0HHMMSSF
*
SAVE     DS    18F
SAVE2    DS    18F
*
STBLADR  DS    F                   SAVE ADDRESS OF OBJ TABLE
STBLNTS  DS    F                   NUMBER OF TABLE ENTRIES
STBLNAM  DS    CL8                 ENTRY NAME
STBLFLG  DS    CL1                 ENTRY FLAG
*
         DS    0F                  KEEP THESE
         DS    CL3                 TOGETHER TO MAINTAIN
TEMPDAT  DS    CL5                 ALIGNMENT
*
WDATSTOR DS    1F
WDAYS    DS    1D
WMDAYS   DS    12F
WTIMSTOR DS    1F
WYEAR    DS    1D
ZFRDATE  DS    CL8                 ZONED FROM-DATE CCYYMMDD
ZFRTIME  DS    CL6                 ZONED FROM-TIME HHMMSS
ZTODATE  DS    CL8                 ZONED TO-DATE CCYYMMDD
ZTOTIME  DS    CL6                 ZONED TO-TIME HHMMSS
ZDATOUT  DS    CL9                 DISPLAY DATE IN 0CCYYMMDD
ZTIMOUT  DS    CL7                 DISPLAY TIME IN XHHMMSS
*
         LTORG
*
         END
