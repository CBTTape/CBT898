*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
*                                                                     *
*        Title:    'DISPLAY FREE DASD SPACE'                          *
*        System:   N/A                                                *
*        Module:   DASDSPCE                                           *
*        Program:  DASDSPCE                                           *
*        Function: Display the available space on a DASD or a group   *
*                  of DASD. This program is not to be invoked as a    *
*                  command but should be called passing parameters by *
*                  the standard call technique.                       *
*                                                                     *
*        Parameters:                                                  *
*                  The parameter may be as follows:                   *
*                      - Generic unit name as defined in the MVSCP    *
*                      - Volume. May be wildcarded with '*' as last   *
*                        byte.                                        *
*                      - Device name. This MUST be wildcarded with a  *
*                        '.' as the last byte, even if only one       *
*                        device details is required.                  *
*                                                                     *
*                  If the generic unit cannot be identified, an '*'   *
*                  will be appended and treated as a wildcarded       *
*                  volume. (By this default, this permits wildcarding *
*                  of volumes without trailing '*'.)                  *
*                                                                     *
*                  A parameter of 'ALL' will return all DASD. Will    *
*                  generate a parameter of SYSALLDA.                  *
*                                                                     *
*                  A parameter of 'BOX+DICE' will return all devices  *
*                  (including non DASD).                              *
*                                                                     *
*                  This routine may be invoked by other applications  *
*                  by passing the literal '+RETDET+' starting in      *
*                  column 10 of the parameter list. This will prevent *
*                  the building of the ISPF tables and the following  *
*                  data will be returned in the storage pointed to by *
*                  the parameter list:                                *
*                      Bytes 10 - 11 : Total number of hits           *
*                      Bytes 12 -    : Array for each hit as follows, *
*                           PRGVOL  - volume               (6 bytes)  *
*                           PRGCYL1 - total free cylinders (5 bytes)  *
*                           PRGCYL2 - largest free space   (5 bytes)  *
*                  The parameter list is mapped by DSECT PROGRAM$.    *
*                                                                     *
*        ISPF user exits:                                             *
*                  Any commands starting with a '/' will pass control *
*                  to REXX EXEC 'DSEXIT' which will process global    *
*                  command options. (Refer to the EXEC for valid      *
*                  selections.)  If the selection is not processed in *
*                  'DSEXIT' control is passed to REXX EXEC            *
*                  'DSUSERXT'. (The default system version will flag  *
*                  all commands as invalid.) User customised version  *
*                  should be placed in the 'SYSPROC' or 'SYSEXEC'     *
*                  concatenation in front of the system default one.  *
*                  Refer to EXEC 'DSUSERXD' for customisation.        *
*                                                                     *
*                  Any selection (other than 'X' to eXclude entry)    *
*                  will also pass control to 'DSEXIT'.                *
*                                                                     *
*                  Commands heve preferential treatment over          *
*                  selections. Multi selections under a control       *
*                  command mustr be processed in the exit.            *
*                                                                     *
*        ISPF access:                                                 *
*                  You may set an ISPF shared variable KEEPTB to      *
*                  'Y' to generate the table and return it to the     *
*                  calling dialog for subsequent processing. Refer    *
*                  to details on the 'user exit' for format of the    *
*                  Table name can be supplied/extracted from the      *
*                  variable DSTABLE in the shared pool. The default   *
*                  value is DSPACE.                                   *
*                                                                     *
*        Register usage:                                              *
*                  R1   - Available                                   *
*                  R2   - Available                                   *
*                  R3   - Available                                   *
*                  R4   - Available                                   *
*                  R5   - Available                                   *
*                  R6   - Available                                   *
*                  R7   - Available                                   *
*                  R8   - Program invoked parameter list base         *
*                  R9   - Device list pointer for generic name queries*
*                  R10  - UCB common DSECT base                       *
*                       - LSPACE DSECT base                           *
*                  R11  - Program base register                       *
*                  R12  - Program base register                       *
*                  R13  - Acquired storage and reg save area base     *
*                  R14  - Available                                   *
*                  R15  - Available                                   *
*                                                                     *
*        Notes:    Program is re-entrant.                             *
*        Author:   A. Kara (ASYSTS P/L).                              *
*                                                                     *
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
*        PUSH PRINT
*        COPY @MACROS                    COMMON USED MACROS
*        POP  PRINT
*---------------------------------------------------------------------*
&ZPRINT  SETC 'YES'                      EXPAND ALL 'UCB' TYPE MACROS
&ALLSCAN SETC 'DASD'                     SET ALLSCAN PARAMETER TO DASD
&ALLSCAN SETC 'ALL'                      SET ALLSCAN PARAMETER TO ALL
DASDSPCE KICKOFF (R11,R12),WORKAREA,WORKAREL,LIST=N
         LR    R2,R1                     SAVE PARAMETER ADDRESS
*---------------------------------------------------------------------*
INITIAL1 DS    0H
         MVI   EYECATCH,X'07'            Set to X'00' to enable PDUMPR
*                                        and uncomment PDUMPR. RENT=NO
*                                        during PDUMPR testing.
         MVC   EYECATCH+1(15),=CL15'<----EYECATCH'
         MVC   UNITNAME,=CL8'SYSALLDA'   INITIALISE UNIT NAME
         MVC   UNITLEN,=H'8'             INITIALISE UNIT NAME LENGTH
         XC    PROGRAM@,PROGRAM@         PROGRAM INVOCATION OFF
         MVC   KEEPTB,=C'YY'             INITIALISE KEEP TABLE FIELD
                                                                SPACE 1
         XC    FORMATX(FORMATXL),FORMATX INITIALISE PARAMETER LIST
         MVI   FORMATX,193               INDICATE SEARCH FUNCTION
         LA    R1,DSN                    LOAD PARAMETER ADDRESS
         ST    R1,FORMATX+4              STORE POINTER
         LA    R1,SPFVOL                 LOAD PARAMETER ADDRESS
         ST    R1,FORMATX+8              STORE POINTER
         LA    R1,DSCBAREA               LOAD PARAMETER ADDRESS
         ST    R1,FORMATX+12             STORE POINTER
                                                                SPACE 1
         ST    R2,PARM@                  STORE PARM ADDRESS
         L     R2,0(R2)                  LOAD PARAMETER POINTER
         LH    R3,0(R2)                  LOAD PARAMETER LENGTH
         LTR   R3,R3                     Q. ANY PARAMETER ENTERED
         BZ    INITIAL2                     N. BYPASS PARAMETER STORAGE
         CH    R3,=H'8'                  Q. PARAMETER > 8 BYTES LONG
         BNH   PRMLENOK                     N. BYPASS
         LA    R3,8                      SET PARAMETER LENGTH TO 8
PRMLENOK DS    0H
         MVC   UNITNAME,SPACES           INITIALISE UNIT NAME
         LA    R2,2(R2)                  POINT PAST PARAMETER LENGTH
         BCTR  R3,0                      PREPARE FOR 'EX' COMMAND
         EX    R3,MOVEPARM               MOVE PARAMETER
         LA    R3,1(R3)                  RESTORE LENGTH
         STH   R3,UNITLEN                SAVE LENGTH
         OC    UNITNAME,SPACES           CONVERT TO UPPER CASE
         LA    R8,8(R2)                  POINT PAST STANDARD PARAMETER
         USING PRGRDATA,R8               A'BILITY TO PROGRAM WORK  AREA
         CLC   =C'+RETDET+',PRGRDATA     Q. INVOKED BY PROGRAM
         BNE   INITIAL2                     N. BYPASS
         ST    R8,PROGRAM@               INDICATE PROGRAM INVOCATION
         ZAP   PRG#ENT(2),=P'0'          INITIALISE TO PACKED FORMAT
         B     INITIAL3                  BYPASS ISPF ENVIRONMENT PROC
                                                                SPACE 1
*---------------------------------------------------------------------*
* Initialisation of got storage                                       *
*---------------------------------------------------------------------*
INITIAL2 DS    0H
         ISPEXEC MF=E,INIT=Y             INITIALISE ISPF INTERFACE
*        ISPEXEC 'CONTROL ERRORS RETURN'
         ISPEXEC 'CONTROL ERRORS CANCEL'
         BAL   R14,ISPFENV               PROCESS ISPF ENVIRONMENT
INITIAL3 DS    0H
         MVC   SPFPARM,UNITNAME          INITIALISE DISPLAY PARAMETER
         MVC   ZTEMPF,SPACES             INITIALISE TEMPORARY FILE NAME
         LA    R10,UCBDATA               ADDRESS OF UCB COMMON DATA
         USING UCBCMSEG,R10              ADDRESABILITY TO THE UCB
         MVC   LSP1(LSP0L),LSP0          MOVE CONSTANT TO GOT STORAGE
*---------------------------------------------------------------------*
*  Come here to start again and re-initialise required storage        *
*---------------------------------------------------------------------*
STRTAGIN DS    0H
         MVC   UNITSAVE(12),UNITLEN      BACKUP LENGTH AND PARAMETER
         LA    R1,SCANDASD               LOAD SCAN ROUTINE 2 B USED
         ST    R1,SCANRTN@               STORE ROUTINE ADDRESS
         XC    OPERATN,OPERATN           INITIALISE WILDCARD FLAG
         MVC   UST(4),=C'0000'           INITIALISE FIRST UCB
         MVC   SPFUCB#(4),=C'0000'       INITIALISE FIELDS
         MVC   GC009,SPACES              INITIALISE FIELDS
         XC    SCANWORK,SCANWORK         INITIALISE UCBSCAN WORK AREA
         XC    DEV#,DEV#                 INITIALISE UCBSCAN STARTER
         MVC   SPFPARM,UNITNAME          INITIALISE DISPLAY PARAMETER
         CLC   UNITNAME,=CL8'SYSALLDA'   Q. ORIGINAL UNIT NAME
         BE    GENERIC                      Y. BYPASS PARAMETER
                                                                SPACE 1
*---------------------------------------------------------------------*
         CLC   UNITNAME,=CL8'BOX+DICE'   Q. WANT EVERYTHING
         BNE   NOTBANDD                     Y. BYPASS PARAMETER
         LA    R1,SCANALL                LOAD SCAN ROUTINE 2 B USED
         ST    R1,SCANRTN@               STORE ROUTINE ADDRESS
         MVC   UNITNAME,SPACES           INITIALISE UNIT NAME
         MVI   UNITNAME,C'.'             SET UNIT WILDCARD ALL
         MVC   UNITLEN,=H'1'             INITIALISE UNIT NAME LENGTH
NOTBANDD DS    0H
         LH    R1,UNITLEN                LOAD UNIT LENGTH
         LA    R2,UNITNAME               LOAD UNIT NAME
         CLC   SPFPARM(4),=C'ALL '       Q. ALL DASD REQUESTED
         BNE   WILDLOOP                     N. BYPASS
         MVC   UNITNAME,=CL8'SYSALLDA'   INITIALISE UNIT NAME
         MVC   UNITLEN,=H'8'             INITIALISE UNIT NAME LENGTH
         B     GENERIC                   PROCESS GENERIC PARAMETER
                                                                SPACE 1
WILDLOOP DS    0H
         CLI   0(R2),C'*'                Q. VOLUME WILDCARDING CHAR
         BE    WILDVOL                      Y. PROCESS VOLUME WILD
         CLI   0(R2),C'.'                Q. STRING WILDCARDING CHAR
         BE    WILDSTRG                     Y. PROCESS STRING WILD
         LA    R2,1(R2)                  BUMP POINTER
         BCT   R1,WILDLOOP               LOOP TILL END
                                                                SPACE 1
NOWILD   DS    0H
         CLC   =C'SYSRES',UNITNAME       Q. 'SYSRES REQUESTED
         BNE   GENERIC                      N. PROCESS GENERIC PARM
         XC    UNITLEN,UNITLEN           SIMULATE '*' PARAMETER
         B     GETVOL                    GET VOLUME ALL VOLUME
                                                                SPACE 1
WILDSTRG DS    0H
         ICM   R2,B'1111',PROGRAM@       Q. PROGRAM POINTER
         BNZ   BYPSORT1                     Y. BYPASS SORT
                                                                SPACE 1
         MVC   SORTPARM,SPACES           INITIALISE SORT PARAMETER
         MVC   SORTPARM(08),=C'UCB#,C,A' CHANGE SORT TO UCB
         ISPEXEC 'TBSORT &&DSTABLE FIELDS(&&SP)'
BYPSORT1 DS    0H
         OI    OPERATN,STRGWILD          SET STRING WILDCARD FLAG
         LH    R1,UNITLEN                LOAD UNIT LENGTH
         BCTR  R1,0                      LESS 1 FOR WILDCARD
         STH   R1,UNITLEN                SAVE UNIT LENGTH
         LTR   R1,R1                     Q. ZERO PARAMETER LENGTH
         BZ    DNTMOVUN                     N. BYPASS MOVE UNIT NAME
         BCTR  R1,0                      PREPARE FOR 'EX' COMMAND
         EX    R1,MOVESTRG               MOVE STARTING POINT
DNTMOVUN DS    0H
         CHHEXMAC UST,DEV#,4,'00',MF=E,LIST=Y CONVERT HEX TO CHARACTER
         B     SCANIT                    GO AND SCAN IT
WILDVOL  DS    0H
         OI    OPERATN,VOLMWILD          SET STRING WILDCARD FLAG
         LH    R1,UNITLEN                LOAD UNIT LENGTH
         BCTR  R1,0                      LESS 1 FOR WILDCARD
         STH   R1,UNITLEN                SAVE UNIT LENGTH
GETVOL   DS    0H
         B     SCANIT                    GO AND SCAN IT
                                                                SPACE 1
*---------------------------------------------------------------------*
SCANIT   DS    0H
SCANLOOP DS    0H
         L     R15,SCANRTN@              LOAD SCAN ROUTINE ADDRESS
         BALR  R4,R15                    BRANCH TO THE SCAN ROUTINE
         LTR   R15,R15                   Q. END OF SCAN
         BNZ   ENDOSCAN                     Y. EXIT LOOP
                                                                SPACE 1
*---------------------------------------------------------------------*
*        TM    EYECATCH,x'01'            Mask 0(R13) with X'01' bypass
*        BNO   CONT$X01
*        PDUMPR UCBDATA+4,ISPI=N,LIST=Y,MF=E,X2CE=NO
CONT$X01 DS 0H
*---------------------------------------------------------------------*
         TM    OPERATN,VOLMWILD          Q. VOLUME SCAN
         BNO   UNITSCAN                     N. PROCESS UNIT SCAN
VOLUSCAN DS    0H
         LH    R1,UNITLEN                LOAD UNOT LENGTH
         LTR   R1,R1                     Q. ANY LENGTH
         BZ    ADD2TABL                     N. RECORD ('*' ASSUMED)
         BCTR  R1,0                      PREPARE FOR 'EX' COMMAND
         EX    R1,COMPVOLU               Q. VOLUME NAME EQUAL
         BE    ADD2TABL                     Y. RECORD ENTRY
         B     SCANLOOP                  LOOP TILL END
                                                                SPACE 1
UNITSCAN DS    0H
         HEXCHMAC UCBDATA+4,DWORK8,2,MF=E
         LH    R1,UNITLEN                LOAD UNOT LENGTH
         LTR   R1,R1                     Q. ANY LENGTH
         BZ    ADD2TABL                     N. RECORD ('*' ASSUMED)
         BCTR  R1,0                      PREPARE FOR 'EX' COMMAND
         EX    R1,COMPUNIT               Q. UNIT NAME HIGHER
         BL    SCANLOOP                     LOWER  - GET NEXT
         BH    ENDOSCAN                     HIGHER - END SCAN
         B     ADD2TABL                     EQUAL  - RECORD ENTRY
                                                                SPACE 1
ADD2TABL DS    0H
         BAL   R14,IOROUTIN              GO PROCESS I/O ROUTINE
         B     SCANLOOP                  BRANCH TILL RC > 0
                                                                SPACE 1
*---------------------------------------------------------------------*
ENDOSCAN DS    0H
         B     SHOWHITS                  GO AND DISPLAY WHAT FOUND
                                                                SPACE 1
*=====================================================================*
* This section is performed if no wildcards found in the parameter    *
* string. It is assumed that generic unit names are required..        *
*---------------------------------------------------------------------*
GENERIC  DS    0H
         LA    R9,SCANWORK               LOAD WORK AREA ADDRESS
         USING DEVLIST,R9                ESTABLISH ADDRESABILITY
         MVC   DEVLLEN(4),=F'8'          SET AREA SIZE
         XC    DEVL#(4),DEVL#            INITIALISE # RESERVED
         ST    R9,DEVL@                  STORE PARAMETER LIST ADDR
         BAL   R4,GETGENUN               GET GENERIC UNIT
*---------------------------------------------------------------------*
* No need to check return code as it will be 8. The field in question *
* is the number of returned units.                                    *
*    0 - invalid unitname                                             *
*   >0 - gives the number to be used for the getmain                  *
*---------------------------------------------------------------------*
*        LTR   R15,R15                   Q. ZERO RETURN CODE
*        BNZ   EXITPROG                     N. PROCESS NEXT DEVICE
*---------------------------------------------------------------------*
         L     R2,DEVL#                  LOAD NO OF UNITS RETURNED
         LTR   R2,R2                     Q. ANY RETURNED
         BZ    INVALUNT                     N. EXIT WITH ERROR
         LA    R2,10(R2)                 ADD 10 BUFFER
         LR    R3,R2                     KEEP # OF ENTRIES REQUIRED
         SLL   R2,2                      MULTIPLY BY 4
         LA    R2,8(R2)                  ADD HEADER LENGTH
         GETMAIN R,LV=(R2),LOC=ANY       GETMAIN AREA
         ST    R1,DEVL@                  STORE GOTMAINED AREA
         LR    R9,R1                     LOAD ADDRESSING REGISTER
         ST    R2,DEVLLEN                STORE AREA LENGTH
         ST    R3,DEVL#                  SAVE # OF ENTRIES REQUIRED
*---------------------------------------------------------------------*
* Get the eligible devices with the full got area required for        *
* processing by the MVS macro...                                      *
*---------------------------------------------------------------------*
         BAL   R4,GETGENUN               GET GENERIC UNIT
         LTR   R15,R15                   Q. ZERO RETURN CODE
         BZ    PROCESS1                     Y. PROCESS DETAILS
                                                                SPACE 1
         ICM   R2,B'1111',PROGRAM@       Q. PROGRAM POINTER
         BNZ   FREEGOT1                     Y. GO FREE AREA
                                                                SPACE 1
         MVC   GC009,SPACES              INITIALISE MESSAGE AREA
         MVC   GC009(16),=C'ERROR IN EDTINFO' MOVE MESSAGE
         ISPEXEC 'SETMSG MSG(GC009)'     SET ERROR MESSAGE
         B     FREEGOT1                  GO FREE AREA
                                                                SPACE 1
PROCESS1 DS    0H
         L     R7,DEVL#                  LOAD NO OF DEVICES RETURNED
         LA    R6,DEVICES                LOAD NO OF DEVICES RETURNED
*---------------------------------------------------------------------*
LOOP1    DS    0H
         MVC   SPFUCB#(4),0(R6)          MOVE UCB TO OUTPUT FIELD
         CLI   SPFUCB#,C' '              Q. LEADING SPACE
         BNE   NOTSPC1                      N. BYPASS
         MVI   SPFUCB#,C'0'              MOVE IN LEADING SPACE
NOTSPC1  DS    0H
         CHHEXMAC SPFUCB#,DEV#,4,'00',MF=E,LIST=Y  CHAR TO HEX
         XC    SCANWORK,SCANWORK         INITIALISE UCBSCAN WORK AREA
         L     R15,SCANRTN@              LOAD SCAN ROUTINE ADDRESS
         BALR  R4,R15                    BRANCH TO THE SCAN ROUTINE
         LTR   R15,R15                      Q. END OF SCAN
         BNZ   EXITPROG                        Y. EXIT LOOP
         BAL   R14,IOROUTIN              GO PROCESS I/O ROUTINE
         LA    R6,4(R6)                  POINT TO NEXT UCB POINTER
         BCT   R7,LOOP1                  LOOP TILL END
*---------------------------------------------------------------------*
                                                                SPACE 1
FREEGOT1 DS    0H
         L     R1,DEVL@                  LOAD GOT AREA ADDRESS
         L     R2,DEVLLEN                LOAD GOT AREA LENGTH
         FREEMAIN R,LV=(R2),A=(R1)
                                                                SPACE 1
*---------------------------------------------------------------------*
ENDGENUN DS    0H
*        B     SHOWHITS                  GO AND DISPLAY WHAT FOUND
                                                                SPACE 1
SHOWHITS DS    0H
         ICM   R2,B'1111',PROGRAM@       Q. PROGRAM POINTER
         BNZ   EXITPROG                     Y. EXIT PROGRAM
         ISPEXEC 'VPUT SPFPARM SHARED'
         CLI   KEEPTB+1,C'Y'             Q. KEEP TABLE REQUESTED
         BE    EXITPROG                     Y. EXIT PROGRAM
         BAL   R14,TBDISPLY              GO DISPLAY TABLE
         LTR   R15,R15                   Q. ZERO RETURN CODE
         BE    STRTAGIN                     Y. REPET PROCESS
         ISPEXEC 'TBEND &&DSTABLE'       END TABLE WITHOUT SAVE
         MVC   DSTABLE,DSTABLE#          RESTORE TABLE
         ISPEXEC 'VPUT DSTABLE SHARED'   RESTORE TANBLE NAME
                                                                SPACE 1
EXITPROG DS    0H
         RACKOFF RC=0
                                                                SPACE 1
*=====================================================================*
* Invalid 'generic unit' processed. Assume volume required and add a  *
* '*' at the end, up length and process as a wildcarded volume        *
* request.                                                            *
*---------------------------------------------------------------------*
INVALUNT DS    0H
         LH    R1,UNITLEN                LOAD ORIGINAL UNIT LENGTH
         LA    R2,UNITNAME               LOAD UNIT NAME
         AR    R2,R1                     POINT PAST UNIT NAME
         MVI   0(R2),C'*'                MAKE IT VOLUME WILDCARD
         LA    R1,1(R1)                  BUMP LENGTH BY 1
         STH   R1,UNITLEN                STORE WILDCARDED LENGTH
         B     STRTAGIN                  REPEAT PROCESS WITH WILDCARD
*        MVC   GC009(25),=C'Invalid generic unit name'
*        ISPEXEC 'SETMSG MSG(GC009)'
*        B     ENDGENUN
                                                                SPACE 1
*=====================================================================*
* Common called macros                                                *
*---------------------------------------------------------------------*
SCANALL  DS    0H
         UCBSCAN COPY,WORKAREA=SCANWORK,DEVCLASS=&ALLSCAN,             +
               DEVN=DEV#,                                              +
               UCBAREA=UCBDATA,                                        +
               UCBPAREA=UCBPDATA,                                      +
               CMXTAREA=CMXTDATA,                                      +
               DCEAREA=DCEAREA,DCELEN=DCEAREAL,                        +
               RANGE=ALL,                                              +
               DYNAMIC=YES,MF=(E,UCB1)
         BR    R4                        RETURN TO CALLED SPOT
*---------------------------------------------------------------------*
SCANDASD DS    0H
         UCBSCAN COPY,WORKAREA=SCANWORK,DEVCLASS=DASD,                 +
               DEVN=DEV#,                                              +
               UCBAREA=UCBDATA,                                        +
               UCBPAREA=UCBPDATA,                                      +
               CMXTAREA=CMXTDATA,                                      +
               DCEAREA=DCEAREA,DCELEN=DCEAREAL,                        +
               RANGE=ALL,                                              +
               DYNAMIC=YES,MF=(E,UCB1)
         BR    R4                        RETURN TO CALLED SPOT
*---------------------------------------------------------------------*
GETDEVT1 DS    0H
         EDTINFO RTNUNIT,                                              +
               DEVTYPE=(R2),                                           +
               OUTUNIT=(R3),                                           +
               EXTENDED=YES,                                           +
               MF=(E,EDT1)
         BR    R4                        RETURN TO CALLED SPOT
*---------------------------------------------------------------------*
GETGENUN DS    0H
         EDTINFO RTNDEVN,                                              +
               UNITNAME=UNITNAME,                                      +
               DEVNLIST=DEVL@,                                         +
               DYNAMIC=YES,                                            +
               RANGE=ALL,                                              +
               MF=(E,EDT1)
         BR    R4                        RETURN TO CALLED SPOT
*             RANGE=3DIGIT,                                           +
                                                                SPACE 1
*=====================================================================*
* Handshaking between the ISPF environment and this program. Also     *
* handshakes with the invoking dialog...                              *
*---------------------------------------------------------------------*
ISPFENV  DS    0H
         STM   R0,14,SAVREGS1            STORE REGISTERS
         ISPEXEC 'CONTROL ERRORS RETURN'
         ISPVDEFX INM=(ZTEMPF),ANM=ZTEMPF,FORMAT=CHAR,LEN=44,MF=E,     X
               LIST=NO
         ISPVDEFX ANM=GC009,INM=(GC009),FORMAT=CHAR,LEN=79,MF=E,       X
               LIST=NO
         ISPVDEFX ANM=SPFZCMD,INM=(ZCMD),FORMAT=CHAR,LEN=79,MF=E,      X
               LIST=NO
         ISPVDEFX ANM=#SELS,INM=(ZTDSELS),FORMAT=CHAR,LEN=4,MF=E,      X
               LIST=NO
         ISPVDEFX ANM=SEL,INM=(SEL),FORMAT=CHAR,LEN=2,MF=E,            X
               LIST=NO
         ISPVDEFX ANM=SPFUCB#,INM=(UCB),FORMAT=CHAR,LEN=4,MF=E,        X
               LIST=NO
         ISPVDEFX ANM=UCB#,INM=(UCB#),FORMAT=CHAR,LEN=2,MF=E,          X
               LIST=NO
         ISPVDEFX ANM=SPFINDEX,INM=(IX),FORMAT=CHAR,LEN=2,MF=E,        X
               LIST=NO
         ISPVDEFX ANM=SPFVOL,INM=(VOL),FORMAT=CHAR,LEN=6,MF=E,         X
               LIST=NO
         ISPVDEFX ANM=SPFCYL1,INM=(FS),FORMAT=CHAR,LEN=10,MF=E,        X
               LIST=NO
         ISPVDEFX ANM=SPFEXTS,INM=(EX),FORMAT=CHAR,LEN=4,MF=E,         X
               LIST=NO
         ISPVDEFX ANM=SPFCYL2,INM=(LE),FORMAT=CHAR,LEN=10,MF=E,        X
               LIST=NO
         ISPVDEFX ANM=SPFDEVT,INM=(DT),FORMAT=CHAR,LEN=8,MF=E,         X
               LIST=NO
         ISPVDEFX ANM=SPFSHARE,INM=(AS),FORMAT=CHAR,LEN=7,MF=E,        X
               LIST=NO
         ISPVDEFX ANM=SPFSTAT1,INM=(MA),FORMAT=CHAR,LEN=9,MF=E,        X
               LIST=NO
         ISPVDEFX ANM=SPFSTAT2,INM=(DS),FORMAT=CHAR,LEN=6,MF=E,        X
               LIST=NO
         ISPVDEFX ANM=SORTPARM,INM=(SP),FORMAT=CHAR,LEN=30,MF=E,       +
               LIST=NO
         ISPVDEFX ANM=SARGPARM,INM=(AP),FORMAT=CHAR,LEN=06,MF=E,       X
               LIST=NO
         ISPVDEFX ANM=GC009,INM=(VOL$),FORMAT=CHAR,LEN=06,MF=E,        X
               LIST=NO
         ISPVDEFX ANM=GC009+6,INM=(UCB$),FORMAT=CHAR,LEN=04,MF=E,      X
               LIST=NO
         ISPVDEFX ANM=RCODE,INM=(RCODE),FORMAT=CHAR,LEN=1,MF=E,        X
               LIST=NO
         ISPVDEFX ANM=SMSFL,INM=(SMSFL),FORMAT=CHAR,LEN=1,MF=E,        X
               LIST=NO
         ISPVDEFX ANM=UCBDATA,INM=(UCBHEX),                            +
               LIST=NO,FORMAT=CHAR,MF=E,LEN=176
         ISPVDEFX ANM=KEEPTB,INM=(KEEPTB),                             +
               LIST=NO,FORMAT=CHAR,MF=E,LEN=1
         ISPVDEFX ANM=WINDOW,INM=(DASDSPCW),                           +
               LIST=NO,FORMAT=CHAR,MF=E,LEN=1
         ISPVDEFX ANM=SPFPARM,INM=(SPFPARM),                           +
               FORMAT=CHAR,MF=E,LIST=NO,LEN=8
         ISPVDEFX ANM=DSTABLE,INM=(DSTABLE),                           +
               FORMAT=CHAR,MF=E,LIST=NO,LEN=8
                                                                SPACE 1
         ISPEXEC 'VGET (KEEPTB DASDSPCW DSTABLE) SHARED'
         MVC   KEEPTB+1(1),KEEPTB        BACKUP KEEP TABLE FLAG
         MVI   KEEPTB,C' '               INITIALISE KEEP TABLE FLAG
         ISPEXEC 'VPUT KEEPTB SHARED'    TURN KEEP TABLE FLAG OFF
         CLI   WINDOW,C'Y'               Q. WINDOW REQUEST
         BNE   CONT#300                     N. BYPASS
         LA    R2,=C'TBDISPL DSPACE PANEL(DASDSPTB)'
         MVI   28(R2),C'W'               MOVE WINDOW IDENTIFIER
CONT#300 DS    0H
         CLI   KEEPTB+1,C'N'             Q. KEEP TABLE REQUESTED
         BE    DEFTBNAM                     N. USE DEFAULT NAME
         CLC   DSTABLE,SPACES            Q. TABLE NAME PASSED
         BNE   CONT#400                     Y. USE IT
DEFTBNAM DS    0H
         MVC   DSTABLE#,DSTABLE          BACKUP TABLE NAME IN CASE OF
*                                          MULTI EXECUTION
         MVC   DSTABLE,=CL8'DSPACE'      SET TABLE NAME
CONT#400 DS    0H
         MVC   SORTPARM,SPACES           INITIALISE SORT PARAMETER
         MVC   SORTPARM(07),=C'VOL,C,A'        "      "     "
         MVC   SARGPARM,=C'VOL,GE'       INITIALISE SARG PARAMETER
         BAL   R14,TABLECRT              GO CREATE TABLE
         LM    R0,14,SAVREGS1            RESTORE REGISTERS
         BR    R14                       RETURN TO CALLER
                                                                SPACE 1
*=====================================================================*
* Create the table..                                                  *
*---------------------------------------------------------------------*
TABLECRT DS    0H
         STM   R0,14,SAVREGS2            STORE REGISTERS
         ISPEXEC 'TBEND &&DSTABLE'
         ISPEXEC 'TBCREATE &&DSTABLE KEYS(UCB# VOL) NAMES(UCB FS LE MA +
               IX EX DT AS DS UCBHEX SMSFL) NOWRITE'
         ISPEXEC 'TBSORT &&DSTABLE FIELDS(&&SP)'
         LM    R0,14,SAVREGS2            RESTORE REGISTERS
         BR    R14                       RETURN TO CALLER
                                                                SPACE 1
*=====================================================================*
* Display the table and process any parameters entered via the        *
* command line. Invoke the user exit routine if any selections are    *
* made against a particular volume..                                  *
*---------------------------------------------------------------------*
TBDISPLY DS    0H
         STM   R0,14,SAVREGS1            STORE REGISTERS
TBDISPPR DS    0H
         ISPEXEC 'TBTOP &&DSTABLE'
DISPSCR1 DS    0H
         MVC   SPFZCMD,SPACES            INITIALISE COMMAND LINE
         ISPEXEC 'TBDISPL &&DSTABLE PANEL(DASDSPTB)'
         CH    R15,=H'8'                 Q. END ENTERED
         BE    ENDTBDSP                     GO CLOSE TABLE
                                                                SPACE 1
         CLC   SPFZCMD(3),=C'/L '        Q. LOCATE REQUESTED
         BE    LOCATEF                      Y. GO AND PRINT
                                                                SPACE 1
         CLC   SPFZCMD(6),=C'/SORT '     Q. SORT REQUESTED
         BNE   TESTCMDS                     Y. NEXT TEST
         ISPEXEC 'TBSORT &&DSTABLE FIELDS(&&SP)'
         B     DISPSCR1                  GO REDISPLAY SCREEN
                                                                SPACE 1
TESTCMDS DS    0H
         CLI   SPFZCMD,C'/'              Q. COMMAND EXIT IDENTIFIER
         BE    PROCCMDS                     Y. PROCESS COMMANDS
                                                                SPACE 1
         CLC   SPFZCMD,SPACES            Q. COMMAND ENTERED
         BNE   PARSECMD                     Y. GO PARSE COMMAND
*---------------------------------------------------------------------*
* Test if any selections made, else refresh details                   *
*---------------------------------------------------------------------*
REFRESH1 DS    0H
         CLI   SEL,C' '                  Q. SELECTION ENTERED
         BNE   TESTSELS                     N. PROCESS SELECTIONS
         B     REFRESH2                  REFRESH CURRENT DETAILS
                                                                SPACE 1
*---------------------------------------------------------------------*
* Parse command line                                                  *
*---------------------------------------------------------------------*
PARSECMD DS    0H
         LA    R3,SPFZCMD+7              POINT TO LAST BYTE OF DATA
         LA    R7,8                      LOOP LIMIT
LOOP#100 DS    0H
         CLI   0(R3),C' '                Q. SPACE DELIMITER FOUND
         BNE   LOOP#10E                     N. EXIT LOOP
         BCTR  R3,0                      POINT TO PREVIOUS CHARACTER
         BCT   R7,LOOP#100               LOOP TILL END
LOOP#10E DS    0H
         BCTR  R7,0                      PREPARE FOR 'EX' COMMAND
         LA    R2,SPFZCMD                POINT TO START OF COMMAND
         MVC   UNITNAME,SPACES           INITIALISE UNIT NAME
         EX    R7,MOVEPARM               MOVE COMMAND
         LA    R7,1(R7)                  RESTORE LENGTH
         STH   R7,UNITLEN                SAVE UNIT LENGTH
         B     REFRESH3                  BYPASS RETORE OF SAVED PARMS
REFRESH2 DS    0H
         MVC   UNITLEN(12),UNITSAVE      RESTORE LENGTH AND PARAMETER
REFRESH3 DS    0H
         BAL   R14,TABLECRT              GO CREATE TABLE
         XR    R15,R15                   INITIALISE RETURN CODE
         B     ENDTBDSP                  GO REFRESG SCREE
                                                                SPACE 1
*---------------------------------------------------------------------*
* Process potential multiple selections                               *
*---------------------------------------------------------------------*
TESTSELS DS    0H
         PACK  DWORK8(8),#SELS(4)        CONVERT # SELECTIONS TO
         CVB   R2,DWORK8                 BINARY
         B     TESTSELD                  BYPASS MULTI SELS FIRST TIME
MULTISEL DS    0H
         ISPEXEC 'TBDISPL &&DSTABLE'
                                                                SPACE 1
*---------------------------------------------------------------------*
* Segregate dedicated selections                                      *
*---------------------------------------------------------------------*
TESTSELD DS    0H
         CLI   SEL,C'X'                Q. EXCLUDE ENTRY FROM TABLE
         BNE   TESTSELX                   N. TEST IF SELECTION MADE
         ISPEXEC 'TBDELETE &&DSTABLE'  DELETE ENTRY
         B     GETNEXTS                TEST IF MORE SELECTIONS
                                                                SPACE 1
TESTSELX DS    0H
*        CLI   SEL,C'X'                Q. EXCLUDE ENTRY FROM TABLE
*        BNE   PROCSEL#                   N. TEST IF SELECTION MADE
*        PDUMP UCBDATA,MSG='Use END PF key to return.',REGS=NO
*        ISPEXEC 'CONTROL DISPLAY REFRESH'
*        B     GETNEXTS                TEST IF MORE SELECTIONS
         B     PROCSEL#                BRANCH TO NO MORE SELECTIONS
                                                                SPACE 1
*---------------------------------------------------------------------*
* Process user exit for selections                                    *
*---------------------------------------------------------------------*
PROCSEL# DS    0H
         ISPEXEC 'CONTROL DISPLAY SAVE'
         ISPEXEC 'VPUT (ZCMD SEL) SHARED'
         ISPEXEC 'SELECT CMD(DSEXIT)'
         ISPEXEC 'VGET RCODE SHARED'
         ISPEXEC 'CONTROL DISPLAY RESTORE'
         CLI   RCODE,C'0'              Q. ZERO RETURN CODE
         BNE   DISPSCR1                   N. STOP FURTHER PROCESSING
         B     GETNEXTS                TEST IF MORE SELECTIONS
                                                                SPACE 1
*---------------------------------------------------------------------*
* Process user exit for commands                                      *
*---------------------------------------------------------------------*
PROCCMDS DS    0H
         ISPEXEC 'CONTROL DISPLAY SAVE'
         ISPEXEC 'VPUT (ZCMD SEL) SHARED'
         ISPEXEC 'SELECT CMD(DSEXIT)'
         ISPEXEC 'VGET RCODE SHARED'
         ISPEXEC 'CONTROL DISPLAY RESTORE'
         B     DISPSCR1                RETURN TO MAIN DISPLAY
                                                                SPACE 1
GETNEXTS DS    0H
         BCTR  R2,0                    DECREMENT COUNTER
         LTR   R2,R2                   Q. END OF MULTI SELECTIONS
         BNZ   MULTISEL                   N. PROCESS NEXT
         B     DISPSCR1                REDISPLAY SCREEN
                                                                SPACE 1
*---------------------------------------------------------------------*
* Loacte specified field                                              *
*---------------------------------------------------------------------*
LOCATEF  DS    0H
         ISPEXEC 'TBVCLEAR &&DSTABLE'  CLEAR VARIABLE IN TABLE
         ISPEXEC 'TBTOP &&DSTABLE'     SCAN FROM START
         MVC   SPFVOL(6),GC009         PASS VARIABLES PASSED FROM PANEL
         MVC   SPFUCB#(4),GC009+6      PASS VARIABLES PASSED FROM PANEL
         ISPEXEC 'TBSARG &&DSTABLE NAMECOND(&&AP)'
         ISPEXEC 'TBSCAN &&DSTABLE'    SCAN TABLE
         B     DISPSCR1                REDISPLAY SCREEN
                                                                SPACE 1
*---------------------------------------------------------------------*
ENDTBDSP DS    0H
         LM    R0,14,SAVREGS1            RESTORE REGISTERS
         BR    R14
                                                                SPACE 1
*=====================================================================*
* This section populates the table from the acquired control block(s) *
*---------------------------------------------------------------------*
IOROUTIN DS    0H
         STM   R9,R14,SAVREGS1           STORE REGISTERS
         MVC   SPFLINE(SPFLENG),SPACES   CLEAR MESSAGE AREA
                                                                SPACE 1
         CLC   =C'SYSRES',UNITNAME       Q. 'SYSRES REQUESTED
         BNE   UCBMSG1                      N. BYPASS SYSRES TEST
         TM    UCBSTAT,UCBSYSR           Q. IS IT SYSRES
         BZ    UCBMSGEX                     N. BYPASS
                                                                SPACE 1
UCBMSG1  DS    0H
         LA    R2,UCBTYP                 UCB TYPE
         LA    R3,SPFDEVT                RETURNED DEVICE TYPE
         BAL   R4,GETDEVT1               GET DEVICE TYPE
                                                                SPACE 1
UCBMSG2  DS    0H
                                                                SPACE 1
*---------------------------------------------------------------------*
* SMS control                                                         *
*---------------------------------------------------------------------*
UCBMSG2A DS    0H
         MVI   SMSFL,C' '                SET SMS CONTROL OFF
         TM    UCBFL5,UCBSMS             Q. SMS CONTROLLED
         BNO   FINSMSCC                     BYPASS
         MVI   SMSFL,C'*'                SET SMS CONTROL ON
FINSMSCC DS    0H
                                                                SPACE 1
*---------------------------------------------------------------------*
* Process mount attribute                                             *
*---------------------------------------------------------------------*
UCBMSG3  DS    0H
         MVC   SPFVOL,UCBVOLI            MOVE VOLUME ID EX UCB
         TR    SPFVOL,TRTABLE            TRANS TO DISPLAYABLE
         MVC   SPFSHARE,=CL9'EXCLUSIVE'  INITIAL DEFAULT
         TM    UCBTBYT2,UCBRR            Q. IS DEVICE SHAREABLE
         BZ    UCBMSG4                      N. NEXT TEST
         MVC   SPFSHARE,=CL9'SHARED'     MOVE SHARED VALUE
                                                                SPACE 1
*---------------------------------------------------------------------*
* Process allocation status                                           *
*---------------------------------------------------------------------*
UCBMSG4  DS    0H
         MVC   SPFSTAT1,=C'STORAGE'
         TM    UCBSTAB,UCBBSTR           Q. STOREGE ALLOCATION STATUS
         BO    UCBMSG5                      Y. NEXT TEST
         MVC   SPFSTAT1,=C'PUBLIC '
         TM    UCBSTAB,UCBBPUB           Q. STOREGE ALLOCATION STATUS
         BO    UCBMSG5                      Y. NEXT TEST
         MVC   SPFSTAT1,=C'PRIVATE'
         TM    UCBSTAB,UCBBPRV           Q. STOREGE ALLOCATION STATUS
         BO    UCBMSG5                      Y. NEXT TEST
         MVC   SPFSHARE,SPACES           CLEAR MOUNT ATTRIBUTE
         MVC   SPFSTAT1,SPACES           NONE OF THE ABOVE
         MVI   SPFSTAT1,C'?'               "   "  "    "
*        B     UCBMSGND                  PREMATURE EXIT
                                                                SPACE 1
*---------------------------------------------------------------------*
* Process device status                                               *
*---------------------------------------------------------------------*
UCBMSG5  DS    0H
         MVC   SPFSTAT2,=CL6'ONLINE'
         TM    UCBSTAT,UCBONLI           Q. IS IT ONLINE
         BO    UCBMSG5A                     Y. BYPASS OFF STATUS
         MVC   SPFSTAT2,=CL6'OFFLNE'
         TM    UCBVOLI,X'FF'             Q. IS DISK MOUNTED
         BNZ   UCBMSG5A                     Y. CONTINUE
         CLC   SPFPARM(4),=C'ALL '       Q. ALL DASD REQUESTED
         BNE   UCBMSGEX                     N. EXIT W/O TABLE UPDATE
         B     UCBMSGND                  PREMATURE EXIT W TABLE UPDATE
UCBMSG5A DS    0H
         TM    UCBSTAT,UCBALOC           Q. IS IT ALLOCATED
         BZ    UCBMSG5B                     N. BYPASS
         MVC   SPFSTAT2,=CL6'ALLOC'
UCBMSG5B DS    0H
         TM    UCBSTAT,UCBSYSR           Q. IS IT SYSRES
         BZ    UCBMSG5C                     N. BYPASS
         MVC   SPFSTAT2,=CL6'SYSRES'
UCBMSG5C DS    0H
         TM    UCBFLA,UCBNRY             Q. IS IT READY
         BZ    UCBMSG5D                     Y. BYPASS NOT READY MSG
         MVC   SPFSTAT2,=CL6'¬READY'
UCBMSG5D DS    0H
         TM    UCBSTAB,UCBPGFL           Q. IS IT PAGING
         BZ    UCBMSG5E                     N. BYPASS
         MVC   SPFSTAT2,=CL6'PAGING'
UCBMSG5E DS    0H
         CLI   UCBSQC,0                  Q. IS IT RESERVED
         BE    UCBMSG5F                     N. BYPASS
         MVC   SPFSTAT2,=CL6'RESRVD'
*        B     UCBMSGND                  BYPASS LSPACE PROCESSING
                                                                SPACE 1
*---------------------------------------------------------------------*
* Use 'LSPACE' macro to get free space details and VTOC Index         *
* eXistance/Active...                                                 *
*---------------------------------------------------------------------*
UCBMSG5F DS    0H
         TM    UCBTBYT3,UCB3DACC         Q. IS IT DIRECT-ACCESS
         BZ    UCBMSGND                     N. BYPASS
         LSPACE UCB=(R10),DATA=GC009,                                  +
               F4DSCB=0,MF=(E,LSP1)
*---------------------------------------------------------------------*
*        TM    EYECATCH,x'02'            Mask 0(R13) with X'02' bypass
*        BNO   CONT$X02
*        LR    R2,R15
*        PDUMPR SPFVOL,ISPI=N,X2CE=NO,MSG='R10 LSPACE,R2=15,R13=EYE'
*        LR    R15,R2
CONT$X02 DS 0H
*---------------------------------------------------------------------*
         LTR   R15,R15                   Q. ZERO RC FROM LSPACE
         BNZ   UCBMSGND                     N. EXIT
         DROP  R10                       DROP A'BILITY TO UCB COMMON
         LA    R10,GC009                 ESTABLISH ADDRESABILITY TO
         USING LSPD1,R10                 LSPACE RETURNED INFORMATION
         L     R1,LSPDTCYL               LOAD TOT FREE CYL
         UNPACK R1,5,SPFCYL1,MF=E        UNPACK INTO OUTAREA
         L     R1,LSPDTTRK               LOAD TOT ADDITIONAL FREE TRKS
         UNPACK R1,4,SPFTRK1,MF=E        UNPACK INTO OUTAREA
         L     R1,LSPDNEXT               LOAD NO. OF FREE EXTENTS
         UNPACK R1,4,SPFEXTS,MF=E        UNPACK INTO OUTAREA
         L     R1,LSPDLCYL               LOAD LARGEST FREE CYL
         UNPACK R1,5,SPFCYL2,MF=E        UNPACK INTO OUTAREA
         L     R1,LSPDLTRK               LOAD LARGEST ADD'L FREE TRKS
         UNPACK R1,4,SPFTRK2,MF=E        UNPACK INTO OUTAREA
         MVI   SPFSLSH1,C'/'             MOVE IN A SLASH
         MVI   SPFSLSH2,C'/'             MOVE IN A SLASH
         TM    LSPDSTAT,LSPDIXDS         Q. INDEXED VTOC
         BZ    UCBMSGND                     N. BYPASS
         MVC   SPFINDEX,=C'IX'           SET INDEXED VTOC FLAG
         TM    LSPDSTAT,LSPDIXAC         Q. INDEXED VTOC ACTIVE
         BZ    UCBMSGND                     N. BYPASS
         MVI   SPFINDEX+1,C'A'           SET INDEXED VTOC ACTIVE
                                                                SPACE 1
UCBMSGND DS    0H
         LA    R10,UCBDATA               RESTORE ADDRESSABILITY TO THE
         USING UCBCMSEG,R10                 UCB COMMON DATA AREA...
*                                           R10 RESTORED BY 'LM' BELOW
         MVC   UCB#(2),UCBDATA+4         SET SORT FIELD
         MVC   SPFUCB#(4),DWORK8         MOVE FROM PREVIOUS CONVERSION
         TM    OPERATN,VOLMWILD          Q. VOLUME SCAN
         BNO   UNITMOVD                     N. HAVE UNIT VALUE (BYPASS)
         HEXCHMAC UCB#,SPFUCB#,2,MF=E    MAKE IT DISPLAYABLE
UNITMOVD DS    0H
*        TM    EYECATCH,X'04'            Mask 0(R13) with X'04' bypass
*        BNO   CONT$X04
*        PDUMPR SPFLINE,ISPI=N,LIST=Y,MF=E,X2CE=NO
CONT$X04 DS 0H
                                                                SPACE 1
*---------------------------------------------------------------------*
* Test to see if invoked from program  (established by +RETDET+ data  *
* area pointer. If found update appropriate storage and bypass table  *
* update.                                                             *
*---------------------------------------------------------------------*
         ICM   R2,B'1111',PROGRAM@       Q. PROGRAM POINTER
         BZ    OBTAINF4                     N. GO PROCESS F4 DSCB
         AP    0(2,R2),=P'1'             BUMP BY 1
         MVC   PRGVOL,SPFVOL             MOVE VOLUME
         MVC   PRGCYL1,SPFCYL1           MOVE FREE CYLYNDERS
         MVC   PRGCYL2,SPFCYL2           MOVE LARGEST FREE CYLINDER
         LA    R8,PRGENTL(R8)            BUMP TABLE PTR BY ENTRY LENGTH
         B     UCBMSGEX                  EXIT ROUTINE
                                                                SPACE 1
*---------------------------------------------------------------------*
* Use the OBTAIN macro to get device size to establish whether it is  *
* a single/double/triple volume...                                    *
*---------------------------------------------------------------------*
OBTAINF4 DS    0H
         MVI   DSN,X'04'                 INITIALISE DSN
         MVC   DSN+1(43),DSN               WITH RIPPLE MOVE
         MVC   SPFDEVT+4(2),=C'/S'       INITIALISE TO SINGLE
         OBTAIN FORMATX                  ISSUE THE OBTAIN MACRO
         LTR   R15,R15                   Q. SUCCESSFUL ?
         BNZ   TABLEADD                     N. GO PROCESS TABLE
         CLC   =C'3330',SPFDEVT          Q. THIS DEVICE TYPE
         BE    TABLEADD                     Y. REPORT AS SINGLE
         CLC   =C'3350',SPFDEVT          Q. THIS DEVICE TYPE
         BE    TABLEADD                     Y. REPORT AS SINGLE
         CLC   =C'3375',SPFDEVT          Q. THIS DEVICE TYPE
         BE    TABLEADD                     Y. REPORT AS SINGLE
         CLC   =C'3380',SPFDEVT          Q. THIS DEVICE TYPE
         BE    PROC3380                     Y. PROCESS 3380
         CLC   =C'3390',SPFDEVT          Q. THIS DEVICE TYPE
         BE    PROC3390                     Y. PROCESS 3380
         MVI   SPFDEVT+5,C'?'            RESET TO UNKNOWN
         B     TABLEADD                  REPORT AS UNKNOWN
PROC3380 DS    0H
         XR    R2,R2                     INITIALISE EVEN PAIR
         LH    R3,DSCBAREA+X'12'         LOAD CYLINDER CAPACITY
         LA    R1,885                    LOAD 3380 SINGLE DENSITY
         B     GETCAPCT                  EVALUATE DENSITY
PROC3390 DS    0H
         XR    R2,R2                     INITIALISE EVEN PAIR
         LH    R3,DSCBAREA+X'12'         LOAD CYLINDER CAPACITY
         LA    R1,1113                   LOAD 3390 SINGLE DENSITY
GETCAPCT DS    0H
         DR    R2,R1                     CALCULATE DENSITY
         LTR   R3,R3                     Q. ZERO QUOTIENT
         BZ    MOVEDENS                     Y. BYPASS -1
         BCTR  R3,0                      RELATIVE DISP INTO ARRAY
MOVEDENS DS    0H
         LA    R2,=C'SDT     9'          LOAD SINGLE/DOUBLE/TRIPLE DEF
         AR    R2,R3                     ADD DISPLACEMENT
         MVC   SPFDEVT+5(1),0(R2)        RESET TO DENSITY
                                                                SPACE 1
TABLEADD DS    0H
         ISPEXEC 'TBADD &&DSTABLE ORDER'
*---------------------------------------------------------------------*
UCBMSGEX DS    0H
*        PDUMP UCBDATA,MSG='Use END PF key to return.',REGS=NO
         LM    R9,R14,SAVREGS1           RESTORE REGISTERS
         BR    R14
                                                                SPACE 1
*=====================================================================*
* EXecuted commands                                                   *
*---------------------------------------------------------------------*
MOVEPARM MVC   UNITNAME(0),0(R2)         MOVE CPPL BUFFER
MOVESTRG MVC   UST(0),UNITNAME           INITIALISE FIRST UCB
*OVESTRG MVC   UST+1(0),UNITNAME         INITIALISE FIRST UCB
COMPVOLU CLC   UNITNAME(0),UCBVOLI       COMPARE VOLUME NAMES
COMPUNIT CLC   UNITNAME(0),DWORK8        COMPARE UNIT NAMES
COMPSTRG CLC   UNITNAME(0),UCBNAME       COMPARE UNIT NUMBERS
                                                                SPACE 1
*=====================================================================*
* Constants                                                           *
*---------------------------------------------------------------------*
         LTORG
SPACES   DC    CL256' '
DCEAREAL DC    AL2(L'DCEAREA)            DEVICE CLASS ARE LENGTH
LSP0     LSPACE MF=L
LSP0L    EQU   *-LSP0
                                                                SPACE 1
TRTABLE  DC    16C'.'                       00-0F
         DC    16C'.'                       10-1F
         DC    16C'.'                       20-2F
         DC    16C'.'                       30-3F
         DC    C' .........¢.<(+|'          40-4F
         DC    C'&&.........!$*);¬'         50-5F
         DC    C'-/........¦,%_>?'          60-6F
         DC    C'..........:#@''="'         70-7F
         DC    C'.abcdefghi......'          80-8F
         DC    C'.jklmnopqr......'          90-9F
         DC    C'.~stuvwxyz......'          A0-AF
         DC    16C'.'                       B0-BF
         DC    C'{ABCDEFGHI......'          C0-CF
         DC    C'}JKLMNOPQR......'          D0-DF
         DC    C'\.STUVWXYZ......'          E0-EF
         DC    C'0123456789......'          F0-FF
PDUMPRC  DS    0F
         PDUMPR MF=L,ISPI=NO,X2CE=NO,LIST=Y,TYPE=CON  <======
PDUMPRCL EQU   *-PDUMPRC
*
                                                                SPACE 1
*=====================================================================*
* DSECTS                                                              *
*---------------------------------------------------------------------*
WORKAREA DSECT
         DS    18F                       REGISTER SAVE AREA
EYECATCH DC    X'07'                     Do not DUMPR
         DC    CL15'X<----EYECATCH'
SAVREGS1 DS    16F                       REGISTER SAVE AREA
SAVREGS2 DS    16F                       REGISTER SAVE AREA
DEVL@    DS    F                         DEVICE LIST POINTER
SCANRTN@ DS    F                         SCAN ROUTINE ADDRESS
PARM@    DS    F                         STORED CPPL ADDRESS
PROGRAM@ DS    F                         PROGRAM PARAMETER LIST
FULLWORD DS    F                         STORED CPPL ADDRESS
                                                                SPACE 1
FORMATX  DS    0F                                ALIGN ON FULL WORD     01-CAMLS
         DC    AL1(193)                          THREE BYTES OF FLAGS   01-CAMLS
         DC    AL1(0)                            INDICATING THE FUNC-   01-CAMLS
         DC    AL1(0)                            TION TO BE PERFORMED   01-CAMLS
         DC    AL1(0)                            NO OPTION THREE        01-CAMLS
         DC    A(DSN)                            PARAMETER TWO          01-CAMLS
         DC    A(SPFVOL)                         PARAMETER THREE        01-CAMLS
         DC    A(DSCBAREA)                       PARAMETER FOUR         01-CAMLS
FORMATXL EQU   *-FORMATX
                                                                SPACE 1
UNITLEN  DC    H'8'                      UNIT NAME LENGTH
UNITNAME DC    CL8'SYSALLDA'             UNIT NAME USED IN EDTINFO
UNITSAVE DC    H'8',CL8'SYSALLDA'        COPY OF INITIAL PARAMETERS
SPFPARM  DC    CL8'SYSALLDA'             UNIT NAME USED IN SPF DISPLAY
UST      DC    CL4'0000'                 STARTING UCB FOR SCAN
DEV#     DS    XL2                       STARTING UCB FOR SCAN
UCB#     DS    XL2                       STARTING UCB FOR SCAN
OPERATN  DS    CL1                       OPERATION FLAG
VOLMWILD EQU   X'01'                     VOLUME WILD CARD INDICATOR
STRGWILD EQU   X'02'                     STRING WILD CARD INDICATOR
DSTABLE  DC    CL8'DSPACE'               TABLE NAME
DSTABLE# DC    CL8'DSPACE'               BACKUP TABLE NAME
KEEPTB   DC    CL2'NN'                   KEEP TABLE INDICATOR
WINDOW   DS    CL1                       ADDPOP WINDOW INDICATOR
DWORK8   DS    D                         DOUBLE WORD WORK AREA
         DS    0D                        DOUBLE WORD ALLIGNMENT 4 UCB
WORK1    DS    0CL176                    DOUBLE UP AS A WORK AREA
UCBDATA  DS    CL48                      RETURNED UCB
CMXTDATA DS    CL32                      RETURNED UCB COMMON EXTENSION
DCEAREA  DS    CL48                      RETURNED UCB DEV CL EXTENSION
UCBPDATA DS    CL48                      RETURNED UCB PREFIX DATA
                                                                SPACE 1
SCANWORK DS    CL100                     WORK AREA
DSCBAREA DS    CL140                     RETURNED DATA FROM OBTAIN
                                                                SPACE 1
*---------------------------------------------------------------------*
                                                                SPACE 1
SPFLINE  DS    0F                        FULL LINE IF OTHER OUTPUT
SPFUCB#  DC    CL1'0'                    UCBNAME
SPFUCB   DC    CL3' '                       "
         DC    CL1' '
SPFINDEX DC    CL2' '                    VTOC INDEX INDICATOR
         DC    CL1' '
SPFVOL   DC    CL6' '                    VOLUME
         DC    CL2' '
SPFCYL1  DC    CL5' '                    FREE CYLINDERS
SPFSLSH1 DC    CL1' '                    SEPERATOR
SPFTRK1  DC    CL4' '                    FREE TRACKS
         DC    CL2' '
SPFEXTS  DC    CL4' '                    NUMBER OF EXTENTES
         DC    CL1' '
SPFCYL2  DC    CL5' '                    LARGEST FREE CYLINDERS
SPFSLSH2 DC    CL1' '                    SEPERATOR
SPFTRK2  DC    CL4' '                    LARGEST FREE TRACKS
         DC    CL2' '
SPFDEVT  DC    CL8' '                    DEVICE TYPE
         DC    CL1' '
SPFSHARE DC    CL9' '                    MOUNT ATTRIBUTE
         DC    CL2' '
SPFSTAT1 DC    CL7' '                    ALLOCATION STATUS
         DC    CL2' '
SPFSTAT2 DC    CL6' '                    DEVICE STATUS
         DC    CL1' '
SMSFL    DC    CL1' '                    SMS CONTROL FLAG
         DC    CL6' '
SPFLENG  EQU   *-SPFLINE                 LINE LENGTH
                                                                SPACE 1
#SELS    DC    CL4' '                    MULTIPLE SELECTIONS COUNTER
SEL      DC    CL2' '                    SELECTION CODE
TRACE    DC    CL1'Y'                    TRACE FLAG (USED FOR 'PDUMP')
SPFZCMD  DC    CL79' '                   ISPF'S ZCMD
DSN      DS    0CL44                     DOUBLE UP AS FORMAT 4 DSNAME
WORK2    DS    0CL79                     DOUBLE UP AS A WORK AREA
GC009    DC    CL79' '                   GENERIC ISPF MESSAGE AREA
RCODE    DS    C                         RETURN CODE FROM DSUEXIT
SORTPARM DC    CL30'VOL,C,A'             SORT PARAMETER FOR TBSORT
SARGPARM DC    CL6'VOL,GE'               SCAN PARAMETER FOR TBSARG
ZTEMPF   DC    CL44' '                   TEMP FILE NAME USED FOR 'PRNT'
                                                                SPACE 1
         UNPACK   MF=L,LIST=YES          UNPACK REG TO STORAGE
         CHHEXMAC MF=L,LIST=YES          CHARACTER TO HEX CONVERSION
         HEXCHMAC MF=L,LIST=YES          HEX TO CHARACTER
         ISPEXEC  MF=L,INIT=Y,LIST=YES   INITIALISE ISPF ENVIRONMENT
         ISPVDEFX MF=L,LIST=YES          DEFINE A'BILITY TO ISPF VARS
PDUMPRV DS     0F                                    <======
*<====  PDUMPR MF=L,ISPI=NO,X2CE=NO,LIST=Y,TYPE=VAR  <======
                                                                SPACE 1
         EDTINFO MF=(L,EDT1)             EDTINFO
         UCBSCAN MF=(L,UCB1)             UCBSCAN
LSP1     LSPACE  MF=L                    LSPACE
                                                                SPACE 1
*=====================================================================*
WORKAREL EQU   *-WORKAREA
                                                                SPACE 1
LSPD1    LSPACE MF=(D,DATA)              LSPACE DSECT
                                                                SPACE 1
         IEFUCBOB ,                      UCB DSECT
                                                                SPACE 1
DEVLIST  DSECT ,                         LIST FOR EDTINFO RETURN
DEVLLEN  DS    F                         LENGTH OF GOT AREA
DEVL#    DS    F                         NUMBER OF DEVICES
DEVICES  DS    0F                        4 BYTE DEVICES X DEVL#
                                                                SPACE 1
PROGRAM$ DSECT ,                         DESIGNED TO SIMULATE THE
PRGPARML DS    H                            FORMAT OF PARAMETER ENTRY
PRGPARM  DS    CL8                          LENGTH + PARAMETER
PRGRDATA DS    CL16002                   PROGRAM RETURN DATA
         ORG   PRGRDATA
PRG#ENT  DS    H                         NUMBER OF RETURNED ENTRIES
PRGVOL   DC    CL6' '                    VOLUME
PRGCYL1  DC    CL5' '                    FREE CYLYNDERS
PRGCYL2  DC    CL5' '                    LARGEST FREE CYLINDER
*ILLER   DC    CL2' '    <------ FILLER USED TO PAD OUT DATA
PRGENTL  EQU   *-PRGVOL                  TABLE ENTRY LENGTH
         ORG
                                                                SPACE 1
         IKJCPPL COMMAND                 PROCESSOR PARAMETER LIST
         END
