*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
*
**  TITLE:    'DSN ALLOCATIONS'
**  SYSTEM:   N/A
**  MODULE:   DSNALLOC
**  PROGRAM:  DSNALLOC
**  FUNCTION: Formats the TOIT into an ISPF displayable table.
**
**            Parameters:
**              The following input parameters (variables) may be
**              passed by the invoking dialog through the ISPF
**              shared variable pool. The brackets contain max
**              length:
**
**               DD       (08) - DDNAME if only the concatenations
**                               for a particular ddname is req'd
**               PANELID  (08) - Panelid to display the table. the
**                               default panelid is 'ISPFALC1'.
**               TABLE    (08) - Table name. This should be passed
**                               by the calling dialog. Default
**                               value is '$Ttime' to permit
**                               multiple invocation at the same
**                               time.
**               ALL      (03) - Set to 'ALL' to indicate full
**                               display. Without this parameter
**                               setting, only the first dataset
**                               in each concatenation will be
**                               displayed.
**               NULL     (03) - Set to 'NULL' to indicate that
**                               NULLFILEs are to be displayed any
**                               outher value will not process
**                               them.
**               KEEP     (03) - When set to 'Yes', indicates that
**                               the table is to be created, and
**                               passed back to the dialog without
**                               displaying it. It is up to the
**                               dialog to display and close the
**                               table. If this parameter is set
**                               and the table parameter is
**                               missing, this parameter will be
**                               turned off as the dialog will
**                               not know the internally generated
**                               table name.
**                               If this parameter is off, the
**                               table will be displayed by this
**                               program using the default panelid
**              The following output parameters (variables) may be
**              passed to the invoking dialog in case of a non
**              zero return code:
**
**               GC009    (79) - Error message.
**
**              The table will be created with the following
**              fields:
**              Keys :
**               DD       (08) - DD.
**               DDNAME   (08) - DDNAME.
**               DSN      (44) - Dataset name.
**               IND      (04) - Marking indicator.
**               NUM      (05) - Number of datasets in the concat.
**                               For ALL=ALL, this will be the
**                               datasets POsition in the concat
**                               followed by TOtal no in concat,
**                               ie. PO/TO
**              Names:
**               VOLUME   (08) - Volume dataset allocated resides
**                               on.
**               SNUM     (05) - Sort number. same format as the
**                               pp/tt format of NUM.
**
**              Output - return code:
**                         0 - table created and ready to process
**                         8 - error occured creating table
**
**            Program is re-entrant.
**            Must be Amode 31 for SWAREQ macro.
**
**  AUTHOR:   ASYSTS P/L (A. Kara).
*
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
         PRINT OFF
         COPY  @MACROS                 COMMON MACROS
         PRINT ON
DSNALLOC KICKOFF (R11,R12),WORKAREA,WORKAREL,LIST=NO,AMODE=31
                                                                SPACE 1
*---------------------------------------------------------------------*
* INITIALISE FIELDS                                                   *
*---------------------------------------------------------------------*
         MVC   NULL,SPACES             TURN NULL REPORT OFF
         MVC   IND,SPACES              TURN INDICATOR MARK OFF
         MVI   TRACE,C'Y'              TURN TRACE ON
         MVI   FIRSTIME,C'Y'           SET FIRST TIME FLAG
         MVI   ALL,C'A'                DISPLAY ALL
         MVI   EOT,C'N'                END OF TIOT OFF
         MVI   SEPR,C'/'               MOVE SEPERATOR
         MVC   GC009,SPACES            INITIALISE MESSAGE FIELD
         XC    RCODE,RCODE             INITIALISE RETURN CODE
         MVC   TBEND2(TBEND1L),TBEND1     COPY INTO GETMAIN'ED AREA
         MVC   TBCRE2(TBCRE1L),TBCRE1     COPY INTO GETMAIN'ED AREA
         MVC   TBADD2(TBADD1L),TBADD1     COPY INTO GETMAIN'ED AREA
         MVC   TBTOP2(TBTOP1L),TBTOP1     COPY INTO GETMAIN'ED AREA
         MVC   TBDISP2(TBDISP1L),TBDISP1  COPY INTO GETMAIN'ED AREA
         MVC   TBSORT2(TBSORT1L),TBSORT1  COPY INTO GETMAIN'ED AREA
                                                                SPACE 1
         LA    R0,PROCESTA             LOAD ADDRESS OF VARIABLE
         LA    R1,ESTAECNL             LOAD LENGTH OF VARIABLE
         LA    R14,ESTAECN             LOAD  SOURCE ADDRESS
         XR    R15,R15                 CLEAR SOURCE LENGTH
         ICM   R15,B'1000',=C' '       MOVE PAD CHARACTER
         MVCL  R0,R14                  MOVE ESTAE CODE
                                                                SPACE 1
*---------------------------------------------------------------------*
* INITIALISE ISPF INTERFACE                                           *
*---------------------------------------------------------------------*
         ISPEXEC MF=E,INIT=Y
         ISPVDEFX ANM=DD,                                              +
               LEN=8,FORMAT=CHAR,MF=E,INM=(DD)
         ISPVDEFX ANM=DDNAME,                                          +
               LEN=8,FORMAT=CHAR,MF=E,INM=(DDNAME),
         ISPVDEFX ANM=DSNAME,                                          +
               LEN=44,FORMAT=CHAR,MF=E,INM=(DSN)
         ISPVDEFX ANM=NUM,                                             +
               LEN=7,FORMAT=CHAR,MF=E,INM=(NUM)
         ISPVDEFX ANM=DISP,                                            +
               LEN=3,FORMAT=CHAR,MF=E,INM=(DISP)
         ISPVDEFX ANM=NULL,                                            +
               LEN=4,FORMAT=CHAR,MF=E,INM=(NULL)
         ISPVDEFX ANM=IND,                                             +
               LEN=4,FORMAT=CHAR,MF=E,INM=(IND)
         ISPVDEFX ANM=KEEP,                                            +
               LEN=3,FORMAT=CHAR,MF=E,INM=(KEEP)
         ISPVDEFX ANM=SNUM,                                            +
               LEN=7,FORMAT=CHAR,MF=E,INM=(SNUM)
         ISPVDEFX ANM=VOLUME,                                          +
               LEN=6,FORMAT=CHAR,MF=E,INM=(VOLUME)
         ISPVDEFX ANM=TABLE,                                           +
               LEN=8,FORMAT=CHAR,MF=E,INM=(TABLE)
         ISPVDEFX ANM=TBDISP2+23,                                      +
               LEN=8,FORMAT=CHAR,MF=E,INM=(PANELID)
         ISPVDEFX ANM=GC009,                                           +
               LEN=79,FORMAT=CHAR,MF=E,INM=(GC009)
         ISPVDEFX ANM=ALL,                                             +
               LEN=3,FORMAT=CHAR,MF=E,INM=(ALL)
                                                                SPACE 1
         ISPEXEC 'VGET (TABLE KEEP ALL DDNAME PANELID NULL) SHARED'
         MVC   TARGET,DDNAME           MOVE REQUESTED DD
                                                                SPACE 1
*---------------------------------------------------------------------*
* TEST AND INITIALISED MISSING PARAMETERS                             *
*---------------------------------------------------------------------*
         CLI   TBDISP2+23,C' '         Q. PANELID PARAMETER PASSED
         BNE   TSTTABLE                   Y. NEXT TEST
         MVC   TBDISP2+23(8),=CL8'ISPFALC1'
TSTTABLE DS    0H
         CLI   TABLE,C' '              Q. TABLE NAME PARAMETER PASSED
         BNE   MOVTABLE                   Y. NEXT TEST
         CLI   KEEP,C'Y'               Q. KEEP REQUESTED W/O TABLE NAME
         BNE   SETTABLE                   N. PROCESS PANELID
         MVI   KEEP,C'N'               TURN KEEP OFF
         MVC   GC009(40),=C'KEEP TURNED OFF AS NO TABLE-NAME PASSED.'
         ISPEXEC 'SETMSG MSG(GC009)'
         MVC   RCODE(2),=H'8'          SET RETURN CODE
SETTABLE DS    0H
*
* CALCULATE TIME FOR UNIQUE DDNAME                             *
*
         TIME  DEC                     GET TIME  => IN R0
         ST    R0,WORK1                SAVE TIME IN FULLWORD
         HEXCHMAC WORK1,WORK1+10,3,MF=E CONVERT HEX TO CHARACTER
         MVC   TABLE+2(2),WORK1+10     INSERT HH
         MVC   TABLE+4(2),WORK1+12     INSERT MM
         MVC   TABLE+6(2),WORK1+14     INSERT SS
         MVC   TABLE(2),=C'$T'         SET TABLE PREFIX
MOVTABLE DS    0H
         MVC   TBEND2+6(8),TABLE       MOVE TABLE NAME TO COMMAND
         MVC   TBCRE2+9(8),TABLE       MOVE TABLE NAME TO COMMAND
         MVC   TBADD2+6(8),TABLE       MOVE TABLE NAME TO COMMAND
         MVC   TBTOP2+6(8),TABLE       MOVE TABLE NAME TO COMMAND
         MVC   TBDISP2+8(8),TABLE      MOVE TABLE NAME TO COMMAND
         MVC   TBSORT2+7(8),TABLE      MOVE TABLE NAME TO COMMAND
*---------------------------------------------------------------------*
FININIT  DS    0H
         ISPEXEC 'CONTROL ERRORS RETURN'
         ISPEXEC TBEND2,TBEND1L
         ISPEXEC TBCRE2,TBCRE1L
         LTR   R15,R15                 Q. TABLE CREATED
         BZ    SORTTABL                   Y. GO SORT IT
         STH   R15,RCODE               STORE CREATE RETURN CODE
         MVC   GC009(28),=C'ERROR CREATING TABLE. RC=...'
         UNPACK R15,2,WORK1,MF=E       UNPACK RETURN CODE IN WORK FIELD
         MVC   GC009+25(2),WORK1       MOVE RETURN CODE
         B     EXITPROG                EXIT PROGRAM
SORTTABL DS    0H
         ISPEXEC TBSORT2,TBSORT1L
                                                                SPACE 1
*---------------------------------------------------------------------*
* GET TIOT FROM JOBSTEP TCB                                           *
*---------------------------------------------------------------------*
         XR    R7,R7                   INITIALISE COUNTER
         L     R1,X'21C'               CURRENT TCB (SHOULD BE MINE)
         L     R1,X'7C'(R1)            JOBSTEP TCB (SHOULD BE MINE)
         L     R3,X'0C'(R1)            TIOT ADDRESS
*---------------------------------------------------------------------*
* PREPARE FOR ABEND (ADDRESSING EXCEPTION) CAPTURE                    *
*---------------------------------------------------------------------*
         STM   R3,R13,BASES#1          STORE MAIN REGISTERS IF ESTAE
         LA    R1,CONT#11              RETURN ADDRESS
         ST    R1,ESTAERTN             STORE RETURN ADDRESS
         LA    R5,PROCESTA
         ESTAE (5)                     TRAP "ABEND"
                                                                SPACE 1
*---------------------------------------------------------------------*
* LOOP THROUGH THE TIOT                                               *
*---------------------------------------------------------------------*
OUTLOOP  DS    0H
         USING TIOT,R3                 ADDRESABILITY TO TIOT
         XR    R1,R1                   CLEAR REGISTER
         IC    R1,TIOELNGH             LOAD TIO ENTRY LENGTH
         LTR   R1,R1                   Q. = 0 (END OF CHAIN)
         BZ    ENDTIOT                    Y. EXIT OUTER LOOP
         STH   R1,ELENGTH              STORE ENTRY LENGTH
         TM    TIOESTTA,TIOSLTYP       Q. FREED TIOT ENTRY
         BO    CONT#11                    Y. EXIT LOOP
*        XR    R5,R5                   CLEAR REGISTER
*        ICM   R5,B'0111',TIOEJFCB     LOAD TIO ENTRY'S JCFB ADDRESS
*        LTR   R5,R5                   Q. = 0 (END OF CHAIN
*        BZ    ENDTIOT                    Y. EXIT OUTER LOOP
         CLC   TIOEDDNM,SPACES         Q. DD NAME MISSING
         BE    SAMEASPR                   Y. UNDER CONCATENATION
                                                                SPACE 1
*---------------------------------------------------------------------*
* CHANGE IN DDNAME ENCOUNTERED. IF NOT FIRST TIME THROUGH, BUILD      *
* TABLE IF REQUIRED.                                                  *
*---------------------------------------------------------------------*
         CLI   FIRSTIME,C'Y'           Q. FIRST TIME THROUGH
         BNE   NOTFIRST                   N. BYPASS
         MVI   FIRSTIME,C'N'           TURN 1ST TIME THRU FLAG OFF
         B     INITPTRS                BYPASS
ENDTIOT  DS    0H
         MVI   EOT,C'Y'                SET END OF TIOT FLAG
NOTFIRST DS    0H
         LA    R2,1                    SEQUENCE NUMBER
         UNPACK R6,3,LIM,MF=E          UNPACK LIMIT
         LA    R8,WORK1
         MVC   DD,LDDNAME              MOVE LAST DDNAME
ADDLOOP  DS    0H
         CR    R2,R6                   Q. LIMIT REACHED
         BH    INITPTRS                   Y. EXIT LOOP
         UNPACK R2,3,SNUM,MF=E         UNPACK SEQUENCE NUMBER
         MVC   DSNAME,6(R8)            MOVE DSNAME TO OUTPUT AREA
         MVC   DISP,50(R8)             MOVE DISP TYPE
         MVC   NUM,SNUM                MOVE SORT NUMBER
         CLI   ALL,C'A'                Q. ALL REQUESTED
         BE    MOVEVOL                    Y. GO MOVE VOLUME
         MVC   NUM,SPACES              CLEAR FIELD
         MVC   NUM-2(4),PATRN1         MOVE EDIT PATTERN TO DEST
         PACK  DWORK8(8),LIM(3)        PACK CONCAT #
         ED    NUM-2(4),DWORK8+6       EDIT OVER PATTERN
MOVEVOL  DS    0H
         MVC   VOLUME,0(R8)            1ST. VOLUME ID
         MVC   DDNAME,LDDNAME          MOVE LAST DDNAME
         CLC   0(6,R8),=C'FREED =>'    Q. DD FREED
         BNE   TBADDIT                    N. BYPASS DD INIT
         CLI   ALL,C'A'                Q. REPROT ALL DATASETS
         BNE   INITPTRS                   N. BYPASS
         MVC   DDNAME,=C'FREED =>'     SET FREED INDICATOR
         MVC   VOLUME,SPACES           CLEAR VOLUME
TBADDIT  DS    0H
         ISPEXEC TBADD2,TBADD1L        ADD TABLE ENTRY
         CLI   ALL,C'A'                Q. REPROT ALL DATASETS
         BNE   INITPTRS                   N. BYPASS
         MVC   DD,=C'  "  "  '         CLEAR LAST DDNAME
         LA    R8,56(R8)               INCREMENT DESTINATION POINTER
         LA    R2,1(R2)                UP CONCATS PROCESSED
         B     ADDLOOP                 LOOP TILL END
INITPTRS DS    0H
         CLI   EOT,C'Y'                Q. END OF TIOT
         BE    OUTLOOPE                   Y. EXIT LOOP
         XR    R6,R6                   INIT CONCATENATION COUNTER
         LA    R8,WORK1                DESTINATION OF TEMP DATA
         MVC   LDDNAME,TIOEDDNM        MOVE DD NAME TO SAVEAREA
                                                                SPACE 1
*---------------------------------------------------------------------*
* CONCATENATIONS. CHECK FOR SPECIFIC DDNAME REQUESTED. MOVE TO WORK   *
* AREA.                                                               *
*---------------------------------------------------------------------*
SAMEASPR DS    0H
         CLC   TARGET,SPACES           Q. ANY TARGET SPECIFIED
         BE    NOTGTST2                   N. BYPASS TARGET TEST
         CLC   LDDNAME,TARGET          Q. MATCH ON TARGET
         BNE   CONT#11                    N. BYPASS PROCESSING
NOTGTST2 DS    0H
         MVC   0(56,R8),SPACES         INITIALISE DESTINATION
         STM   R3,R13,BASES#1          STORE MAIN REGISTERS
*---------------------------------------------------------------------*
*        XR    R5,R5                   CLEAR REGISTER
*        ICM   R5,B'0111',TIOEJFCB     LOAD TIO ENTRY'S JCFB ADDRESS
*        CLI   TIOEJFCB,X'00'          Q. HIGH ORDER BYTE ZERO
*        BNE   GOTJFCB                    N. BYPASS ALTERNATE GET
*---------------------------------------------------------------------*
         LA    R7,EPA                  GET ADDRESS OF EPA
         ST    R7,SWEPAPTR             INITIALISE EPA POINTER
         USING ZB505,R7                ESTABLISH ADDRESABILITY TO EPA
         XC    SWAEPAX,SWAEPAX         INITIALISE THE EPAX
         MVC   SWVA,TIOEJFCB           MOVE SVA OF JFCB INTO EPA
         SWAREQ FCODE=RL,EPA=SWEPAPTR,MF=(E,SWAPARMS), LOCATE THE JFCB +
               UNAUTH=YES
         L     R5,SWBLKPTR             POINT TO JFCB
         SH    R5,=H'16'               BACK UP TO START OF JFCB
*---------------------------------------------------------------------*
GOTJFCB  DS    0H
         USING JFCB,R5                 ADDRESABILITY TO JFCB
         CLC   NULL(4),=C'NULL'        Q. REPORT NULL FILES
         BE    NOTGTST3                   Y. BYPASS NULLFILE TEST
         CLC   JFCBDSNM(06),=C'NULLFILE ' Q. DSN=NULLFILE
         BE    CONT#11                       Y. BYPASS PROCESSING
NOTGTST3 DS    0H
         MVC   6(44,R8),JFCBDSNM       MOVE DSNAME TO OUTPUT AREA
         MVC   0(6,R8),JFCBVOLS        1ST. VOLUME ID
         TM    TIOESTTA,TIOSLTYP       Q. DATASET BEEN FREED
         BNO   TESTTEMP                   N. BYPASS
         DROP  R3
         MVC   0(6,R8),=C'FREED =>'    MOVE FREED INFICATOR
TESTTEMP DS    0H
         TM    JFCBIND2,JFCTEMP        Q. DISP = TEMP (2 B DELETED)
         BNO   TESTSHR                    N. BYPASS
         CLI   ALL,C'A'                Q. REPROT ALL DATASETS
         BNE   CONT#11                    Y. BYPASS REPORTING TEMP
         MVC   50(3,R8),=C'TMP'        MOVE DISP TYPE
         B     ADDTABLE                CONTINUE
TESTSHR  DS    0H
         TM    JFCBIND2,JFCSHARE       Q. DISP = SHR
         BNO   TESTOLD                    N. NEXT TEST
         MVC   50(3,R8),=C'SHR'        MOVE DISP TYPE
         B     ADDTABLE                CONTINUE
TESTOLD  DS    0H
         TM    JFCBIND2,JFCOLD         Q. DISP = OLD
         BNO   TESTMOD                    N. NEXT TEST
         MVC   50(3,R8),=C'OLD'        MOVE DISP TYPE
         B     ADDTABLE                CONTINUE
TESTMOD  DS    0H
         TM    JFCBIND2,JFCMOD         Q. DISP = MOD
         BNO   TESTTMP                    N. NEXT TEST
         MVC   50(3,R8),=C'MOD'        MOVE DISP TYPE
         B     ADDTABLE                CONTINUE
TESTTMP  DS    0H
         TM    JFCBIND2,JFCTEMP        Q. DISP = TEMP (2 B DELETED)
         BNO   MUSTBNEW                   N. NEXT TEST
         MVC   50(3,R8),=C'TMP'        MOVE DISP TYPE
         B     ADDTABLE                CONTINUE
MUSTBNEW DS    0H
         MVC   50(3,R8),=C'NEW'        MOVE DISP TYPE
ADDTABLE DS    0H
         DROP  R5
         LA    R6,1(R6)                UP INTERNAL DD COUNTER
         LA    R7,1(R7)                INCREMENT COUNTER
         UNPACK R7,3,DWORK8,MF=E       UNPACK NUMBER
         MVC   53(3,R8),DWORK8         MOVE NUMBER
         LA    R8,56(R8)               NET TABLE ENTRY
CONT#11  DS    0H
         AH    R3,ELENGTH              UP SOURCE BY LENGTH OF ENTRY
         B     OUTLOOP                 GET NEXT RECORD
                                                                SPACE 1
*---------------------------------------------------------------------*
* END OF TIOT, WITH ALL WORK RECORDS PLACED IN TABLE.                 *
*---------------------------------------------------------------------*
OUTLOOPE DS    0H
         ESTAE 0                       TURN ESTAE OFF
         ISPEXEC TBTOP2,TBTOP1L
         CLI   KEEP,C'Y'               Q. KEEP TABLE
         BE    EXITPROG                   Y. EXIT PROGRAM
         ISPEXEC TBDISP2,TBDISP1L
EXITPROG DS    0H
         LH    R15,RCODE               LOAD RETURN CODE
         RACKOFF RC=(R15)              RETURN TO CALLER
                                                                SPACE 1
*=====================================================================*
* CONSTANT PART OF ESTAE - TO BE MOVED TO DSECT....                   *
*                                                                     *
* ESTAE ROUTINE TO BE PROCESSED IN CASE OF AN ABEND. ENTERED WHEN     *
* FREED DATASET RETAINS AN PARTIALLY INITIALISED POINTER.             *
*---------------------------------------------------------------------*
ESTAECN  DS    0F
         LR    R2,R15
         USING PROCESTA,R2
         LM    R3,R13,12(R15)
         B     MOVEERR
         DS    16F
         DS    CL2
         DS    0H
         STM   R0,R15,BASES#2
         LR    R9,R1
         USING SDWA,R9
         CLI   TRACE,C'Y'
         BNE   BYPTRC1
         L     R1,SDWAABCC
         SRL   R1,12
         STCM  R1,3,SYSRCODE
         PDUMP SYSRCODE,MSG='ESTAE ROUTINE ENTERED'    <------
         DS    0H
         LM    R0,R15,BASES#2
         C     R0,=F'12'
         BE    MESTAER2
         SETRP FRESDWA=YES,RC=4,RETADDR=MESTAER,DUMP=NO
         BR    R14
         DS    0F
         LM    R0,R13,8(R15)
         B     MESTAER2
         DS    16F
         DS    0H
         L     R1,ESTAERTN
         BR    R1
         DS    A
                                                                SPACE 1
ESTAECNL EQU   *-ESTAECN
                                                                SPACE 1
*=====================================================================*
*  CONSTANTS                                                          *
*---------------------------------------------------------------------*
         LTORG
SPACES   DC    CL256' '
PATRN1   DC    X'40202021'
                                                                SPACE 1
*
TBEND1   DC    C'TBEND ALOCDSN '
TBEND1L  EQU *-TBEND1
*
TBCRE1   DC    C'TBCREATE ALOCDSN  KEYS(DD DSN NUM) NAMES(VOLUME SNUM DD
               DNAME IND) NOWRITE REPLACE'
TBCRE1L  EQU *-TBCRE1
*
TBADD1   DC    C'TBADD ALOCDSN  ORDER'
TBADD1L  EQU *-TBADD1
*
TBTOP1   DC    C'TBTOP ALOCDSN '
TBTOP1L  EQU *-TBTOP1
*
TBDISP1  DC    C'TBDISPL ALOCDSN  PANEL(ISPFALC1)'
TBDISP1L EQU   *-TBDISP1
*
TBSORT1  DC    C'TBSORT ALOCDSN  FIELDS(DDNAME,C,A,SNUM,C,A     )'
TBSORT1L EQU   *-TBSORT1
                                                                SPACE 1
*---------------------------------------------------------------------*
SWAPARMS SWAREQ MF=L
*---------------------------------------------------------------------*
                                                                SPACE 1
*---------------------------------------------------------------------*
*  GETMAINED WORK AREA                                                *
*---------------------------------------------------------------------*
WORKAREA DSECT
         DS    18F                     REGISTER SAVE AREA
DWORK8   DS    D                       WORK AREA ON DOUBLE WORD BDRY
RCODE    DC    H'0'                    PROGRAM EXIT RETURN CODE
ELENGTH  DS    H                       TIOT ENTRY LENGTH
TARGET   DC    CL8' '                  TARGET DDNAME FOR CONCAT REQ
TABLE    DS    CL8                     ISPF TABLE NAME
PANELID  DS    CL8                     TABLE DISPLAY PANELID
KEEP     DC    CL3'NO'                 TABLE DISPOSITION (YES/..)
ALL      DC    CL3'ALL'                DISPLAY ALL/SUMMARY (ALL/...)
LDDNAME  DS    CL8                     LAST DDNAME PROCESSED
DDNAME   DC    CL8' '                  DDNAME
DD       DC    CL8' '                  DDNAME
DSNAME   DS    CL44                    DATASET NAME
VOLUME   DS    CL8                     VOLUME
NUM      DS    CL7                     NUMBER IN CONCATENATION
SNUM     DS    CL3                     SORT NUMBER
SEPR     DS    CL1                     SEPERATOR
LIM      DS    CL3                     CONCATENATION SIZE
DISP     DS    CL3                     DISPOSITION (STATUS)
NULL     DC    CL4'    '               NULLFILE DISPLAY FLAG (OFF)
IND      DC    CL4'    '               INDICATOR FOR MARKING
TRACE    DC    CL1'N'                  TRACE FLAG (Y/N)
EOT      DC    CL1'N'                  END OF TIOT FLAG (Y/N)
FIRSTIME DC    CL1'N'                  FIRST TIME THROUGH FLAG (Y/N)
GC009    DC    CL79' '                 MESSAGE AREA
*---------------------------------------------------------------------*
SWEPAPTR DS    F
EPA      DS    CL16
*---------------------------------------------------------------------*
*
*  THE NUMBER BELOW DESIGNATE THE STARTING COLUMN WITH THE LENGTH IN
*  BRACKETS FOR SUBSTITUTABLE VARIABLES
*                      6(8)
TBEND2   DC    C'TBEND ALOCDSN '
*
*                         9(8)
TBCRE2   DC    C'TBCREATE ALOCDSN  KEYS(DD DSN NUM) NAMES(VOLUME SNUM DD
               DNAME IND) NOWRITE REPLACE'
*
*                      6(8)
TBADD2   DC    C'TBADD ALOCDSN  ORDER'
*
*                      6(8)
TBTOP2   DC    C'TBTOP ALOCDSN '
*
*                        8(8)           23(8)
TBDISP2  DC    C'TBDISPL ALOCDSN  PANEL(ISPFALC1)'
*
*                       7(8)            23(20)
TBSORT2  DC    C'TBSORT ALOCDSN  FIELDS(DDNAME,C,A,SNUM,C,A     )'
*
*
         ISPEXEC  MF=L,INIT=Y          LIST FORM OF ISPF INITIALISATION
         ISPVDEFX MF=L                 LIST FORM OF ISPF VAR DEFINITION
         UNPACK   MF=L                 LIST FORM OF UNPACK MACRO
         HEXCHMAC MF=L                 LIST FORM OF HEX TO CHARACTER
                                                                SPACE 1
*---------------------------------------------------------------------*
* VARIABLE PART OF ESTAE - COPIED FROM CONSTANT AREA.....             *
*                                                                     *
* ESTAE ROUTINE TO BE PROCESSED IN CASE OF AN ABEND. ENTERED WHEN     *
* FREED DATASET RETAINS AN PARTIALLY INITIALISED POINTER.             *
*                                                                     *
* NOTE - THIS ROUTINE USES R2 AS THE BASE, CONSEQUENTLY R2 IS NOT     *
*        INCLUDED IN THE RESETTING.                                   *
*---------------------------------------------------------------------*
PROCESTA DS    0F
         LR    R2,R15                  R1 SET AS BASE
         USING PROCESTA,R2             BASE REGISTER
         LM    R3,R13,12(R15)          RESTORE REGISTERS FROM "BASES1"
         B     MOVEERR                 BYPASS R10 - R13 SAVE AREA
BASES#1  DS    16F
SYSRCODE DS    CL2                     SYSTEM RUTURN CODE SAVE AREA
*---------------------------------------------------------------------*
MOVEERR  DS    0H
         STM   R0,R15,BASES#2          STORE REGISTERS INTO "BASES2"
*---------------------------------------------------------------------*
*                                                                     *
*        CONTROL GETS HERE IF THE AN ABEND                            *
*                                                                     *
*---------------------------------------------------------------------*
         LR    R9,R1
         USING SDWA,R9                 SDWA MAPPING
         CLI   TRACE,C'Y'              Q. TRACE TURNED ON
         BNE   BYPTRC1                    N. BYPASS TRACE
         L     R1,SDWAABCC             LOAD USER/SYSTEM ABEND CODE
         SRL   R1,12                   MOVE OUT USER CODE.
         STCM  R1,3,SYSRCODE           EXTRACT SYSTEM RETURN CODE.
         PDUMP SYSRCODE,MSG='ESTAE ROUTINE ENTERED'    <------
BYPTRC1  DS    0H
         LM    R0,R15,BASES#2          RESTORE BEFORE 'WTO'
         C     R0,=F'12'               Q. SDWA CREATED BY RTM2
         BE    MESTAER2                   N. BYPASS PROCESSING
*---------------------------------------------------------------------*
         SETRP FRESDWA=YES,RC=4,RETADDR=MESTAER,DUMP=NO
         BR    R14                     RETURN
MESTAER  DS    0F
         LM    R0,R13,8(R15)           RESTORE REGISTERS
         B     MESTAER2                BRANCH AROUND STORAGE
BASES#2  DS    16F                     REGISTER SAVE AREA
MESTAER2 DS    0H
*---------------------------------------------------------------------*
         L     R1,ESTAERTN             LOAD ESTAE RETURN ADDRESS
         BR    R1                      CONTINUE
ESTAERTN DS    A                       RETURN ADDRESS FROM ESTAE
                                                                SPACE 1
*=====================================================================*
WORK1    DS    CL32760                 WORK AREA
WORKAREL EQU   *-WORKAREA
                                                                SPACE 1
*---------------------------------------------------------------------*
TIOT     DSECT
         IEFTIOT1                      ENTRY : TIOT
JFCB     DSECT
DUMMY    DS    CL16                    POINT PAST CRAP AT FRONT
*                                          (COMPENSATION) FOR HEADER
         IEFJFCBN LIST=YES             ENTRY : JFCB
         IEFJESCT
         IEFZB505 LOCEPAX=YES
         IHASDWA  DSECT=YES            ENTRY : SDWA (FOR ESTAE)
         CVT   DSECT=YES               CVT
                                                                SPACE 1
*---------------------------------------------------------------------*
         END
