***********************************************************************
*
* Change History
* ==============
* 89.12.12     Jan Jaeger     Initial version of this program.
* 92.04.28     Bob Hill       Display dummy entries for missing
*                             RIBEs, and increase QSCNAREA size
*                             from 1K to approx 63K to minimise
*                             missing RIBEs as per APAR OY34580
* 97.05.15     Alex Kara      Modified to return table gen'd to dialog
*                             for user manipulation.
* 97.09.04     Alex Kara      Modified length of each RIBE returned
*                             to stop abends under OS/390.
* 98.05.07     Alex Kara      Modified to diplay all RESERVES.
*
***********************************************************************
*                                                                     *
*  Function: Display system ENQ's in accordance with resource masks   *
*            in an ISPF table.  This program will either display the  *
*            table directly or pass it to the invoking dialog for     *
*            subsequent processing.                                   *
*                                                                     *
*  Parameters:                                                        *
*            Prameters can be passed either as a command processor or *
*            conventinal means.  The parameter should be an unquoted  *
*            resource with a trailing '*' for wildcarding.  The       *
*            default will be jobname 'userid*'.                       *
*                                                                     *
*            Alternatively the parameters can be set up by an invoking*
*            dialogue and passed via ISPF TPUTs.                      *
*            The following variables can be set and passed (default   *
*            value in brackets):                                      *
*              TABLENM - Table name (ENQTXXXX).                       *
*              DISPNL  - Display panel (ENQINFP)                      *
*              KEEP    - Keep table (N)                               *
*                        N - Display from program (no options).       *
*                        Y - Return table to dialogue                 *
*                        R - Return table and call dialogue passed in *
*                            XCMD.                                    *
*              XCMD    - REXX dialogue to execute if KEEP=R (ENQINFO).*
*            Of the following, non masked variables should be set     *
*            to '*':                                                  *
*              ISN     - Input System Name                            *
*              IJN     - Input Job Name                               *
*              ISC     - Input Scope Name                             *
*              IS1     - Input Status 1                               *
*              IS2     - Input Status 2                               *
*              IQN     - Input Queue Name                             *
*              IRN     - Input Resource Name (Enter "RESERVE" to      *
*                        display all reserves)                        *
*              IRT     - Reserve type                                 *
*                                                                     *
*            The following variables will be setup in the table:      *
*              SYSNAME - system name                                  *
*              JOBNAME - Job name                                     *
*              SCOPE   - Scope name                                   *
*              STAT1   - Status 1                                     *
*              STAT2   - Status 2                                     *
*              QNAME   - Queue name                                   *
*              RNAME   - Resource name                                *
*              QTYPE   - Reserve type                                 *
*                                                                     *
*  Notes:    Program is re-entrant.                                   *
*            Uses macros ISPEXEC and ISPVDEFX which are instream.     *
*                                                                     *
***********************************************************************
ENQINFOL CSECT
         SAVE  (14,12),,ENQINFOL-&SYSDATE-&SYSTIME-J.JAEGER
         LR    R12,R15
         USING ENQINFOL,R12
*
         LR    R7,R1                   Save PARM addr
*
         GETMAIN RU,LV=CORESIZE        Get storage
         USING CORE,R1                 Make core addressable
*
         LA    R15,SAVEAREA            Savearea addr in R15
         ST    R13,4(,R15)             Store R13 in savearea+4
         ST    R15,8(,R13)             Store R15 in old S.A.+8
         LR    R13,R15                 Load new savearea in R13
         DROP  R1
         USING CORE,R13                Make core addressable
         LA    R11,4095(R12)           Increase BASE reg scope to
         LA    R11,1(R11)                permit debugging. Kept for
         USING ENQINFOL,R12,R11          posterity.
*---------------------------------------------------------------------*
*    *** Start of main program ***
*
*    *** Get Resourcename
*---------------------------------------------------------------------*
         ISPEXEC INIT=Y,MF=E
         ISPEXEC 'CONTROL,ERRORS,RETURN'
         ISPEXEC 'CONTROL,ERRORS,CANCEL'
*
         ISPVDEFX INM=(ISN),ANM=CISN,FORMAT=CHAR,LEN=8,MF=E
         ISPVDEFX INM=(IJN),ANM=(CIJN),FORMAT=CHAR,LEN=8,MF=E
         ISPVDEFX INM=(ISC),ANM=(CISC),FORMAT=CHAR,LEN=6,MF=E
         ISPVDEFX INM=(IS1),ANM=(CIS1),FORMAT=CHAR,LEN=4,MF=E
         ISPVDEFX INM=(IS2),ANM=(CIS2),FORMAT=CHAR,LEN=4,MF=E
         ISPVDEFX INM=(IQN),ANM=(CIQN),FORMAT=CHAR,LEN=8,MF=E
         ISPVDEFX INM=(IRN),ANM=(CIRN),FORMAT=CHAR,LEN=54,MF=E
         ISPVDEFX INM=(IRT),ANM=(CIRT),FORMAT=CHAR,LEN=1,MF=E
*
         ISPVDEFX INM=(SYSNAME),ANM=(CSYSNAME),FORMAT=CHAR,LEN=8,MF=E
         ISPVDEFX INM=(JOBNAME),ANM=(CJOBNAME),FORMAT=CHAR,LEN=8,MF=E
         ISPVDEFX INM=(SCOPE),ANM=(CSCOPE),FORMAT=CHAR,LEN=6,MF=E
         ISPVDEFX INM=(STAT1),ANM=(CSTAT1),FORMAT=CHAR,LEN=4,MF=E
         ISPVDEFX INM=(STAT2),ANM=(CSTAT2),FORMAT=CHAR,LEN=4,MF=E
         ISPVDEFX INM=(QNAME),ANM=(CQNAME),FORMAT=CHAR,LEN=8,MF=E
         ISPVDEFX INM=(RNAME),ANM=(CRNAME),FORMAT=CHAR,LEN=54,MF=E
         ISPVDEFX INM=(QTYPE),ANM=(CQTYPE),FORMAT=CHAR,LEN=1,MF=E
         ISPVDEFX INM=(KEEP),ANM=(KEEP),FORMAT=CHAR,LEN=1,MF=E
         ISPVDEFX INM=(TABLENM),ANM=(TABLENM),FORMAT=CHAR,LEN=8,MF=E
         ISPVDEFX INM=(TABLEMQ),ANM=(TABLEMQ),FORMAT=CHAR,LEN=8,MF=E
         ISPVDEFX INM=(DISPNL),ANM=(DISPNL),FORMAT=CHAR,LEN=8,MF=E
         ISPVDEFX INM=(XCMD),ANM=(XCMD),FORMAT=CHAR,LEN=8,MF=E
         ISPVDEFX INM=(GC009),ANM=(GC009),FORMAT=CHAR,LEN=79,MF=E
*
         ISPEXEC 'VGET (ISN IJN ISC IS1 IS2 IQN IRN IRT TABLENM DISPNL +
               KEEP XCMD TABLEMQ) SHARED'
         MVC   KEEP+1(1),KEEP          Take backup of KEEP
         MVI   KEEP,C' '               Re-init for other users
         ISPEXEC 'VPUT (KEEP) SHARED'
*
         CLI   TABLENM,C' '            Q. Table name supplied
         BNE   HAVETNAM                   Y. Bypass
         MVC   TABLENM,TABLEID         Set default table name
HAVETNAM DS    0H
         CLI   DISPNL,C' '             Q. Panel name supplied
         BNE   HAVETPAN                   Y. Bypass
         MVC   DISPNL,DISPNLID         Set default panel name
HAVETPAN DS    0H
*
         CLI   CIRN,C' '               Q. Resource name passed
         BNE   CREATETB                   Y. Report using parms
         CLI   CIQN,C' '               Q. Que name passed
         BNE   CREATETB                   Y. Report using parms
         CLI   CIJN,C' '               Q. Job name passed
         BNE   CREATETB                   Y. Report using parms
*
         MVC   CISN,=CL8'*'
         MVC   CIJN,=CL8'*'
         MVC   CISC,=CL6'*'
         MVC   CIS1,=CL4'*'
         MVC   CIS2,=CL4'*'
         MVC   CIQN,=CL8'*'
         MVI   CIRN,C' '
         MVC   CIRN+1(L'CIRN-1),CIRN
         TM    0(R7),X'80'             Q. PARAMETER ADDRESS
         BO    TESTPARM                   Y. PROCESS AS PARMAMETER
*---------------------------------------------------------------------*
* Command processor                                                   *
*---------------------------------------------------------------------*
         USING CPPL,R7                 ADDRESABILITY TO CPPL
         L     R6,CPPLCBUF             GET COMMAND BUFFER ADDR
         LH    R1,0(R6)                TOTAL COMMAND LENGTH
         SH    R1,=H'4'                SUBTRACT LENGTH'S LENGTH
         LH    R3,2(R6)                OPERAND LENGTH
         SR    R1,R3                   SUBTRACT OPERAND LENGTH
         LTR   R1,R1                   Q. ANY PARAMETER LENGTH
         BZ    DEFAULT                    N. BYPASS WITH NO PARAMETER
         LA    R2,4(R6)                ADDR OF START OF COMMAND
         AR    R2,R3                   ADD DISPLACEMENT OF OPERAND
         B     PROCPARM                GO PROCESS COMMAND
                                                                SPACE 1
*---------------------------------------------------------------------*
* Called program                                                      *
*---------------------------------------------------------------------*
TESTPARM DS    0H
         L     R6,0(R7)             LOAD ADDRESS OR PARAMETER
         LH    R1,0(R6)             LOAD LENGTH OF PARAMETER
         LTR   R1,R1                Q. IS PARAMETER LENGTH ZERO
         BZ    DEFAULT                 Y. GO PROCESS 'SYSIN'
         LA    R2,2(R6)             POINT TO PARAMETER
                                                                SPACE 1
*---------------------------------------------------------------------*
* Process parameter                                                   *
*     R2 --> parameter pointer                                        *
*     R1 --> parameter length                                         *
*---------------------------------------------------------------------*
PROCPARM DS    0H
         BCTR  R1,0
         EX    R1,RNCOPY
         B     CREATETB
DEFAULT  EQU   *
         L     R15,PSAAOLD-PSA
         L     R15,ASCBJBNS-ASCB(,R15)
         MVC   CIRN(8),0(R15)
         LA    R1,CIRN+L'CIRN
         TRT   CIRN,TRTBLANK
         MVC   0(2,R1),=C'.*'
         MVI   GC009,C' '
         MVC   GC009+1(L'GC009-1),GC009
CREATETB EQU   *
         LA    R1,CIRN+L'CIRN
         TRT   CIRN,TRTASTER
         LA    R2,CIRN
         SLR   R1,R2
         STC   R1,GQSLEN
*
         LA    R1,CIJN+L'CIJN
         TRT   CIJN,TRTASTER
         LA    R2,CIJN
         SLR   R1,R2
         STC   R1,CIJNL
*
         LA    R1,CIQN+L'CIQN
         TRT   CIQN,TRTASTER
         LA    R2,CIQN
         SLR   R1,R2
         STC   R1,CIQNL
*
         CLI   TABLEMQ,C' '
         BNE   TMRBP010
         ISPEXEC 'TBCREATE &&TABLENM NAMES(SYSNAME JOBNAME SCOPE STAT1 +
               STAT2 QNAME RNAME QTYPE) NOWRITE'
         ISPEXEC 'TBVCLEAR &&TABLENM'
         B     TMRBP011
TMRBP010 DS    0H
         ISPEXEC 'TBCREATE &&TABLEMQ KEYS(QNAME) NOWRITE'
TMRBP011 DS    0H
         L     R15,AISPLINK
*
* *** GQSCAN LOOP
*
         XC    QSCNTKN,QSCNTKN         Zero token
         MVC   GQSRNAME,CIRN
LOOP     EQU   *
         CLC   =C'RESERVE',CIRN        Q. Reserves requested
         BE    SETRESR1                   Y. Go set for Reserves
         MVC   LGQSCAN(EGQSCANL),EGQSCANN
         B     CONT#100                Branch around non-reserve
SETRESR1 DS    0H
         MVC   LGQSCAN(EGQSCANL),EGQSCANR
CONT#100 DS    0H
         LA    R9,QSCNAREA
         LA    R8,QSCNTKN
         LA    R2,CIQN                 Point to QName
         LA    R3,GQSRNAME             Point to RName
         IC    R4,GQSLEN               Set RName length
         IC    R5,CIQNL
*---------------------------------------------------------------------*
         CLC   =C'RESERVE',CIRN        Q. Reserves requested
         BE    SETRESR2                   Y. Go set for Reserves
         GQSCAN AREA=((9),QSCNLEN),    AREA FOR RIB AND RIBE           X
               SCOPE=ALL,              No matter what system           X
               TOKEN=(8),              Token to proceed scanning       X
               RESNAME=((2),(3),(4),GENERIC,(5)),                      X
               MF=(E,LGQSCAN)
         B     CONT#200                Branch around non-reserve
SETRESR2 DS    0H
         GQSCAN AREA=((9),QSCNLEN),    AREA FOR RIB AND RIBE           X
               SCOPE=ALL,              No matter what system           X
               TOKEN=(8),              Token to proceed scanning       X
               RESERVE=YES,                                            X
               MF=(E,LGQSCAN)
CONT#200 DS    0H
*---------------------------------------------------------------------*
         ST    R0,R0SAVER              Store RIB & RIBE lengths
         LTR   R4,R1                   Save number of RIBs returned
         BZ    LOOPEND
         LTR   R3,R15                  Save returncode in R3
         BZ    RCOK
         CH    R3,=H'4'                No more users
         BE    RCOK
         CH    R3,=H'8'                More to come
         BNE   LOOPEND
*
RCOK     EQU   *
         USING RIB,R9
         LH    R6,RIBVLEN              Load length of variable RIB
         AH    R6,#RIBFLEN             Add RIBE lixed length
         LA    R6,0(R6,R9)             Point to 1st RIB
         USING RIBE,R6
         LH    R5,#RIBFLEN             Load RIBE lixed length
         LA    R5,0(R5,R9)             RIBVAR
         USING RIBVAR,R5
         ICM   R7,B'1111',RIBNRIBE     Any RIBEs after this RIB?
         BZ    ENDRIBES                No - end of RIB's RIBEs
*
RIBELOOP EQU   *
         TM    RIBSCOPE,RIBSTEP
         BO    SKIPRIBE
*
         ICM   R15,B'0001',CIJNL
         BZ    NOJN
         BCTR  R15,0
         EX    R15,CLCIJN
         BNE   SKIPRIBE
NOJN     EQU   *
*
         MVC   CQNAME,RIBQNAME
         MVI   CRNAME,C' '
         MVC   CRNAME+1(L'CRNAME-1),CRNAME
         IC    R15,RIBRNMLN
         BCTR  R15,0
         EX    R15,MVCRNAME
*
         CLI   CISN,C'*'
         BE    ALLSYSN
         CLC   CISN,RIBESYSN
         BNE   SKIPRIBE
ALLSYSN  EQU   *
*
         MVC   CSYSNAME,RIBESYSN
         MVC   CJOBNAME,RIBEJBNM
*
         MVC   CSCOPE,=CL6'Local'
         TM    RIBSCOPE,RIBGLBL
         BZ    ISLOCAL
         MVC   CSCOPE,=CL6'Global'
ISLOCAL  EQU   *
*
         MVC   CSTAT1,=CL4'Excl'
         TM    RIBERFLG,RIBETYPE
         BZ    ISEXCL
         MVC   CSTAT1,=CL4'Shr'
ISEXCL   EQU   *
*
         MVC   CSTAT2,=CL4'Wait'
         TM    RIBESFLG,RIBESTAT
         BZ    ISWAIT
         MVC   CSTAT2,=CL4'Own'
ISWAIT   EQU   *
*
*---------------------------------------------------------------------*
         TM    RIBERFLG,RIBERESC       Q. Is RESERVE converted to ENQ
         BNO   CONT#24                    N. Bypass
         MVC   CQTYPE(1),=C'C'         Move value to output area
         B     CONT#30                 Move on
CONT#24  DS    0H
         TM    RIBERFLG,RIBERESV       Q. Is it a RESERVE request
         BNO   CONT#26                    N. Bypass
         MVC   CQTYPE(1),=C'R'         Move value to output area
         B     CONT#30                 Move on
CONT#26  DS    0H
         MVC   CQTYPE(1),=C'N'         Move NOT-RESERVE
CONT#30  DS    0H
         CLI   CIRT,C'*'               Q. Require all values
         BE    CONT#40                    Y. Continue
         CLC   CIRT(1),CQTYPE          Q. Require this type
         BNE   SKIPRIBE                   N. Skip This entry
CONT#40  DS    0H
*---------------------------------------------------------------------*
         CLI   CISC,C'*'               Both Local and Global?
         BE    NOSC
         CLC   CISC(1),CSCOPE
         BNE   SKIPRIBE
NOSC     EQU   *
*
         CLI   CIS1,C'*'               Both Shr and Excl?
         BE    NOS1
         CLC   CIS1(1),CSTAT1
         BNE   SKIPRIBE
NOS1     EQU   *
*
         CLI   CIS2,C'*'               Both Own and Wait?
         BE    NOS2
         CLC   CIS2(1),CSTAT2
         BNE   SKIPRIBE
NOS2     EQU   *
*
         CLC   RIBQNAME,=CL8'SPFEDIT'
         BNE   NOFORMAT
         CLI   RIBRNMLN,52
         BNE   NOFORMAT
         CLI   RIBRNAME+44,C' '
         BE    NOFORMAT
         MVC   CRNAME+44(8),BLANKS
         LA    R1,CRNAME+44
         TRT   CRNAME(44),TRTBLANK
         MVI   0(R1),C'('
         MVC   1(8,R1),RIBRNAME+44
         LA    R1,CRNAME+44
         TRT   CRNAME(44),TRTBLANK
         MVI   0(R1),C')'
NOFORMAT EQU   *
*
         CLI   TABLEMQ,C' '
         BNE   TMRBP020
         ISPEXEC 'TBADD &&TABLENM'
         B     TMRBP021
TMRBP020 DS    0H
         ISPEXEC 'TBMOD &&TABLEMQ'
TMRBP021 DS    0H
*<-----  LTR   R10,R15
*<-----  BNZ   EXIT
*
SKIPRIBE EQU   *
*<-----  LA    R6,RIBEEND-RIBE(R6)     Point to next RIBE
         AH    R6,#RIBELEN             Point to next RIBE
         BCT   R7,RIBELOOP
ENDRIBES EQU   *                       End of RIB's RIBEs
         CLC   RIBTRIBE,RIBNRIBE       Got all RIBEs? (OY34580)
         BE    NEXTRIB                 Yes - go to next RIB
*              If RIBTRIBE is not equal to RIBNRIBE, we have
*              lost some RIBEs for this RIB (see APAR OY34580),
*              so now we build an dummy table entry containing
*              question marks to indicate incomplete data.
         TM    RIBSCOPE,RIBSTEP        Internal ENQ?
         BO    NEXTRIB                 Yes - skip dummy entry
         MVC   CQNAME,RIBQNAME         Qname from RIB
         MVI   CRNAME,C' '
         MVC   CRNAME+1(L'CRNAME-1),CRNAME
         IC    R15,RIBRNMLN
         BCTR  R15,0
         EX    R15,MVCRNAME            Rname from RIB
         MVC   CSYSNAME,=8C'?'         System name unknown
         MVC   CJOBNAME,=8C'?'         Job name unknown
         MVC   CSCOPE,=CL6'Local'
         TM    RIBSCOPE,RIBGLBL
         BZ    *+10
         MVC   CSCOPE,=CL6'Global'     Scope from RIB
         MVC   CSTAT1,=8C'?'           Status-1 unknown
         MVC   CSTAT2,=8C'?'           Status-2 unknown
         CLC   RIBQNAME,=CL8'SPFEDIT'  Re-format SPFEDIT ENQs
         BNE   DUMMYADD
         CLI   RIBRNMLN,52
         BNE   DUMMYADD
         CLI   RIBRNAME+44,C' '
         BE    DUMMYADD
         MVC   CRNAME+44(8),BLANKS
         LA    R1,CRNAME+44
         TRT   CRNAME(44),TRTBLANK
         MVI   0(R1),C'('
         MVC   1(8,R1),RIBRNAME+44
         LA    R1,CRNAME+44
         TRT   CRNAME(44),TRTBLANK
         MVI   0(R1),C')'
DUMMYADD DS    0H
         CLI   TABLEMQ,C' '
         BNE   TMRBP030
         ISPEXEC 'TBADD &&TABLENM'
         B     TMRBP031
TMRBP030 DS    0H
         ISPEXEC 'TBADD &&TABLEMQ'
TMRBP031 DS    0H
*<-----  LTR   R10,R15
*<-----  BNZ   EXIT
*
NEXTRIB  LR    R9,R6                   Next RIB starts here
         BCT   R4,RCOK
*
NORIBE   EQU   *
         CH    R3,=H'8'
         BE    LOOP
*
LOOPEND  EQU   *
*
* *** GQSCAN END
*
         CLI   TABLEMQ,C' '
         BNE   TMRBP040
         ISPEXEC 'TBTOP &&TABLENM'
         B     TMRBP041
TMRBP040 DS    0H
         ISPEXEC 'TBTOP &&TABLEMQ'
TMRBP041 DS    0H
*
         CLI   KEEP+1,C'Y'             Q. Return table to dialog
         BE    EXIT                       Y. Exit
         CLI   KEEP+1,C'R'             Q. Return table to caller
         BNE   INTDISP                    N. Display internally
         ISPEXEC 'VPUT (TABLENM DISPNL ISN IJN ISC IS1 IS2 IQN IRN) SHA+       %
               RED'
         CLI   XCMD,C' '               Q. Command name passed
         BNE   HAVECMD                    Y. Bypass
         MVC   XCMD,XCMDID             Set default command
HAVECMD  DS    0H
         ISPEXEC 'SELECT CMD(%&&XCMD 2ND)'
         LTR   R10,R15                 Q. Zero return code
         BNE   EXIT                       N. Exit
         ISPEXEC 'VGET (ISN IJN ISC IS1 IS2 IQN IRN IRT TABLENM DISPNL +       %
               KEEP XCMD) SHARED'
         B     CREATETB                Recreate if returned from REXX
*
INTDISP  DS    0H
         ISPEXEC 'TBDISPL &&TABLENM PANEL(&&DISPNL)'
         LR    R10,R15
         ISPEXEC 'TBEND &&TABLENM'
         C     R10,F8                  Was 'END' pressed?
         BNE   CREATETB
*
EXIT     EQU   *
         LR    R2,R13                  Save R13 to permit free
         L     R13,4(,R13)             Recall R13 from savearea
         FREEMAIN RU,LV=CORESIZE,A=(2) Free core again
         LR    R15,R10                 Restore R13
         RETURN (14,12),RC=(15)        Recall registers & return
*
MVCRNAME MVC   CRNAME(0),RIBRNAME
RNCOPY   OC    CIRN(0),0(R2)
CLCIJN   CLC   CIJN(0),RIBEJBNM
*
BLANKS   DC    CL8' '
*
TABLEID  DC    CL8'ENQTXXXX'
*
DISPNLID DC    CL8'ENQINFP'
XCMDID   DC    CL8'ENQINFO'
*
*
F4       DC    F'4'
F6       DC    F'6'
F8       DC    F'8'
F44      DC    F'44'
F54      DC    F'54'
*
EGQSCANN GQSCAN MF=L
EGQSCANL EQU   *-EGQSCANN
EGQSCANR GQSCAN SCOPE=ALL,RESERVE=YES,MF=L
*
TRTBLANK DC    XL256'00'
         ORG   TRTBLANK+X'00'
         DC    C' '
         ORG   TRTBLANK+C' '
         DC    C' '
         ORG
*
TRTASTER DC    XL256'00'
         ORG   TRTASTER+C'*'
         DC    C'*'
         ORG
*
         LTORG
*
         YREGS
*
CORE     DSECT
SAVEAREA DS    18F                     Save area
CIJN     DS    CL8
CIJNL    DS    1X
CISN     DS    CL8
CISC     DS    CL6
CIS1     DS    CL4
CIS2     DS    CL4
CIQN     DS    CL8
CIQNL    DS    1X
CIRN     DS    CL44
CIRT     DS    CL1
CJOBNAME DS    CL8
CSYSNAME DS    CL8
CSCOPE   DS    CL6                     LOCAL GLOBAL
CSTAT1   DS    CL4                     EXCL SHR
CSTAT2   DS    CL4                     OWN WAIT
CQNAME   DS    CL8
CQTYPE   DS    CL1                     Reserve type
CRNAME   DS    CL256
GQSRNAME DS    CL44                    Datasetname for GQSCAN
AISPLINK DS    1F
GQSLEN   DS    1X
PL       DS    20F
         ISPEXEC  MF=L,INIT=Y,LIST=Y
         ISPVDEFX MF=L,LIST=Y
GC009    DS    CL79                    Name of table
KEEP     DS    CL2                     Keep and return table
DISPNL   DS    CL8
TABLENM  DS    CL8
*TABLEIDX EQU   TABLENM+4,1,C'F'
XCMD     DS    CL8
TABLEMQ  DS    CL8
         DS    CL1
LGQSCAN  GQSCAN MF=L
R0SAVER  DS    0F
#RIBFLEN DS    H                       RIB FIXED LENGTH
#RIBELEN DS    H                       LENGTH OF EACH RIBE RETURNED
QSCNTKN  DS    1F
QSCNAREA DS    CL(QSCNLEN)             QSCAN area
QSCNLEN  EQU   CORE+CORESIZE-QSCNAREA  QSCAN area length
CORESIZE EQU   16*4096                 Getmain exactly 16 pages
*
         ISGRIB
         IHAPSA
         IHAASCB
         IKJCPPL COMMAND           PROCESSOR PARAMETER LIST
*
         END
