*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
**
**       TITLE:    'VSAM BROWSE.'
**       SYSTEM:   N/A
**       MODULE:   EXTBVSAM
**       PROGRAM:  EXTBVSAM
**       FUNCTION: BROWSE A VSAM DATASET USING THE ISPF 'BRIF'
**                 SERVICE.
**                 THE VSAM DATASET IS READ SEQUENTIALY IN RELATIVE
**                 ADDRESS ORDER (IE. WILL NOT BE SORTED). A SORT
**                 PARAMETER MAY BE PASSED, IN WHICH CASE A TEMPORARY
**                 ISPF TABLE IS BUILT OF THE KEYS AND A 'TBTOP'
**                 FOLLOWED BY A 'TBSKIP NUMBER(REL POS)' ISSUED TO
**                 EXTRACT THE KEY.
**
**                 FOR FURTHER DETAILS INVOKE THE ONLINE ISPF
**                 TUTORIAL BY ISSUING THE FOLLOWING COMMANDS:
**                    'TSO TUTON EXTEH000' - FOR EDIT TUTORIAL
**                    'TSO TUTON EXTBH000' - FOR BROWSE TUTORIAL.
**                 THE TUTORIALS SHOULD GIVE A INSIGHT INTO THE
**                 CAPABILITIES AND LIMITATIONS THEREBY DETAILING THE
**                 LOGIC USED IN THIS PROGRAM.
**
**                 THE VSAM MACROS USED ARE DETAILED IN:
**                  1. VSAM ADMINISTRATION: MACRO INSTRUCTION REFERENCE
**                     REFERENCE NUMBER: GC26-4152-3
**                  2. VSAM ADMINISTRATION GUIDE
**                     REFERENCE NUMBER: GC26-4151-5
**
**                 PROGRAM IS NOT RE-ENTRANT.
**
**       AUTHOR:   A. KARA.
*
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
EXTBVSAM KICKOFF (R11,R12),AMODE=31,LIST=YES
*---------------------------------------------------------------------*
INIT     DS    0H
         ISPINIT MF=E,LIST=YES
         ST    R11,DDATA               SAVE BASE REG IN DIALOG DATAREA
VDEFVGET DS    0H
         ISPVDEFX INM=(DDVSAM),ANM=DDNAME,FORMAT=CHAR,LEN=8,MF=E,      X
               LIST=YES
         ISPVDEFX INM=(DSVSAM),ANM=DSNAME,FORMAT=CHAR,LEN=44,MF=E,     X
               LIST=YES
         ISPVDEFX INM=(KEYLEN),ANM=KEYLEN,FORMAT=CHAR,LEN=4,MF=E,      X
               LIST=YES
         ISPVDEFX INM=(KEYPOS),ANM=KEYPOS,FORMAT=CHAR,LEN=4,MF=E,      X
               LIST=YES
         ISPVDEFX INM=(GC009),ANM=GC009,FORMAT=CHAR,LEN=79,MF=E,       X
               LIST=YES
         ISPVDEFX INM=(KEY1),ANM=KEY1,FORMAT=CHAR,LEN=255,MF=E,        X
               LIST=YES
         ISPVDEFX INM=(EXTBSORT),ANM=EXTBSORT,FORMAT=CHAR,LEN=1,MF=E,  X
               LIST=YES
         ISPVDEFX INM=(VSAMTYPE),ANM=VSAMTYPE,FORMAT=CHAR,LEN=1,MF=E,  X
               LIST=YES
         ISPVDEFX INM=(EXTEESLT),ANM=EXTEESLT,FORMAT=CHAR,LEN=12,MF=E, X
               LIST=YES
         ISPEXEC 'VGET (DDVSAM DSVSAM EXTBSORT) SHARED'
         ISPEXEC 'VGET (EXTEESLT) PROFILE'
         MODCB ACB=ACB1,DDNAME=(*,DDNAME)
OPEN     DS    0H
         OPEN  ACB1                    OPEN VSAM DATASET
         LTR   R15,R15                 Q. ZERO RETURN CODE
         BZ    SHOWCB                     Y. GO SHOW CB
OPENERR1 DS    0H
         SHOWCB ACB=ACB1,AREA=ERROR,LENGTH=4,FIELDS=ERROR
         LA    R3,116
         C     R3,ERROR                Q. VERIFY NEEDED
         BE    VERIFY                     Y. GO VERIFY
         BNE   STMSGOPN                   N. PROCESS OTHER ERROR
         LA    R3,160
         C     R3,ERROR                Q. EMPTY DATASET
         BE    EMPTY                      Y. GO VERIFY
         B     STMSGOPN                PROCESS OTHER ERROR
VERIFY   DS    0H
         VERIFY RPL=RPLVER,ACTION=REFRESH
         LA    R3,1
         X     R3,OPNAGAIN             SET VERIFIED FLAG ON
         ST    R3,OPNAGAIN             LOAD REOPEN FALG
         BNZ   CLOSE                      N. GOTO CLOSE + RETRY OPEN
STMSGOPN DS    0H
         ISPEXEC 'SETMSG MSG(VSAM005)' OPEN FAILED MESSAGE
         B     CLOSE                   GO TO CLOSE ROUTINE
SHOWCB   DS    0H
         SHOWCB ACB=ACB1,AREA=NLOGR,LENGTH=16,                         X
               FIELDS=(NLOGR,LRECL,KEYLEN,RKP)
         L     R3,NLOGR                LOAD NO OF LOGICAL RECORDS
         LTR   R3,R3                   Q. EMPTY DATASET
         BNZ   NOTEMPTY                   N. CONTINUE PROCESSING
EMPTY    DS    0H
         ISPEXEC 'SETMSG MSG(VSAM004)' EMPTY MESSAGE
         B     CLOSE
*---------------------------------------------------------------------*
MOVEKEY1 MVC   KEY1(0),0(R2)           MOVE KEY
*---------------------------------------------------------------------*
NOTEMPTY DS    0H
         TESTCB ACB=ACB1,ATRB=KSDS     TEST DATASET
         BE    TESTSRT1                   Y. GO TEST FOR SORT
ESDSVSAM DS    0H
         MVI   VSAMTYPE,C'E'           SET ESDS DATASET TYPE
         TESTCB ACB=ACB1,ATRB=ESDS     Q. ESDS DATASET
         BNE   RRDSVSAM                   N. MUST BE RRDS
         MODCB RPL=RETRVE,ARG=LOWRBA,OPTCD=(ADR,SEQ,FWD)
         B     TESTSRT1                   Y. GO TEST FOR SORT
RRDSVSAM DS    0H
         CLI   EXTBSORT,C'N'           Q. SORT REQUESTED
         BE    NOSRTRQD                   N. BYPASSA DISABLED MESSAGE
         MVI   EXTBSORT,C'N'           SORT NOT NEEDED FOR NON-KSDS
         MVC   GC009(40),=C'SORT DISABLED FOR NON-KSDS VSAM DATASET.'
         ISPEXEC 'SETMSG MSG(GC009)'   TELL MESSAGE
NOSRTRQD DS    0H
         MVI   VSAMTYPE,C'R'           SET RRDS DATASET TYPE
         MODCB ACB=ACB1,MACRF=(KEY)
         MODCB RPL=RETRVE,ARG=LASTRRNO,OPTCD=(KEY,FWD,ARD)
         B     SORTED01                BYPASS SORT SETUP
TESTSRT1 DS    0H          Y. GO TEST FOR SORT
         CLI   EXTBSORT,C'Y'           Q. SORT TURNED ON
         BNE   SORTED01                   N. BYPASS SORT SETUP
         CLI   VSAMTYPE,C'E'           Q. ESDS DATASET TYPE
         BE    ESDSSORT                   Y. SET UP FOR ESDS SORT
KSDSSORT DS    0H
         LA    R2,AREA1                ADDRESS OF AREA
         A     R2,KEYPOS               ADD RELATIVE KEY POSITION
         L     R3,KEYLEN               LOAD KEY LENGTH
         B     TBOPEN1                 GO OPEN TABLE
ESDSSORT DS    0H
         LA    R2,LASTRRNO             ADDRESS OF AREA
         LA    R3,4                    LOAD KEY LENGTH
TBOPEN1  DS    0H
         BCTR  R3,0                    LESS 1 FOR 'EX' COMMAND
         ISPEXEC 'CONTROL ERRORS RETURN'
         LA    R4,50                   INITIALISE TABLE SUFFIX
CREATELP DS    0H
         UNPACK R4,2,TBCREATE+15,MF=E  SET UP TABLE SUFFIX
         ISPEXEC TBCREATE,TBCREATL     CREATE TABLE
         CH    R15,=H'8'               Q. TABLE OPENED
         BL    TBCREATD                   Y. EXIT LOOP
         BCT   R4,CREATELP             LOOP TILL END
         B     KILLSORT                DROP THRU THEN KILL SORT
TBCREATD DS    0H
         UNPACK R4,2,TBSORT+13,MF=E    SET UP TABLE SUFFIX
         ISPEXEC TBSORT,TBSORTL        SORT TABLE
         LTR   R15,R15                 Q. ZERO RETURN CODE
         BNZ   KILLSORT                   N. KILL SORT
         UNPACK R4,2,TBMOD+13,MF=E     SET UP TABLE SUFFIX
         UNPACK R4,2,TBTOP+13,MF=E     SET UP TABLE SUFFIX
         UNPACK R4,2,TBSKIP+13,MF=E    SET UP TABLE SUFFIX
         UNPACK R4,2,TBEND+13,MF=E     SET UP TABLE SUFFIX
         B     SORTON01                PROCESS FOR SORTABILITY
KILLSORT DS    0H
         MVI   EXTBSORT,C'N'           TURN SORT FLAG OFF
         MVC   GC009(46),=C'SORT TABLE CREATE FAILED RC=... SORT DISABLE
               ED.'
         UNPACK R15,2,GC009+28,MF=E    SET UP RETURN CODE
         ISPEXEC 'SETMSG MSG(GC009)'   TELL MESSAGE
         B     SORTED01                BYPASS SORT SETUP
SORTON01 DS    0H
         MODCB EXLST=EXLST1,EODAD=EODADI
         MODCB RPL=RETRVE,ARG=LASTRRNO,OPTCD=(ADR,DIR)
         POINT RPL=RETRVE
         MODCB RPL=RETRVE,OPTCD=(SEQ,FWD)
         LA    R10,0                   LOAD LASTRRNO
         LA    R7,1000                 DISPLAY INCREMENT
         C     R7,NLOGR                Q. > 1000 RECORDS
         BH    TBBUILD                    N. BYPASS MESSAGE
         MVC   GC009(57),=C'00000001 OF ........ RECORDS PROCESSED FOR S
               SORTING TABLE.'
         L     R1,NLOGR                Q. > 1000 RECORDS
         UNPACK R1,8,GC009+12,MF=E     UNPACK TOTAL # RECORDS
         ISPEXEC 'CONTROL DISPLAY LOCK' SEEMS TO NEED A DOUBLE LOCK
         ISPEXEC 'DISPLAY MSG(GC009)'              "
         ISPEXEC 'CONTROL DISPLAY LOCK' SEEMS TO NEED A DOUBLE LOCK
         ISPEXEC 'DISPLAY MSG(GC009)'              "
TBBUILD  DS    0H
         GET   RPL=RETRVE              READ RECORD
         SHOWCB RPL=RETRVE,AREA=LASTRRNO,LENGTH=4,FIELDS=(RBA)
         LA    R10,1(R10)              UP RRNO
         LR    R9,R10                  LOAD NUMBER
         XR    R8,R8                   INITIALISE EVEN PAIR
         DR    R8,R7                   DIVIDE REGISTER
         LTR   R8,R8                   Q. ANY REMAINDER
         BNZ   NOINTMSG                   Y. BYPASS INTERIM MESSAGE
         XR    R8,R8                   INITIALISE EVEN PAIR
         MR    R8,R7                   MULTIPLY BY DIVISOR
         UNPACK R9,8,GC009,MF=E        UNPACK RECORDS PROCESSED
         ISPEXEC 'CONTROL DISPLAY LOCK'
         ISPEXEC 'DISPLAY MSG(GC009)'
NOINTMSG DS    0H
         EX    R3,MOVEKEY1             MOVE KEY TO TABLE
         ISPEXEC TBMOD,TBMODL          BUILD TABLE
         B     TBBUILD                 LOOP TILL END
EODADI   DS    0H
         ST    R10,HIGHRRNO            STORE LAST RRNO
         MODCB EXLST=EXLST1,EODAD=EODAD1
         CLI   VSAMTYPE,C'E'           Q. ESDS DATASET TYPE
         BE    ESDSSRTD                   Y. PROCESS SORTED ESDS
         MODCB RPL=RETRVE,ARG=KEY1,OPTCD=(KEY,SEQ,FWD)
         MODCB ACB=ACB1,MACRF=(KEY)
         B     SORTED01                CONTINUE PROCESSING
ESDSSRTD DS    0H
         MODCB RPL=RETRVE,ARG=KEY1,OPTCD=(ADR,DIR)
         MODCB ACB=ACB1,MACRF=(ADR)
*---------------------------------------------------------------------*
SORTED01 DS    0H
         SHOWCB ACB=ACB1,AREA=LRECL,LENGTH=4,FIELDS=LRECL
         L     R1,KEYPOS               LOAD RELATIVE KEY POSITION
         LR    R2,R1                   SAVE RKP FOR LATER
         LA    R1,1(R1)                +1 FOR RELATIVE POSITION
         UNPACK R1,4,KEYPOS,MF=E       UNPACK RKP
         MVI   KEYPOS+4,C' '           MOVE SPACE TO KEY POSITION
         LA    R1,3                    LOOP COUNTER
         LA    R3,KEYPOS               START OF POINTER
RIPPLE1  DS    0H
         CLI   0(R3),C'0'              Q. LEADING ZERO
         BH    RIPPLE1E                   N. EXIT LOOP
         MVC   0(4,R3),1(R3)           MOVE ALLONG 1 BYTE
         BCT   R1,RIPPLE1
RIPPLE1E DS    0H
         A     R2,KEYLEN               ADD KEYLENGTH TO RKP
         UNPACK R2,3,KEYLEN,MF=E       UNPACK KEYLENGTH
         MVI   KEYLEN+3,C' '           MOVE SPACE TO KEY POSITION
         LA    R1,2                    LOOP COUNTER
         LA    R3,KEYLEN               START OF POINTER
RIPPLE2  DS    0H
         CLI   0(R3),C'0'              Q. LEADING ZERO
         BH    RIPPLE2E                   N. EXIT LOOP
         MVC   0(3,R3),1(R3)           MOVE ALLONG 1 BYTE
         BCT   R1,RIPPLE2
RIPPLE2E DS    0H
         ISPEXEC 'VPUT (VSAMTYPE KEYLEN KEYPOS) SHARED'
         CLC   EXTEESLT(12),SPACES     Q. EMPTY-SLOT INDICATOR PASSED
         BE    CALLBRIF                   N. LEAVE AS IS
         L     R1,AREA2@               LOAD EMPTY-SLOT STRING START
         MVC   0(12,R1),EXTEESLT       MOVE EMPTY-SLOT INDICATOR
CALLBRIF DS    0H
         CALL  ISPLINK,(BRIF,DSNAME,RECFM,LRECL,RADDR,,DDATA,          X
               EXTBPANL),VL
CLOSE    DS    0H
         CLI   EXTBSORT,C'Y'           Q. SORT TURNED ON
         BNE   SORTED02                   N. BYPASS TABLE CLOSE
         ISPEXEC TBEND,TBENDL          END TEMPORARY TABLE
SORTED02 DS    0H
         CLOSE ACB1                    CLOSE VSAM DATA SET
         L     R3,OPNAGAIN             LOAD RE-OPEN FLAG
         LTR   R3,R3                   Q. ALREADY RETRIED
         BNZ   OPEN                       Y. RETRY OPEN
EXITPR00 DS    0H
         RACKOFF RC=0                  RETURN
*=====================================================================*
*    READ ROUTINE                                                     *
*=====================================================================*
READRTN  DS    0H
         SAVE  (14,12)
         LM    R4,R7,0(R1)
         L     R11,0(R7)               ESTABLISH ADDRESABILITY
         LA    R12,4095(R11)              TO BOTH
         LA    R12,1(R12)                     BASE REGS
         ST    R13,RSAVE+4             STORE EDIF RTN SAVE AREA ADDRESS
         LA    R15,RSAVE
         ST    R15,8(R13)              SAVE NEW SAVE AREA ADDRESS
         LR    R13,R15                 POINT TO NEW SAVE AREA
*---------------------------------------------------------------------*
         L     R3,FIRSTENT             LOAD FIRST ENTRY FLAG
         LTR   R3,R3                   Q. FIRST ENTRY
         BNZ   NOTFIRST
         LA    R3,1
         ST    R3,FIRSTFLG
         ST    R3,FIRSTENT
NOTFIRST DS    0H
         LA    R8,AREA1                LOAD ADDRESS OF INPUT REC AREA
         ST    R8,0(R4)                STORE ADDRESS BACK TO EDIF
         ST    R6,@RRNO                SAVE ADDRESS OF RRNO
         L     R6,0(R6)                LOAD RRNO
         CLI   EXTBSORT,C'Y'           Q. SORT TURNED ON
         BNE   SORTED03                   N. PROCESS UNSORTED
         L     R10,HIGHRRNO            LOAD LAST RECORD
         CR    R6,R10                  PAST END OF FILE
         BH    EODAD1                     Y. GO SET ERROR RETURN CODE
         UNPACK R6,8,TBSKIP+23,MF=E    UNPACK ROW NUMBER
         ISPEXEC TBTOP,TBTOPL          GOTO TOP OF DATASET
         ISPEXEC TBSKIP,TBSKIPL
         LR    R10,R6                  SET EQUAL TO
         BCTR  R10,0                       EXIT GET1 LOOP
         CLI   VSAMTYPE,C'E'           Q. ESDS DATASET
         BE    GET1                       Y. GO GET RECORD
         POINT RPL=RETRVE              POINT TO RECORD
         B     GET1                    GO GET RECORD
SORTED03 DS    0H
         CLI   VSAMTYPE,C'R'           Q. RRDS DATASET
         BNE   NOTRRDSR                   N. NOT RRDS READ, BYPASS
*        C     R6,NLOGR                Q. RELATIVE RECORD # > # RECORDS
*        BNH   NRRDSEND                   N. NOT END OF FILE
*        L     R10,NLOGR               LOAD LAST RECORD NUMBER
*        B     SETRC8                  PROCESS END OF FILE
NRRDSEND DS    0H
         ST    R6,LASTRRNO             STORE RELATIVE REC # IN KEY
         LA    R9,0                    SET RC=0
         MODCB RPL=RETRVE,ARG=LASTRRNO,OPTCD=(KEY,FWD,ARD)
         POINT RPL=RETRVE
         MODCB RPL=RETRVE,OPTCD=(SEQ,FWD)
         GET   RPL=RETRVE              READ RECORD
         LTR   R15,R15                 Q. ZERO RETURN CODE
         BNE   ESLOTP                     N. EMPTY SLOT
         SHOWCB RPL=RETRVE,AREA=ALENGTH,LENGTH=4,FIELDS=(RECLEN)
         MVC   0(4,R5),ALENGTH         STORE RECORD LENGTH
         B     TOBRIF                  RETURN TO BRIF
ESLOTP   DS    0H
         MVC   0(4,R4),AREA2@          MOVE EMPTY SLOT ADDRESS
         MVC   0(4,R5),LRECL           MOVE LOGICAL RECORD LENGTH
         B     TOBRIF                  RETURN TO BRIF
NOTRRDSR DS    0H
*        C     R6,NLOGR                Q. RELATIVE RECORD # > # RECORDS
*        BNH   TLSTRRNO                   N. TEST LAST RELATIVE NUMBER
*        L     R10,NLOGR               LOAD LAST RECORD NUMBER
*        B     SETRC8                  PROCESS END OF FILE
TLSTRRNO DS    0H
         L     R10,LASTRRNO            LOAD LAST RELATIVE RECOR PROC'D
         CR    R6,R10                  Q. NEW HIGHER THAN LAST
         BH    GET1                       Y. NO NEED TO START FROM TOP
POINT    DS    0H
         MODCB RPL=RETRVE,ARG=LOWRBA,OPTCD=(ADR,DIR)
         POINT RPL=RETRVE              POINT TO TOP OF DATASET
         MODCB RPL=RETRVE,OPTCD=(SEQ,FWD)
         LA    R10,0                   SET COUNTER TO 0
GET1     DS    0H
         GET   RPL=RETRVE              READ RECORD
         SHOWCB RPL=RETRVE,AREA=ALENGTH,LENGTH=4,FIELDS=(RECLEN)
         MVC   0(4,R5),ALENGTH         STORE RECORD LENGTH
         LA    R10,1(R10)              BUMP COUNTER
         CR    R10,R6                  LASTRRNO = RRNO
         BNE   GET1                    NO GO GET 1
GOBACK   DS    0H
         ST    R6,LASTRRNO             STORE LASTRRNO OF LAST REC READ
         LA    R9,0                    SET RC=0
         B     TOBRIF                  RETURN TO BROWSE
EODAD1   DS    0H
         L     R3,FIRSTFLG             LOAD FIRST READ FLAG
         LTR   R3,R3                   Q. FIRST READ
         BZ    SETRC8                     N. END OF FILE REACHED
         ISPEXEC 'SETMSG MSG(VSAM004)' EMPTY MESSAGE
SETRC8   DS    0H
         ST    R10,LASTRRNO            STORE LASTRRNO OF LAST REC READ
         L     R6,@RRNO                LOAD RRNO ADDRESS
         ST    R10,0(R6)               STORE RRNO BACK TO BRIF
         LA    R9,8                    SET RC=8
*---------------------------------------------------------------------*
TOBRIF   DS    0H
         LA    R3,0
         ST    R3,FIRSTFLG
         L     R13,RSAVE+4             RESTORE EDIF ROUTINE SAVE AREA @
         L     R14,12(R13)
         LR    R15,R9                  LOAD RETURN CODE
         LM    R0,R12,20(R13)
         BR    R14                     RETURN TO EDIF
*=====================================================================*
*    VSAM CONTROL BLOCKS                                              *
*=====================================================================*
ACB1     ACB   EXLST=EXLST1,                                           X
               MACRF=(ADR,SEQ,IN),                                     X
               BUFND=5,                                                X
               BUFNI=2,                                                X
               RMODE31=ALL
EXLST1   EXLST EODAD=(EODAD1,A)
RETRVE   RPL   ACB=ACB1,                                               X
               AREA=AREA1,                                             X
               AREALEN=32760,                                          X
               OPTCD=SEQ
RPLVER   RPL   ACB=ACB1,                                               X
               AREA=AREA1,                                             X
               AREALEN=32760,                                          X
               OPTCD=CNV
*=====================================================================*
*    WORK AREAS AND CONSTANTS                                         *
*=====================================================================*
         LTORG
RSAVE    DC    18F'0'               REGISTER SAVE AREA
*
DSNAME   DC    CL44' '
DDNAME   DC    CL8' '
*
BRIF     DC   CL8'BRIF'     <---- REMOVE ONCE ISPBRIF MACRO DEVELOPED
EXTBPANL DC   CL8'EXTBPANL' <---- REMOVE ONCE ISPBRIF MACRO DEVELOPED
RECFM    DC   CL2'V'
RADDR    DC   AL4(READRTN)
DDATA    DC   F'0'
*
AFDBK    DC   F'0'
ALENGTH  DC   F'0'
RRNO     DC   F'0'
@RRNO    DC   F'0'
LASTRRNO DC   F'0'
HIGHRRNO DC   F'0'
LOWRBA   DC   F'0'
ERROR    DC   F'0'
OPNAGAIN DC   F'0'
FIRSTENT DC   F'0'
FIRSTFLG DC   F'0'
NLOGR    DC   F'0'
LRECL    DC   F'4096'
KEYLEN   DC   F'0'
KEYPOS   DC   F'0'
         DC   C' '
EXTBSORT DC   C'N'
VSAMTYPE DC   C'K'
AREA2@   DC   A(AREA2)
TBSKIP   DC   C'TBSKIP BROWSV.. NUMBER(........)'
TBSKIPL  EQU  *-TBSKIP
TBCREATE DC   C'TBCREATE BROWSV.. KEYS(KEY1) NOWRITE'
TBCREATL EQU  *-TBCREATE
TBEND    DC   C'TBEND  BROWSV..'
TBENDL   EQU  *-TBEND
TBTOP    DC   C'TBTOP  BROWSV..'
TBTOPL   EQU  *-TBTOP
TBSORT   DC   C'TBSORT BROWSV.. FIELDS(KEY1)'
TBSORTL  EQU  *-TBSORT
TBMOD    DC   C'TBMOD  BROWSV.. ORDER'
TBMODL   EQU  *-TBMOD
EXTEESLT DS   CL12
         ISPINIT  MF=L
         ISPVDEFX MF=L
         UNPACK   MF=L
         HEXCHMAC MF=L
GC009    DS   CL79
KEY1     DC   CL255' '
SPACES   DC   CL255' '
AREA1    DS   8190F'0'
AREA2    DC   410XL80'4DC5D4D7E3E860E2D3D6E35D0000000000000000000000000+
               00000000000000000000000000000000000000000000000000000000+
               0000000000000000000000000000000000000000000000000000000'
*---------------------------------------------------------------------*
         END
*=====================================================================*
