*
**       PROGRAM:  GAFADYN1
**       FUNCTION: ALLOCATE/UNALLOCATE DATASETS DEFINED TO CICS.
**       PARAMETERS:
**              IN:
**                 1 BYTE  - ACTION (OPERATION)
**                           'I' - INFORMATION
**                           'D' - DEALLOC (ONLINE) WRITES TS RECORD
**                           'F' - FREE (BATCH) NO TS RECORD
**                           'A' - ALLOCATE
**                           'N' - NEW ALLOCATION (FREE THEN ALLOCATE)
**                           'R' - REALLOC
**                 8 BYTES - DDNAME
**                 1 BYTE  - DISPOSITION
**                           'O' - OLD
**                           'S' - SHR
**                           'M' - MOD
**                           NOTE - NEW IS NOT AVAILABLE
**                 1 BYTE  - RCODE (RETURN CODE (ASIS))
**                IF ACTION IS "ALLOC"
**                44 BYTES - DSNAME
**              OUT:
**                 1 BYTE   - ACTION             (LEFT ASIS)
**                 8 BYTES  - DDNAME             (LEFT ASIS)
**                 1 BYTE   - DISPOSITION (IF OPER IS I/A/R AND
**                            RCODE=0)
**                 1 BYTE   - RCODE
**                            0 = ACTION O.K.
**                            4 = ERROR DETECTED
**                44 BYTES  - DSNAME (IF OPER IS I/F/D AND RCODE=0)
**                    OR
**                 4 BYTES  - ECODE (ERROR CODE)
**                            SYNTAX ERRORS
**                              'DAER' = INVALID ACTION VALUE
**                              'DDER' = INVALID DDNAME VALUE
**                              'DSER' = INVALID DSNAME VALUE
**                              'DIER' = INVALID DISPOSITION VALUE
**                            PROCESSING ERRORS
**                              ALL OTHER ERRORS REFER TO SVC 99 ERROR
**                               CODES.
**                 4 BYTES  - RCODE (REASON CODE)
**                            SYNTAX ERRORS
**                              NOT USED
**                            PROCESSING ERRORS
**                              REFER TO SVC 99 REASON CODES
**                 36 BYTES - MESSAGE IF ECODE = SYNTAX ERROR
**
**               NOTE - IF THE OPERATION IS DEALLOCATE/FREE, INITIALLY
**                        'INFO' IS INVOKED TO GET THE DSNAME AND DISP
**                        DETAILS TO RETURN TO THE INVOKER.
**                        THEN THE ACTION CODE (OPER) IS SET TO
**                        U(NALLOCATE) AND THE DATASET IS THEN ACTUALLY
**                        DEALLOCATED/FREED.
**                      IF THE OPERATION IS DEALLOCATE (NOT FREE)
**                        A RECORD IS WRITTEN TO TEMP STORAGE QUE
**                        'GAFADYN' SO THAT THE DATASET MAY BE
**                        REALLOCATED WITHOUT HAVING TO TYPE IN THE
**                        FULL DSNAME AND RISKING A TYPO.
**
**       REFERENCE - MVS SPL: JOB MANAGEMENT, CH.3 PAGE 23.......,
**                   REQUESTING SVC 99 FUNCTIONS (PRIOR MVS 2.1. FOR
**                   MVS 2.2 ITS UNDER SUPERVISOR SERVICES (I THINK)..
*
**       AUTHOR:   A. KARA.
**       DATE:     19/10/89
*
*=====================================================================*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
CODEREG1 EQU   10                  BASE REGISTER 2
R11      EQU   11
EIBREG1  EQU   11
R12      EQU   12
DATAREG1 EQU   13
R13      EQU   13
R14      EQU   14
R15      EQU   15
*---------------------------------------------------------------------*
COMMAREA DSECT
PARMLIST DS    0CL55            PARAMETER LIST ADDRESSES
OPER     DS    CL1
DDNAME   DS    CL8
DISP     DS    CL1
RCODE    DS    CL1
DSNAME   DS    CL44
         ORG   DSNAME
ECODE99  DS    CL4
RCODE99  DS    CL4
         ORG
PARMLEN1 EQU   *-PARMLIST
*---------------------------------------------------------------------*
DFHEISTG DSECT
WSWORK1  DS    0D
DUMPCODE DS    CL4
R08SAVER DS    F                REGISTER 13 SAVEAREA
R12SAVER DS    F                REGISTER 13 SAVEAREA
RSAVER1  DS    18F              REGISTER SAVEAREA
DSNADRS  DS    CL4              DSNAME ADDRESS FOR RETURN FROM ROUTINE
DISPADRS DS    CL4              DISP ADDRESS FOR RETURN FROM ROUTINE
DSLENG   DS    H                DATASET LENGTH STORAGE AREA
ITEM#1   DC    H'01'            TEMP STORAGE ITEM # FOR REALLOC READS
TSINPUT  DS    CL55             TEMP STORAGE READ INPUT AREA
TSLEN1   DC    H'55'            TEMP STORAGE READ LENGTH
OPERS    DS    CL1              OPERATION SAVE AREA
WORKL    EQU   *-WSWORK1        LENGTH OF GETMAIN
VL99PARM DS    CL107            VARIABLE LENGTH PARAMETER
*                               12 - 3 * TEXT POINTERS
*                               50 - DSNAME + KEYS
*                               14 - DDNAME + KEYS
*                                7 - STATUS + KEYS
*                               24 - INCLUDED IN DSECT ABOVE
*                              107 - TOTAL
*---------------------------------------------------------------------*
GETML    EQU   *-WSWORK1        LENGTH OF GETMAIN
*        PRINT OFF
         IEFZB4D0
         IEFZB4D2
*
*---------------------------------------------------------------------*
*     INTERFACING WITH CICS                                           *
*---------------------------------------------------------------------*
GAFADYN1 DFHEIENT CODEREG=CODEREG1,                                    X
               DATAREG=DATAREG1,EIBREG=EIBREG1
*
*---------------------------------------------------------------------*
*     HANDLE CONDITIONS                                               *
*---------------------------------------------------------------------*
HANDCOND DS    0H
         EXEC  CICS HANDLE CONDITION                                   X
            ERROR(DUMPIT)
*
*        EXEC  CICS HANDLE ABEND LABEL(ABENDIT)
*
*---------------------------------------------------------------------*
*    ESTABLISH ADDRESABILITY TO COMMON AREA                           *
*---------------------------------------------------------------------*
GETPARM  DS    0H
*
         ST    R12,R12SAVER         STORE  REGISTER 12
*---------------------------------------------------------------------*
         L     R3,DFHEICAP          ADDRESS OF COMMAREA
         USING COMMAREA,R3          ADDRESABILITY TO COMMAREA
         BAL   R8,PARSE             GO AND PARSE DATA
         LTR   R15,R15              Q. ZERO RETURN CODE
         BNZ   EXITPROG                N. EXIT PROGRAM
         MVC   OPERS,OPER           SAVE OPERATION
CONT#000 DS    0H
         MVI   RCODE,C'0'           SET ZERO RETURN CODE
         LA    R2,VL99PARM          ADDRESS OF REQUEST PLOCK PTR
*---------------------------------------------------------------------*
         USING S99RBP,R2            ESTABLISH ADDRESABILITY
         STM   R0,R15,RSAVER1       STORE ALL REGISTERS
         LA    R4,S99RBPTR+4        POINT PAST RBPTR
         USING S99RB,R4             EST ADDRESABILITY FOR "RB" DSECT
         ST    R4,S99RBPTR          MAKE "RBPTR" TO "RB"
         OI    S99RBPTR,S99RBPND    TURN ON HIGH ORDER BIT OF "RBPTR"
         XC    S99RB(RBLEN),S99RB   ZERO OUT "RB" ENTIRELY
         MVI   S99RBLN,RBLEN        PUT THE LEN OF "RB" IN ITS LEN FLD
         LA    R5,S99RB+RBLEN       POINT 20 BYTES PAST 'RB'
         USING S99TUPL,R5           EST ADDRESABILITY TO TEXT UNIT PTRS
         ST    R5,S99TXTPP          INIT TEXT POINTER IN 'RB'
         CLI   OPER,C'A'            Q. ALLOC INVOKED
         BE    ALOCFILE                Y. GO FREE FILE
         CLI   OPER,C'N'            Q. NEW ALLOC INVOKED
         BE    FREEFILE                Y. GO INFO FILE
         CLI   OPER,C'D'            Q. DEALLOC INVOKED
         BE    INFOFILE                Y. GO INFO FILE FIRST
         CLI   OPER,C'F'            Q. FREE INVOKED
         BE    INFOFILE                Y. GO INFO FILE FIRST
         CLI   OPER,C'I'            Q. FREE INVOKED
         BE    INFOFILE                Y. GO INFO FILE
         CLI   OPER,C'U'            Q. UNALLOCATE(FREE) AFTER INFO
         BE    FREEFILE                Y. GO INFO FILE
         CLI   OPER,C'R'            Q. REALLOCATE FILE
         BE    REALFILE                Y. GO REAL FILE
*---------------------------------------------------------------------*
*     REALLOCATE DATASET                                              *
*---------------------------------------------------------------------*
REALFILE DS    0H
         EXEC  CICS HANDLE CONDITION  QIDERR(INVREAL) ITEMERR(INVREAL)
         LA    R6,1                 ITEM NUMBER
READQLOP DS    0H
         MVC   TSLEN1(2),=H'55'     SET LENGTH OF MOVE
         STH   R6,ITEM#1            STORE ITEM NUMBER
         EXEC  CICS READQ TS QUEUE('GAFADYN') INTO(TSINPUT)            X
            ITEM(ITEM#1) LENGTH(TSLEN1)
         CLC   DDNAME(8),TSINPUT+1  Q. IS THIS THE PREV FREED DDNAME
         BE    FREEMTCH                Y. GO PROCESS
         LA    R6,1(R6)             POINT TO NEXT ITEM NUMBER
         B     READQLOP             GET NEXT ITEM
FREEMTCH DS    0H
         MVC   DISP(46),TSINPUT+9   MOVE DATA
         LA    R8,DSNAME+43         END OF DSNAME
         LA    R6,44                LOOP COUNTER
LOOP#10  DS    0H
         CLI   0(R8),X'00'          Q. HEX ZERO
         BNE   LOOP#10E                N. EXIT LOOP
         MVI   0(R8),C' '           SPACES FILL IT
         BCTR  R8,0                 POINT TO PREVIOUS CHARACTER
         BCT   R6,LOOP#10           LOOP
LOOP#10E DS    0H
         STH   R6,DSLENG            STORE DATASET LENGTH
         MVC   TSINPUT,SPACES       CLEAR TEMPORARY STORAGE Q ENTRY
         EXEC  CICS WRITEQ TS QUEUE('GAFADYN') FROM(TSINPUT)           X
            ITEM(ITEM#1) LENGTH(TSLEN1) REWRITE
         MVI   RCODE,C'0'           SET ZERO RETURN CODE
         B     ALOCFILE             GO ALLOCATE FILE
INVREAL  DS    0H
         MVI   RCODE,C'4'           SET ERROR RETURN CODE
         MVC   DSNAME+4(36),SPACES  CLEAR MESSAGE AREA
         MVC   DSNAME+4(35),=C'NO RECORD OF PREVIOUS DEALLOCATION.'
         MVC   ECODE99(4),=C'DDER'  DDNAME PARSE ERRROR
         B     EXITPROG             RETURN TO CALLER
*---------------------------------------------------------------------*
*     ALLOCATE DATASET                                                *
*---------------------------------------------------------------------*
ALOCFILE DS    0H
         MVI   S99VERB,S99VRBAL     SET VERB FOR UNALLOCATION
         LA    R6,S99TUPL+TUPTRSL3  POINT JUST PAST THE TEXT UNIT PTR
         USING S99TUNIT,R6          ADDRESABILITY FOR 1ST TEXT UNIT
         ST    R6,S99TUPTR          POINT 1ST TXT UNIT PTR TO 1ST TXT U
         BAL   R8,ALLOCR            GO ALLOCATE
         LR    R1,R2                REQ BLK PTR ADR IN R1 FOR DYNALLOC
         DYNALLOC
         LTR   R15,R15              Q. ANY ALLOCATE ERRORS
         BNZ   SETUPERR                Y. GO TO ERROR ROUTINE
         B     EXITPROG             RETURN TO CALLER
*---------------------------------------------------------------------*
FREEFILE DS    0H
         MVI   S99VERB,S99VRBUN     SET VERB FOR UNALLOCATION
         LA    R6,S99TUPL+TUPTRSL2  POINT JUST PAST THE TEXT UNIT PTR
         USING S99TUNIT,R6          ADDRESABILITY FOR 1ST TEXT UNIT
         ST    R6,S99TUPTR          POINT 1ST TXT UNIT PTR TO 1ST TXT U
         BAL   R8,FREEAR                Y. GO ALLOCATE
         LR    R1,R2                REQ BLK PTR ADR IN R1 FOR DYNALLOC
         DYNALLOC
         CLI   OPER,C'N'            Q. NEW ALLOCATION (SAVED OPER)
         BNE   TRCDFREE                N. TEST RETURN CODE
         CLC   S99ERROR(2),=X'0220' Q. ERROR 'VOL NOT AVAILABLE'
         BE    SETUPERR                Y. GO TO ERROR ROUTINE
         CLC   S99ERROR(2),=X'0420' Q. ERROR 'VOL NOT AVAILABLE'
         BE    SETUPERR                Y. GO TO ERROR ROUTINE
         CLI   S99ERROR,X'57'       Q. ERROR 'CATALOGUE ERROR'
         BE    SETUPERR                Y. GO TO ERROR ROUTINE
         MVC   OPERS(1),OPER        SAVE OPERATION
         MVI   OPER,C'A'            SET FLAG TO ALLOCATE
         B     CONT#000             GO UNALLOCATE FILE
TRCDFREE DS    0H
         LTR   R15,R15              Q. ANY FREE ERRORS
         BNZ   SETUPERR                Y. GO TO ERROR ROUTINE
         MVC   OPER(1),OPERS        RESTORE INITIAL SAVED OPERATION
         CLI   OPER,C'F'            Q. FREE INVOKED (SAVED OPER)
         BE    EXITPROG                Y. RETURN TO CALLER
WRIT2TSQ DS    0H
         MVC   TSLEN1(2),=H'55'     SET LENGTH OF MOVE
         EXEC  CICS WRITEQ TS QUEUE('GAFADYN') FROM(PARMLIST)          X
            LENGTH(TSLEN1)
         B     EXITPROG             RETURN TO CALLER
*---------------------------------------------------------------------*
INFOFILE DS    0H
         MVI   S99VERB,S99VRBIN     SET VERB FOR INFO RETRIEVAL
         LA    R6,S99TUPL+TUPTRSL3  POINT JUST PAST THE TEXT UNIT PTR
         USING S99TUNIT,R6          ADDRESABILITY FOR 1ST TEXT UNIT
         ST    R6,S99TUPTR          POINT 1ST TXT UNIT PTR TO 1ST TXT U
         BAL   R8,INFOAR                Y. GO GET INFO
         LR    R1,R2                REQ BLK PTR ADR IN R1 FOR DYNALLOC
         DYNALLOC
         LTR   R15,R15                  Q. ANY CLOSE ERRORS
         BNZ   SETUPERR                    Y. GO TO ERROR ROUTINE
         L     R4,DSNADRS               LOAD DSNAME ADDRESS
         MVC   DSNAME(44),0(R4)         MOVE DSNAME
         L     R4,DISPADRS              LOAD DISPOSITION ADDRESS
TESTOLD  DS    0H
         TM    0(R4),X'01'              Q. DISP = 'OLD'
         BNO   TESTMOD                     N. NEXT TEST
         MVI   DISP,C'O'                MOVE 'OLD' ID
         B     TEST4FRE                 GO AND SEE IF ORIG OPER 'FREE'
TESTMOD  DS    0H
         TM    0(R4),X'02'              Q. DISP = 'MOD'
         BNO   TESTNEW                     N. NEXT TEST
         MVI   DISP,C'M'                MOVE 'MOD' ID
         B     TEST4FRE                 GO AND SEE IF ORIG OPER 'FREE'
TESTNEW  DS    0H
         TM    0(R4),X'04'              Q. DISP = 'NEW'
         BNO   TESTSHR                     N. NEXT TEST
         MVI   DISP,C'N'                MOVE 'NEW' ID
         B     TEST4FRE                 GO AND SEE IF ORIG OPER 'FREE'
TESTSHR  DS    0H
         MVI   DISP,C'S'                MOVE 'SHR' ID
TEST4FRE DS    0H
         CLI   OPER,C'D'                Q. DEALLOC INVOKED
         BE    UNALLDD#                    Y. UNALLOCATE DATASET
         CLI   OPER,C'F'                Q. FREE INVOKED
         BNE   EXITPROG                    N. RETURN TO CALLER
UNALLDD# DS    0H
         MVC   OPERS(1),OPER            SAVE OPERATION
         MVI   OPER,C'U'                SET FLAG TO UNALLOCATE
         B     CONT#000                 GO UNALLOCATE FILE
*---------------------------------------------------------------------*
DUMPIT   DS    0H
         B     ABENDIT
*---------------------------------------------------------------------*
SETUPERR DS    0H
         HEXCHMAC S99ERROR,ECODE99,2    CONVERT HEX TO CHARACTER
         HEXCHMAC S99INFO,RCODE99,2     CONVERT HEX TO CHARACTER
         LM    R0,R15,RSAVER1           RESTORE ALL REGISTERS
         MVI   RCODE,C'4'               SET ERROR RETURN CODE
         B     EXITPROG                 RETURN TO CALLER
*---------------------------------------------------------------------*
*---------------------------------------------------------------------*
DSERROR  DS    0H
         LM    R0,R15,RSAVER1           RESTORE ALL REGISTERS
         MVI   RCODE,C'4'               SET ERROR RETURN CODE
         MVC   ECODE99(4),=C'DSER'      DSNAME PARSE ERRROR
*        MVC   RCODE99(4),SPACES        SPACES TO INFO MESSAGE
         B     EXITPROG
*---------------------------------------------------------------------*
DDERROR  DS    0H
         LM    R0,R15,RSAVER1           RESTORE ALL REGISTERS
         MVI   RCODE,C'4'               SET ERROR RETURN CODE
         MVC   ECODE99(4),=C'DDER'      DSNAME PARSE ERRROR
*        MVC   RCODE99(4),SPACES        SPACES TO INFO MESSAGE
         B     EXITPROG
*---------------------------------------------------------------------*
ABENDIT  DS    0H
         EXEC  CICS ABEND ABCODE(DUMPCODE)
*---------------------------------------------------------------------*
EXITPROG DS    0H
         L     R12,R12SAVER              RESTORE  REGISTER 13
         EXEC  CICS RETURN
*=====================================================================*
*---------------------------------------------------------------------*
* ROUTINE TO DEALLOCATE A DATASET USING DDNAME                        *
*---------------------------------------------------------------------*
FREEAR   DS    0H
         LA    R7,DUNDDNAM          GET THE KEY FOR DDNAME
         STH   R7,S99TUKEY          PUT KEY IN TEXT UNIT KEY FLD
         LA    R7,1                 BECAUSE THE DSNAME KEY REQUIRES 1
         STH   R7,S99TUNUM            PARM, STORE 1 IN NUMBER FIELD
         LA    R7,8                 MAXIMUM LENGTH OF DATASET
         LA    R1,DDNAME+7          LAST BYTE OF DATASET
LOOPLEN1 DS    0H
         CLI   0(R1),C' '           Q. CHARACTER A SPACE
         BE    PREVCHR1                Y. GET PREV CHAR
         CLI   0(R1),X'00'          Q. CHARACTER NULLS
         BE    PREVCHR1                Y. GET PREV CHAR
         B     LOPLEN1E                N. MOST BE END OF DSNAME
PREVCHR1 DS    0H
         BCTR  R1,0                 POINT TO PREV CHARACTER
         BCT   R7,LOOPLEN1          LOOP
         B     DDERROR              NO CHARS FOUND
LOPLEN1E DS    0H
         STH   R7,S99TULNG          STORE TEXT UNIT LENGTH
         BCTR  R7,0                 SUBTRACT 1 FROM LENGTH FOR REL MOVE
         EX    R7,MOVEDDN           MOVE DSNAME
         LA    R6,S99TUNIT          POINT JUST PAST THE 1ST TEXT UNIT
         LA    R6,6(R6)             POINT PAST KEY, # AND LENGTH
         LA    R7,1(R7)             BACK TO NORMAL LENGTH
         AR    R6,R7                POINT PAST DSNAME
         LA    R5,S99TUPL+4         POINT TO 2ND TEXT UNIT PTR IN LIST
         ST    R6,S99TUPTR          POINT 2ND TXT UNIT PTR TO 2ND T.U.
         OI    S99TUPTR,S99TUPLN    TURN ON HIGH ORDER BIT FOR LAST PTR
         LA    R7,DUNUNALC          GET KEY FOR RETURN DSNAME
         STH   R7,S99TUKEY          PUT THE KEY IN TEXT UNIT
         LA    R7,0                 BECAUSE THE UNALLOC KEY REQUIRES 0
         STH   R7,S99TUNUM            PARM, STORE 0 IN NUMBER FIELD
         BR    R8                   RETURN
*---------------------------------------------------------------------*
*---------------------------------------------------------------------*
* ROUTINE TO ALLOCATE A DSNAME TO SUPPLIED DDNAME                     *
*---------------------------------------------------------------------*
ALLOCR   DS    0H
         ST    R8,R08SAVER          SAVE LINK REGISTER
         LA    R7,DALDSNAM          GET THE KEY FOR DSNAME
         STH   R7,S99TUKEY          PUT KEY IN TEXT UNIT KEY FLD
         LA    R7,1                 BECAUSE THE DSNAME KEY REQUIRES 1
         STH   R7,S99TUNUM            PARM, STORE 1 IN NUMBER FIELD
         LH    R7,DSLENG            LOAD DATASET LENGTH
*        LH    R7,=H'16'            LOAD DATASET LENGTH
         STH   R7,S99TULNG          STORE TEXT UNIT LENGTH
         BCTR  R7,0                 SUBTRACT 1 FROM LENGTH FOR REL MOVE
         EX    R7,MOVEDSN           MOVE DSNAME
         LA    R6,S99TUNIT          POINT JUST PAST THE 1ST TEXT UNIT
         LA    R6,6(R6)             POINT PAST KEY, # AND LENGTH
         LA    R7,1(R7)             BACK TO NORMAL LENGTH
         AR    R6,R7                POINT PAST DSNAME
         LA    R5,S99TUPL+4         POINT TO 2ND TEXT UNIT PTR IN LIST
         ST    R6,S99TUPTR          POINT 2ND TXT UNIT PTR TO 2ND T.U.
         LA    R7,DALDDNAM          GET THE KEY FOR DSNAME
         STH   R7,S99TUKEY          PUT KEY IN TEXT UNIT KEY FLD
         LA    R7,1                 BECAUSE THE DSNAME KEY REQUIRES 1
         STH   R7,S99TUNUM            PARM, STORE 1 IN NUMBER FIELD
         LA    R7,8                 MAXIMUM LENGTH OF DATASET
         LA    R8,DDNAME+7          LAST BYTE OF DATASET
LOOPLN32 DS    0H
         CLI   0(R8),C' '           Q. CHARACTER A SPACE
         BE    PRVCHR32                Y. GET PREV CHAR
         CLI   0(R8),X'00'          Q. CHARACTER NULLS
         BE    PRVCHR32                Y. GET PREV CHAR
         B     LOPLN32E                N. MOST BE END OF DSNAME
PRVCHR32 DS    0H
         BCTR  R8,0                 POINT TO PREV CHARACTER
         BCT   R7,LOOPLN32          LOOP
         B     DDERROR              NO CHARS FOUND
LOPLN32E DS    0H
         STH   R7,S99TULNG          STORE TEXT UNIT LENGTH
         BCTR  R7,0                 SUBTRACT 1 FROM LENGTH FOR REL MOVE
         EX    R7,MOVEDDN           MOVE DSNAME
         LA    R6,S99TUNIT          POINT JUST PAST THE 1ST TEXT UNIT
         LA    R6,6(R6)             POINT PAST KEY, # AND LENGTH
         LA    R7,1(R7)             BACK TO NORMAL LENGTH
         AR    R6,R7                POINT PAST DSNAME
         LA    R5,S99TUPL+4         POINT TO 3ND TEXT UNIT PTR IN LIST
         ST    R6,S99TUPTR          POINT 3ND TXT UNIT PTR TO 2ND T.U.
         OI    S99TUPTR,S99TUPLN    TURN ON HIGH ORDER BIT FOR LAST PTR
         LA    R7,DALSTATS          GET KEY FOR PARMLIST SPECIFICATIONS
         STH   R7,S99TUKEY          PUT THE KEY IN TEXT UNIT
         LA    R7,1                 BECAUSE THE DSNAME KEY REQUIRES 1
         STH   R7,S99TUNUM            PARM, STORE 1 IN NUMBER FIELD
         STH   R7,S99TULNG          SET DISP PARM LENGTH ALSO
TSTOLDD  DS    0H
         CLI   DISP,C'O'            Q. DISPOSITION OLD
         BNE   TSTMODD                 N. TEST NEXT
         MVI   S99TUPAR,X'01'       OLD DISPOSITION
         B     CONT#30              BYPASS
TSTMODD  DS    0H
         CLI   DISP,C'M'            Q. DISPOSITION MOD
         BNE   TSTNEWD                 N. TEST NEXT
         MVI   S99TUPAR,X'02'       NEW DISPOSITION
         B     CONT#30              BYPASS
TSTNEWD  DS    0H
         CLI   DISP,C'N'            Q. DISPOSITION NEW
         BNE   TSTSHRD                 N. TEST NEXT
         MVI   S99TUPAR,X'04'       NEW DISPOSITION
         B     CONT#30              BYPASS
TSTSHRD  DS    0H
         MVI   S99TUPAR,X'08'       SHR DISPOSITION
CONT#30  DS    0H
*        LA    R6,S99TUNIT+7        POINT PAST THE 3ND TEXT UNIT
*        LA    R5,S99TUPL+4         POINT TO 4RD T.U. PTR IN LIST
*        ST    R6,S99TUPTR          POINT 4RD TEXT UNIT PTR TO 3RD T.U
*        OI    S99TUPTR,S99TUPLN    TURN ON HIGH ORDER BIT FOR LAST PTR
         L     R8,R08SAVER          RESTORE LINK REGISTER
         BR    R8                   RETURN
*---------------------------------------------------------------------*
*---------------------------------------------------------------------*
* ROUTINE TO GET INFO ON DDNAME => DSNAME + DISPOSITION               *
*---------------------------------------------------------------------*
INFOAR   DS    0H
         ST    R8,R08SAVER          SAVE LINK REGISTER
         LA    R7,DINDDNAM          GET THE KEY FOR DDNAME
         STH   R7,S99TUKEY          PUT KEY IN TEXT UNIT KEY FLD
         LA    R7,1                 BECAUSE THE DSNAME KEY REQUIRES 1
         STH   R7,S99TUNUM            PARM, STORE 1 IN NUMBER FIELD
         LA    R7,8                 MAXIMUM LENGTH OF DATASET
         LA    R8,DDNAME+7          LAST BYTE OF DATASET
LOOPLN41 DS    0H
         CLI   0(R8),C' '           Q. CHARACTER A SPACE
         BE    PRVCHR41                Y. GET PREV CHAR
         CLI   0(R8),X'00'          Q. CHARACTER NULLS
         BE    PRVCHR41                Y. GET PREV CHAR
         B     LOPLN41E                N. MUST BE END OF DSNAME
PRVCHR41 DS    0H
         BCTR  R8,0                 POINT TO PREV CHARACTER
         BCT   R7,LOOPLN41          LOOP
         B     DDERROR              NO CHARS FOUND
LOPLN41E DS    0H
         STH   R7,S99TULNG          STORE TEXT UNIT LENGTH
         BCTR  R7,0                 SUBTRACT 1 FROM LENGTH FOR REL MOVE
         EX    R7,MOVEDDN           MOVE DDNAME
         LA    R6,S99TUNIT          POINT JUST PAST THE 1ST TEXT UNIT
         LA    R6,6(R6)             POINT PAST KEY, # AND LENGTH
         LA    R7,1(R7)             BACK TO NORMAL LENGTH
         AR    R6,R7                POINT PAST DSNAME
         LA    R5,S99TUPL+4         POINT TO 2ND TEXT UNIT PTR IN LIST
         ST    R6,S99TUPTR          POINT 2ND TXT UNIT PTR TO 2ND T.U.
         LA    R7,DINRTDSN          GET THE KEY FOR DSNAME
         STH   R7,S99TUKEY          PUT KEY IN TEXT UNIT KEY FLD
         LA    R7,1                 BECAUSE THE DSNAME KEY REQUIRES 1
         STH   R7,S99TUNUM            PARM, STORE 1 IN NUMBER FIELD
         LA    R7,44                MAXIMUM LENGTH OF DATASET
         STH   R7,S99TULNG          STORE TEXT UNIT LENGTH
         LA    R6,S99TUNIT          POINT JUST PAST THE 1ST TEXT UNIT
         LA    R6,6(R6)             POINT PAST KEY, # AND LENGTH
         ST    R6,DSNADRS           STORE DSN RETURN ADDRESS
         LA    R6,44(R6)            POINT PAST DSNAME
*        LA    R7,1(R7)             BACK TO NORMAL LENGTH
*        AR    R6,R7                POINT PAST DSNAME
         LA    R5,S99TUPL+4         POINT TO 3ND TEXT UNIT PTR IN LIST
         ST    R6,S99TUPTR          POINT 3ND TXT UNIT PTR TO 3ND T.U.
         OI    S99TUPTR,S99TUPLN    TURN ON HIGH ORDER BIT FOR LAST PTR
         LA    R7,DINRTSTA          GET KEY FOR PARMLIST SPECIFICATIONS
         STH   R7,S99TUKEY          PUT THE KEY IN TEXT UNIT
         LA    R7,1                 BECAUSE THE DSNAME KEY REQUIRES 1
         STH   R7,S99TUNUM          PARM, STORE 1 IN NUMBER FIELD
         STH   R7,S99TULNG          SET DISP PARM LENGTH ALSO
         LA    R6,6(R6)             POINT PAST KEY, # AND LENGTH
         ST    R6,DISPADRS          STORE DISPOSITION ADDRESS
         L     R8,R08SAVER          RESTORE LINK REGISTER
         BR    R8                   RETURN
*---------------------------------------------------------------------*
MOVEDSN  MVC   S99TUPAR(0),DSNAME
MOVEDDN  MVC   S99TUPAR(0),DDNAME
*---------------------------------------------------------------------*
*---------------------------------------------------------------------*
* ROUTINE TO PARSE PARAMETERS PASSED TO THIS ROUTINE                  *
*---------------------------------------------------------------------*
PARSE    DS    0H
         ST    R8,R08SAVER          SAVE LINK REGISTER
         CLI   OPER,C'I'            Q. VALID OPERATION
         BE    TESTDD                  Y. CONTINUE
         CLI   OPER,C'D'            Q. VALID OPERATION
         BE    TESTDD                  Y. CONTINUE
         CLI   OPER,C'F'            Q. VALID OPERATION
         BE    TESTDD                  Y. CONTINUE
         CLI   OPER,C'A'            Q. VALID OPERATION
         BE    TESTDD                  Y. CONTINUE
         CLI   OPER,C'R'            Q. VALID OPERATION
         BE    TESTDD                  Y. CONTINUE
         CLI   OPER,C'N'            Q. VALID OPERATION
         BE    TESTDD                  Y. CONTINUE
         MVC   DSNAME+4(36),SPACES  CLEAR MESSAGE AREA
         MVC   DSNAME+4(23),=C'INVALID ACTION ENTERED.'
         MVC   ECODE99(4),=C'DAER'      DSNAME PARSE ERRROR
         B     PARSER4              RETURN WITH ERROR CODE
TESTDD   DS    0H
         CLC   DDNAME(8),SPACES     Q. DDNAME SUPPLIED
         BNE   GETDDLEN                Y. CONTINUE
         MVC   DSNAME+4(36),SPACES  CLEAR MESSAGE AREA
         MVC   DSNAME+4(15),=C'MISSING DDNAME.'
         MVC   ECODE99(4),=C'DDER'  DDNAME PARSE ERRROR
         B     PARSER4
GETDDLEN DS    0H
         LA    R7,DDNAME+7          POINT TO LAST CHARACTER OF DSNAME
         LA    R4,8                 LOOP COUNTER
DDNLOOP1 DS    0H
         CLI   0(R7),C' '           Q. CHARACTER SPACES
         BNE   TRANDD                  N. END OF LOOP
         BCTR  R7,0                 POINT TO PREVIOUS CHARACTER
         BCT   R4,DDNLOOP1          LOOP AROUND
TRANDD   DS    0H
         BCTR  R4,0                 RELATIVE LENGTH
         EX    R4,TRTDD             Q. ALL VALID CHARACTERS
         BZ    TEST1DD                 Y. TEST DSNAME
         MVC   DSNAME+4(36),SPACES  CLEAR MESSAGE AREA
         MVC   DSNAME+4(29),=C'INVALID CHARACTERS IN DDNAME.'
         MVC   ECODE99(4),=C'DDER'  DDNAME PARSE ERRROR
         B     PARSER4
TEST1DD  DS    0H
         CLI   DDNAME,C'0'          Q. FIRST CHARACTER ALPHABETIC
         BL    TESTDSN1                Y. TEST DSNAME
         MVC   DSNAME+4(36),SPACES  CLEAR MESSAGE AREA
         MVC   DSNAME+4(35),=C'FIRST CHARACTERS IN DDNAME INVALID.'
         MVC   ECODE99(4),=C'DDER'  DDNAME PARSE ERRROR
         B     PARSER4
TESTDSN1 DS    0H
         CLI   OPER,C'A'            Q. ALLOCATION
         BE    TESTDSN2                Y. TEST FOR DSNAME
         CLI   OPER,C'N'            Q. NEW ALLOCATION
         BNE   PARSER0                 N. EXIT WITHOUT PARSING REST
TESTDSN2 DS    0H
         CLC   DSNAME(44),SPACES    Q. DSNAME SUPPLIED
         BNE   GETDSLEN                Y. CONTINUE
         MVC   DSNAME+4(36),SPACES  CLEAR MESSAGE AREA
         MVC   DSNAME+4(15),=C'MISSING DSNAME.'
         MVC   ECODE99(4),=C'DSER'  DSNAME PARSE ERRROR
         B     PARSER4
GETDSLEN DS    0H
         LA    R7,DSNAME+43         POINT TO LAST CHARACTER OF DSNAME
         LA    R4,44                LOOP COUNTER
DSNLOOP1 DS    0H
         CLI   0(R7),C' '           Q. CHARACTER SPACES
         BNE   DSNLOPE1                N. END OF LOOP
         BCTR  R7,0                 POINT TO PREVIOUS CHARACTER
         BCT   R4,DSNLOOP1          LOOP AROUND
DSNLOPE1 DS    0H
         STH   R4,DSLENG            STORE DATASET LENGTH
TRANDSN  DS    0H
         BCTR  R4,0                 RELATIVE LENGTH
         EX    R4,TRTDSN            Q. ALL VALID CHARACTERS
         BZ    PARSQUAL                Y. PARSE QUALIFIERS
         MVC   DSNAME+4(36),SPACES  CLEAR MESSAGE AREA
         MVC   DSNAME+4(29),=C'INVALID CHARACTERS IN DSNAME.'
         MVC   ECODE99(4),=C'DSER'  DSNAME PARSE ERRROR
         B     PARSER4
PARSQUAL DS    0H
         LA    R2,DSNAME            START OF DSNAME
         LA    R8,0                 QUALIFER COUNTER
         LH    R6,DSLENG            LOAD DATASET LENGTH
         CH    R6,=H'44'            Q. FULL DSNAME LENGTH
         BNL   FISTQUAL                Y. BYPASS
         LR    R4,R2                START OF DSNAME
         AR    R4,R6                ADD LENGTH OF DSNAME
         CLI   0(R4),C'.'           Q. IS LAST CHAR '.'
         BE    INVQUAL                 Y. INVALID QUALIFIER NAME
         LA    R6,1(R6)             POINT PAST LENGTH
FISTQUAL DS    0H
         CLI   0(R2),C'.'           Q. IS FIRST CHAR '.'
         BE    INVQUAL                 Y. INVALID QUALIFIER NAME
         CLI   0(R2),C'0'           Q. IS FIRST CHAR > 0
         BNL   INVQUAL                 Y. INVALID QUALIFIER NAME
         LA    R2,1(R2)             NEXT CHARACTER
         LA    R8,1(R8)             UP QUALIFIER
         LA    R9,1                 MAX LENGTH OF QUALIFIER AFTER 1ST
         BCT   R6,DSQLOOP1          DECREMENT COUNTER
DSQLOOP1 DS    0H
         CLI   0(R2),C' '           Q. END OF DSNAME
         BE    GETSTAT                 Y. GO PROCESS STATUS
         CLI   0(R2),X'00'          Q. END OF DSNAME
         BE    GETSTAT                 Y. GO PROCESS STATUS
         CLI   0(R2),C'.'           Q. END OF QUALIFIER
         BNE   HAVECHR#                N. IS A CHARACTER
         LA    R2,1(R2)             POINT PAST '.'
         BCTR  R6,0                 DECREMENT COUNTER BY 1
         B     FISTQUAL             GO TEST FIRST QUAL
HAVECHR# DS    0H
         LA    R2,1(R2)             POINT TO NEXT CHARACTER
         LA    R9,1(R9)             POINT TO NEXT CHARACTER
         CH    R9,=H'9'             LOOP TILL > 8 CHARS ENCOUNTERED
         BL    NOT9CHAR          LOOP TILL > 8 CHARS ENCOUNTERED
         MVC   DSNAME+4(36),SPACES  CLEAR MESSAGE AREA
         MVC   DSNAME+4(32),=C'QUALIFIER . LENGTH > 8 CHARACTERS.'
         UNPACK R8,1,DSNAME+4+10    MOVE QUALIFIER # TO MESSAGE
         MVC   ECODE99(4),=C'DSER'  DSNAME PARSE ERRROR
         B     PARSER4              GO TELL OF ERROR
NOT9CHAR DS    0H
         BCT   R6,DSQLOOP1          LOOP TILL END
GETSTAT  DS    0H                   (WILL BE FOUND AS MTD = ON)
         CLI   DISP,C'S'            Q. STATUS = "SHR"
         BE    PARSER0                 Y. BYPASS
         CLI   DISP,C'O'            Q. STATUS = "OLD"
         BE    PARSER0                 Y. BYPASS
         CLI   DISP,C'M'            Q. STATUS = "MOD"
         BE    PARSER0                 Y. BYPASS
INVSTAT  DS    0H
         MVC   DSNAME+4(36),SPACES  CLEAR MESSAGE AREA
         MVC   DSNAME+4(20),=C'INVALID STAUS VALUE.'
         MVC   ECODE99(4),=C'DIER'  DISP PARSE ERRROR
         B     PARSER4
INVQUAL  DS    0H
         MVC   ECODE99(4),=C'DSER'  DSNAME PARSE ERRROR
         MVC   DSNAME+4(36),SPACES  CLEAR MESSAGE AREA
         MVC   DSNAME+4(22),=C'INVALID DSNAME FORMAT.'
         B     PARSER4
*---------------------------------------------------------------------*
TRTDSN   TRT   DSNAME(0),TRTDSNM    ALL VALID CHARACTERS
TRTDD    TRT   DDNAME(0),TRTDSNM    ALL VALID CHARACTERS
*---------------------------------------------------------------------*
PARSER0  DS    0H
         LA    R15,0                SET ZERO RETURN CODE
         L     R8,R08SAVER          RESTORE LINK REGISTER
         BR    R8                   RETURN
PARSER4  DS    0H
         MVI   RCODE,C'4'           SET ERROR RETURN CODE
         LA    R15,4                SET ERROR RETURN
         L     R8,R08SAVER          RESTORE LINK REGISTER
         BR    R8                   RETURN
*---------------------------------------------------------------------*
*=====================================================================*
*---------------------------------------------------------------------*
         LTORG
*---------------------------------------------------------------------*
#TUPTRS2 EQU   2                   WE ARE USING 2 TEXT UNITS
TUPTRSL2 EQU   (#TUPTRS2*4)        TEXT UNIT PTR LENGTH
#TUPTRS3 EQU   3                   WE ARE USING 3 TEXT UNITS
TUPTRSL3 EQU   (#TUPTRS3*4)        TEXT UNIT PTR LENGTH
#TUPTRS4 EQU   4                   WE ARE USING 4 TEXT UNITS
TUPTRSL4 EQU   (#TUPTRS4*4)        TEXT UNIT PTR LENGTH
RBLEN    EQU   (S99RBEND-S99RB)
SPACES   DC    CL256' '
*---------------------------------------------------------------------*
TRTDSNM  DC    16X'40'                                00-0F
         DC    16X'40'                                10-1F
         DC    16X'40'                                20-2F
         DC    16X'40'                                30-3F
         DC    X'40404040404040404040400040404040'    40-4F
         DC    X'40404040404040404040400040404040'    50-5F
         DC    16X'40'                                60-6F
         DC    X'40404040404040404040400000404040'    70-7F
         DC    16X'40'                                80-8F
         DC    16X'40'                                90-9F
         DC    16X'40'                                A0-AF
         DC    16X'40'                                B0-BF
         DC    X'40000000000000000000404040404040'    C0-CF
         DC    X'40000000000000000000404040404040'    D0-DF
         DC    X'40400000000000000000404040404040'    E0-EF
         DC    X'00000000000000000000404040404040'    F0-FF
*---------------------------------------------------------------------*
         END
