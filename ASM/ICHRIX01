*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
*                                                                     *
*        Title:    'RACINIT PRE-PROCESSING EXIT'                      *
*        System:   RACF security                                      *
*        Module:   ICHRIX01                                           *
*        Program:  ICHRIX01                                           *
*        Function: Prevent users from attempting to logon to an       *
*                  application using a Started task id as the userid. *
*                                                                     *
*                  If the attempt limit is exceeded, the password is  *
*                  revoked which may then cause certain started tasks *
*                  from starting up. If any of these are a critical   *
*                  task, the results could be catastrophic.           *
*                                                                     *
*                  Logic:                                             *
*                      1. R1 points to RACINIT's RIXPL.               *
*                      2. Extract userid from RIXPL.                  *
*                      3. Extract group from RIXPL.                   *
*                      4. Extract session type definition from RIXPL. *
*                      5. If group found GoTo 7.                      *
*                      6. Execute the RACROUTE macro to get group.    *
*                      7. If the group is NOT 'STASK001' then exit.   *
*                      8. Establish the userid of calling task.       *
*                      9. If the logging on userid is specified in    *
*                         module ICHRIX0Z then exit.                  *
*                     10. Issue a write to operator.                  *
*                     11. Exit with return code of 4.                 *
*                                                                     *
*        Register usage:                                              *
*                  R1   - Available                                   *
*                  R2   - Available                                   *
*                  R3   - Available                                   *
*                  R4   - Available                                   *
*                  R5   - Available                                   *
*                  R6   - Available                                   *
*                  R7   - RIXPL base.                                 *
*                  R8   - Available                                   *
*                  R9   - Available                                   *
*                  R10  - Available                                   *
*                  R11  - Available                                   *
*                  R12  - Program base register                       *
*                  R13  - Acquired storage and reg save area base     *
*                  R14  - Available                                   *
*                  R15  - Available                                   *
*                                                                     *
*        Notes:    Program must be re-entrant as it is in LPALIB.     *
*        Author:   A. Kara (ASYSTS P/L).                              *
*        Date:     10/08/94.                                          *
*                                                                     *
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
ICHRIX01 CSECT
ICHRIX01 AMODE 31
         B     30(R15)                 BRANCH AROUND P/D/T STAMP
         SPACE 1
         DC    CL8'ICHRIX01'           PROGRAM STAMP
         DC    C'_'                    DELIMITER
         DC    CL8'&SYSDATE'           DATE STAMP
         DC    C'_'                    DELIMITER
         DC    CL8'&SYSTIME'           TIME STAMP
         SPACE 1
         STM   R14,R12,12(R13)         SAVE REGISTERS
         LR    R2,R15                  LOAD R2 WITH START OF PR
         USING ICHRIX01,R2             USE R2 AS TEMPORARY BASE
         GETMAIN R,LV=WORKAREL         GETMAIN AREA
         ST    R13,4(R1)               BACKWARD CHAIN
         ST    R1,8(R13)               FORWARD CHAIN
         LR    R13,R1                  SAVE AREA @
         USING WORKAREA,R13            ADDRESABILITY TO GETMAIN
         LR    R12,R2                  R12 IS 1ST. BASE REG
         DROP  R2                      DROP REGISTER 15 AS BASE
         USING ICHRIX01,R12            USING ONE BASE REGISTERS
         XR    R0,R0                   ZERO REGISTER 0
         ST    R0,8(R13)               CLEAR FORWARD CHAIN
         L     R1,4(R13)               LOAD CALLERS SAVEAREA @
         LM    R0,R2,20(R1)            RESTORE PARM REGISTERS
         SPACE 1
*---------------------------------------------------------------------*
* Get addresability to RACINIT exit parameter list 'RIXP'             *
*---------------------------------------------------------------------*
         LR    R7,R1                   SAVE REGISTER 1 FOR LATER USE
         USING RIXPL,R7                ADDRESABILITY TO DSECT
         SPACE 1
*---------------------------------------------------------------------*
* Initialise fields                                                   *
*---------------------------------------------------------------------*
         MVC   WTODET1(WTODETL),WTODETF MOVE WTO DATA TO GETMAINED
         MVC   TARGET(80),SPACES       CLEAR USERID FIELD
         MVC   RACRLST(DUMMLSTL),DUMMLST INITIALISE RACROUTE WORK
         MVC   TARGET,SPACES           CLEAR FIELD
         SPACE 1
*---------------------------------------------------------------------*
GETUSER  DS    0H
         L     R2,RIXUID               POINT TO USERID ADDRESS
         XR    R3,R3                   INITIALISE REGISTER FOR LENGTH
         IC    R3,0(R2)                INSERT USERID LENGTH
         BCTR  R3,0                    PREPARE FOR EX COMMAND
         LA    R4,USERID               DESTINATION ADDRESS
         EX    R3,MOVEDATA             MOVE USERID
GETGROUP DS    0H
         L     R2,RIXGROUP             POINT TO GROUP ADDRESS
         XR    R3,R3                   INITIALISE REGISTER FOR LENGTH
         IC    R3,0(R2)                INSERT GROUP LENGTH
         LTR   R3,R3                   Q. ANY GROUP
         BZ    GETSTYP                    N. BYPASS MOVE
         BCTR  R3,0                    PREPARE FOR EX COMMAND
         LA    R4,OWNER                DESTINATION ADDRESS
         EX    R3,MOVEDATA             MOVE GROUP
GETSTYP  DS    0H
         L     R2,RIXPSESN             POINT TO USERID ADDRESS
         MVC   TOKSTYP(1),0(R2)        MOVE SESSION TYPE DEFINITION
         CLC   OWNER,SPACES            Q. OWNER AVAILABLE
         BNE   HAVEOWNR                   Y. BYPASS
         BAL   R14,GETOWNER            GO GET OWNER
HAVEOWNR DS    0H
         CLC   =C'STASK001',OWNER      Q. SPECIAL STARTED TASK
         BNE   EXITPR00                   N. EXIT PROGRAM
         MVC   LUSERID,USERID          SAVE LOGON USERID
                                                                SPACE 1
*---------------------------------------------------------------------*
* Get requestor's Userid and test if in privileged 'table'.           *
*---------------------------------------------------------------------*
GETJOBID DS    0H
         USING PSA,R0                  ESTABLISH DSECT ADDRESSIBILITY
         L     R3,PSAAOLD              GET ADDR OF CALLER'S ASCB
         USING ASCB,R3                 ESTABLISH DSECT ADDRESIBILITY
         L     R3,ASCBCSCB             GET ADDR OF CALLER'S CSCB
         USING CSCB,R3                 ESTABLISH DSECT ADDRESSIBILITY
         MVC   USERID,CHKEY            MOVE OWNING TASKS USERID
                                                                SPACE 1
         LOAD  EP=ICHRIX0Z             LOAD PRIVILEDGED USERS
         LR    R4,R0                   LOAD ENTRY POINT OF PROGRAM
         LH    R9,0(R4)                LOAD NUMBER OF ENTRIES
         LA    R4,2(R4)                POINT PAST NUMBER OF ENTRIES
         MVI   PRIVFLAG,C'Y'           TURN PRIVILEGED FLAG ON
SRCHLOOP DS    0H
         CLC   USERID(8),0(R4)         Q. PRIVILEGED STC
         BE    PRIVSTC                    Y. PROCESS AS PRIVILEGED
         LA    R4,8(R4)                BUMP BY ENTRY LENGTH
         BCT   R9,SRCHLOOP             LOOP TILL END
         MVI   PRIVFLAG,C'N'           TURN PRIVILEGED FLAG OFF
PRIVSTC  DS    0H
         DELETE EP=ICHRIX0Z            REMOVE PROGRAM
                                                                SPACE 1
         CLI   PRIVFLAG,C'Y'           Q. PRIVILEGED TASK
         BNE   EXITPR04                   N. EXIT WITH ERROR CODE
EXITPR00 DS    0H
         XR    R15,R15                 SET ZERO RETURN CODE
         B     EXITPROG                GO EXIT PROGRAM
                                                                SPACE 1
EXITPR04 DS    0H
         MVC   TARGET+37(8),USERID     MOVE IN LOGING ON USERID
         MVC   TARGET(8),LUSERID       MOVE LOGON USERID TO MESSAGE
         MVC   TARGET+8(29),=C' - Invalid logon attempt by '''
         MVC   TARGET+45(30),=C'''. Logon rejected in ICHRIX01.'
         BAL   R14,WTORTN
         LA    R15,4                   SET ERROR RETURN CODE
         SPACE 1
EXITPROG DS    0H
         LR    R1,R13                  LOAD GETMAINED AREA ADDRESS
         LR    R2,R15                  SAVE REGISTER 15 IN CASE
         L     R13,4(R13)              LOAD CALLERS SAVEAREA @
         FREEMAIN R,LV=WORKAREL,A=(1)  FREE STORAGE
         LR    R15,R2                  RESTORE R15 FROM ABOVE SAVE
         L     R14,12(R13)             RESTORE R14
         LM    R0,R12,20(R13)          RESTORE REGISTERS 0-12
         BR    R14                     RETURN
         SPACE 1
*---------------------------------------------------------------------*
* WTO routine used for debugging purposes                             *
*---------------------------------------------------------------------*
WTORTN   DS    0H
         ST    R14,$SAVER14            SAVE REGISTER
         LA    R5,WTODET1              LOAD ADDRESS OF WTO AREA
         MVC   WTODET1+4(80),TARGET    MOVE MESSAGE DETAILS
         WTO   MF=(E,(R5))             ISSUE MSG
         L     R14,$SAVER14            RESTORE REGISTER
         BR    R14                     RETURN TO CALLER
*---------------------------------------------------------------------*
MOVEDATA MVC   0(0,R4),1(R2)           MOVE APPROPRIATE DATA
*---------------------------------------------------------------------*
* Routine to execute the RACROUTE macro in the event that the owner   *
* has not been established for the user...                            *
*---------------------------------------------------------------------*
GETOWNER DS    0H                      SPACE 1
         STM   R14,R12,$SAVSUB1        SAVE REGISTERS
         RACROUTE REQUEST=EXTRACT,ENTITY=USERID,                       +
               TYPE=EXTRACT,                                           +
               FIELDS=STRFLDS,                                         +
               DERIVE=YES,                                             +
               WORKA=WORK1,                                            +
               RELEASE=1.9,                                            +
               MF=(E,RACRLST)
         LTR   R15,R15                 Q. ZERO RETURN CODE
         BNZ   EXITPRER                   N. EXIT WITH ERROR
         SPACE 1
         LR    R7,R1                   SAVE WORK AREA POINTER
         USING EXTWKEA,R7              ADDRESSABILITY TO DATA
         XR    R2,R2                   INITIALISE REGISTER
         ICM   R2,7,EXTWLN             LOAD LENGTH
         BCTR  R2,0                    PREPARE FOR 'EX COMMAND
MOVE1    MVC   WORK2(0),0(R7)
         EX    R2,MOVE1                MOVE DATA TO WORK AREA
         SPACE 1
* PROCESS DATA
         MVC   OWNER,WORK2+X'20'       MOVE OWNER DETAILS
         SPACE 1
         XR    R2,R2                   INITIALISE REGISTER
         XR    R3,R3                   INITIALISE REGISTER
         ICM   R2,7,EXTWLN             LOAD LENGTH
         ICM   R3,1,EXTWSP             LOAD SUBPOOL NUMBER
         DROP  R7                      RELINQUISH ADDRESABILITY
         FREEMAIN R,LV=(R2),A=(R7),SP=(R3) FREE AREA
         SPACE 1
EXITPRER DS    0H
         LM    R14,R12,$SAVSUB1        RESTORE REGISTERS
         BR    R14                     RETURN TO CALLER
         SPACE 1
*=====================================================================*
* Constants                                                           *
*---------------------------------------------------------------------*
         LTORG
SPACES   DC    CL256' '
STRFLDS  DC    A(1)
         DC    CL8'USER'
                                                                SPACE 1
WTODETF  DS    0F
         WTO   '                                                       +
                                        ',                             +
               ROUTCDE=(2,12),DESC=(11),                               +
               MF=L
WTODETL  EQU   *-WTODETF
                                                                SPACE 1
DUMMLST  RACROUTE REQUEST=EXTRACT,ENTITY=*-*,                          +
               TYPE=EXTRACT,                                           +
               CLASS='USER',                                           +
               FIELDS=*-*,                                             +
               SEGMENT='BASE',                                         +
               WORKA=*-*,                                              +
               DERIVE=YES,                                             +
               RELEASE=1.9,                                            +
               MF=L
DUMMLSTL EQU   *-DUMMLST
                                                                SPACE 1
*=====================================================================*
* DSECTS                                                              *
*---------------------------------------------------------------------*
WORKAREA DSECT
         DS    18F                     REGISTER SAVE AREA (ENTRY)
$SAVSUB1 DS    16F                     REGISTER SAVE AREA (ROUTINE 1)
$SAVER14 DS    F                       REGISTER SAVE AREA (GENERAL)
TARGET   DS    CL80
         ORG   TARGET
USERID   DC    CL8' '                  LOGON USER
OWNER    DC    CL8' '                  LOGON USER'S OWNER
TOKSTYP  DC    XL1'00'                 SESSION TYPE
INITIAL  EQU   X'00'                   INITIALLY UNKNOWN
LOGONT   EQU   X'06'                   TSO LOGON
LUSERID  DC    CL8' '                  JOB'S USERID
         ORG
PRIVFLAG DC    C'Y'                    PRIVILEGED TASK FLAG INDICATOR
                                                                SPACE 1
WTODET1  DS    0F
         WTO   '                                                       +
                                        ',                             +
               ROUTCDE=(2,12),DESC=(11),                               +
               MF=L
RACRLST  RACROUTE REQUEST=EXTRACT,ENTITY=*-*,                          +
               TYPE=EXTRACT,                                           +
               CLASS='USER',                                           +
               FIELDS=*-*,                                             +
               SEGMENT='BASE',                                         +
               WORKA=*-*,                                              +
               DERIVE=YES,                                             +
               RELEASE=1.9,                                            +
               MF=L
WORK1    DS    128F
WORK2    DS    128F
*=====================================================================*
WORKAREL EQU   *-WORKAREA
                                                                SPACE 1
RIPX     ICHRIXP  ,
RXTW     IRRPRXTW ,
         IHAPSA   ,
         IHAASCB  ,
CSCB     DSECT
         IEECHAIN ,
         YREGS
         END   ICHRIX01
