         TITLE 'IEFACTRT - SMF ACCOUNTING EXIT'
***********************************************************************
*                                                                     *
*               SMF ACCOUNTING EXIT                                   *
*               --------------------                                  *
*                                                                     *
*  THIS EXIT IS USED ISSUE WTO COND CODE FOR STEP END                 *
*                                                                     *
*  THE MESSAGE FOR A COMPLETED STEP IS:                               *
*                                                                     *
* IEFACTRT: STEP=SSSSSSSS(NNNNN) PGM=PPPPPPPP CODE=CCCCC JOB=JJJJJJJJ *
*                                                                     *
*  THE MESSAGE FOR A STEP NOT EXECUTED IS:                            *
*                                                                     *
* IEFACTRT: STEP=SSSSSSSS(NNNNN) **** NOT  EXECUTED **** JOB=JJJJJJJJ *
*                                                                     *
*        PARAMETERS                                                   *
*        ----------                                                   *
*                                                                     *
*        INPUT    R0 = SMF RECORD TYPE                                *
*                                                                     *
*                 R1 = @ PARM                                         *
*                                                                     *
*                                                                     *
*        OUTPUT - RETURN CODE IN REGISTER 15                          *
*                                                                     *
*                    RC=0 PROCESS SUBSEQUENT STEPS                    *
*                                                                     *
*                 R1 = 0 -> SMF RECORD TO BE WRITTEN                  *
*                                                                     *
*                                                                     *
*        REGISTER USAGE                                               *
*        --------------                                               *
*                                                                     *
*        R0   ENTRY CODE.                                             *
*        R1   PARM LIST, TIME LIMIT EXTENSION ON RETURN.              *
*        R2   NOT USED                                                *
*        R3   NOT USED                                                *
*        R4   NOT USED                                                *
*        R5   POINTER TO COMMON EXIT PARAMETER AREA.                  *
*        R6   WORK REGISTER.                                          *
*        R7   NOT USED                                                *
*        R8   NOT USED                                                *
*        R9   WORK REGISTER                                           *
*        R10  BASE FOR ASCB (DSECT ASCB)                              *
*        R11  NOT USED                                                *
*        R12  BASE FOR PROGRAM (IEFUTL)                               *
*        R13  CALLER'S SAVE AREA                                      *
*        R14  RETURN ADDRESS                                          *
*        R15  RETURN CODE                                             *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*  REGISTER EQUATES (AND OTHERS)                                      *
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
***********************************************************************
*        WORK AREA                                                    *
***********************************************************************
WORK     DSECT
SAVEAREA DS    18F                     SAVE AREA.
DBLEWORD DS    D
BYTES5   DS    CL5
BYTES4   EQU   BYTES5+1,4
BYTES3   EQU   BYTES5+2,3
BYTES2   EQU   BYTES5+3,2
BYTES1   EQU   BYTES5+4,1
         DS    0F
WTO1     WTO   'IEFACTRT: STEP=SSSSSSSS(NNNNN) PGM=PPPPPPPP CODE=CCCCC X
               JOB=JJJJJJJJ',ROUTCDE=(11),DESC=(6),MF=L
WTO1STM  EQU   WTO1+4+15,8             STEPNAME OFFSET AND LENGTH
WTO1STN  EQU   WTO1+4+24,5             STEPNUM  OFFSET AND LENGTH
WTO1NEX  EQU   WTO1+4+31,23            NOT EXEC OFFSET AND LENGTH
WTO1PGM  EQU   WTO1+4+35,8             PGMNAME  OFFSET AND LENGTH
WTO1SCC  EQU   WTO1+4+49,5             CONDCODE OFFSET AND LENGTH
WTO1JBN  EQU   WTO1+4+59,8             JOBNAME  OFFSET AND LENGTH
         DS    0D
WORKLEN  EQU   *-WORK
         EJECT
***********************************************************************
*        COMMON EXIT PARAMETER AREA
***********************************************************************
COMMON   DSECT
SMFNAME  DS  CL8                       JOBNAME.
SMFTIME  DS  CL4                       TIME STAMP.
SMFDATE  DS  CL4                       *
SYSID    DS  CL4                       SYSTEM ID.
SMFUSER  DS  CL8                       USER ID.
SMFSTEP  DS  CL1                       STEP NO.
SMFOPT   DS  CL2                       SMF OPTIONS.
SMFTSO   EQU X'01'                     TSO USERID.
SMFCLASS DS  CL1                       JOB CLASS.
SMFCOMM  DS  CL4                       USER COMMUNICATIONS AREA.
         EJECT
         PRINT NOGEN
         IFASMFR 30
***********************************************************************
*        START OF PROGRAM
***********************************************************************
IEFACTRT CSECT
         STM   R14,R12,12(R13)         SAVE INPUT REGISTERS.
         LR    R12,R15                 ESTABLISH ADDRESSABILITY.
        USING WORK,R13                 MAP GOTTEN STORAGE
        USING IEFACTRT,R12             MAP PROGRAM STORAGE
        USING SMFRCD30,R11             MAP SMF RECORD TYPE 30
        USING COMMON,R10               MAP COMMON EXIT PARM LIST
         B     A010                    BRANCH AROUND EYE-CATCHER.
         DC    C'IEFACTRT '
         DC    C'DATE= '
         DC    C'&SYSDATE '
         DC    C'TIME= '
         DC    C'&SYSTIME'
         EJECT
***********************************************************************
*        CHECK IF THIS IS A STEP END RECORD AND IT IS VALID
***********************************************************************
A010     DS    0H
         LA    R14,20                  SET ENTRY CODE FOR COMPARISON
         CR    R0,R14                  ONLY WANT TYPE 30 RECORDS
         BNE   A999                    WRONG ENTRY CODE -> EXIT
         L     R11,36(R1)              @ SMF RECORD RDW
         L     R10,0(R1)               @ COMMON EXIT PARM LIST
         CLC   =C'JES',SMFNAME         IS THE JOB A JES?
         BE    A999                    YES - NOT INTERESTED
         L     R4,SMF30SOF             OFFSET TO SUB SYSTEM SECTION
         AR    R4,R11                  @ SUB SYSTEM SECTION
        USING  SMF30PSS,R4             MAP IT
         CLI   SMF30TYP+1,4            STEP TERMINATION RECORD?
         BNE   A999                    NO - NOT INTERESTED
        DROP   R4
         L     R4,SMF30IOF             OFFSET TO ID SECTION
         LTR   R4,R4                   IT THE SECTION THERE?
         BZ    A999                    NO  - NOT INTERESTED
         L     R4,SMF30TOF             OFFSET TO COMPLETION SECTION
         LTR   R4,R4                   IT THE SECTION THERE?
         BZ    A999                    NO  - NOT INTERESTED
         EJECT
***********************************************************************
*        GETMAIN WORK AREA
***********************************************************************
A020     DS    0H
         LR    R9,R1                   SAVE @ PARM LIST
         LA    R0,WORKLEN              LENGTH OF STORAGE TO GET
         LR    R3,R0                   SAVE FOR CLEAR
         GETMAIN R,LV=(0)              GETMAIN SOME STORAGE
         LR    R2,R1                   @ STORAGE TO BE CLEARED
         XR    R15,R15                 2ND LENGTH AND PADDING (0)
         MVCL  R2,R14                  CLEAR STORAGE
         ST    R13,4(R1)               CALLERS SAVEAREA@ IN SAVEAREA
         ST    R1,8(R13)               MY SAVEAREA@ IN CALLERS SAVEAREA
         LR    R13,R1                  R13 = MY SAVEAREA@
         MVC   WTO1(CWTO1LEN),CWTO1    SET UP WTO IN STORAGE
         EJECT
***********************************************************************
*        GET ID INFORMATION
***********************************************************************
A030     DS    0H
         L     R4,SMF30IOF             OFFSET TO ID SECTION
         AR    R4,R11                  @ SECTION
        USING  SMF30ID,R4              MAP IT
         MVC   WTO1JBN,SMF30JBN        GET JOBNAME
         MVC   WTO1STM,SMF30STM        GET STEPNAME
         MVC   WTO1PGM,SMF30PGM        GET PROGRAM NAME
         XR    R15,R15                 CLEAR
         ICM   R15,B'0011',SMF30STN    GET STEP NUMBER
         CVD   R15,DBLEWORD            GET IT IN DECIMAL FORMAT
         UNPK  BYTES5,DBLEWORD+5(3)    UNPACK
         OI    BYTES5+L'BYTES5-1,X'F0' FIX SIGN
         MVC   WTO1STN,BYTES5          PUT INTO MESSAGE
        DROP   R4
         EJECT
***********************************************************************
*        GET COMPLETION INFORMATION
***********************************************************************
A040     DS    0H
         L     R4,SMF30TOF             OFFSET TO COMPLETION SECTION
         AR    R4,R11                  @ SECTION
        USING  SMF30CMP,R4             MAP IT
         TM    SMF30STI,SMF30FLH       JCL ERROR?
         BNO   A041                    NO -> CHECK ABEND
         MVC   WTO1NEX,NOTEXEC         YES-> SET 'NOT EXECUTED' IN MSG
         B     A050                    -> ISSUE MESSAGE
                                       SPACE 1
A041     DS    0H
         XR    R8,R8                   CLEAR
         ICM   R8,B'0011',SMF30SCC     GET COMPLETION CODE XXXX
         TM    SMF30STI,SMF30ABD       ABEND?
         BNO   A042                    NO -> RETURN CODE
         TM    SMF30SCC,X'80'          USER ABEND?
         BNO   A043                    NO-> SYSTEM ABEND
         N     R8,=X'00000FFF'         USER ABEND -> MAKE IT 0XXX
                                       SPACE 1
A042     DS    0H
         CVD   R8,DBLEWORD             GET IN DECIMAL FORMAT
         UNPK  BYTES5,DBLEWORD+5(3)    UNPACK
         OI    BYTES5+L'BYTES5-1,X'F0' FIX SIGN
         MVC   WTO1SCC,BYTES5          PUT INTO MESSAGE
         MVI   WTO1SCC,C' '            CLEAR FIRST BYTE
         TM    SMF30STI,SMF30ABD       ABEND?
         BNO   A050                    NO -> RETURN CODE
         MVI   WTO1SCC,C'U'            SET 'U' IN FIELD
         B     A050                    -> ISSUE MESSAGE
                                       SPACE 1
A043     DS    0H
         XR    R8,R8                   CLEAR
         IC    R8,SMF30SCC             GET 1ST BYTE
         SRL   R8,4                    PUT BITS 0-3 IN BITS 4-7
         STC   R8,BYTES4               SAVE IN WORK FIELD
         MVC   BYTES3(1),SMF30SCC      GET 1ST BYTE
         NI    BYTES3,X'0F'            CLEAR BITS 0-3
         IC    R8,SMF30SCC+1           GET 2ND BYTE
         SRL   R8,4                    PUT BITS 0-3 IN BITS 4-7
         STC   R8,BYTES2               SAVE IN WORK FIELD
         MVC   BYTES1,SMF30SCC+1       GET 2ND BYTE
         NI    BYTES1,X'0F'            CLEAR BITS 0-3
         TR    BYTES4,HEXBYTES         MAKE IT ALL PRINTABLE
         MVI   WTO1SCC,C' '            CLEAR FIRST MESSAGE BYTE
         MVI   WTO1SCC+1,C'S'          SET AS SYSTEM ABEND
         MVC   WTO1SCC+2(3),BYTES3     MOVE IN CODE
         EJECT
***********************************************************************
*        ISSUE WTO AND FREEMAIN THE STORAGE
***********************************************************************
A050     DS    0H
         WTO   MF=(E,WTO1)
         LA    R0,WORKLEN              LENGTH OF STORAGE TO GET
         LR    R1,R13                  GET ADDRESS OF GOTTEN STORAGE
         L     R13,4(R13)              LOAD PREVIOUS SAVEAREA
         FREEMAIN R,LV=(0),A=(1)       FREE THE STORAGE
         EJECT
***********************************************************************
*        EXIT
***********************************************************************
A999     DS    0H
         XR    R15,R15                 CLEAR RETURN CODE
         RETURN (14,12),,RC=(15)
         EJECT
***********************************************************************
*           CONSTANTS
***********************************************************************
         LTORG
         DS    0F
CWTO1    WTO   'IEFACTRT: STEP=SSSSSSSS(NNNNN) PGM=PPPPPPPP CODE=CCCCC X
               JOB=JJJJJJJJ',ROUTCDE=(11),DESC=(6),MF=L
CWTO1LEN EQU   *-CWTO1
HEXBYTES DC    C'0123456789ABCDEF'
NOTEXEC  DC    C'**** NOT  EXECUTED ****'
         END
