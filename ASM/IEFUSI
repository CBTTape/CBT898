IEFUSI   TITLE 'IEFUSI - Step Initiation Exit'
         SPACE 1
IEFUSI   AMODE 31
IEFUSI   RMODE ANY
***********************************************************************
*                                                                     *
*   MODULE-NAME =                                                     *
*                 IEFUSI                                              *
*                                                                     *
*   DESCRIPTIVE NAME =                                                *
*                      Step Initiation Exit                           *
*                                                                     *
*   COPYRIGHT =                                                       *
*                                                                     *
* **PROPRIETARY_STATEMENT******************************************** *
*                                                                     *
*  (C) COPYRIGHT IBM Corporation 1995, 1997                           *
*  (C) COPYRIGHT IBM Deutschland ISG 1995, 1997                       *
*  SEE COPYRIGHT INSTRUCTIONS                                         *
*  PROGRAM PROPERTY OF IBM                                            *
*                                                                     *
* **END_OF_PROPRIETARY_STATEMENT************************************* *
*                                                                     *
*   FUNCTION =                                                        *
*               This module has the following functions:              *
*               - Collection of information for other exits           *
*               - Region size control (more an adjustment)            *
*               - Dataspace control (Size and count)                  *
*                                                                     *
*                                                                     *
*   OPERATION =                                                       *
*               Each task executes all of the three functions.        *
*                                                                     *
*               Collection of Step related information                *
*                                                                     *
*               Check the REGION size aginst the authorized size      *
*               IF the user is authorized                             *
*                  RUN the JOB with the defined size                  *
*               ELSE                                                  *
*                  RUN the JOB with the maximum allowed size          *
*                                                                     *
*               Check the Dataspace size aginst the authorized size   *
*               IF the user is authorized                             *
*                  RUN the JOB with the defined size                  *
*               ELSE                                                  *
*                  RUN the JOB with the maximum allowed size          *
*               Check the Dataspace count aginst the authorized count *
*               IF the user is authorized                             *
*                  RUN the JOB with the defined count                 *
*               ELSE                                                  *
*                  RUN the JOB with the maximum allowed count         *
*                                                                     *
*                                                                     *
*   ENTRY-REGISTERS =                                                 *
*                                                                     *
*               0      - Irrelevant                                   *
*               1      - PTR to parameter list                        *
*               13     - Caller's save area                           *
*               14     - Return address                               *
*               15     - Entry point address of IEFUSI                *
*                                                                     *
*                                                                     *
*   INPUT =                                                           *
*               1      - See manual                                   *
*                                                                     *
*                                                                     *
*   REGISTER USAGE=                                                   *
*                                                                     *
*               0      - Work                                         *
*               1      - Work                                         *
*               2      - Work                                         *
*               3      - Work                                         *
*               4      - Work                                         *
*               5      - Work                                         *
*               6      - Work                                         *
*               7      - Work                                         *
*               8      - Work                                         *
*               9      - Exit Intercomunication Area (SMFEIA)         *
*               10     - Job Management Record (JMR)                  *
*               11     - Parameter list                               *
*               12     - Base register                                *
*               13     - Save area and workarea                       *
*               14     - Return address                               *
*               15     - Work                                         *
*                                                                     *
*                                                                     *
*   EXIT-REGISTERS =                                                  *
*                                                                     *
*               0      - Irrelevant                                   *
*               1      - Irrelevant                                   *
*               2 - 12 - Irrelevant                                   *
*               13     - Caller's save area                           *
*               14     - Return address                               *
*               15     - Return code (Description see below)          *
*                                                                     *
*                                                                     *
*   EXIT  =     Returns to the caller with 'PR'                       *
*                                                                     *
*                                                                     *
*   RETURN CODES =                                                    *
*                                                                     *
*         RETURN CODE      MEANING                                    *
*         -----------      -------                                    *
*                                                                     *
*             0            Processing should continue                 *
*             4            Cancel the JOB (not used in this exit)     *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
*   NOTES =                                                           *
*                                                                     *
*      DEPENDENCIES = MVS version 4.x                                 *
*                                                                     *
*      RESTRICTIONS = none                                            *
*                                                                     *
*   MODULE TYPE = MODULE                                              *
*                                                                     *
*      PROCESSOR = Assembler H                                        *
*                                                                     *
*      ATTRIBUTES = reentrant AC(0)                                   *
*                                                                     *
*   GENERAL MESSAGES=                                                 *
*                                                                     *
*            GSDMV17I - REQUESTED REGION SIZE EXCEEDS PRIVATE AREA    *
*                       SIZE. REGION SIZE xxxxK IS SET.               *
*            GSDMV18I - REQUESTED EXTENDED REGION SIZE EXCEEDS        *
*                       ALLOWED MAXIMUM. xxxxM IS SET.                *
*            GSDMV19I - REQUESTED REGION SIZE EXCEEDS ALLOWED MAXIMUM *
*                       REGION SIZE. xxxxK IS SET.                    *
*                                                                     *
*---------------------------------------------------------------------*
* Change Activity Log:                                                *
* Multi-SMF 30 record problem in the SSC105 message (1500 alloc) SMF004
*                                                                SMF004
* Do not write the messages GSDMV11I GSDMV11E GSDMV12I GSDMV12E  SMF007 --------
* GSDMV13I GSDMV14I GSDMV15I GSDMV15E GSDMV17I GSDMV18I GSDMV19I SMF007
* GSDMV20I GSDMV21I GSDMV23I GSDMV24I to the hard copy.          SMF007
* All messages set to ROUTCDE=13                                 SMF007
*                                                                SMF007
* Abend OC4 occurs when the SMF@EIA is not available             SMF010
*                                                                SMF010
* Wrong lenght definition for the ammount field in msg           SMF302
* GSDMV17I GSDMV18I GSDMV19I                                     SMF302
*                                                                SMF302
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
* Equates and Macros                                                  *
*                                                                     *
***********************************************************************
*---------------------------------------------------------------------*
* General purpose register's                                          *
*---------------------------------------------------------------------*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 1
*---------------------------------------------------------------------*
* General equates                                                     *
*---------------------------------------------------------------------*
FF       EQU   X'FF'              All bits on
         SPACE 1
*---------------------------------------------------------------------*
* Macros                                                              *
*---------------------------------------------------------------------*
         TITLE 'CVT      - Communication Vector Table'
         CVT   DSECT=YES
         TITLE 'IEEBASEA - MSTR Scheduler Resident Data Area'
         IEEBASEA
         TITLE 'IEFALLCT - Linkage Control Table'
LCT      DSECT
         IEFALLCT
         TITLE 'IEFASCTB - Step Control Table'
SCT      DSECT
         IEFASCTB
         TITLE 'IEFJMR   - Job Management Record'
         IEFJMR
         TITLE 'IHAGDA   - Global Data Area'
         IHAGDA
*---------------------------------------------------------------------*
* Telstra customisation, to allocate 64M minimum above the line.      *
*---------------------------------------------------------------------*
         TITLE 'IRAOUCB  - Resources Manager User Control Block'
         IRAOUCB
         TITLE 'IHAPSA   - Prefixed Save Area'
         IHAPSA
         TITLE 'IHAASCB  - Address Space Contol Block'
         IHAASCB
*---------------------------------------------------------------------*
         TITLE 'SMF@EIA  - SMF Exit Intercommunication Area'
         SMF@EIA
         TITLE 'SMF@PARM - SMF Exit Parameter List'
SMF@PARM DSECT
SMFPA01  DS    F                  Parameter 1, Pointer to JMR
SMFPA02  DS    F                  Parameter 2, Pointer to step-name
SMFPA03  DS    F                  Parameter 3, Pointer to program name
SMFPA04  DS    F                  Parameter 4, Pointer to step account
SMFPA05  DS    F                  Parameter 5, Pointer to REGION
SMFPA06  DS    F                  Parameter 5, Pointer to V=R info
SMFPA07  DS    F                  Parameter 5, Pointer to DATASPAC
SMFPA08  DS    F                  Parameter 5, Sub system name
         SPACE 5
         TITLE 'REGION   - Region Size and Region Limit Information'
REGION   DSECT
REG_FL   DS    X                  Flag byte
REG_USI  EQU   X'80'              IEFUSI controls the private area ... x
                                  ... storage. Not the IEFLIMIT exit|
REG_B16  EQU   X'40'              Do not check to see if the requested x
                                  ... region fits into the available ..x
                                  ... space below 16 megabyte
REG_A16  EQU   X'20'              Check to see if the requested ...    x
                                  ... region fits into the available ..x
                                  ... space above 16 megabyte
         DS    3X                 reserved
REG_JCL  DS    F                  Region size requested by the user
REG_SIZB DS    F                  Region size below 16 megabyte
REG_GETB DS    F                  Getmain size below 16 megabyte
REG_SIZA DS    F                  Region size above 16 megabyte
REG_GETA DS    F                  Getmain size above 16 megabyte
REG_VR   EQU   X'80'              V=R request
REG_DATA DS    F                  Pointer to the SMF@DATA
REG_SUB  DS    CL4                Subsytem name
         SPACE 5
*        TITLE 'DATASPAC - Data and Hiperspace defaults'
DATASPAC DSECT
DATA_DEF DS    F                  Default size data/hiper space
DATA_SIZ DS    F                  Max size of all data/hiper spaces
DATA_NUM DS    F                  Max number of data/hiper spaces
         TITLE 'IEFUSI   - Workarea'
***********************************************************************
*                                                                     *
* Work area - getmained     (first pointed by R11, then R13)          *
*                                                                     *
***********************************************************************
RENTAREA DSECT
RENTEYE1 DC    CL8'IEFUSI'        Eyecatcher 1
RENTEYE2 DC    CL8'WORKAREA'      Eyecatcher 2
         SPACE 1
WORK     DS    0F                 Start  (offset 0 - R13)
SAVEAREA DS    18F                Program save area
         SPACE 1
RTNCODE  DS    F                  Return code field
         SPACE 1
*---------------------------------------------------------------------*
* MAJO profile area                                                   *
*---------------------------------------------------------------------*
MAJO_PAR DC    A(MAJO_WRK)        Address of parameter list
MAJO_WRK DS    CL(PRVFSIZE)       MAJO parameter list
         SPACE 1
*---------------------------------------------------------------------*
* WTO work area                                                       *
*---------------------------------------------------------------------*
WTO      DS    CL(WTO_SL)
MSG      DS    0H                 Must be the longest message
         DS    CL(MSG_1L)         GSDMV17I
         ORG   MSG
         DS    CL(MSG_2L)         GSDMV18I
         ORG   MSG
         DS    CL(MSG_3L)         GSDMV19I
         ORG   ,
         SPACE 1
*---------------------------------------------------------------------*
* Other fields                                                        *
*---------------------------------------------------------------------*
WORK_R14 DS    F                  Save area for R14
WORK_D   DS    D                  Double word
WORK_CL2 DS    CL2                Alignment
WORK_CL6 DS    CL6                6 byte for edit
         SPACE 1
*---------------------------------------------------------------------*
* Workarea for the SMFEIA module                                      *
*---------------------------------------------------------------------*
         SMF@COMW CSECT=YES       Workarea
         SPACE 1
*---------------------------------------------------------------------*
* Saved address of the LCT pointer                                    *
*---------------------------------------------------------------------*
LCTPTR   DS    F                  Pointer to the LCT
         SPACE 1
*---------------------------------------------------------------------*
* End of the work area                                                *
*---------------------------------------------------------------------*
RENTLEN  EQU   *-RENTAREA         Length of reentrant work area
         TITLE 'IEFUSI   - Main module'
***********************************************************************
*                                                                     *
* Startup Processing                                                  *
*                                                                     *
***********************************************************************
IEFUSI   CSECT
         USING *,R15
         SMF$VER VERSION=V03.02   Set version and copyright
         DROP  R15                Temp. base
         BAKR  R14,0              Save caller's ARS, GPRS, and ...
*                                 ... return address on linkage stack
         LR    R12,R15            Set up program base register
         USING IEFUSI,R12         Inform assembler
         SPACE 1
*---------------------------------------------------------------------*
* Bypass exit by Initiator Initiation, MASTER and NIP phase           *
*---------------------------------------------------------------------*
         L     R15,SMFPA08-SMF@PARM(,R1) Get address of subsystem type
         CLC   0(4,R15),=CL4'STC ' Is it a STC type
         BNE   INIT90             No, normal processing
         L     R15,SMFPA01-SMF@PARM(,R1) Get addr. of common exit parm.
         CLC   JMRJOB-JMR(8,R15),=CL8'INIT    '  Is it an Initiator?
         BE    INIT80             Yes, bypass the exit
         CLC   JMRJOB-JMR(8,R15),=CL8'*MASTER*'  Is it the MASTER?
         BE    INIT80             Yes, bypass the exit
         L     R15,CVTPTR         Get CVT address
         L     R15,CVTMSER-CVT(R15) Get MSTR SCH. Resident Area
         TM    BASPBYTE-BASE(R15),BAMSINIT  MSTR still in init.?
         BZ    INIT80             Yes, leave exit
         B     INIT90             No, normal processing
INIT80   DS    0H
         SR    R15,R15            Set RC = 0
         PR    ,                  Return
INIT90   DS    0H
         SPACE 1
*---------------------------------------------------------------------*
* Getmain work area and initialize it                                 *
*---------------------------------------------------------------------*
         STORAGE OBTAIN,          Get a work area that's reentrant     x
               LENGTH=4096,       Work area size (1 Page)              x
               BNDRY=PAGE,        On page boundary                     x
               COND=NO,           Unconditional req - no RC info       x
               LOC=ANY,           Getmain area anywhere                x
               RELATED='IEFUSI-WORKAREA'
         USING RENTAREA,R1        Set temp. addressing
         MVC   RENTEYE1,=CL8'IEFUSI'   Set eyecatcher 1 (x'-10' R13)
         MVC   RENTEYE2,=CL8'WORKAREA' Set eyecatcher 2 (x'-08' R13)
         LA    R13,SAVEAREA       Get savearea address
         DROP  R1
         USING WORK,R13           Set addressability for save and work
         MVC   SAVEAREA+4(4),=C'F1SA' Put acronym into savearea
         SPACE 1
*---------------------------------------------------------------------*
* Restore register zero and one destroyed by STORAGE macro            *
*---------------------------------------------------------------------*
         EREG  R0,R1              Restore register R0 and R1
         SPACE 1
*---------------------------------------------------------------------*
* SPECIAL NOTE                                                        *
* ------------                                                        *
* Register 10 contains the address of the LCT at when the IEFUJI and  *
* IEFUSI get control. The description does not show this. The name    *
* of the caller is: IEFSMFIE. If there are any problems, check the    *
* microfiches for more information.                                   *
*---------------------------------------------------------------------*
         ST    R10,LCTPTR         Store LCT address for later
         EJECT
***********************************************************************
*                                                                     *
* SETUP Processing                                                    *
*                                                                     *
***********************************************************************
         SPACE 1
*---------------------------------------------------------------------*
* Setup the MAJO parameter list area                                  *
*---------------------------------------------------------------------*
         LA    R2,MAJO_WRK        Get address of the parameter list
         ST    R2,MAJO_PAR        Store the address for the call
         SPACE 1
*---------------------------------------------------------------------*
* Setup the exit parameter list and the JMR                           *
*---------------------------------------------------------------------*
SETUP    DS    0H
         LR    R11,R1             Copy register 1
         USING SMF@PARM,R11       Set addressability for parm. list
         L     R10,SMFPA01        Get address of common work area
         USING JMR,R10            Set addressability for JMR
         SMF$EIA TYPE=RETRIEVE    Get address of EIA workarea
         MVC   SMF_IEFUSI_V,MODULE  Save module eyecatcher
         SMF$TRC TEXT='IEFUSI   - START'  Write trace message
         SPACE 1
*---------------------------------------------------------------------*
* Collect information for other exits                                 *
*---------------------------------------------------------------------*
SETUP30  DS    0H
         L     R1,LCTPTR          Get LCT address
         USING LCT,R1             Set addressability to LCT
         CLC   LCTLABEL,=C'ENDOFLCT'  Eyecatcher equal?
         BNE   SETUP38            No, write message
         ICM   R1,B'1111',LCTSCTAD  Get SCT address
         BZ    SETUP38            No SCT, branch
         DROP  R1                 LCT
         USING SCT,R1             Set adressability for SCT
         CLC   SCTSCLPC,=C'        '  Proc-step provieded?
         BNE   SETUP35            Yes, normal step processing
         MVC   SMF_STEP_NAME,SCTSNAME  Move step name
         MVC   SMF_PSTEP_NAME,=C'        '  Blank out proc-step name
         MVC   SMF_PGM_NAME,SCTPGMNM  Move program name
         B     SETUP39            Skip message
SETUP35  DS    0H
         MVC   SMF_PSTEP_NAME,SCTSNAME  Move step name
         MVC   SMF_STEP_NAME,SCTSCLPC  Move proc-step
         MVC   SMF_PGM_NAME,SCTPGMNM  Move program name
         DROP  R1                 SCT
         B     SETUP39            Skip message
SETUP38  DS    0H
         WTO   'IEFUSI - LCT NOT FOUND, INFORM GSD'
SETUP39  DS    0H
         SPACE 1
*---------------------------------------------------------------------*
* Get the current private area size below 16M                         *
*---------------------------------------------------------------------*
         L     R15,CVTPTR         Get address of CVT
         L     R15,CVTGDA-CVT(,R15)  Get address of GDA
         L     R15,GDAPVTSZ-GDA(,R15)  Get Private Area Size
         S     R15,=A(512*K)      Subtract 512K
         ST    R15,SMF_REG_PVA_BELOW  Save Private Area Size for later
         SPACE 1
*---------------------------------------------------------------------*
* Clear some spezific fields                                          *
*---------------------------------------------------------------------*
         XC    SMF_FLG2,SMF_FLG2  Cleare this field
         XC    SMF_FLG3,SMF_FLG3  Cleare this field
         NI    SMF_FLG4,FF-SMF_FLG4_MULTI_1ST  Reset the Multi ..SMF004
         NI    SMF_FLG4,FF-SMF_FLG4_MULTI_MID  ... SMF record ...SMF004
         NI    SMF_FLG4,FF-SMF_FLG4_MULTI_LST  ... 30 flags      SMF004
         EJECT
***********************************************************************
*                                                                     *
* Main Processing (REGION SIZE CONTROL)                               *
*                                                                     *
*---------------------------------------------------------------------*
* Register usage                                                      *
*  R4 = JOB or STEP region value from JOB or EXEC card                *
*  R5 = The allowed region value above the line                       *
*  R6 = The allowed region value below the line                       *
***********************************************************************
         SPACE 1
*---------------------------------------------------------------------*
* Inizialise the region part                                          *
*---------------------------------------------------------------------*
         L     R8,SMFPA05         Get address of REGION
         USING REGION,R8          Set addr. for Region size and limit
         SPACE 1
         OI    REG_FL,REG_USI     Use IEFUSI limits
         NI    REG_FL,FF-REG_B16  Check if region below 16 Mb fits
         OI    REG_FL,REG_A16     Check if region above 16 Mb fits
         SPACE 1
*        TM    REG_SIZA,REG_VR    V=R JOB?
*        BO    RETURN             Yes, return to caller
*---------------------------------------------------------------------*
* Handle 0M region                                                    *
*                                                                     *
* - Set value to 2GB and continue with future checks                  *
*---------------------------------------------------------------------*
R_0M     DS    0H
         ICM   R4,B'1111',REG_JCL Is it a 0M request?
         BNZ   R_0M_9             No, goon
         SMF$TRC TEXT='IEFUSI   - 0M'  Write trace message
         L     R4,=A(2*G)         Set region to 2GB
         OI    SMF_FLG3,SMF_FLG3_0M  0M request
R_0M_9   DS    0H
         SPACE 1
*---------------------------------------------------------------------*
* Telstra customisation, to allocate 64M minimum above the line.      *
*                                                                     *
*---------------------------------------------------------------------*
         L     R1,PSAAOLD-PSA      Load address of ASCB
         USING ASCB,R1             Addresability
         L     R1,ASCBOUCB         Load address of OUCB
         DROP  R1                  Drop Addresability
         USING OUCB,R1             Addresability to OUCB
         CLC   =CL3'STC',OUCBSUBN  Q. Started task
         BNE   R_2GB_AB               N. Goon
         DROP  R1                  Drop Addresability
         L     R1,CVTPTR           Load address of CVT.
         USING CVTMAP,R5           Addresability
         L     R1,CVTGDA           Load GDA address.
         DROP  R1                  Drop Addresability
         L     R1,GDAPVTSZ-GDA(,R1) Fetch private area size
         CR    R4,R1               Q. Region > private area
         BNH   R_2GB_AB               N. Goon
         L     R1,=A(64*M)         Set region to 2GB
         BNL   R_2GB_AB               N. Goon
         LR    R4,R1               Set to minimum of 64M
                                                                SPACE 1
*---------------------------------------------------------------------*
* Handle REGION >  max_above                                          *
*        REGION <= 2Gb                                                *
*                                                                     *
*---------------------------------------------------------------------*
R_2GB_AB DS    0H
         C     R4,SMF_REG_MAX_ABOVE Compare the value. JCL value lower?
         BNH   R_2GB_A9           Yes, goon
         SMF$TRC TEXT='IEFUSI   - > MAX ABOVE'  Write trace message
         TM    SMF_FLG2,SMF_FLG2_TESTED_E Access check already done?
         BO    R_2GB_A1           Yes, goon
         BAL   R14,EREG_CHK       No, check the EREGxxxx profile
R_2GB_A1 DS    0H
         TM    SMF_FLG2,SMF_FLG2_EREGMAX  Is this flag on?
         BZ    R_2GB_A3           No, goon
         L     R5,SMF_REG_MAX_ABOVE Yes, force MAX_ABOVE limit       <<
         OI    SMF_FLG3,SMF_FLG3_MSG_GSDMV18I Write message          <<
         B     R_2GB_A8           Goon
R_2GB_A3 DS    0H
         TM    SMF_FLG2,SMF_FLG2_EREGLRG  Is this flag on?
         BZ    R_2GB_A4           No, goon
         L     R5,SMF_REG_LRG_ABOVE Yes, force LRG_ABOVE limit       <<
         OI    SMF_FLG3,SMF_FLG3_MSG_GSDMV18I Write message          <<
         B     R_2GB_A8           Goon
R_2GB_A4 DS    0H
         L     R5,SMF_REG_DEF_ABOVE Yes, force DEF_ABOVE limit       <<
         OI    SMF_FLG3,SMF_FLG3_MSG_GSDMV18I Write message          <<
         B     R_2GB_A8           Goon
R_2GB_A8 DS    0H
         B     R_FORCE            Make the below 16Mb check
R_2GB_A9 DS    0H
         SPACE 1
*---------------------------------------------------------------------*
* Handle REGION >  lrg_above                                          *
*        REGION <= max_above                                          *
*                                                                     *
*---------------------------------------------------------------------*
R_MAX_AB DS    0H
         C     R4,SMF_REG_LRG_ABOVE Compare the value. JCL value lower?
         BNH   R_MAX_A9           Yes, goon
         SMF$TRC TEXT='IEFUSI   - > LRG ABOVE' Write trace message
         TM    SMF_FLG2,SMF_FLG2_TESTED_E Access check already done?
         BO    R_MAX_A1           Yes, goon
         BAL   R14,EREG_CHK       No, check the EREGxxxx profile
R_MAX_A1 DS    0H
         TM    SMF_FLG2,SMF_FLG2_EREGMAX  Is this flag on?
         BZ    R_MAX_A3           No, goon
         LR    R5,R4              Yes, Set region size               <<
         B     R_MAX_A8           Goon
R_MAX_A3 DS    0H
         TM    SMF_FLG2,SMF_FLG2_EREGLRG  Is this flag on?
         BZ    R_MAX_A4           No, goon
         L     R5,SMF_REG_LRG_ABOVE Yes, force LRG_ABOVE limit       <<
         OI    SMF_FLG3,SMF_FLG3_MSG_GSDMV18I Write message          <<
         B     R_MAX_A8           Goon
R_MAX_A4 DS    0H
         L     R5,SMF_REG_DEF_ABOVE Yes, force DEF_ABOVE limit       <<
         OI    SMF_FLG3,SMF_FLG3_MSG_GSDMV18I Write message          <<
         B     R_MAX_A8           Goon
R_MAX_A8 DS    0H
         B     R_FORCE            Make the below 16Mb check
R_MAX_A9 DS    0H
         SPACE 1
*---------------------------------------------------------------------*
* Handle REGION >  def_above                                          *
*        REGION <= lrg_above                                          *
*                                                                     *
*---------------------------------------------------------------------*
R_LRG_AB DS    0H
         C     R4,SMF_REG_DEF_ABOVE Compare the value. JCL value lower?
         BNH   R_LRG_A9           Yes, goon
         SMF$TRC TEXT='IEFUSI   - > DEF ABOVE' Write trace message
         TM    SMF_FLG2,SMF_FLG2_TESTED_E Access check already done?
         BO    R_LRG_A1           Yes, goon
         BAL   R14,EREG_CHK       No, check the EREGxxxx profile
R_LRG_A1 DS    0H
         TM    SMF_FLG2,SMF_FLG2_EREGMAX  Is this flag on?
         BZ    R_LRG_A3           No, goon
         LR    R5,R4              Yes, Set region size               <<
         B     R_LRG_A8           Goon
R_LRG_A3 DS    0H
         TM    SMF_FLG2,SMF_FLG2_EREGLRG  Is this flag on?
         BZ    R_LRG_A4           No, goon
         LR    R5,R4              Yes, Set region size               <<
         B     R_LRG_A8           Goon
R_LRG_A4 DS    0H
         L     R5,SMF_REG_DEF_ABOVE Yes, force DEF_ABOVE limit       <<
         OI    SMF_FLG3,SMF_FLG3_MSG_GSDMV18I Write message          <<
         B     R_LRG_A8           Goon
R_LRG_A8 DS    0H
         B     R_FORCE            Make the below 16Mb check
R_LRG_A9 DS    0H
         SPACE 1
*---------------------------------------------------------------------*
* Handle REGION >  32MB                                               *
*        REGION <= def_above                                          *
*                                                                     *
*---------------------------------------------------------------------*
R_DEF_AB DS    0H
         C     R4,=A(32*M)        Compare the value. JCL value lower?
         BNH   R_DEF_A9           Yes, goon
         SMF$TRC TEXT='IEFUSI   - > 32M'  Write trace message
         LR    R5,R4              Yes, Set region size               <<
         B     R_DEF_A8           Goon
R_DEF_A8 DS    0H
         B     R_FORCE            Make the below 16Mb check
R_DEF_A9 DS    0H
         SPACE 1
*---------------------------------------------------------------------*
* Handle REGION >  32MB                                               *
*        REGION <= 16MB                                               *
*                                                                     *
*---------------------------------------------------------------------*
R_32M_AB DS    0H
         C     R4,=A(16*M)        Compare the value. JCL value lower?
         BNH   R_32M_A9           Yes, goon
         SMF$TRC TEXT='IEFUSI   - > 16M'  Write trace message
         L     R5,=A(32*M)        Force 32M                          <<
         B     R_32M_A8           Goon
R_32M_A8 DS    0H
         B     R_FORCE            Make the below 16Mb check
R_32M_A9 DS    0H
         SPACE 1
*---------------------------------------------------------------------*
* Force 16Mb to handle higher sizes correct                           *
*---------------------------------------------------------------------*
R_FORCE  DS    0H
         C     R4,=A(16*M)        Compare the value. JCL value lower?
         BNH   R_FORCE9           Yes, goon
         L     R4,=A(16*M)        Force to 16Mb if higher
         OI    SMF_FLG3,SMF_FLG3_SET16MB  Set flag to reflect the force
R_FORCE9 DS    0H
         SPACE 1
*---------------------------------------------------------------------*
* Handle REGION >  Private Area Size                                  *
*        REGION <= 16MB                                               *
*                                                                     *
*---------------------------------------------------------------------*
R_16M_BL DS    0H
         C     R4,SMF_REG_PVA_BELOW Compare the value. JCL value lower?
         BNH   R_16M_B9           Yes, goon
         SMF$TRC TEXT='IEFUSI   - > PRIVATE AREA'  Write trace message
         SPACE 1
         TM    SMF_FLG2,SMF_FLG2_TESTED_P Access check already done?
         BO    R_16M_B1           Yes, goon
         BAL   R14,PRIV_CHK       No, check the PRIVREG profile
R_16M_B1 DS    0H
         TM    SMF_FLG2,SMF_FLG2_PRIVREG  Is this flag on?
         BZ    R_16M_B3           No, goon
         L     R6,SMF_REG_PVA_BELOW  Yes, Set region size            <<
         OI    SMF_FLG3,SMF_FLG3_MSG_GSDMV17I Write message          <<
         B     R_16M_B8           Goon
R_16M_B3 DS    0H
         L     R6,SMF_REG_DEF_BELOW  Yes, Set region size            <<
         OI    SMF_FLG3,SMF_FLG3_MSG_GSDMV17I Write message          <<
         B     R_16M_B8           Goon
R_16M_B8 DS    0H
         B     SET_SIZE
R_16M_B9 DS    0H
         SPACE 1
*---------------------------------------------------------------------*
* Handle REGION >  def_below                                          *
*        REGION <= Private Area Size                                  *
*                                                                     *
*---------------------------------------------------------------------*
R_PAS_BL DS    0H
         C     R4,SMF_REG_DEF_BELOW Compare the value. JCL value lower?
         BNH   R_PAS_B9           Yes, goon
         SMF$TRC TEXT='IEFUSI   - > DEF BELOW' Write trace message
         SPACE 1
         TM    SMF_FLG2,SMF_FLG2_TESTED_P Access check already done?
         BO    R_PAS_B1           Yes, goon
         BAL   R14,PRIV_CHK       No, check the PRIVREG profile
R_PAS_B1 DS    0H
         TM    SMF_FLG2,SMF_FLG2_PRIVREG  Is this flag on?
         BZ    R_PAS_B3           No, goon
         LR    R6,R4              Yes, Set region size               <<
         B     R_PAS_B8           Goon
R_PAS_B3 DS    0H
         L     R6,SMF_REG_DEF_BELOW  Yes, Set region size            <<
         OI    SMF_FLG3,SMF_FLG3_MSG_GSDMV19I Write message          <<
         B     R_PAS_B8           Goon
R_PAS_B8 DS    0H
         B     SET_SIZE
R_PAS_B9 DS    0H
         SPACE 1
*---------------------------------------------------------------------*
* Handle REGION >  REGMIN                                             *
*        REGION <= def_below                                          *
*                                                                     *
*---------------------------------------------------------------------*
R_1M_BL  DS    0H
         C     R4,SMF_REG_MIN     Compare the value. JCL value lower?
         BNH   R_1M_B9            Yes, goon
         SMF$TRC TEXT='IEFUSI   - > REGMIN' Write trace message
         LR    R6,R4              Yes, Set region size               <<
         B     R_1M_B8            Goon
R_1M_B8  DS    0H
         B     SET_SIZE
R_1M_B9  DS    0H
         SPACE 1
*---------------------------------------------------------------------*
* Handle REGION >  0M                                                 *
*        REGION <= REGMIN                                             *
*                                                                     *
*---------------------------------------------------------------------*
R_DEF_BL DS    0H
         L     R6,SMF_REG_MIN     Yes, Set region size               <<
         B     R_DEF_B8           Goon
         SMF$TRC TEXT='IEFUSI   - FORCE REGMIN'  Write trace message
R_DEF_B8 DS    0H
         B     SET_SIZE
R_DEF_B9 DS    0H
         SPACE 1
*---------------------------------------------------------------------*
* Force 32M above, when not already higher                            *
* Set the maximum values in the exit parameter list                   *
*---------------------------------------------------------------------*
SET_SIZE DS    0H
         C     R5,=A(32*M)        Above size higher than 32M?
         BH    SET_SI05           Yes, skip
         L     R5,=A(32*M)        No, force 32M above
         SMF$TRC TEXT='IEFUSI   - SET SIZE FORCE 32M ABOVE'
SET_SI05 DS    0H
         ST    R5,SMF_RGN_ABOVE   Set region size for later
         ST    R6,SMF_RGN_BELOW   Set region size for later
         SPACE 1
         ST    R5,REG_SIZA        Set region size maximum above 16M
         LR    R1,R5              Copy register 5, R5 is used later
*---------------------------------------------------------------------*
* Telstra customisation, to allocate 64M minimum above the line and   *
* add 128M to Getmain                                                 *
*---------------------------------------------------------------------*
         C     R1,=A(64*M)        Q. Region < 64M
         BL    SET_SI06              Y. Goon
         A     R1,=A((6+128)*M)   Increment by 128M and 6M sub'd later
SET_SI06 DS    0H
*---------------------------------------------------------------------*
         S     R1,=A(6*M)         Decrease size 6M
         ST    R1,REG_GETA        Set Max. variable getmain size
         ST    R6,REG_SIZB        Set region size maximum below 16M
         LR    R1,R6              Copy register 6, R6 is used later
         S     R1,=A(1*M)         Decrease size 512K
         ST    R1,REG_GETB        Set Max. variable getmain size
         DROP  R8                 Region mapping
         EJECT
*---------------------------------------------------------------------*
* Write information messages into the JOBLOG                          *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
WTO_PROC DS    0H
         TM    SMF_FLG0,SMF_FLG0_FTRC  Function trace requested?
         BO    WTO_M05            Yes, add additional message
         TM    SMF_FLG3,SMF_FLG3_0M  Is this a 0M request
         BO    WTO_P90            Yes, leave message processing
         SPACE 1
WTO_M05  DS    0H
         MVC   WTO(WTO_SL),WTO_S  Move WTO skeleton
         SPACE 1
WTO_M10  DS    0H
         TM    SMF_FLG3,SMF_FLG3_MSG_GSDMV18I MSG requested?
         BZ    WTO_M20            No, goon
         MVC   MSG(MSG_2L),MSG_2  Move skeleton
         LR    R1,R5              Get the size above 16M
         SRL   R1,20              Divide by 1024*1024 (MB)
         CVD   R1,WORK_D          Convert to decimal
         MVC   WORK_CL6,=X'402020202120'  Move the edit mask
         ED    WORK_CL6,WORK_D+5  Edit the decimal value in M
         MVC   MSG_2S,WORK_CL6+2  Set the maximum value
         B     WTO_P80            Leave message processing
         SPACE 1
WTO_M20  DS    0H
         TM    SMF_FLG3,SMF_FLG3_SET16MB  Is the size forced to 16M
         BO    WTO_P90            Yes, leave message processing
         SPACE 1
         TM    SMF_FLG3,SMF_FLG3_MSG_GSDMV17I MSG requested?
         BZ    WTO_M30            No, goon
         MVC   MSG(MSG_1L),MSG_1  Move skeleton
         L     R1,SMF_REG_PVA_BELOW  Get the private area size
         LR    R1,R6              Get the private area size
         SRL   R1,10              Divide by 1024 (KB)
         CVD   R1,WORK_D          Convert to decimal
         MVC   WORK_CL6,=X'402020202120'  Move the edit mask
         ED    WORK_CL6,WORK_D+5  Edit the decimal value in K
         MVC   MSG_1S,WORK_CL6+2  Set the maximum value
         B     WTO_P80            Leave message processing
         SPACE 1
WTO_M30  DS    0H
         TM    SMF_FLG3,SMF_FLG3_MSG_GSDMV19I MSG requested?
         BZ    WTO_P90            No, goon
         MVC   MSG(MSG_3L),MSG_3  Move skeleton
         LR    R1,R6              Get the size below 16M
         SRL   R1,10              Divide by 1024 (KB)
         CVD   R1,WORK_D          Convert to decimal
         MVC   WORK_CL6,=X'402020202120'  Move the edit mask
         ED    WORK_CL6,WORK_D+5  Edit the decimal value in K
         MVC   MSG_3S,WORK_CL6+2  Set the maximum value
         SPACE 1
WTO_P80  DS    0H
         WTO   TEXT=MSG,          Write the message                    x
               MF=(E,WTO)
WTO_P90  DS    0H
         EJECT
***********************************************************************
*                                                                     *
* Main Processing (DATASPACE CONTROL)                                 *
*                                                                     *
*---------------------------------------------------------------------*
* Setup for dataspace processing                                      *
***********************************************************************
D_SPACE  DS    0H
         L     R8,SMFPA07         Get address of DATASPAC
         USING DATASPAC,R8        Set addr. for data + hiper space lim.
         SPACE 1
*---------------------------------------------------------------------*
* Set installation defined default data space                 (Word 1)*
*---------------------------------------------------------------------*
         MVC   DATA_DEF,SMF_DSP_SIZE  Set default dataspace size
         SPACE 1
*---------------------------------------------------------------------*
* Set maximum COMBINED SIZE for all user key data and hiperspaces     *
*   owned within this address space                           (Word 2)*
*---------------------------------------------------------------------*
         TM    SMF_FLG2,SMF_FLG2_TESTED_D Access check already done?
         BO    D_SPA_S2           Yes, goon
         BAL   R14,DSPL_CHK       No, check the DSPLIM profile
D_SPA_S2 DS    0H
         TM    SMF_FLG2,SMF_FLG2_DSPLIM  User authorized to DSPLIM?
         BO    D_SPA_S9           Yes, set installation maximum
         SPACE 1
         SMF$TRC TEXT='IEFUSI   - NOT AUTH. TO DSPLIM'  Write trace msg
         L     R1,SMF_DSPLIMS     Get passed default from MVS.*.SMF.DEF
         ST    R1,DATA_SIZ        Set maximum combined size
D_SPA_S9 DS    0H
         SPACE 1
*---------------------------------------------------------------------*
* Set maximum NUMBER of user key data spaces and hiperspaces that may *
*   exist at any given time for this address space            (Word 3)*
*---------------------------------------------------------------------*
         TM    SMF_FLG2,SMF_FLG2_DSPLIM  User authorized to DSPLIM?
         BO    D_SPA_#9           Yes, set installation maximum
         SPACE 1
         L     R1,SMF_DSPLIM#     Get passed default from MVS.*.SMF.DEF
         ST    R1,DATA_NUM        Set maximum combined size
D_SPA_#9 DS    0H
         SPACE 1
*---------------------------------------------------------------------*
* End of dataspace processing                                         *
*---------------------------------------------------------------------*
D_S90    DS    0H
         EJECT
***********************************************************************
*                                                                     *
* Return Processing                                                   *
*                                                                     *
***********************************************************************
RETURN   DS    0H
*---------------------------------------------------------------------*
* Free work area and save return code                                 *
*---------------------------------------------------------------------*
         SMF$TRC TEXT='IEFUSI   - END'  Write trace message
FASTEND  DS    0H                                                SMF010
         L     R3,RTNCODE         Load and save return code in R3
         LR    R1,R13             Copy R13 to R1 for STORAGE RELEASE
         S     R1,=F'16'          Get real work area address
         STORAGE RELEASE,         Free work area                       x
               LENGTH=4096,                                            x
               ADDR=(1),                                               x
               RELATED='IEFUSI-WORKAREA'
         SPACE 1
*---------------------------------------------------------------------*
* Return                                                              *
*---------------------------------------------------------------------*
         LR    R15,R3             Load return code for return
         PR    ,                  Return to caller using stack
         EJECT
***********************************************************************
*                                                                     *
* Data area's                                                         *
*                                                                     *
***********************************************************************
         SPACE 1
*---------------------------------------------------------------------*
* Literal's                                                           *
*---------------------------------------------------------------------*
         LTORG
         SPACE 1
*---------------------------------------------------------------------*
* WTO skeletons                                                       *
*---------------------------------------------------------------------*
WTO_S    WTO   TEXT=*-*,                                               x
               ROUTCDE=(13),                                     SMF007x
               DESC=(6),                                               x
               MCSFLAG=(NOCPY),                                  SMF007x
               MF=L
WTO_SL   EQU   *-WTO_S
         SPACE 1
MSG_1    DC    AL2(MSG_1L-2)
         DC    C'GSDMV17I '
         DC    C'REQUESTED REGION SIZE EXCEEDS PRIVATE AREA SIZE. '
         DC    C'REGION SIZE '
         DC    C'xxxx'
         DC    C'K IS SET.'
MSG_1S   EQU   MSG+70,4                                          SMF302 --------
MSG_1L   EQU   *-MSG_1
         SPACE 1
MSG_2    DC    AL2(MSG_2L-2)
         DC    C'GSDMV18I '
         DC    C'REQUESTED EXTENDED REGION SIZE EXCEEDS ALLOWED '
         DC    C'MAXIMUM. '
         DC    C'xxxx'
         DC    C'M IS SET.'
MSG_2S   EQU   MSG+65,4                                          SMF302 --------
MSG_2L   EQU   *-MSG_2
         SPACE 1
MSG_3    DC    AL2(MSG_3L-2)
         DC    C'GSDMV19I '
         DC    C'REQUESTED REGION SIZE EXCEEDS ALLOWED MAXIMUM '
         DC    C'REGION SIZE. '
         DC    C'xxxx'
         DC    C'K IS SET.'
MSG_3S   EQU   MSG+69,4                                          SMF302 --------
MSG_3L   EQU   *-MSG_3
         EJECT
*---------------------------------------------------------------------*
* MAJO profile skeletons                                              *
*---------------------------------------------------------------------*
MAJPRV   MAJ@PRIM PREFIX=PRV,ENTITY=MVS.*.SMF.PRIVREG
MAJLRG   MAJ@PRIM PREFIX=LRG,ENTITY=MVS.*.SMF.EREGLRG
MAJMAX   MAJ@PRIM PREFIX=MAX,ENTITY=MVS.*.SMF.EREGMAX
MAJDSP   MAJ@PRIM PREFIX=DSP,ENTITY=MVS.*.SMF.DSPLIM
         EJECT
***********************************************************************
*                                                                     *
* Sub routines                                                        *
*                                                                     *
***********************************************************************
         SPACE 1
*---------------------------------------------------------------------*
* This routine gets control, if an user request more storage than     *
*   the default Region size defined in  MVS.*.SMF.DEFAULTS            *
*                                                                     *
* The user who requests higher values needs READ access to:           *
*   MVS.*.SMF.PRIVREG                                                 *
*   MVS.*.SMF.EREGLRG                                                 *
*   MVS.*.SMF.EREGMAX                                                 *
*---------------------------------------------------------------------*
* Checks the authorazion above the 16M line                           *
*---------------------------------------------------------------------*
EREG_CHK DS    0H
         OI    SMF_FLG2,SMF_FLG2_TESTED_E    Signal already tested
         ST    R14,WORK_R14       Saved value for return
         MVC   MAJO_WRK,MAJMAX    Initialize the MAJO skeleton
         LA    R15,MAJO_WRK       Get workarea address
         ST    R15,MAJO_PAR       Store the address
         LA    R1,MAJO_PAR        Get address of MAJO parameter list
         ICM   R15,B'1111',SMF_MAJO  MAJO available?
         BZ    RETURN             No, use system defaults
         BASR  R14,R15            Call MAJO
         B     *+4(R15)           Use branch table
         B     EREG_M05            RC = 0    Data is available
         B     EREG_M05            RC = 4    No data available
         B     EREG_M09            RC = 8    Not Auth. data available
         B     EREG_M09            RC = 12   Profile not available
         B     EREG_M09            RC = 16   Error
         B     EREG_M09            RC = 20   RACF not active
EREG_M05 DS    0H
         OI    SMF_FLG2,SMF_FLG2_EREGMAX    Show user is authorized
EREG_M09 DS    0H
         SPACE 1
EREG_L00 DS    0H
         MVC   MAJO_WRK,MAJLRG    Inizialise the MAJO skeleton
         LA    R1,MAJO_PAR        Get address of MAJO parameter list
         ICM   R15,B'1111',SMF_MAJO  MAJO available?
         BZ    RETURN             No, use system defaults
         BASR  R14,R15            Call MAJO
         B     *+4(R15)           Use branch table
         B     EREG_L05            RC = 0    Data is available
         B     EREG_L05            RC = 4    No data available
         B     EREG_L09            RC = 8    Not Auth. data available
         B     EREG_L09            RC = 12   Profile not available
         B     EREG_L09            RC = 16   Error
         B     EREG_L09            RC = 20   RACF not active
EREG_L05 DS    0H
         OI    SMF_FLG2,SMF_FLG2_EREGLRG    Show user is authorized
EREG_L09 DS    0H
         B     PRIV_B00           Skip to below check
         SPACE 1
*---------------------------------------------------------------------*
* Checks the authorization below the 16M line                         *
*---------------------------------------------------------------------*
PRIV_CHK DS    0H
         ST    R14,WORK_R14       Saved value for return
PRIV_B00 DS    0H
         OI    SMF_FLG2,SMF_FLG2_TESTED_P    Signal already tested
         MVC   MAJO_WRK,MAJPRV    Initialize the MAJO skeleton
         LA    R1,MAJO_PAR        Get address of MAJO parameter list
         ICM   R15,B'1111',SMF_MAJO  MAJO available?
         BZ    RETURN             No, use system defaults
         BASR  R14,R15            Call MAJO
         B     *+4(R15)           Use branch table
         B     PRIV_B05            RC = 0    Data is available
         B     PRIV_B05            RC = 4    No data available
         B     PRIV_B09            RC = 8    Not Auth. data available
         B     PRIV_B09            RC = 12   Profile not available
         B     PRIV_B09            RC = 16   Error
         B     PRIV_B09            RC = 20   RACF not active
PRIV_B05 DS    0H
         OI    SMF_FLG2,SMF_FLG2_PRIVREG  Show user is authorized
PRIV_B09 DS    0H
         L     R14,WORK_R14       Get saved value
         BR    R14                Return to caller
         EJECT
*---------------------------------------------------------------------*
* This routine gets control, to test if a user is authorized to use   *
*   the dataspace maximum                                             *
*                                                                     *
* The user who requests higher values needs READ access to:           *
*   MVS.*.SMF.DSPLIM                                                  *
*---------------------------------------------------------------------*
* Checks the authorazion for dataspace usage                          *
*---------------------------------------------------------------------*
DSPL_CHK DS    0H
         OI    SMF_FLG2,SMF_FLG2_TESTED_D  Signal already tested
         ST    R14,WORK_R14       Saved value for return
         MVC   MAJO_WRK,MAJDSP    Initialize the MAJO skeleton
         LA    R15,MAJO_WRK       Get workarea address
         ST    R15,MAJO_PAR       Store the address
         LA    R1,MAJO_PAR        Get address of MAJO parameter list
         ICM   R15,B'1111',SMF_MAJO  MAJO available?
         BZ    RETURN             No, use system defaults
         BASR  R14,R15            Call MAJO
         B     *+4(R15)           Use branch table
         B     DSPL_05             RC = 0    Data is available
         B     DSPL_05             RC = 4    No data available
         B     DSPL_09             RC = 8    Not Auth. data available
         B     DSPL_09             RC = 12   Profile not available
         B     DSPL_09             RC = 16   Error
         B     DSPL_09             RC = 20   RACF not active
DSPL_05  DS    0H
         OI    SMF_FLG2,SMF_FLG2_DSPLIM  Show user is authorized
DSPL_09  DS    0H
         L     R14,WORK_R14       Get saved value
         BR    R14                Return to caller
         EJECT
         END   IEFUSI             This is the end my friend
