*
**       TITLE:    DISPLAY ISPF SCREEN
**       SYSTEM:   ISPF MONITOR
**       MODULE:   ISPFLOOK
**       PROGRAM:  ISPFLOOK
**       FUNCTION: DISPLAY THE CURRENTLY DISPLAYED SCREEN BY AN ISPF
**                 USER.
**                 THE PROGRAM CROWW MEMORY TO GET THE SCREEN BEING
**                 DISPLAYED. THE ESTAE MACRO IS USED IN CASE THE TSO
**                 USER HAS BEEN SWAPPED OUT THEREBY CAUSING AN '0C4'
**                 SYSTEM ABEND.
**                 A INITIAL ENTRY SCREEN IS DISPLAYED PERMITTING THE
**                 ENTRY OF A USERID (MAY BE PASSED AS A RUNTIME PARA-
**                 METER), AUTOMATIC REFRESH OF SCREEN AND THE TIME
**                 DELAY BETWEEN AUTO REFRESHES.
**                 PF3 WILL TURN AUTO REFERSH OFF.
**       AUTHOR:   A. KARA.
*
*=====================================================================*
*        COPY  @MACROS
*=====================================================================*
ISPFLOOK KICKOFF (R11,R12),WORKAREA,WORKAREL,AMODE=24,RMODE=24
INITIAL  DS    0H
         LR    R7,R1                ADDRESS OF PARAMETER
         LA    R1,WORKSPOT          LOAD DATA RECIVE AREA ADDRES
         ST    R1,MYARPTR1          STORE POINTER
         LA    R2,SCREEN1              LOAD SCREEN DISPLAY DSECT @
         LA    R3,SCRSZ1               LOAD SCREEN SISE
         LA    R4,SCREEN1C             LOAD SCREEN DISPLAY CONSTANT
         LR    R5,R3                   LOAD SCREEN SISE
         ICM   R5,B'1000',C' '         FILL CHARACTER
         MVCL  R2,R4                MOVE SCREEN DISPLAY AREA
         MVC   CSRICDCW(CSRICDCL),CSRICDCC
         MVC   TPUTWK1(TPUTCONL),TPUTCON1  MOVE CONSTANT TO DSECT
         MVC   TGETWK1(TGETCONL),TGETCON1  MOVE CONSTANT TO DSECT
         MVC   VTIME(8),=C'00000002'
         MVC   SCRNLIN#(2),=H'24'   SET NUMBER OF SCREEN LINES
         LA    R1,GTTRWK1              LOAD LIST ADDRESS
         GTTERM PRMSZE=NSIZE,ALTSZE=ASIZE,MF=(E,(R1))
         XR    R1,R1                   INITIALISE REGISTER
*        IC    R1,NSIZE                NORMAL SCREEN LINES
*        IC    R1,NSIZE+1              NORMAL SCREEN WIDTH
         IC    R1,ASIZE                ALTERNATE SCREEN LINES
*        IC    R1,ASIZE+1              ALTERNATE SCREEN WIDTH
         STH   R1,SCRNLIN#             SET NUMBER OF SCREEN LINES
*---------------------------------------------------------------------*
         MVI   AUTHD,C'Y'              SET AUTHORISED FLAG ON
         TESTAUTH
         LTR   R15,R15                 Q. AUTHORISED
         BZ    CONT#1                     Y. CONTINUE PROCESSING
         MVC   SCRNMSG,SPACES          CLEAR MESSAGE AREA
         MVC   SCRNMSG(53),=C'PROGRAM NOT AUTHORISED. USE PF3 TO TERMINA
               ATE SESSION.'
         MVI   AUTHD,C'N'              SET AUTHORISED TO NO
CONT#1   DS    0H
         MVI   AUTOTIMO,C'N'           INITIALISE AUTO REPEAT
         MVC   TIMEO(2),=C'02'         INITIALISE AUTO REPEAT
         L     R7,0(R7)                LOAD ADDRESS OR PARAMETER
         LH    R9,0(R7)                LOAD LENGTH OF PARAMETER
         LTR   R9,R9                   Q. IS PARAMETER LENGTH ZERO
         BZ    USERPRMT                   Y. GO PROMPT FOR USERID
OKCONT#1 DS    0H
         LA    R7,2(R7)                POINT PAST PARAMETER LENGTH
         MVC   USERIDO(7),0(R7)        MOVE USERID TO REPLY AREA
         B     PROCUSER                PROCESS USER
*---------------------------------------------------------------------*
USERPRMT DS    0H
         LA    R2,SCREEN1              ADDRESS OF DATA MOVED
         LA    R3,SCRSZ1               LENGTH OF DATA
         BAL   R14,TPUTSCR             CALL TPUT ROUTINE
         MVC   SCRNMSG,SPACES          CLEAR SCREEN MESSAGE AREA
         MVC   REPLY,SPACES            CLEAR REPLY RECEIPT AREA
         LA    R2,REPLY                REPLY ADDRESS
         LA    R3,L'REPLY              REPLY LENGTH
         CLI   AUTOTIMO,C'Y'           Q. AUTO TIMER SET
         BE    AUTOREC1                   Y.
RECEIVE1 DS    0H
         BAL   R14,TGETWSCR            GET REPLY TO TPUT WITH WAIT
         B     TESTINPT                TEST INPUT
AUTOREC1 DS    0H
         STIMER WAIT,DINTVL=VTIME      WAIT 1/100 OF A SEC
         BAL   R14,TGETSCR             GET REPLY TO TPUT NO WAIT
         CLI   REPLY,C'3'              Q. PF3 ENTERED
         BNE   HAVEUSID                   N. BYPASS
         MVI   AUTOTIMO,C'N'           SET AUTO TIMER OFF
         MVC   SCRNMSG(22),=C'AUTO TIMER TURNED OFF.'
         B     USERPRMT                GO TO PROMPT FOR USER
TESTINPT DS    0H
*---------------------------------------------------------------------*
         CLI   REPLY,C'3'              Q. PF 3 ENTERED
         BE    EXITPROG                   Y. EXIT PROGRAM
         CLI   AUTHD,C'N'              Q. PROGRAM NOT AUTHORISED
         BE    USERPRMT                   Y. LOOP TILL PF3 ENTERED
*---------------------------------------------------------------------*
         MVC   USERIDO+7(4),UIDIC      PLACE CURSOR ON USERID
         OC    REPLY+6(L'REPLY-6),SPACES   CONVERT TO UPPER CASE
         LA    R7,REPLY+6              DATA PART OF REPLY
ZCMDLOP1 DS    0H
         CLI   0(R7),X'51'             Q. NEXT SBA
         BE    ZCMDEND                    Y. EXIT LOOP
         LA    R7,1(R7)                POINT TO NEXT BYTE
         B     ZCMDLOP1                LOOP TILL NEXT SBA
ZCMDEND  DS    0H
         LA    R7,3(R7)                POINT TO DATA PART OF USERID
         LR    R6,R7                   USE R6 AS POINTER TO INPUT
         XR    R9,R9                   LENGTH COUNTER
UIDLOP1  DS    0H
         CLI   0(R6),X'51'             Q. NEXT SBA
         BE    UIDLOP1E                   Y. EXIT LOOP
         LA    R6,1(R6)                POINT TO NEXT BYTE
         LA    R9,1(R9)                UP LENGTH BY 1
         B     UIDLOP1                 LOOP TILL NEXT SBA
UIDLOP1E DS    0H
         LTR   R9,R9                   Q. ANY USERID ENTERED
         BNZ   HAVEUSER                   Y. TEST USER
         MVC   USERIDO,SPACES          CLEAR USERID IN STORE
         B     INVUSER                 INVALID USER
HAVEUSER DS    0H
         BCTR  R9,0                    RELATIVE LENGTH
         EX    R9,MOVEUSER             MOVE USER
         CLC   USERIDO,SPACES          Q. ANY USERNAME PROVIDED
         BE    INVUSER                    N. INVALID USER
         CLI   USERNAME,C'0'           Q. FIRST CHARACTER NUMERIC
         BL    ENDUSER                    Y. BYPASS
INVUSER  DS    0H
         MVC   SCRNMSG(56),=C'USERID MUST BE ENETERD AND MUST NOT START*
                WITH NUMERICS.'
         MVI   AUTOTIMO,C'N'           SET AUTO TIMER OFF
         B     USERPRMT                GO TO PROMPT FOR USER
*---------------------------------------------------------------------*
MOVEUSER MVC   USERIDO(0),0(R7)       MOVE USER NAME
*---------------------------------------------------------------------*
ENDUSER  DS     0H
         LA    R9,1(R9)                NON-RELATIVE LENGTH
         AR    R7,R9                   POINT PAST USERID
         LA    R7,3(R7)                POINT TO DATA PART OF USERID
         CLI   0(R7),X'51'             Q. NULLS ENTERED
         BNE   HAVEAUTO                   N. BYPASS
         MVC   AUTOTIMO(1),SPACES      SET TO SPACES
         B     INVAUTO                 DISPLAY ERROR MESSAGE
HAVEAUTO DS    0H
         MVC   AUTOTIMO(1),0(R7)       SET AUTOTIMER OUTPUT
         CLI   0(R7),C'Y'              Q. AUTO TIMER ON
         BE    TESTTIME                   Y. CONTINUE
         CLI   0(R7),C'N'              Q. AUTO TIMER OFF
         BE    TESTTIME                   Y. CONTINUE
INVAUTO  DS    0H
         MVC   SCRNMSG(17),=C'AUTO MUST BE Y/N.'
         MVI   AUTOTIMO,C'N'           SET AUTO TIMER OFF
         MVC   USERIDO+7(4),AUTOIC     PLACE CURSOR ON USERID
         B     USERPRMT                GO TO PROMPT FOR USER
TESTTIME DS     0H
         LA    R7,4(R7)                SET POINTER PAST SBA AND POSIT
         CLI   0(R7),C'0'              Q. FIRST CHARACTER NUMERIC
         BNL   HAVETIME                   Y. HAVE TIME
         MVC   TIMEO(2),SPACES         SET TO SPACES
         B     INVTIME                 INVALID TIME
HAVETIME DS    0H
         MVI   TIMEO,C'0'              SET TIME TO ZERO
         MVC   TIMEO+1(1),0(R7)        MOVE TIME TO LAST BYTE
         LA    R7,1(R7)                POINT PAST 1ST. VALID TIME
         CLI   0(R7),X'51'             Q. NEXT SBA
         BE    STORTIME                   Y. HAVETIME
         CLI   0(R7),C'0'              Q. 2ND. CHARACTER NUMERIC
         BL    INVTIME                    N. INVALID TIME
         MVC   TIMEO(1),TIMEO+1        RIPLE DECIMAL DIGIT TO LEFT
         MVC   TIMEO+1(1),0(R7)        MOVE TIME TO LAST BYTE
         B     STORTIME                CONTINUE
INVTIME  DS    0H
         MVC   SCRNMSG(21),=C'TIME MUST BE NUMERIC.'
         MVI   AUTOTIMO,C'N'           SET AUTO TIMER OFF
         MVC   USERIDO+7(4),TIMEIC     PLACE CURSOR ON USERID
         B     USERPRMT                GO TO PROMPT FOR USER
STORTIME DS    0H
         MVC   VTIME+4(2),TIMEO        MOVE TIME TO DISPLAY POSAITION
         LA    R7,3(R7)                POINT PAST SBA AND POSIT
PROCUSER DS    0H
*---------------------------------------------------------------------*
         MVC   USERNAME(7),USERIDO  MOVE USERID TO OUTPUT AREA
         OC    USERNAME(7),SPACES   CONVERT TO UPPER CASE
HAVEUSID DS    0H
         BAL   R14,INIT             GO DO INITIALISE
         CLI   RCODE,C'0'           Q. ZERO RETURN CONE
         BE    STARTIN                 Y. PROCESS
         MVC   SCRNMSG(23),=C'USER         NOT FOUND.'
         MVC   SCRNMSG+5(7),USERNAME MOVE REGION NAME
         MVI   AUTOTIMO,C'N'        SET AUTO TIMER OFF
         LA    R2,USERIDO                     <=====
         B     USERPRMT             GO TO PROMPT FOR USER
*---------------------------------------------------------------------*
STARTIN  EQU   *
*---------------------------------------------------------------------*
* PREPARE FOR "ESTAE" WHEN END OF ADDRESS SPACE IS REACHED.           *
*---------------------------------------------------------------------*
         STM   R10,R13,BASES#1         STORE MAIN REGISTERS
         LA    R1,ESTAEOF1             RETURN ADDRESS
         ST    R1,ESTAERTN             STORE RETURN ADDRESS
         LA    R5,PROCESTA
         ESTAE (5)                     TRAP "ABEND"
         MVI   RCODE,C'0'              SET ZERO REURN CODE
*---------------------------------------------------------------------*
         MODESET KEY=ZERO
         LA    R0,1                 LOAD AUTHORISATION CODE
         AXSET AX=(0)               SET AUTHORISATION INDEX
         ST    R0,PRIMAX            SAVE PRIMARY AX
         XR    R1,R1
         ICM   R1,B'0011',USERASID  LOAD TARGET ASID
         SSAR  R1                   SET TARGET AS SECONDARY ASID
*---------------------------------------------------------------------*
*  PROCESSING LOGIC:---                                               *
*    '0;(10);(22C);+210;(....);(6C);(4)'                              *
*    .... REPLACED ABOVE BY (ASID#-1)*4                               *
*         ===>  1ST TCB ADDRESS                                       *
*    LOOP AROUND TCB CHAIN UNTIL R9 (TCB+X'54' ===> @ WHERE 1ST 4     *
*         CHARS IS 'TLD1'                                             *
*    FROM THERE:                                                      *
*       (20);(150);(20)    ====> GIVES THE FIRST (LATEST) SCREEN      *
*       (20);(150);(24)    ====> GIVES THE SECOND (PREVIOUS) SCREEN   *
*---------------------------------------------------------------------*
         AMODECHG 31,ST=AMODEST     SWITCH TO 31 BIT ADDRESS MODE
         XR    R3,R3                GET CONTENTS OF CICSAREA
         LA    R2,4                 GET LENGTH OF DATA TO MOVE
         LA    R6,FULLWORD          WHERE TO MOVE
         XR    R0,R0                SET KEY REGISTER
         MVCP  0(R2,R6),X'10'(R3),R0 MOVE CVT ADDRESS
         L     R3,FULLWORD          LOAD CVT ADDRESS
         XR    R0,R0                SET KEY REGISTER
         MVCP  0(R2,R6),X'22C'(R3),R0 MOVE ASVT
         L     R3,FULLWORD          LOAD ASVT ADDRESS
         LA    R3,X'210'(R3)        POINT TO 1ST ASVT ADDRESS
         LH    R1,USERASID             LOAD USERASID
         BCTR  R1,0                    RELATIVE DISPLACEMENT
         SLL   R1,2                    MULTIPLY BY 4
         AR    R3,R1                POINT TO THIS JOBS ASVT ENTRY @
         XR    R0,R0                SET KEY REGISTER
         MVCP  0(R2,R6),0(R3),R0    MOVE ASCB ADDRESS
         L     R3,FULLWORD          LOAD ASCB ADDRESS
         XR    R0,R0                SET KEY REGISTER
         MVCP  0(R2,R6),X'6C'(R3),R0    MOVE ASXB ADDRESS
         L     R3,FULLWORD          LOAD ASXB ADDRESS
         XR    R0,R0                SET KEY REGISTER
         MVCP  0(R2,R6),4(R3),R0    MOVE FIRST TCB ADDRESS
         L     R3,FULLWORD          LOAD 1ST TCB ADDRESS
         L     R6,MYARPTR1          WHERE TO MOVE
XMOVLOOP DS    0H
         LA    R2,120               LENGTH OF MOVE
         XR    R0,R0                SET KEY REGISTER
         MVCP  0(R2,R6),0(R3),R0    MOVE SECONDARY TO PRIMARY
         L     R3,X'54'(R6)         LOAD R9 SAVE AREA
         XR    R0,R0                SET KEY REGISTER
         MVCP  200(R2,R6),0(R3),R0  MOVE SECONDARY TO PRIMARY
         CLC   200(4,R6),=C'TLD1'   Q. EYECATCHER
         BE    HAVETLD1                Y. EXIT LOOP
         L     R3,X'74'(R6)         LOAD NEXT TCB POINTER
         LTR   R3,R3                Q. IS THERE NEXT TCB
         BNZ   XMOVLOOP                Y. GET NEXT TCB
         MVI   RCODE,C'4'           SET ERROR RETURN CODE
         B     XMOVEND              END MOVES
HAVETLD1 DS    0H
         LA    R2,4                 LENGTH OF MOVE
         L     R3,232(R6)           LOAD ISPTABLS ADDRESS
         XR    R0,R0                SET KEY REGISTER
         MVCP  0(R2,R6),X'150'(R3),R0  MOVE ISPTABLS ADDRESS
         L     R3,0(R6)             LOAD ISPTABLS ADDRESS
         ST    R3,ISPTABL@          STORE TABLE ADDRESS
         LA    R3,X'20'(R3)         POINT TO ADDRESS OF SCREEN 1
         CLI   SCRN#,C'2'           Q. LOOK AT SCREEN 2
         BNE   HAVESCR#                N. BYPASS
         LA    R3,X'04'(R3)         POINT TO ADDRESS OF SCREEN 2
HAVESCR# DS    0H
         XR    R0,R0                SET KEY REGISTER
         MVCP  0(R2,R6),0(R3),R0    MOVE SCREEN ADDRESS
         L     R3,0(R6)             LOAD SCREEN ADDRESS
         LH    R8,SCRNLIN#          LOOP COUNTER
         LA    R2,80                LENGTH OF MOVE
         MVI   RCODE,C'0'           INITIALISE RETURN CODE
MOVDISP1 DS    0H
         XR    R0,R0                SET KEY REGISTER
         MVCP  0(R2,R6),0(R3),R0    MOVE DATA
         LA    R3,80(R3)            NEXT SOURCE BLOCK
         LA    R6,80(R6)            NEXT DESTINATION BLOCK
         BCT   R8,MOVDISP1          LOOP TILL END
XMOVEND  DS    0H
         XR    R1,R1                CLEAR REGISTER
         ICM   R1,B'0011',PRIMASID  GET PRIMARY ASID
         SSAR  R1                   SET SECONDARY BACK TO PRIMARY
         L     R0,PRIMAX            GET PRIMARY AX
         AXSET AX=(0)
         MODESET KEY=NZERO          TURN MODESET OFF
ESTAEOF1 DS    0H
         AMODECHG O,ST=AMODEST      RESTORE ORIGINAL ADDRESS MODE
         ESTAE 0                    TURN ESTAE OFF
*---------------------------------------------------------------------*
         CLI   RCODE,C'0'           Q. ERROR ENCOUNTERED
         BE    BPINGMS                 N. BYPASS
         CLI   RCODE,C'4'           Q. NO TLD1 FOUND
         BE    NOTLD1                  Y. TELL OFF ERROR
         MVC   SCRNMSG(48),=C'ADDRESS SWAPPED OUT, CANNOT ACCESS ISPF SC
               CREENS.'
         B     USERPRMT             TELL OF ERROR
NOTLD1   DS    0H
         MVC   SCRNMSG(28),=C'NO ISPF DISPLAY PANEL FOUND.'
         B     USERPRMT             TELL OF ERROR
BPINGMS  DS    0H
*---------------------------------------------------------------------*
*                                                                     *
*        AT THIS POINT THE DATA FROM THE REQUESTED AREA IS BACK IN    *
*        THE PRIMARY ADDRESS SPACE AND CAN BE MANIPULATED AS DESIRED  *
*                                                                     *
*---------------------------------------------------------------------*
         BAL   R14,DISPSCRN         BRANCH AND DISPLAY DCA'S
         CLI   RCODE,X'7D'          Q. <ENTER> ENTERED
         BE    STARTIN                 Y. REDISPLAY SCREEN
         CLI   RCODE,C'1'           Q. F1 ENTERED
         BE    OTHERSCR                Y. REDISPLAY SCREEN
         CLI   RCODE,C'2'           Q. F1 ENTERED
         BE    OTHERSCR                Y. REDISPLAY SCREEN
         CLI   RCODE,C'4'           Q. PF 4 ENTERED
         BE    EXITPROG                Y. EXIT PROGRAM
         B     USERPRMT             PROMPT FOR NEXT USER
OTHERSCR DS    0H
         MVC   SCRN#(1),RCODE       MOVE SCREEN NUMBER
         B     STARTIN              REDISPLAY SCREEN
*---------------------------------------------------------------------*
*                                                                     *
DISPSCRN DS    0H
*                                                                     *
         STM   R14,R12,SAVSUBR1        STORE CALLERS REGISTERS
GOFORIT  DS    0H
*---------------------------------------------------------------------*
*                                                                     *
*        FIND LENGTH OF DISPLAY.                                      *
*        IT IS ASSUMED THAT THE DISPLAY IS TERMINATED BY X'00'        *
*                                                                     *
*---------------------------------------------------------------------*
         L     R6,MYARPTR1             ADDRESS OF DATA SOURCE
         LR    R2,R6                   ADDRESS OF DATA DESTINATION
         A     R2,F4096                   4096 BYTES PAST SOURCE
         ST    R2,SCRNADRS             ADDRESS OF DATA DESTINATION
         LA    R3,80                   BLOCK LENGTH (240-1 FOR "EX")
         LH    R9,SCRNLIN#             LOOP COUNTER
         XR    R8,R8                   SCREEN SIZE COUNTER
         MVC   0(WCCHED1L,R2),WCCHED1 MOVE WCC
         LA    R8,WCCHED1L(R8)       UP LENGTH BY 2
         LA    R2,WCCHED1L(R2)       POINT PAST WCC
         LA    R6,1(R6)              FIRST ATTR BYTE ALREADY HAD
MOVDATLP DS    0H
         BCTR  R3,0                    RELATIVE LENGTH
         EX    R3,MOVEDAT1             MOVE DATA
         EX    R3,TRANDAT1             TRANSLATE DATA
         LA    R3,1(R3)                BACT TO ACTUAL LENGTH
         AR    R2,R3                   POINT PAST SOURCE
         AR    R6,R3                   POINT PAST DESTINATION
         AR    R8,R3                   UP COUNTER
         BCT   R9,MOVDATLP             LOOP TILL END
         BCTR  R8,0                    SUBTRACT 1 FOR RELATIVE LENGTH
         STH   R8,SCRNSIZE             STORE LENGTH OF DATA
         B     WRITE                   PASS AROUND 'EX' COMMANDS
*---------------------------------------------------------------------*
MOVEDAT1 MVC   0(0,R2),0(R6)           MOVE DATA
TRANDAT1 TR    0(0,R2),PRINTABL        TRANSLATE DATA
*---------------------------------------------------------------------*
WRITE    DS    0H
*---------------------------------------------------------------------*
*        DISPLAY SCREEN                                               *
*---------------------------------------------------------------------*
         L     R2,SCRNADRS             ADDRESS OF DATA MOVED
         LH    R3,SCRNSIZE             LENGTH OF DATA
         BAL   R14,TPUTSCR             CALL TPUT ROUTINE
*---------------------------------------------------------------------*
         LA    R2,REPLY                REPLY ADDRESS
         LA    R3,L'REPLY              REPLY LENGTH
         CLI   AUTOTIMO,C'Y'           Q. AUTO TIMER SET
         BE    AUTOREC2
RECEIVE2 DS    0H
         MVC   REPLY,SPACES            CLEAR REPLY RECEIPT AREA
         BAL   R14,TGETWSCR            GET REPLY TO TPUT WITH WAIT
         B     RETMAIN1
AUTOREC2 DS    0H
         STIMER WAIT,DINTVL=VTIME      WAIT 1/100 OF A SEC
         BAL   R14,TGETSCR             GET REPLY TO TPUT NO WAIT
         CLI   REPLY,C'3'              Q. PF3 ENTERED
         BNE   RETMAIN1                   N. BYPASS
         MVI   AUTOTIMO,C'N'           AUTO TIMER OFF
*---------------------------------------------------------------------*
RETMAIN1 DS    0H
         MVC   RCODE(1),REPLY          MOVE AID TO RETURN CODE
         LM    R14,R12,SAVSUBR1        RESTORE CALLERS REGISTERS
         BR    R14                     RETURN
*=====================================================================*
TPUTSCR  DS    0H
         ST    R14,R14SAVER            STORE RETURN ADDRESS
         TPUT  (R2),(R3),NOEDIT,WAIT,,BREAKIN,HIGHP,MF=(E,TPUTWK1)
         L     R14,R14SAVER            RESTORE RETURN ADDRESS
         BR    R14                     RETURN
*---------------------------------------------------------------------*
TGETWSCR DS    0H
         ST    R14,R14SAVER            STORE RETURN ADDRESS
         TGET  (R2),(R3),ASIS,WAIT,MF=(E,TGETWK1)
         L     R14,R14SAVER            RESTORE RETURN ADDRESS
         BR    R14                     RETURN
*---------------------------------------------------------------------*
TGETSCR  DS    0H
         ST    R14,R14SAVER            STORE RETURN ADDRESS
         TGET  (R2),(R3),ASIS,NOWAIT,MF=(E,TGETWK1)
         L     R14,R14SAVER            RESTORE RETURN ADDRESS
         BR    R14                     RETURN
*=====================================================================*
INIT     CNOP  0,4
         MVI   RCODE,C'0'              SET ZERO RETURN CODE
         STM   R14,R12,SAVSUBR1        SAVE CALLERS REGS
         USING ASCB,R2
         L     R2,548                  GET PRIM ASCB ADDRESS (PSAAOLD)
         LH    R1,ASCBASID             GET PRIMARY ASID
         STH   R1,PRIMASID             SAVE IT
         DROP  R2
         L     R2,16                   GET CVT ADDRESS
         USING CVT,R2                  ADDRESABILITY TO CVT
         L     R2,CVTASVT              GET ADDRESS OF ASVT
         DROP  R2
         USING ASVT,R2                 ADDRESABILITY TO ASVT
         L     R4,ASVTMAXU             GET NUMBER OF ADDRESS SPACES
         LA    R2,ASVTENTY             POINT TO FIRST ENTRY
INI010   DS    0H
         USING ASCB,R1
         ICM   R1,B'1111',0(R2)        Q. ASCB ADDRESS
         BM    INI020                     N. GO GET NEXT ONE
         LH    R0,ASCBASID             GET ADDRESS SPACE ID
         ICM   R3,B'1111',ASCBJBNI     Q. ADDRESS OF INIT TASK NAME
         BNZ   TESTASCB                   Y. GO GET TEST NAME
         ICM   R3,B'1111',ASCBJBNS     Q. ADDRESS OF STARTED TASK NAME
         BZ    INI020                     N. GO GET NEXT ONE
TESTASCB DS    0H
         STH   R0,USERASID             SAVE CICS ASID
         CLC   USERNAME,0(R3)          Q. IS THIS ONE SELECTED
         L     R0,ASCBASXB             GET ADDRESS OF ASXB
         ST    R0,USERASXB             SAVE CICS ASID
         BE    INI030                     Y. CONTINUE
INI020   DS    0H
         LA    R2,4(R2)                POINT TO NEXT ASVT ENTRY
         BCT   R4,INI010               LOOP
         MVC   RCODE,C'4'              SET ERROR RETUYRN CODE
INI030   DS    0H
         LM    R14,R12,SAVSUBR1         STORE CALLERS REGISTER
         BR    R14                      RETURN TO CALLER
*---------------------------------------------------------------------*
*---------------------------------------------------------------------*
EXITPROG DS    0H
         RACKOFF RC=0,LIST=NO
*---------------------------------------------------------------------*
* CHANGE TO 31 BIT ADDRESSING MODE IN STREAM                          *
*---------------------------------------------------------------------*
ABOVE    DS    0H
*                                                                     *
         LA    R1,0(R4)            RETURN ADDRESS
         O     R1,=X'80000000'     SET 32ND BIT FOR SWAP TO 31 BIT MODE
         BSM   R0,R1               CHANGE MODE TO 31 BIT
*---------------------------------------------------------------------*
* CHANGE TO 24 BIT ADDRESSING MODE IN STREAM                          *
*---------------------------------------------------------------------*
BELOW    DS    0H
*                                                                     *
         LA    R1,0(R4)            RETURN ADDRESS
         BSM   R0,R1               CHANGE MODE TO 24 BIT
*=====================================================================*
*---------------------------------------------------------------------*
         LTORG
*---------------------------------------------------------------------*
F4096    DC    F'4096'
SPACES   DC    CL256' '
WCCHED1  WCCDC EWA,,COLOR
         DC    X'1140403C5D7F40'
         DC    X'114040132902C0F442F1'
WCCHED1L EQU   *-WCCHED1
CSRICDCC DS    0H
         ICDC  07,14
         ICDC  08,14
         ICDC  09,14
CSRICDCL EQU   *-CSRICDCC
*        COPY PRINTAB1                 HAS LOWER CASE (SO COPY BOOK)
PRINTABL DC    C'                '          00-0F
         DC    C'                '          10-1F
         DC    C'                '          20-2F
         DC    C'                '          30-3F
         DC    C'          ¢.<(+|'          40-4F
         DC    C'&&         !$*):¬'         50-5F
         DC    C'-/        ¦,%_>?'          60-6F
         DC    C'          :#@''="'         70-7F
         DC    C' abcdefghi      '          80-8F
         DC    C' jklmnopqr      '          90-9F
         DC    C' ~stuvwxyz      '          A0-AF
         DC    C'                '          B0-BF
         DC    C'{ABCDEFGHI      '          C0-CF
         DC    C'}JKLMNOPQR      '          D0-DF
         DC    C'\ STUVWXYZ      '          E0-EF
         DC    C'0123456789      '          F0-FF
*---------------------------------------------------------------------*
TPUTCON1  TPUT MF=L
TPUTCONL  EQU  *-TPUTCON1
TGETCON1  TGET MF=L
TGETCONL  EQU  *-TGETCON1
GTTRCON1  GTTERM MF=L
GTTRCONL  EQU  *-GTTRCON1
*---------------------------------------------------------------------*
PROCESTA DS    0F
         LR    R2,R15                   R1 SET AS BASE
         USING PROCESTA,R2              BASE REGISTER
         LM    R10,R13,12(R15)          RESTORE REGISTERS FROM "BASES1"
         B     MOVEERR
BASES#1  DS    4F
XXXXXX   DS    CL20                     ESTAE EYE CATCHER
*---------------------------------------------------------------------*
MOVEERR  DS    0H
         STM   R0,R13,BASES#2           STORE REGISTERS INTO "BASES2"
*---------------------------------------------------------------------*
*                                                                     *
*        CONTROL GETS HERE IF THE AN ABEND OCCURED DURING A MOVE      *
*        FROM SECONDARY TO PRIMARY. USUALLY CAUSED BY AN ADDRESS      *
*        EXCEPTION ERROR.                                             *
*                                                                     *
*---------------------------------------------------------------------*
         LA    R15,12
         CR    R0,R15                     Q. SDWA CREATED BY RTM2
         BE    MESTAER2                      N. DO NOT RETRY
         SETRP FRESDWA=YES,RC=4,RETADDR=MESTAER,DUMP=NO
         BR    R14                       RETURN
MESTAER  DS    0F
         LM    R0,R13,8(R15)             RESTORE REGISTERS
         B     MESTAER2
BASES#2  DS    14F
MESTAER2 DS    0H
*---------------------------------------------------------------------*
         MVI   RCODE,C'E'               SET RETURN CODE
         L     R1,ESTAERTN              LOAD ESTAE RETURN ADDRESS
         BR    R1                       CONTINUE
ESTAERTN DS    A                        RETURN ADDRESS FROM ESTAE
*---------------------------------------------------------------------*
SCREEN1C  WCCDC EWA,,COLOR
          DC   X'1140403C5D7F40'
          RADC  01,01,PHN,Y,O,01,36,'-'
          SBADC 01,35,PHN,Y,O,'CONT.D FROM PREV "SBA" DETS'
          DC   CL10' ISPFLOOK '
          RADC  01,45,PHN,Y,O,02,01,'-','CONT.D FROM PREV "SBA" DETS'
          SBADC 02,01,PHN,Y,O
          DC   CL12'COMMAND ===>'
          SBADC 02,14,UHY,R,O
          DC   CL65' '
          SBADC 03,01,PHN,W,O
          DS   CL79
          RADC  04,01,PLN,B,O,05,01,' '
          SBADC 05,01,PLN,B,O
          DC   CL23'Enter parameters below:'
          RADC  05,24,PLN,B,O,06,01,' ','CONT.D FROM PREV "SBA" DETS'
          RADC  06,01,PLN,B,O,07,01,' '
          SBADC 07,01,PLN,B,O
          DC   CL06'Userid'
          SBADC 07,08,PHN,W,O
          DC   CL04'===>'
          SBADC 07,13,UHY,R,O
          DC   CL07' '
          ICDC  07,14
          SBADC 07,21,PHN,W,O
          DC   CL02'<='
          RADC  07,24,PLN,B,O,07,31,' '
          SBADC 07,30,PLN,B,O,'CONT.D FROM PREV "SBA" DETS'
          DC   CL17'Valid TSO user-id'
          RADC  07,47,PLN,B,O,07,80,' ','CONT.D FROM PREV "SBA" DETS'
          SBADC 08,01,PLN,B,O
          DC   CL06'Auto  '
          SBADC 08,08,PHN,W,O
          DC   CL04'===>'
          SBADC 08,13,UHY,R,O
          DC   CL01' '
          SBADC 08,15,PHN,W,O
          DC   CL02'<='
          RADC  08,18,PLN,B,O,08,31,' '
          SBADC 08,30,PLN,B,O,'CONT.D FROM PREV "SBA" DETS'
          DC   CL32'Automatically redisplay screen ('
          SBADC 08,63,PHN,Y,O
          DC   CL01'Y'
          SBADC 08,65,PLN,B,O
          DC   CL02'or'
          SBADC 08,68,PHN,Y,O
          DC   CL01'N'
          SBADC 08,70,PLN,B,O
          DC   CL01')'
          RADC  08,71,PLN,B,O,08,80,' ','CONT.D FROM PREV "SBA" DETS'
          SBADC 09,01,PLN,B,O
          DC   CL06'Time  '
          SBADC 09,08,PHN,W,O
          DC   CL04'===>'
          SBADC 09,13,UHY,R,O
          DC   CL02' '
          SBADC 09,16,PHN,W,O
          DC   CL02'<='
          RADC  09,19,PLN,B,O,09,31,' '
          SBADC 09,30,PLN,B,O,'CONT.D FROM PREV "SBA" DETS'
          DC   CL42'Automatically redisplay interval (seconds)'
          RADC  09,72,PLN,B,O,09,80,' ','CONT.D FROM PREV "SBA" DETS'
          RADC  10,01,PLN,B,O,10,30,' '
          SBADC 10,30,PHN,Y,O
          DC   CL03'PF3'
          SBADC 10,34,PLN,B,O
          DC   CL29'will turn the auto timer off.'
          RADC  10,63,PLN,B,O,11,01,' ','CONT.D FROM PREV "SBA" DETS'
          RADC  11,01,PLN,B,O,12,01,' '
          RADC  12,01,PLN,B,O,13,01,' '
          SBADC 13,01,PLN,B,O
          DC   CL34'   When ISPF display is presented:'
          RADC  13,35,PLN,B,O,14,01,' ','CONT.D FROM PREV "SBA" DETS'
          RADC  14,01,PLN,B,O,15,01,' '
          RADC  15,01,PLN,B,O,15,09,' '
          SBADC 15,08,PLN,B,O,'CONT.D FROM PREV "SBA" DETS'
          DC   CL03'Use'
          SBADC 15,12,PHN,Y,O
          DC   CL03'PF1'
          SBADC 15,16,PLN,B,O
          DC   CL42'for 1st. screen (latest screen displayed).'
          RADC  15,58,PLN,B,O,16,01,' ','CONT.D FROM PREV "SBA" DETS'
          RADC  16,01,PLN,B,O,16,09,' '
          SBADC 16,08,PLN,B,O,'CONT.D FROM PREV "SBA" DETS'
          DC   CL03'Use'
          SBADC 16,12,PHN,Y,O
          DC   CL03'PF2'
          SBADC 16,16,PLN,B,O
          DC   CL44'for 2nd. screen (previous screen displayed).'
          RADC  16,60,PLN,B,O,17,01,' ','CONT.D FROM PREV "SBA" DETS'
          RADC  17,01,PLN,B,O,17,09,' '
          SBADC 17,08,PLN,B,O,'CONT.D FROM PREV "SBA" DETS'
          DC   CL03'Use'
          SBADC 17,12,PHN,Y,O
          DC   CL07'<ENTER>'
          SBADC 17,20,PLN,B,O
          DC   CL28'to refresh displayed screen.'
          RADC  17,48,PLN,B,O,18,01,' ','CONT.D FROM PREV "SBA" DETS'
          RADC  18,01,PLN,B,O,18,09,' '
          SBADC 18,08,PLN,B,O,'CONT.D FROM PREV "SBA" DETS'
          DC   CL03'Use'
          SBADC 18,12,PHN,Y,O
          DC   CL09'any other'
          SBADC 18,22,PLN,B,O
          DC   CL33'PF key to return to this display.'
          RADC  18,55,PLN,B,O,19,01,' ','CONT.D FROM PREV "SBA" DETS'
          RADC  19,01,PLN,B,O,20,01,' '
          RADC  20,01,PLN,B,O,21,01,' '
          SBADC 21,01,PLN,B,O
          DC   CL03'Use'
          SBADC 21,05,PHN,Y,O
          DC   CL03'END'
          SBADC 21,09,PLN,B,O
          DC   CL25'PF key to abandon screen.'
          RADC  21,34,PLN,B,O,22,01,' ','CONT.D FROM PREV "SBA" DETS'
SCRSZ1   EQU   *-SCREEN1C
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
*---------------------------------------------------------------------*
WORKAREA DSECT
REGSAVER DS    18F
SAVSUBR1 DS    18F
VTIME    DC    D'00000000'          VARIABLE TIME INTERVAL
R14SAVER DS    F
MYARPTR1 DS    A
SCRNADRS DS    F
PRIMAX   DS    F
FULLWORD DS    F
ISPTABL@ DS    F
AMODEST  DS    F
USERASXB DS    H
SCRNSIZE DS    H
SCRNLIN# DS    H
USERASID DS    H
PRIMASID DS    H
NSIZE    DS    H
ASIZE    DS    H
USERNAME DS    CL7
SCRN#    DS    CL1
AUTHD    DS    CL1
RCODE    DS    CL1
DISPTYPE DS    CL1
REPLY    DS    CL100
TARGET   DS    CL80
CSRICDCW DS    0H
UIDIC    ICDC  07,14
AUTOIC   ICDC  08,14
TIMEIC   ICDC  09,14
*---------------------------------------------------------------------*
TPUTWK1  TPUT  MF=L
TGETWK1  TGET  MF=L
GTTRWK1  GTTERM MF=L
*---------------------------------------------------------------------*
SCREEN1   WCCDC EWA,,COLOR
          DC   X'1140403C5D7F40'
          RADC  01,01,PHN,Y,O,01,36,'-'
          SBADC 01,35,PHN,Y,O,'CONT.D FROM PREV "SBA" DETS'
          DC   CL10' ISPFLOOK '
          RADC  01,45,PHN,Y,O,02,01,'-','CONT.D FROM PREV "SBA" DETS'
          SBADC 02,01,PHN,Y,O
          DC   CL12'COMMAND ===>'
          SBADC 02,14,UHY,R,O
ZCMD      DC   CL65' '
          SBADC 03,01,PHN,W,O
SCRNMSG   DS   CL79
          RADC  04,01,PLN,B,O,05,01,' '
          SBADC 05,01,PLN,B,O
          DC   CL23'Enter parameters below:'
          RADC  05,24,PLN,B,O,06,01,' ','CONT.D FROM PREV "SBA" DETS'
          RADC  06,01,PLN,B,O,07,01,' '
          SBADC 07,01,PLN,B,O
          DC   CL06'Userid'
          SBADC 07,08,PHN,W,O
          DC   CL04'===>'
          SBADC 07,13,UHY,R,O
USERIDO   DC   CL07' '
          ICDC  07,14
          SBADC 07,21,PHN,W,O
          DC   CL02'<='
          RADC  07,24,PLN,B,O,07,31,' '
          SBADC 07,30,PLN,B,O,'CONT.D FROM PREV "SBA" DETS'
          DC   CL17'Valid TSO user-id'
          RADC  07,47,PLN,B,O,07,80,' ','CONT.D FROM PREV "SBA" DETS'
          SBADC 08,01,PLN,B,O
          DC   CL06'Auto  '
          SBADC 08,08,PHN,W,O
          DC   CL04'===>'
          SBADC 08,13,UHY,R,O
AUTOTIMO  DC   CL01' '
          SBADC 08,15,PHN,W,O
          DC   CL02'<='
          RADC  08,18,PLN,B,O,08,31,' '
          SBADC 08,30,PLN,B,O,'CONT.D FROM PREV "SBA" DETS'
          DC   CL32'Automatically redisplay screen ('
          SBADC 08,63,PHN,Y,O
          DC   CL01'Y'
          SBADC 08,65,PLN,B,O
          DC   CL02'or'
          SBADC 08,68,PHN,Y,O
          DC   CL01'N'
          SBADC 08,70,PLN,B,O
          DC   CL01')'
          RADC  08,71,PLN,B,O,08,80,' ','CONT.D FROM PREV "SBA" DETS'
          SBADC 09,01,PLN,B,O
          DC   CL06'Time  '
          SBADC 09,08,PHN,W,O
          DC   CL04'===>'
          SBADC 09,13,UHY,R,O
TIMEO     DC   CL02' '
          SBADC 09,16,PHN,W,O
          DC   CL02'<='
          RADC  09,19,PLN,B,O,09,31,' '
          SBADC 09,30,PLN,B,O,'CONT.D FROM PREV "SBA" DETS'
          DC   CL42'Automatically redisplay interval (seconds)'
          RADC  09,72,PLN,B,O,09,80,' ','CONT.D FROM PREV "SBA" DETS'
          RADC  10,01,PLN,B,O,10,30,' '
          SBADC 10,30,PHN,Y,O
          DC   CL03'PF3'
          SBADC 10,34,PLN,B,O
          DC   CL29'will turn the auto timer off.'
          RADC  10,63,PLN,B,O,11,01,' ','CONT.D FROM PREV "SBA" DETS'
          RADC  11,01,PLN,B,O,12,01,' '
          RADC  12,01,PLN,B,O,13,01,' '
          SBADC 13,01,PLN,B,O
          DC   CL34'   When ISPF display is presented:'
          RADC  13,35,PLN,B,O,14,01,' ','CONT.D FROM PREV "SBA" DETS'
          RADC  14,01,PLN,B,O,15,01,' '
          RADC  15,01,PLN,B,O,15,09,' '
          SBADC 15,08,PLN,B,O,'CONT.D FROM PREV "SBA" DETS'
          DC   CL03'Use'
          SBADC 15,12,PHN,Y,O
          DC   CL03'PF1'
          SBADC 15,16,PLN,B,O
          DC   CL42'for 1st. screen (latest screen displayed).'
          RADC  15,58,PLN,B,O,16,01,' ','CONT.D FROM PREV "SBA" DETS'
          RADC  16,01,PLN,B,O,16,09,' '
          SBADC 16,08,PLN,B,O,'CONT.D FROM PREV "SBA" DETS'
          DC   CL03'Use'
          SBADC 16,12,PHN,Y,O
          DC   CL03'PF2'
          SBADC 16,16,PLN,B,O
          DC   CL44'for 2nd. screen (previous screen displayed).'
          RADC  16,60,PLN,B,O,17,01,' ','CONT.D FROM PREV "SBA" DETS'
          RADC  17,01,PLN,B,O,17,09,' '
          SBADC 17,08,PLN,B,O,'CONT.D FROM PREV "SBA" DETS'
          DC   CL03'Use'
          SBADC 17,12,PHN,Y,O
          DC   CL07'<ENTER>'
          SBADC 17,20,PLN,B,O
          DC   CL28'to refresh displayed screen.'
          RADC  17,48,PLN,B,O,18,01,' ','CONT.D FROM PREV "SBA" DETS'
          RADC  18,01,PLN,B,O,18,09,' '
          SBADC 18,08,PLN,B,O,'CONT.D FROM PREV "SBA" DETS'
          DC   CL03'Use'
          SBADC 18,12,PHN,Y,O
          DC   CL09'any other'
          SBADC 18,22,PLN,B,O
          DC   CL33'PF key to return to this display.'
          RADC  18,55,PLN,B,O,19,01,' ','CONT.D FROM PREV "SBA" DETS'
          RADC  19,01,PLN,B,O,20,01,' '
          RADC  20,01,PLN,B,O,21,01,' '
          SBADC 21,01,PLN,B,O
          DC   CL03'Use'
          SBADC 21,05,PHN,Y,O
          DC   CL03'END'
          SBADC 21,09,PLN,B,O
          DC   CL25'PF key to abandon screen.'
          RADC  21,34,PLN,B,O,22,01,' ','CONT.D FROM PREV "SBA" DETS'
*---------------------------------------------------------------------*
         DROP  R2
*---------------------------------------------------------------------*
WORKSPOT DS    CL16000
WORKAREL EQU   *-WORKAREA
*---------------------------------------------------------------------*
         CVT     DSECT=YES          ENTRY : CVT
         IHAASVT                    ENTRY : ASVT
         IHAASCB                    ENTRY : ASCB
         IHASDWA DSECT=YES          ENTRY : SDWA
         END
*---------------------------------------------------------------------*
         END
