*
**       Title:    MASTER TERMINAL CONSOLE
**       Module:   MVSCON
**       Program:  MVSCON
**       Function: Display the master terminal display buffer on the
**                 users terminal and accep operator commands except
**                 the following.
**
**                 All commands begining with:
**
**                 A delay of 2 seconds is built into as the wait time
**                 between issuing of a command and the redisplay of
**                 'updated' console immage. You may change the
**                 duration of the wait by issuing the following
**                 command. The format is:
**                   WAIT=ss   - Where 'ss' is a range of 0 to 99
**                               seconds.
**
**       Note:     Program must be authorised using link-edit parm of:
**                      'SETCODE AC(1)'
**                 link-edit into an APF authorised dataset.
**       Author:   A. Kara (ASYSTS Pty. Ltd.)
*
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
*        PRINT OFF
*        COPY  @MACROS              MISCELLANEOUS MACROS
*        PRINT ON
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
MVSCON   KICKOFF (R11,R12),WORKAREA,WORKAREL,AMODE=31,LIST=Y
INITIAL  DS    0H
         LR    R7,R1                   SAVE PARAMETER ADDRESS
*---------------------------------------------------------------------*
* Test for initialisation parameter                                   *
*---------------------------------------------------------------------*
         TESTAUTH ,                    TEST AUTHORISATION
         LTR   R15,R15                 Q. AUTHORISED
         BNZ   NOTAUTHD                   N. EXIT WITH ERROR MESSAGE
*---------------------------------------------------------------------*
* Initialise parameters                                               *
*---------------------------------------------------------------------*
         MVC   PROCESTA(COMESTAL),COMMESTA
*                                      MOVE ESTAE TRAP ROUTINE
         MVC   WTODET1(WTODETL),WTODETF
*                                      MOVE WTO DATA TO GETMAINED
         MVC   SCREEN1(SCREEN1L),SCREEN1X
*                                      MOVE WTO DATA TO GETMAINED
         MVC   SCREEN2(SCREEN2L),SCREEN2X
*                                      RECALL LAST MESSAGE OVERLAY
         MVC   MESSAGEG,SPACES         INITIALISE MESSAGE AREA
         MVC   SVC34AR,SPACES          INITIALISE SVC34 AREA
         MVI   FIRSTIME,C'Y'           SET FIRST TIME FLAG
         MVC   VTIME(8),=C'00000200'   TOME TO WAIT FOR OPER CMD 2 WORK
*                          hhmmsstt                                   *
         MVI   RECCMD,C'N'             TURN RECALL COMMAND FLAG OFF
*---------------------------------------------------------------------*
* Test for initialisation parameter                                   *
*---------------------------------------------------------------------*
         L     R7,0(R7)                LOAD PARAMETER LIST POINTER
         LH    R2,0(R7)                LOAD PARAMETER LENGTH
         LTR   R2,R2                   Q. ANY PARAMETER
         BZ    NOPARM                     N. NORMAL PROCESSING
         CH    R2,=H'4'                Q. PARAMETER LENGTH OF 4
         BNE   INVPARML                   N. SIGNAL INVALID PARM LENGTH
*---------------------------------------------------------------------*
NOPARM   DS    0H
         BAL   R14,GETMASID            GO GET *MASTER* ASID
         CLI   RCODE,C'0'              Q. ZERO RETURN CONE
         BNE   JOBNFND                    N. SAY SO AND EXIT
*---------------------------------------------------------------------*
* Prepare terminal display environment                                *
*---------------------------------------------------------------------*
         STLINENO LINE=1,MODE=ON
         STTMPMD  ON,KEYS=ALL
         STFSMODE ON,INITIAL=YES      SET UP FULL SCREEN MODE
*---------------------------------------------------------------------*
* Prepare for "ESTAE" when end of address space is reached.           *
*---------------------------------------------------------------------*
GETDATA  DS    0H
         STM   R11,R13,BASES#1         STORE MAIN REGISTERS
         LA    R1,ESTAEOF1             RETURN ADDRESS
         ST    R1,ESTAERTN             STORE RETURN ADDRESS
         LA    R5,PROCESTA             LOAD ESTAE ADDRESS
         ESTAE (5)                     TRAP "ABEND"
         MVI   RCODE,C'0'              SET ZERO REURN CODE
*---------------------------------------------------------------------*
* Prepare for cross-memory processing                                 *
*---------------------------------------------------------------------*
         MODESET KEY=ZERO              SET KEY OF ZERO
         LA    R0,1                    LOAD AUTHORISATION CODE
         AXSET AX=(0)                  SET AUTHORISATION INDEX
         ST    R0,PRIMAX               SAVE PRIMARY AX
         XR    R1,R1                   INITIALISE REGISTER
         ICM   R1,B'0011',USERASID     LOAD TARGET ASID
         SSAR  R1                      SET TARGET AS SECONDARY ASID
*---------------------------------------------------------------------*
*  Processing logic:---                                               *
*    CVT;(64)      -----> UCM base                                    *
*    UCM;(48)      -----> First UCM entry                             *
*    UCM;(4C)      -----> Length of a UCM entry                       *
*    UCM;(50)      -----> Last UCM entry                              *
*    UCME;(1C)     -----> RDCM                                        *
*    RDCM;(00)     -----> TDCM                                        *
*    TDCM;(30)     -----> Screen image buffer address                 *
*    TDCM;(20)     -----> Address of first DOM number (or- last       *
*                         display character + 1)                      *
*                         ie. @ TDCM;(20) - @ TDCM;(30) -> length     *
*---------------------------------------------------------------------*
         LA    R2,4                    GET LENGTH OF DATA TO MOVE
         LA    R6,FULLWORD             WHERE TO MOVE
         L     R3,CVTPTR               LOAD CVT ADDRESS
         USING CVT,R3                  ADDRESSABILITY TO CVT
         L     R3,CVTCUCB              LOAD UNIT CONTROL MODULE
*                                          DATA AREA POINTER
         DROP  R3                      RELINQUISH ADDRESSABILITY TO CVT
         USING UCM,R3                  ADDRESSABILITY TO UCM (BASE)
         L     R3,UCMVEA               FIRST UCM ENTRY
         L     R1,UCMVEL               LAST UCM ENTRY
         ST    R1,LASTUCM              STORE LAST UCM ENTRY
         L     R9,UCMVEZ               LENGTH UCM ENTRY
         DROP  R3                      RELINQUISH ADDRESSABILITY TO CVT
         XR    R0,R0                   SET KEY REGISTER
         MVCP  0(R2,R6),UCMXB-UCMECB(R3),R0 MOVE RDCM ADDRESS
         ICM   R3,B'1111',FULLWORD     LOAD RDCM ADDRESS
         BNZ   GOTRDCM                 BYPASS IF NOT ZERO
         MVI   RCODE,C'R'              SET ERROR CODE
         B     XMOVEND                 BYPASS PROCESSING
GOTRDCM  DS    0H
         XR    R0,R0                   SET KEY REGISTER
         MVCP  0(R2,R6),X'00'(R3),R0   MOVE PAGEABLE DCM ADDRESS
         L     R3,FULLWORD             LOAD PAGEABLE DCM ADDRESS
         XR    R0,R0                   SET KEY REGISTER
         MVCP  0(R2,R6),X'30'(R3),R0   MOVE SCREEN IMAGE BUFFER ADDRESS
         XR    R0,R0                   SET KEY REGISTER
         LA    R6,SCREENL              WHERE TO MOVE
         MVCP  0(R2,R6),X'20'(R3),R0   MOVE SCREEN IMAGE BUFF + 1
         L     R3,FULLWORD             LOAD IMAGE BUFFER ADDRESS
         LA    R2,256                  LOAD LENGTH OF MOVE
         XR    R8,R8                   INIT EVEN PAIR
         L     R9,SCREENL              END OF SCREEN IMAGE + 1
         SR    R9,R3                   SUBTRACT START OF IMAGE
         AH    R9,=H'6'                ADD SBA CONTROL CHARACTERS
         SH    R3,=H'6'                BACK UP SBA CONTROL CHARACTERS
         ST    R9,SCREENL              STORE IMAGE LENGTH
         LA    R6,MOVEDATA             WHERE TO MOVE
MOVELOP1 DS    0H
         XR    R0,R0                   SET KEY REGISTER
         MVCP  0(R9,R6),0(R3),R0       MOVE FULL LENGTH
         BZ    XMOVEND                    OR 256 BYTES
         AR    R3,R2                   UP BY LENGTH OF MOVE
         AR    R6,R2                   UP BY LENGTH OF MOVE
         SR    R9,R2                   DECREASE LENGTH BY AMOUNT MOVED
         B     MOVELOP1                MOVE NEXT LOT OF 256
XMOVEND  DS    0H
         XR    R1,R1                   CLEAR REGISTER
         ICM   R1,B'0011',PRIMASID     GET PRIMARY ASID
         SSAR  R1                      SET SECONDARY BACK TO PRIMARY
         L     R0,PRIMAX               GET PRIMARY AX
         AXSET AX=(0)                  SET AUTHORISATION INDEX
         MODESET KEY=NZERO             TURN MODESET OFF
ESTAEOF1 DS    0H
         ESTAE 0                       TURN ESTAE OFF
         CLI   RCODE,C'E'              Q. ESTAE RETURN CONE
         BE    ESTAEHIT                   N. SAY SO AND EXIT
         CLI   RCODE,C'R'              Q. ANY RDCM DISPLAY
         BE    NOCONSOL                   N. SAY SO AND EXIT
                                                                SPACE 1
*---------------------------------------------------------------------*
* Display screen buffer and accept response                           *
*---------------------------------------------------------------------*
TESTPRMF DS    0H
         CLI   FIRSTIME,C'N'           Q. FIRST TIME THROUGH
         BE    NOT1STT                    N. BYPASS
  MODESET KEY=ZERO,MODE=SUP     SUPERVISOR STATE FOR SVC CALL
         TPUT  SCRCLR,SCRCLRL,FULLSCR,,HOLD CLEAR SCREEN
  MODESET KEY=NZERO,MODE=PROB   RETURN TO PROBLEM STATE
         MVI   FIRSTIME,C'N'           SET FIRST TIME FLAG OFF
NOT1STT  DS    0H
         LA    R7,SCREEN1              LOAD SCREEN ADDRESS
         L     R8,SCREENL              LOAD SCREEN LENGTH
         LA    R8,SCREEN1L(R8)         UP FOR WCC LENGTH
  MODESET KEY=ZERO,MODE=SUP     SUPERVISOR STATE FOR SVC CALL
         TPUT  (R7),(R8),NOEDIT,NOWAIT,,BREAKIN,HIGHP
  MODESET KEY=NZERO,MODE=PROB   RETURN TO PROBLEM STATE
         MVC   RECALLMS,SPACES         CLEAR COMMAND RECEIP AREA
         CLI   RECCMD,C'N'             Q. RECALL COMMAND
         BE    GETREPLY                   N. PUT PROMPTLINE
         MVC   RECALLMS,SVC34AR        MOVE RECALL MESSAGE
GETREPLY DS    0H
         LA    R7,SCREEN2              LOAD SCREEN ADDRESS
         LA    R8,SCREEN2L+L'RECALLMS  LOAD SCREEN LENGTH
  MODESET KEY=ZERO,MODE=SUP     SUPERVISOR STATE FOR SVC CALL
         TPUT  (R7),(R8),NOEDIT,NOWAIT,,BREAKIN,HIGHP
         MVC   REPLY,SPACES            CLEAR REPLY AREA
         TGET  REPLY,L'REPLY,ASIS,WAIT
  MODESET KEY=NZERO,MODE=PROB   RETURN TO PROBLEM STATE
         CLI   REPLY,C'3'              Q. PF3 entered
         BE    GETOUT                     Y. EXIT PROGRAM
         CLI   REPLY,X'7C'             Q. PF12 ENTERED
         BE    RECALLLC                   Y. RECALL LAST COMMAND
         MVI   RECCMD,C'N'             SET RECALL COMMAND OFF
         OC    REPLY+6(L'REPLY-6),SPACES CONVERT TO UPPER CASE
         LA    R7,REPLY+6              POINT TO INPUT BUFFER
         CLC   REPLY+6(L'REPLY-6),SPACES Q. ANY PARAMETER ENTERED
         BE    GETDATA                      Y. REDISPLAY THE SCREEN
         CLI   0(R7),C'K'              Q. DISALLOWED COMMAND
         BE    GETDATA                    Y. REDISPLAY THE SCREEN
         CLI   0(R7),C'Q'              QUIESCE NOT ALLOWED
         BE    GETDATA                    Y. REDISPLAY THE SCREEN
         CLI   0(R7),C'*'              JES3 COMMANDS NOT ALLOWED
         BE    GETDATA                    Y. REDISPLAY THE SCREEN
         CLI   0(R7),C'Z'              MVS SHUTDOWN NOT ALLOWED
         BE    GETDATA                    Y. REDISPLAY THE SCREEN
         CLC   =C'WAIT',0(R7)          Q. WAIT TIME SET
         BNE   NOTWAIT                    Y. REDISPLAY THE SCREEN
         BAL   R14,NEWWAITT            GO AND GET NEW WAIT TIME
         B     GETDATA                 REDISPLAY THE SCREEN
NOTWAIT  DS    0H
         BAL   R14,ISSUECMD            GO AND ISSUE COMMAND
         B     GETDATA                 REDISPLAY THE SCREEN
                                                                SPACE 1
RECALLLC DS    0H
         MVI   RECCMD,C'Y'             SET RECALL COMMAND
         B     GETDATA                 REDISPLAY THE SCREEN
                                                                SPACE 1
*---------------------------------------------------------------------*
* Restore terminal display environment then exit                      *
*---------------------------------------------------------------------*
GETOUT   DS    0H
         STFSMODE OFF                  TURN OFF FULL SCREEN MODE
         STTMPMD  ON,KEYS=NO
         STLINENO LINE=1               CLEAR THE SCREEN
EXITPROG DS    0H
         RACKOFF RC=0,LIST=NO          RETURN
                                                                SPACE 1
*---------------------------------------------------------------------*
* Error messages                                                      *
*---------------------------------------------------------------------*
NOTAUTHD DS    0H
         MVC   MESSAGEG(22),=C'PROGRAM NOT AUTHORISED'
         B     ERRORMSG                GO ISSUE WTO
*---------------------------------------------------------------------*
ESTAEHIT DS    0H
         MVC   MESSAGEG(17),=C'ESTAE ENCOUNTERED'
         B     ERRORMSG                GO ISSUE WTO
*---------------------------------------------------------------------*
NOCONSOL DS    0H
         MVC   MESSAGEG(21),=C'NO RDCM DISPLAY FOUND'
         B     ERRORMSG                GO ISSUE WTO
*---------------------------------------------------------------------*
JOBNFND  DS    0H                      SHOULD NEVER HAPPEN
         MVC   MESSAGEG(26),=C'ADDRESS *MASTER* NOT FOUND'
         B     ERRORMSG                GO ISSUE WTO
*---------------------------------------------------------------------*
INVPARML DS    0H
         MVC   MESSAGEG(24),=C'INVALID PARAMETER LENGTH'
         B     ERRORMSG                GO ISSUE WTO
*---------------------------------------------------------------------*
* Wite error message to log                                           *
*---------------------------------------------------------------------*
ERRORMSG DS    0H
         BAL   R14,WTORTN              GO ISSUE WTO
         B     EXITPROG                EXIT PROGRAM
                                                                SPACE 1
*=====================================================================*
*---------------------------------------------------------------------*
* Routine to get the ASID of the *MASTER* address space and the       *
* current job's asid to permit cross memory processing of the MTT.    *
*---------------------------------------------------------------------*
GETMASID DS    0H
         STM   R14,R12,SAVSUBR1        SAVE CALLERS REGS
         MVI   RCODE,C'0'              SET ZERO RETURN CODE
         L     R2,548                  GET PRIM ASCB ADDRESS (PSAAOLD)
         USING ASCB,R2                 ADDRESABILITY TO ASCB
         LH    R1,ASCBASID             GET PRIMARY ASID
         STH   R1,PRIMASID             SAVE IT
         DROP  R2
         L     R2,CVTPTR               GET CVT ADDRESS
         USING CVT,R2                  ADDRESABILITY TO CVT
         L     R2,CVTASVT              GET ADDRESS OF ASVT
         DROP  R2
         USING ASVT,R2                 ADDRESABILITY TO ASVT
         L     R4,ASVTMAXU             GET NUMBER OF ADDRESS SPACES
         LA    R2,ASVTENTY             POINT TO FIRST ENTRY
ASVTLOOP DS    0H
         USING ASCB,R1
         ICM   R1,B'1111',0(R2)        Q. ASCB ADDRESS
         BM    NEXTASVT                   N. GO GET NEXT ONE
         LH    R0,ASCBASID             GET ADDRESS SPACE ID
         ICM   R3,B'1111',ASCBJBNS     Q. ADDRESS OF STARTED TASK NAME
         BZ    NEXTASVT                   N. GO GET NEXT ONE
TESTASCB DS    0H
         STH   R0,USERASID             SAVE CICS ASID
         CLC   USERNAME,0(R3)          Q. IS THIS ONE SELECTED
         L     R0,ASCBASXB             GET ADDRESS OF ASXB
         BE    HAVETASK                   Y. CONTINUE
NEXTASVT DS    0H
         LA    R2,4(R2)                POINT TO NEXT ASVT ENTRY
         BCT   R4,ASVTLOOP             LOOP
         MVC   RCODE,C'4'              SET ERROR RETUYRN CODE
HAVETASK DS    0H
         LM    R14,R12,SAVSUBR1        RESTORE CALLERS REGISTER
         BR    R14                     RETURN TO CALLER
                                                                SPACE 1
*=====================================================================*
*---------------------------------------------------------------------*
* *** CALLED ROUTINES ****                                            *
*---------------------------------------------------------------------*
* Write To Operator                                                   *
*---------------------------------------------------------------------*
WTORTN   DS    0H
         ST    R14,SAVSUBR2            STORE CALLERS REGISTER
*        LA    R1,WTODET1              LOAD ADDRESS OF WTO AREA
*        MVC   WTODET1+4(73),MESSAGEG  MOVE MESSAGE DETAILS
*        WTO   MF=(E,(R1))             ISSUE MSG
*-----------------------<=======--------------------------------------*
         LA    R5,TRACE                           <=====
         LA    R6,FULLWORD                        <=====
         LA    R7,MOVEDATA                        <=====
         LA    R10,SCREENL                         <=====
         PDUMP MESSAGEG,MSG='R5=TRACE,R6=FULL,R7=MOVE,R10=SCREENL' <===
*-----------------------<=======--------------------------------------*
         L     R14,SAVSUBR2            RESTORE CALLERS REGISTER
         BR    R14                     RETURN TO CALLER
                                                                SPACE 1
*---------------------------------------------------------------------*
* Issue operator command                                              *
*---------------------------------------------------------------------*
ISSUECMD DS    0H
         ST    R14,SAVSUBR2            STORE CALLERS REGISTER
         XC    MESSAGEL(4),MESSAGEL    INITIALISE FIELD
         MVC   SVC34AR,SPACES          CLEAR MESSAGE AREA
         LA    R9,125                  LENGTH OF MOVE (LIMIT 126)
         EX    R9,MOVE#1               GET COMMAND DATA
         AH    R9,=H'5'                SET LENGTH FOR MVC (BCTR + LEN)
         STH   R9,MESSAGEL             STORE MESSAGE LENGTH
*        PDUMP MESSAGEL,MSG='ABOUT TO SVC 34'     <=====
         MODESET KEY=ZERO,MODE=SUP     SUPERVISOR STATE FOR SVC CALL
         LA    R1,MESSAGEL             SET REGISTERS
         XR    R0,R0                        FOR SVC
         SVC   34                      ISSUE COMMAND
         MODESET KEY=NZERO,MODE=PROB   RETURN TO PROBLEM STATE
         STIMER WAIT,DINTVL=VTIME      WAIT 1 SEC TO LET COMMAND WORK
         L     R14,SAVSUBR2            RESTORE CALLERS REGISTER
         BR    R14                     RETURN TO CALLER
*---------------------------------------------------------------------*
MOVE#1   MVC   SVC34AR(0),0(R7)       'EX' FORM OF MOVE
*---------------------------------------------------------------------*
                                                                SPACE 1
*---------------------------------------------------------------------*
* Test and set new WAIT parameter                                     *
*---------------------------------------------------------------------*
NEWWAITT DS    0H
         ST    R14,SAVSUBR2            STORE CALLERS REGISTER
         MVC   BTIME,VTIME             BACK UP WAIT TIME
         LA    R7,5(R7)                POINT PAST COMMAND IDENTIFIER
         CLI   0(R7),C' '              Q. FIRST CHARACTER SPACE
         BE    TEST2NDC                   Y. GET NEXT CHARACTER
         CLI   0(R7),C'0'              Q. FIRST CHARACTER NUMERIC
         BL    INVTIME                    N. INVALID TIME
         MVI   TIMEO,C'0'              SET TIME TO ZERO
         MVC   TIMEO+1(1),0(R7)        MOVE TIME TO LAST BYTE
TEST2NDC DS    0H
         LA    R7,1(R7)                POINT PAST 1ST. VALID TIME
         CLI   0(R7),C' '              Q. NEXT SPACE
         BE    RETWAIT                    Y. HAVETIME
         CLI   0(R7),C'0'              Q. 2ND. CHARACTER NUMERIC
         BL    INVTIME                    N. INVALID TIME
         MVC   TIMEO(1),TIMEO+1        RIPLE DECIMAL DIGIT TO LEFT
         MVC   TIMEO+1(1),0(R7)        MOVE TIME TO LAST BYTE
         B     RETWAIT                 CONTINUE
INVTIME  DS    0H
         MVC   VTIME,BTIME             RESTORE UP WAIT TIME
RETWAIT  DS    0H
         L     R14,SAVSUBR2            RESTORE CALLERS REGISTER
         BR    R14                     RETURN TO CALLER
*=====================================================================*
*---------------------------------------------------------------------*
         LTORG
*---------------------------------------------------------------------*
SPACES   DC    CL256' '
USERNAME DC    CL8'CONSOLE'            CONSOLE ADDRESS SPACE ID
SCREEN1X WCCDC W
         SBADC 1,1,PLY,P
         ICDC  30,3
SCREEN1L EQU   *-SCREEN1X
SCREEN2X WCCDC W
         SBADC 30,2,ULY,P
         ICDC  30,3
SCREEN2L EQU   *-SCREEN2X
WTODETF  DS    0F
         WTO   '                                                       +
                                        ',                             +
               ROUTCDE=(2,12),DESC=(7),                                +
               MF=L
WTODETL  EQU   *-WTODETF
                                                                SPACE 1
SCRCLR   DS    0CL11                   3270 FULL SCREEN CONTROL
         DC    X'C3'                   3270 WRITE CONTROL
*                                          KEYBOARD RESTORE,
*                                          RESET MODIFIED DATA TAG
         DC    X'11'                   3270 SET BUFFER ADDRESS COMMAND
         DC    X'4040'                 3270 ADDRESS 0
         DC    X'28'                   SET ATTRIBUTE
         DC    X'42'                   SET COLOR
*        DC    X'00'                   DEFAULT COLOR (FOR COMMAND LINE)
*        DC    X'F1'                   BLUE
*        DC    X'F2'                   RED
         DC    X'F3'                   PINK
*        DC    X'F4'                   GREEN
*        DC    X'F5'                   TURQ
*        DC    X'F6'                   YELLOW
*        DC    X'F7'                   WHITE
         DC    X'3C'                   3270 REPEAT TO ADDRESS COMMAND
SCREND   DC    X'F56F'                 3270 ADDRESS - REPEAT END
*                                          43,80
         DC    X'00'                   REPEAT CHARACTER
SCRCLRL  EQU   *-SCRCLR
                                                                SPACE 1
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
*---------------------------------------------------------------------*
* ESTAE routine without labels, to be copied into GETMAIN'ed area     *
*---------------------------------------------------------------------*
COMMESTA DS    0F
         LR    R2,R15                  R1 SET AS BASE
         USING PROCESTA,R2             BASE REGISTER
         LM    R11,R13,12(R15)         RESTORE REGISTERS FROM "BASES1"
         B     MOVEERR                 BYPASS R11 - R13 SAVE AREA
         DS    3F                      MAIN REGISTER SAVE AREA
*---------------------------------------------------------------------*
         DS    0H
         STM   R0,R13,BASES#2          STORE REGISTERS INTO "BASES2"
         LA    R15,12                  LOAD VALUE TO BE TESTED AGAINST
         CR    R0,R15                  Q. SDWA CREATED BY RTM2
         BE    MESTAER2                   N. DO NOT RETRY
         SETRP FRESDWA=YES,RC=4,RETADDR=MESTAER,DUMP=NO
         BR    R14                     RETURN
         DS    0F
         LM    R0,R13,8(R15)           RESTORE REGISTERS
         B     MESTAER2                BYPASS REGISTER SAVE AREA
         DS    14F                     REGISTER SAVE AREA
         DS    0H
*---------------------------------------------------------------------*
         MVI   RCODE,C'E'              SET RETURN CODE
         L     R1,ESTAERTN             LOAD ESTAE RETURN ADDRESS
         BR    R1                      CONTINUE
         DS    A                       RETURN ADDRESS FROM ESTAE
COMESTAL EQU   *-COMMESTA
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
                                                                SPACE 1
*---------------------------------------------------------------------*
WORKAREA DSECT
REGSAVER DS    18F                     REGISTER SAVE AREA
SAVSUBR1 DS    16F                     SUBROUTINE REGISTER SAVE AREA
SAVSUBR2 DS    2F                      SUBROUTINE REGISTER SAVE AREA
PRIMAX   DS    F                       PRIMARY AUTHORISATION INDEX
FULLWORD DS    F
LASTUCM  DS    F                       LAST UCM ENTRY
SCREENL  DS    F                       SCREEN LENGTH
TRACE    DS    F                       START ADDRESS OF GETMAIN
MESSAGEG DC    CL80' '                 MESSAGE BUFFER
USERASID DS    H                       SECONDARY ASID
PRIMASID DS    H                       PRIMARY ASID
RCODE    DC    CL1'0'                  INTERNAL RETURN CODE FLAG
FIRSTIME DC    CL1'Y'                  FIRST TIME THROUGH FLAG
RECCMD   DC    CL1'N'                  FIRST TIME THROUGH FLAG
*                hhmmsstt                                             *
VTIME    DC    D'00000000'             VARIABLE TIME INTERVAL
         ORG   VTIME
         DS    CL4
TIMEO    DS    CL2
         ORG
BTIME    DC    D'00000000'             VARIABLE TIME INTERVAL
*=====================================================================*
         DROP  R2
PROCESTA DS    0F
         LR    R2,R15                  R1 SET AS BASE
         USING PROCESTA,R2             BASE REGISTER
         LM    R11,R13,12(R15)         RESTORE REGISTERS FROM "BASES1"
         B     MOVEERR                 BYPASS R11 - R13 SAVE AREA
BASES#1  DS    3F                      MAIN REGISTER SAVE AREA
*---------------------------------------------------------------------*
MOVEERR  DS    0H
         STM   R0,R13,BASES#2          STORE REGISTERS INTO "BASES2"
*---------------------------------------------------------------------*
*                                                                     *
*        Control gets here if the an abend occured during a move      *
*        from secondary to primary. Usually caused by an address      *
*        exception error.                                             *
*                                                                     *
*---------------------------------------------------------------------*
         LA    R15,12                  LOAD VALUE TO BE TESTED AGAINST
         CR    R0,R15                  Q. SDWA CREATED BY RTM2
         BE    MESTAER2                   N. DO NOT RETRY
         SETRP FRESDWA=YES,RC=4,RETADDR=MESTAER,DUMP=NO
         BR    R14                     RETURN
MESTAER  DS    0F
         LM    R0,R13,8(R15)           RESTORE REGISTERS
         B     MESTAER2                BYPASS REGISTER SAVE AREA
BASES#2  DS    14F                     REGISTER SAVE AREA
MESTAER2 DS    0H
*---------------------------------------------------------------------*
         MVI   RCODE,C'E'              SET RETURN CODE
         L     R1,ESTAERTN             LOAD ESTAE RETURN ADDRESS
         BR    R1                      CONTINUE
ESTAERTN DS    A                       RETURN ADDRESS FROM ESTAE
***********************************************************************
                                                                SPACE 1
WTODET1  DS    0F
         WTO   '                                                       +
                                        ',                             +
               ROUTCDE=(2,12),DESC=(7),                                +
               MF=L
REPLY    DS    CL132
REPLYL   EQU   *-REPLY
MESSAGEL DS    AL2                   LENGTH OF COMMAND
         DC    AL2(0)                LENGTH OF COMMAND
SVC34AR  DS    0CL126                SVC 34 COMMAND AREA
         DS    CL126
SCREEN2  WCCDC W
         SBADC 30,2,ULY,P
         ICDC  30,3
RECALLMS DS    CL126
SCREEN1  WCCDC W
         SBADC 1,1,PLY,P
         ICDC  30,3
MOVEDATA DS    CL32760                 TRANSFER AREA
*---------------------------------------------------------------------*
WORKAREL EQU   *-WORKAREA
                                                                SPACE 1
*=====================================================================*
         CVT      DSECT=YES            CVT
         IEECUCM  ,                    UNIT CONTROL MODULE
         IHAASVT  DSECT=YES            ASVT
         IHAASCB  DSECT=YES            ASCB
         IHASDWA  DSECT=YES            SDWA
TDCM     DSECT
         IEECDCM  DEVICE=G             PAGEABLE DISPLAY CONTROL MODULE
*---------------------------------------------------------------------*
         END
