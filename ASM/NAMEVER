*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
**
**       Title:    'NAME QUALIFIER VERIFICATION FUNCTION'
**       System:   REXX Function
**       Module:   NAMEVER
**       Program:  NAMEVER
**       Function: The purpose of this program is to provide a name
**                 qualifier verification function under REXX.
**
**                 Verifies that the parameter passed satisfies the
**                 following criteria:
**                    - not greater than 8 bytes
**                    - name is alphameric and only contains the
**                      national characters (@, # or $)
**                    - 1st. character is not numeric
**
**
**                 Syntax:
**                    NAMEVER(name)
**
**                 Returned values:
**                    0  - Valid name
**                    8  - Invalid name
**                    20 - Invalid parameter (eg. length > 8 bytes or
**                         null values)
**
**                 Program return code:
**                    0  - Always set to zero.
**
**       Macros:   The following macros have been used from @MACROS
**                   - KICKOFF
**                   - RACKOFF
**
**       Notes:    Program is re-entrant.
**       Author:   ASYSTS Pty. Ltd. (A. Kara)
**       Date:     18/08/93.
*
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
*
*        COPY    @MACROS                    COMMON MACROS USED BY PROG
*
***********************************************************************
NAMEVER  KICKOFF (R12),WORKAREA,WORKAREL,AMODE=31,RMODE=ANY
*
***********************************************************************
* Get the parameter info...                                           *
***********************************************************************
         LR    R11,R1                       EFPL ADDRESS
         USING EFPL,R11                     ESTABLISH ADDRESABILITY
         L     R10,EFPLARG                  ARGUMENT TABLE
         USING ARGTABLE_ENTRY,R10           ESTABLISH ADDRESABILITY
         L     R8,EFPLEVAL                  ADDRESS OF EVALBLOCK
         L     R9,0(0,R8)                   EVALBLOCK
         USING EVALBLOCK,R9                 ESTABLISH ADDRESABILITY
***********************************************************************
* Get the NAME passed...                                              *
***********************************************************************
         L     R8,ARGTABLE_ARGSTRING_PTR    PARAMETER ADDRESS FIELD
         C     R8,=F'-1'                    Q. END OF PARMLIST ?
         BE    EXITPR20                        Y. EXIT WITH RC=20
GETNAME  DS    0H
         L     R7,ARGTABLE_ARGSTRING_LENGTH LENGTH OF VOL FIELD
         LTR   R7,R7                        Q. IS LENGTH > 0 BYTES
         BZ    EXITPR20                        N. EXIT WITH RC=20
         C     R7,=F'8'                     Q. IS LENGTH <= 8 BYTES
         BH    EXITPR20                        N. EXIT WITH RC=20
         BCTR  R7,0                         REL LENGTH FOR 'EX' TRT
         EX    R7,MVCNAME                   MOVE NAME TO WORK AREA
         EX    R7,TRTNAME                   Q. VALID NAME
         BNZ   EXITPR08                        N. GO REPORT ERROR
         CLI   NAME,C'0'                    Q. 1ST. CHAR NUMERIC
         BNL   EXITPR08                        Y. EXIT WITH ERROR
EXITPR00 DS    0H
         LA    R2,1                         SET LENGTH OF PARAMETER
         MVI   EVALBLOCK_EVDATA,C'0'        SET OK FLAG ON
         B     EXITPROG                     GO EXIT PROGRAM
EXITPR08 DS    0H
         LA    R2,1                         SET LENGTH OF PARAMETER
         MVI   EVALBLOCK_EVDATA,C'8'        SET NOT OK FLAG ON
         B     EXITPROG                     GO EXIT PROGRAM
EXITPR20 DS    0H
         LA    R2,2                         SET LENGTH OF PARAMETER
         MVC   EVALBLOCK_EVDATA(2),=C'20'   SET BAD NOT OK FLAG ON
EXITPROG DS    0H
         ST    R2,EVALBLOCK_EVLEN           STORE PARAMETER LENGTH
         RACKOFF RC=0                       EXIT WITH ZERO RETURN CODE
*=====================================================================*
***********************************************************************
* Literal pool...                                                     *
***********************************************************************
         LTORG
***********************************************************************
MVCNAME  MVC   NAME(0),0(R8)                MOVE NAME
TRTNAME  TRT   NAME(0),TRINVNAM             VALIDATE NAME
***********************************************************************
TRINVNAM DC    16C'.'                       00-0F
         DC    16C'.'                       10-1F
         DC    16C'.'                       20-2F
         DC    16C'.'                       30-3F
         DC    C' .........¢.<(+|'          40-4F
         DC    C'&&.........!',X'0',C'*);¬' 50-5F
         DC    C'-/........¦,%_>?'          60-6F
         DC    C'..........:',2X'0',C'''="' 70-7F
         DC    C'.abcdefghi......'          80-8F
         DC    C'.jklmnopqr......'          90-9F
         DC    C'.~stuvwxyz......'          A0-AF
         DC    16C'.'                       B0-BF
         DC    C'{',9X'0',C'......'         C0-CF
         DC    C'}',9X'0',C'......'         D0-DF
         DC    C'\.',8X'0',C'......'        E0-EF
         DC    10X'0',C'......'             F0-FF
***********************************************************************
WORKAREA DSECT
         DS    0D
REGSAVE$ DS    18F                          REGISTER SAVE AREA
NAME     DS    CL8
FILLER   DS    CL12
WORKAREL EQU   *-WORKAREA
***********************************************************************
* DSECTS...                                                           *
***********************************************************************
         IRXEFPL
         IRXARGTB
         IRXEVALB
*        YREGS
         END
