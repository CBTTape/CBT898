     TITLE 'MARK SELECTED ADDRESS SPACES NONSWAPPABLE'
* THIS PROGRAM WILL MARK SELECTED ADDRESS SPACES NONSWAPPABLE BASED
* ON INPUT CONTAINING THE PROGRAM NAME AND JOB NAME. ACTUALLY, IT
* SCHEDULES A LOCAL SRB TO THE TARGET ASID AND THE SRB ROUTINE ISSUES
* THE SYSEVENT TRANSWAP.
* FIRST. THE PROGRAM BLDS A TBL (AST) OF ALL ACTIVE ADR SPACES (JOBS
* ONLY). NOTING THOSE THAT ARE ALREADY MARKED NONSWAPPABLE.
* SECOND. THE PROGRAM READS THE INPUT FILE (DDN-NST) AND BLDS THE
* TBL (NST) OF CANDIDATES TO BE MARKED NONSWAPPABLE BASED ON INPUT
* CARDS WITH JOBNAMES/PROGRAM NAMES IN THE SYNTAX:
* /* NOSWAP        JOB-XXXXXXXX PGM-XXXXXXXX
*
* POSN 2           POSN 43 POSN 56
*
* NEXT. BOTH TBLS ARE SORTED BY JOB/PGM NAME AND COMPARED; THOSE IN THE
* ACTIVE ADR SP TBL (AST) THAT ARE ALSO IN THE NONSWAP TBL (NST)
* ARE FLAGGED TO BE MARKED NONSWAPPABLE. NOTE: CURRENTLY, THE PROGRAM
* NAME CHECK IS NULLIFIED BY OVERLAYING WITH BLANKS IN BOTH TBLS.
* FINALLY. THE PGM READS THE TABLE OF ACTIVE ADR SPACES (AST) AND FOR
* EACH ADR SP TO BE MARKED NONSWAP WHICH IS NOT ALREADY NONSWAP, A
* LOCAL SRB ROUTINE (NOSWAPTR) IS SCHEDULED TO THE TARGET ASID TO
* ACTUALLY ISSUE THE TRANSWAP SYSEVENT. THIS PGM WAITS. ONCE THE SRB
* ROUTINE HAS ISSUED THE SYSEVENT AND POSTED THE ECB COMPLETE, THIS
* PGM WILL CONTINUE WITH THE NEXT ENTRY UNTIL ALL ARE DONE. FOR EACH
* ADR SP MARKED NONSWAPPABLE, A MESSAGE IS WRITTEN TO THE CONSOLE.
* ANY TIME THIS PGM DETECTS SOMETHING UNEXPECTED, IT ABENDS WITH A FFF
*
* AND A MESSAGE IN THE VICINITY OF THE INTERRUPT ADR IN THE DUMP WILL
* GIVE ADD'L INFO.
*
PGMDS    DSECT               PGM WKAR
D        DS    D             DBL WORD WK AR
MYASCB   DS    F             ADR OF ASCB FOR THIS PGM
MYTCB    DS    A             ADR OF TCB (ASCBTNEW)
MYASID   DS    XL2           ADR SPACE ID FOR THIS PGM
FLG      DS    B             FLG INDICATORS
ASTSORTD EQU   X'80'         AST TBL SORTD BY SORT KEY
NSTSORTD EQU   X'40'         NST TBL SORTD BY SORT KEY
RC       DS    X             RETN CODE
ASTADR   DS    A             ADR OF INTRL ACTIVE ADRS SP TBL
ASTMAX   DS    F             MAX ENTS ALLOWED
ASTUSD   DS    F             ACTUAL ENTS USED
NSTMAX#  EQU   512
NSTADR   DS    A             ADR OF INTRL NONSWAPPABLE TABLE
NSTMAX   DS    H             MAX ENTS ALLOWED
NSTUSD   DS    H             ACTUAL ENTS USED
SA       DS    18F           SV AREA
SRBADR   DS    F             ADR OF SRB FOR SCHEDULING SYSEVENT TRANSWA
SRBWKADR DS    F             ADR OF WKAR PASSED TO SRB ROUTINE
TRNSWPAD DS    A             ADR OF TRANSWAP PGM
NST      DCB   DDNAME=NST,DSORG=PS,MACRF=GL,EODAD=BLDNST9
NSTDCBLN EQU   *-NST         LTH OF DCB
NSTOC    OPEN  (NST,(INPUT)),MF-L
NSTOCLN  EQU   *-NSTOC       LTH OF OPEN/CLOSE PARM LIST
NSWMSG1  WTO   'NSW001: XXXXXXXX MARKED NONSWAPPABLE',ROUTCDE=(2),     +
               DESC=(4),MF=L
         ORG   NSWMSG1+4+8
NSWJOBNM DS    CL8           NSW MSG 1 JOB NAME
         ORG
NSWMSG1L EQU   *-NSWMSGI
PGMLTH   EQU   *-PGMDS       LTH OF WK AR
ASTDS    DSECT INTERNAL      TBL OF ACTIVE ADDRESS SPACES
         DS    0D
ASTASID  DS    XL2           ADDRESS SPACE ID
         DS    XL2           RESVD
ASTSRTKY DS    OCL16         SORT KEY FOR TBL
ASTJOBNM DS    CL8           JOB NAME
ASTPGMNM DS    CL8           PROGRAM NAME
ASTFLG   DS    X             FLGS
ASTNSWAP EQU   X'80'         ADDRESS SPACE ALREADY NONSWAPPABLE
ASTMRKNS EQU   X'40'         ADDRESS SPACE TO BE MARKED NONSWAPPABLE
         DS    XL3           RESVD
ASTASCB  DS    A             ADR OF ASCB FOR THIS ASID
ASTOUCB  DS    A             ADR OF OUCB FOR THIS ASID
ASTLTH   EQU   *-ASTDS
NSTDS    DSECT               INTERNAL TBL BUILT FROM FILE OF NONSWAP
NSTSRTKY DS    0CL16         SORT KEY FOR TBL
NSTJOBNM DS    CL8           JOB NAME TO BE MARKED NONSWAPPABLE
NSTPGMNM DS    CL8           PROGRAM NAME TO BE MARKED NONSWAPPABLE
NSTLTH   EQU   *-NSTDS
*
*
SRBWK    DSECT               WK AREA PASSED TO SRB ROUTINE
SRBECB   DS    F             ECB TO BE POSTED BY THIS SRB ROUTINE
SRBAS    DS    F             ASCB ADR FOR TASK CALLING THE SRB ROUTINE
SRBSV    DS    18F           SAVE AREA FOR SRB ROUTINE USE
SRBWKL   EQU   *-SRBWK
         CVT   DSECT=YES
         IHAASCB DSECT=YES,LIST=YES
         IHAASVT DSECT=YES,LIST=YES
         IHASRB
SRBLEN   EQU   *-SRB
         IRAOUCB DSECT=YES
         DCBD  DSORG=DA
*#####################################################################*
NOSWAP CSECT
         STM   14,12,12(13)
         LR    12,15
         USING NOSWAP,12
         LR    9,1           SV PTR TO PARM LST (UNUSED)
         LA    0,PGMLTH
         GETMAIN R,LV=(0)
         USING PGMDS,10
         LR    10,1          SV WKAR ADR
         LR    14,10         ADR OF WKAR
         LA    15,PGMLTH     LEN OF WKAR
         SLR   1,1           SET FILL CHAR AND ZERO LEN
         MVCL  14,0          CLR WKAR
         LA    15,SA
         ST    15,8(13)
         ST    13,4(15)
         LR    13,15         ESTABLISH SV AREA
         DS    0H
         BAL   7,BLDAST      BLD ACTIVE ADDRESS SPACE TBL
         BAL   7,BLDNST      BLD NONSWAPPABLE TBL
         BAL   7,SRTAST      SORT ACTIVE ADDRESS SPACE TBL
         BAL   7,SRTNST      SORT NONSWAPPABLE TBL
         BAL   7,UPDAST      MARK ADDRESS SPACES TO SET NONSWAPPABLE
         BAL   7,SETNSWP     SET ADDRESS SPACES TO BE NONSWAPPABLE
         DS    0H
         L     1,ASTADR      FREEMAIN AST IF ALLOCATED
         LTR   1,1
         BZ    M5NS08
         LA    15,ASTLTH
         L     14,ASTMAX
         MR    14,14
         LR    0,15
         FREEMAIN R,LV=(0),A=(1)
M5NS08   DS    0H
         L     1,NSTADR      FREEMAIN NST IF ALLOCATED
         LTR   1,1
         BZ    M5NS09
         LA    0,NSTLTH
         MH    0,NSTMAX
         FREEMAIN R,LV=(0),A=(1)
M5NS09   DS    0H
         SLR   2,2
         IC    2,RC          SAVE RC
         LR    1,10          FREEMAIN PGM WKAR
         LA    0,PGMLTH
         FREEMAIN R,LV=(0),A=(2)
         LR    15,2          SET RETN CODE
         L     13,4(13)
         L     14,12(13)     RETN ADR
         LM    0,12,20(13)   RESTORE REGS
         BR    14            RETN EXIT
BLDAST   DS    0H            BLD INTERNAL ACTIVE ADR SP TBL
*
* THIS TBL WILL CONTAIN ONE ENTRY FOR EACH ACTIVE ADDRESS SPACE.
* THE ENTRY WILL CONTAIN THE ASID.  THE PROGRAM NAME, THE JOB NAME,
* THE ASCB ADRAND WHETHER THE ADDRESS SPACE IS CURRENTLY NONSWAPPABLE.
         L     4,CVTPTR      ADR CVT
         USING CVTMAP,4
         L     1,0(4)
         L     1,12(1)       CURR ASCB ADR
         ST    1,MYASCB      SV FOR LATER PASSING TO SRB ROUTINE
         MVC   MYASID,ASCBASID-ASCB(1) ALSO ASID
         MVC   MYTCB,ASCBTNEW-ASCB(L) AND TCB
         L     4,CVTASVT     ADR ASVT
         DROP  4
         USING ASVT,4
         CLC   ASVTASVT,=C'ASVT' THIS IS THE ASVT?
         BE    BLDAST01
         ABEND 4095,DUMP
         DC    C'***** ASVT FAILED CONTROL BLK CK--LOGIC ERR'
BLDAST01 DS    0H
         L     3,ASVTMAXU    MAX NBR OF ADR SP
         LTR   3,3           AT LEAST ONE ADR SP?
         BNZ   BLDAST02      YES, CONTINUE
         ABEND 4095,DUMP
         DC    C'***** ASVT HAS NO ENTRIES--LOGIC ERR'
BLDAST02 DS    0H            GET STORAGE FOR AST TBL
         LA    4,ASVTENTY    ADR OF 1ST ENT IN ASVT
         DROP  4
         LR    1,3           MAX # ADR SP * LEN OF EA AST TBL ENT
         ST    1,ASTMAX
         LA    2,ASTLTH
         MR    0,2
         LR    0,1           AMT OF STORAGE TO GETMAIN
         GETMAIN R,LV=(0)
         ST    1,ASTADR      SV ADR OF INTERNAL ADR SP TBL
         XC    ASTUSD,ASTUSD CLR ENTS USED
         L     6,ASTUSD      INIT CTR FOR ENTS USED
         LR    5,1           ADR 1ST ENT IN AST TBL
         USING ASTDS,5
BLDAST03 DS    0H
         TM    0(4),ASVTAVAL ASID AVAILABLE?
         BO    BLDAST08      YES, GO GET NEXT ONE
         L     2,0(4)        NO, PICK UP ASCB ADR
         USING ASCB,2
         CLC   ASCBASCB,=C'ASCB' THIS IS AN ASCB?
         BE    BLDAST04
         ABEND 4095,DUMP
         DC    C'***** ASCB FAILED CONTROL BLK CK--LOGIC ERR'
BLDAST04 DS    0H
         ICM   1,B'1111',ASCBJBNI PTR TO JOB NAME FOR INITIATED PGMS
         BZ    BLDAST08      IF ZERO, THEN BYPASS THIS ENTRY
         MVC   ASTJOBNM,0(1) ELSE SAVE IN ADR SP TBL
         MVC   ASTASID,ASCBASID ALSO SAVE ASID
         ST    2,ASTASCB     ALSO SAVE ASCB ADR
         MVI   ASTFLG,0      ALSO CLR FLG FOR THIS ENT
         L     15,BLDAST31
         BSM   0,15          SET AMODE31
BLDAST31 DC    A(BLDAST3A+X'80000000')
BLDAST3A DS    0H
         L     1,ASCBOUCB    GET ADR OF OUCB
         USING OUCB,1
         CLC   OUCBNAME,=C'OUCB' THIS IS AN OUCB?
         BE    BLDAST05
         ABEND 4095,DUMP
         DC    C'***** OUCB FAILED CONTROL BLK CK--LOGIC ERR'
BLDAST05 DS    0H
         TM    OUCBSFL,OUCBNSW NON-SWAPPABLE STATUS ALREADY?
         BNO   BLDAST06
         OI    ASTFLG,ASTNSWAP YES, SET FLG IN AST TBL
         DROP  1
BLDAST06 DS    0H
         ST    1,ASTOUCB     SV OUCB ADR FOR LATER
         LA    15,BLDAST24
         BSM   0,15          SET AMODE24
BLDAST24 DS    0H
*       PROGRAM NAME    NOT CURRENTLY EXTRACTED
         MVC   ASTPGMNM,=CL8' ' SET TO BLANKS FOR NOW
         DROP  2
BLDAST07 DS    0H            NEXT AST ENT
         AH    6,=H'1'       INCR AST ENTS USED
         LA    0,ASTLTH
         AR    5,0           INCR TO NXT AST ENT
BLDAST08 DS    0H
         LA    4,L'ASVTENTY(4) INCR TO NXT ASID
         BCT   3,BLDAST03
         ST    6,ASTUSD      SV # ENTS USED
         BR    7
         DROP  5
BLDNST   DS    0H            BLD NONSWAPPABLE TBL
*
*THIS TBL WILL CONTAIN ONE ENTRY FOR EACH INPUT RECORD CONTAINING
*THE CHARACTERS '/* NOSWAP' IN POSN 2, 'JOB-' IN POSN 43 AND 'PGM-' IN
*POSN 56.  THE 8 CHAR FOLLOWING JOB- AND PGM- WILL BE INSERTED INTO
*THE NST TBL TO INDICATE THOSE JOBS/PGMS DESIRED TO BE NONSWAPPABLE,
         MVC   NST(NSTDCBLN),NSTDCB INIT DCB
         MVC   NSTOC(NSTOCLN),NSTOCLST AND OPN/CLOSE LIST
         LA    4,NST         ADR DCB
         LA    1,NSTOC       ADR DATA MGMT OPEN LIST
         OPEN  ((4),INPUT),MF=(E,(L))
         TM    DCBOFLGS-IHADCB(4),X'10' OPEN OK?
         BZ    BLDNST8       NO, ERR
         LA    1,NSTMAX#     MAX # ENTS * LEN OF EA ENT
         STH   1,NSTMAX
         LA    2,NSTLTH
         MR    0,2
         LR    0,1           AMT OF STORAGE TO GETMAIN
         GETMAIN R,LV=(0)
         ST    1,NSTADR      SV ADR OF EXCEPT TBL
         XC    NSTUSD,NSTUSD
         LR    2,1           ADR 1ST ENT IN TBL
         LH    3,NSTUSD      NBR OF ENTS USED IN TBL
         USING NSTDS,2
BLDNST1  DS    0H
         GET   (4)
         CLC   1(9,1),=C'/* NOSWAP' BYPASS IF NOT SPECIAL INPUT RCD
         BNE   BLDNST1
         CLC   42(4,1),=C'JOB=' BYPASS IF NOT SPECIAL INPUT RCD
         BNE   BLDNST1
         CLC   55(4,1),=C'PGM=' BYPASS IF NOT SPECIAL INPUT RCD
         BNE   BLDNSTI
         CH    3,NSTMAX      ROOM IN TBL?
         BNL   BLDNST7       NO, ERR
         MVC   NSTJOBNM,46(1) SV JOB/PGM NAME TO MARK NONSWAPPABLE
         MVC   NSTPGMNM,59(1) SV JOB/PGM NAME TO MARK NONSWAPPABLE
         MVC   NSTPGMNM,=CL8' ' BLANK OUT FOR NOW
         AH    3,=H'1'       INCR ENTS USED
         LA    0,NSTLTH      INCR TO NXT ENT
         AR    2,0
         B     BLDNST1
BLDNST7  DS    0H            NO MORE      ROOM IN TBL
         ABEND 4095,DUMP
         DC    C'***** NST TOO SMALL ... INCR NSTMAX#'
BLDNST8  DS    0H            OPEN FOR EXCEPTION DS FAILED
         ABEND 4095,DUMP
         DC    C'***** NST DD STMT MISSING'
BLDNST9  DS    0H            END OF FILE ENCOUNTERED
         STH   3,NSTUSD      SV ENTS USED
         LA    1,NSTOC       ADR DATA MGMT OPEN/CLOSE LIST
         CLOSE ((4)),MF=(E,(1))
         BR    7
         DROP  2
NSTDCB   DCB   DDNAME=NST,DSORG=PS,MACRF=GL,EODAD=BLDNST9
NSTOCLST OPEN  (NSTDCB,(INPUT)),MF=L
SRTAST   DS    0H            SORT INTRL ASID TBL BY JOB NAME/PGMNAME
*
*THIS SORT ROUTINE SCANS THE TBL TO BE SORTED, MOVING THE LOWEST
*ENTRY TO THE END OF THE TBL; SCAN OF TBL IS REPEATED, MOVING THE
*NEXT LOWEST ENTRY TO THE END (-1),ETC. UNTIL ENTRIES ARE IN
*SEQUENCE.
*
* R0      MAX NUMBER OF TIMES TO SCAN TBL TO BE SORTED;
*         INIT TO NUMBER ENTS AND DECR AT COMPLETION OF EA SCAN
*         NOTE: IF SEQUENCING IS ACHIEVED PRIOR TO SCANNING MAX TIMES,
*         THEN REMAINING SCANS ARE BYPASSED.
* RI      INDEX TO CURRENT ENTRY IN TBL
* R14     POINTER TO CURRENT ENTRY IN TBL
* R15     POINTER TO NEXT ENTRY IN TBL
*
         L     2,ASTADR      ADR OF TBL TO BE SORTED
         L     0,ASTUSD      NUMBER OF ENTS TO BE SORTED
         NI    FLG,255-ASTSORTD SET SORTED BY JOBNAME INDICATOR OFF
ASTTEST  DS    0H
         LTR   0,0           MAX NUMBER SCANS DONE?
         BZ    ASTDONE       YES. WELL TBL BETTER BE SORTED
         TM    FLG,ASTSORTD  ANY ENTS EXCHANGED DURING PREV SCAN?
         BO    ASTDONE       NO, WELL TBL IS SORTED
ASTINIT  DS    0H            OTHERWISE, INITIALIZE FOR A SCAN OF TBL
         LA    1,1           INDEX TO CURRENT ENT--SET TO 1
         LR    14,2          PTR TO CURRENT ENT IN TBL--SET TO 1ST ENT
         LA    15,ASTLTH(14) PTR TO NEXT ENT IN TBL--SET TO 2ND
         OI    FLG,ASTSORTD  ASSUME ENTS ALRDY IN SEQUENCE BY DEVICE
ASTSCAN  DS    0H            NOW, SCAN    TBL AND SEE IF IN SEQUENCE
         CLR   0,1           ALL ENTS EXAMINED?
         BE    ASTNEXT       YES.    CURRENT SCAN DONE
*              OTHERWISE, COMPARE KEYS OF CURRENT/NEXT ENTS
         CLC   ASTSRTKY-ASTDS(L'ASTSRTKY,14),ASTSRTKY-ASTDS(15)
         BL    ASTINCR
         XC    0(ASTLTH,14),0(15) IF CURRENT ENT WAS LOWER OR EQ.
         XC    0(ASTLTH,15),0(14) THEN SWITCH CURR/NEXT ENTS
         XC    0(ASTLTH,14),0(15) AND NOTE THAT
         NI    FLG,255-ASTSORTD ASSUMP WRONG-TBL WAS NOT IN SEQ
ASTINCR  DS    0H
         LA    1,1(1)        INCR CURRENT INDEX
         LA    14.ASTLTH(14) INCR CURRENT ENT PTR
         LA    15,ASTLTH(15) INCR NEXT ENT PTR
         B     ASTSCAN       CONTINUE CURRENT SCAN OF TBL
ASTNEXT  DS    0H            CURRENT SCAN DONE SO DECR CTR OF NBR OF
         BCT   0,ASTTEST     SCANS AND IF MAX NOT DONE, GO SCAN AGAIN
ASTDONE  DS    0H            WELL, ENTS ARE SORTED BY JOBNAME/PGMNAME
         BR    7             BACK TO WHERE WE CAME FROM
SRTNST   DS    0H            SORT NONSWAPPABLE TBL BY JOBNAME/PGMNAME
*
* THIS SORT ROUTINE SCANS THE TBL TO BE SORTED, MOVING THE LOWEST
* ENTRY TO THE END OF THE TBL: SCAN OF TBL IS REPEATED, MOVING THE
* NEXT LOWEST ENTRY TO THE END (-1), ETC. UNTIL ENTRIES ARE IN
* SEQUENCE.
*
* R0      MAX NUMBER OF TIMES TO SCAN TBL TO BE SORTED:
*         INIT TO NUMBER ENTS AND DECR AT COMPLETION OF EA SCAN
*         NOTE: IF SEQUENCING IS ACHIEVED PRIOR TO SCANNING MAX TIMES,
*         THEN REMAINING SCANS ARE BYPASSED.
* R1      INDEX TO CURRENT ENTRY IN TBL
* R14     POINTER TO CURRENT ENTRY IN TBL
* R15     POINTER TO NEXT ENTRY IN TBL
*
         L     2,NSTADR      ADR OF TBL TO BE SORTED
         LH    0,NSTUSD      NUMBER OF ENTS TO BE SORTED
         NI    FLG,255-NSTSORTD SET SORTED INDICATOR OFF
NSTTEST  DS    0H
         LTR   0,0           MAX NUMBER SCANS DONE?
         BZ    NSTDONE       YES. WELL TBL BETTER BE SORTED
         TM    FLG,NSTSORTD  ANY ENTS EXCHANGED DURING PREV SCAN?
         BO    NSTDONE       NO, WELL TBL IS SORTED
NSTINIT  DS    0H            OTHERWISE. INITIALIZE FOR A SCAN OF TBL
         LA    1,1           INDEX TO CURRENT ENT--SET TO 1
         LR    14,2          PTR TO CURRENT ENT IN TBL--SET TO 1ST ENT
         LA    15,NSTLTH(14) PTR TO NEXT ENT IN TBL--SET TO 2ND
         OI    FLG,NSTSORTD  ASSUME ENTS ALRDY IN SEQUENCE BY JOB/PGM
NSTSCAN  DS    0H            NOW. SCAN TBL AND SEE IF IN SEQUENCE
         CLR   0,1           ALL ENTS EXAMINED?
         BE    NSTNEXT       YES. CURRENT SCAN DONE
*              OTHERWISE, COMPARE KEYS OF CURRENT/NEXT ENTS
         CLC   NSTSRTKY-NSTDS(L'NSTSRTKY,14),NSTSRTKY-NSTDS(15)
         BL    NSTINCR
         XC    0(NSTLTH.14),0(15) IF CURRENT ENT WAS LOWER OR EQ.
         XC    0(NSTLTH.15),0(14) THEN SWITCH CURR/NEXT ENTS
         XC    0(NSTLTH,14),0(15) AND NOTE THAT
         NI    FLG,255-NSTSORTD ASSUMP WRONG-TBL WAS NOT IN SEQ
NSTINCR  DS    0H
         LA    1,1(1)        INCR CURRENT INDEX
         LA    14,NSTLTH(14) INCR CURRENT ENT PTR
         LA    15,NSTLTH(15) INCR NEXT ENT PTR
         B     NSTSCAN       CONTINUE        CURRENT SCAN OF TBL
NSTNEXT  DS    0H            CURRENT SCAN IS DONE SO DECR CTR OF NBR OF
         BCT   0,NSTTEST     SCANS AND IF MAX NOT DONE, GO SCAN AGAIN
NSTDONE  DS    0H            WELL, ENTS ARE SORTED BY JOB NAME/PGMNAME
         BR    7             BACK TO WHERE WE CAME FROM
UPDAST   DS    0H            UPDATE AST TBL TO NOTE WHICH ASIDS TO BE
*                            NONSWAP
*
* FOR EA ENT IN THE NONSWAP TBL (NST).  THIS ROUTINE WILL SET THE
* ASTFLG(MRKNS)TO INDICATE THAT THE ASID IS TO BE MARKED NONSWAPPABLE.
* THE FLG IS SET BY COMPARING THE TBL OF JOBS/PGMS TO BE MARKED NONSWAP
* (NST) WITH THE TBL OF ACTIVE ADR SP (AST); BOTH TBLS ARE SEQUENCED BY
* JOB/PGMNAME;ENTS IN THE NST BUT NOT IN THE AST ARE IGNORED.
         L     2,ASTUSD      GET # OF AST ENTS USED AND
         L     4,ASTADR      AND ADR OF AST TBL
         USING ASTDS,4
         LH    3,NSTUSD      GET # OF NST ENTS USED AND
         L     5,NSTADR      AND ADR OF NST TBL
         USING NSTDS,5
UPDAST1  DS    0H
         LTR   2,2           IF END OF AST OR
         BZ    UPDAST9
         LTR   3,3           END OF NST
         BZ    UPDAST9       THEN EXIT
UPDAST2  DS    0H
         CLC   ASTJOBNM(L'ASTJOBNM+L'ASTPGMNM),NSTJOBNM COMPARE ENTS
         BH    UPDAST3
         BL    UPDAST4
         OI    ASTFLG.ASTMRKNS SET MARK NONSWAP FLG IN AST
         LA    4,ASTLTH(4)   INCR BOTH TBLS TO NXT ENT
         BCTR  2,0           AND DECR BOTH CTS OF # OF ENTS USED
         LA    5,NSTLTH(5)
         BCTR  3,0
         B     UPDAST1
UPDAST3  DS    0H            IF AST JOBNAME GT NST
         BCTR  3,0           THEN DECR NST ENTS USED AND
         LA    5,NSTLTH(5)   INCR TO NXT NST ENT
         B     UPDAST1
UPDAST4  DS    0H            IF NST JOB NAME GT AST
         BCTR  2,0           THEN DECR AST ENTS USED AND
         LA    4,ASTLTH(4)   INCR TO NXT AST ENT
         B     UPDAST1
UPDAST9  DS    0H
         BR    7
         DROP  4,5
SETNSWP  DS    0H            SET SELECTED ADR SPACES NONSWAPPABLE
*
* FOR EA ENT IN THE ACTIVE ADR SP TBL (AST) THAT HAS BEEN FLAGGED
* TO BE MARKED NONSWAPPABLE (ASTMRKNS) AND IS NOT ALREADY NONSWAPPABLE
* (ASTNSWAP), SCHEDULE A LOCAL SRB ROUTINE TO THE TARGET ASID TO
* ISSUE A SYSEVENT TRANSWAP.
*
         GETMAIN RC,LV=SRBLEN,SP=245 GET STORAGE FOR SRB IN ANY CASE
         LTR   15,15
         BZ    GETSRB01
         ABEND 4095,DUMP
         DCC'****** SRB GETMAIN FAILED'
GETSRB01 DS    0H
         ST    1,SRBADR      SV SRB ADR IN PGM WKAR
         GETMAIN RC,LV=SRBWKL,SP=245 STOR FOR SRB WKAREA IN ANY CASE
         LTR   15,15
         BZ    GETSRB02
         ABEND 4095,DUMP
         DC    C'****** SRB WKAREA GETMAIN FAILED'
GETSRB02 DS    0H
         ST    1,SRBWKADR    SV SRB WKAR ADR IN PGM WKAR
         MODESET KEY=ZERO,MODE=SUP
         LA    2,TRNSWPAD    LOAD THE SRB ROUTINE INTO COMMON STORAGE
         LOAD  EP=NOSWAPTR,GLOBAL=YES,EOM=YES,LOADPT=(2)
         L     5,ASTUSD      GET # OF AST ENTS USED AND
         L     4,ASTADR      AND ADR OF AST TBL
         USING ASTDS,4
SETNSWP1 DS    0H
         LTR   5,5           IF END OF AST
         BZ    SETNSWP9      THEN EXIT
SETNSWP2 DS    0H
         TM    ASTFLG,ASTMRKNS THIS ASID TO BE NONSWAPPABLE?
         BNO   SETNSWP8      NO,     INCR TO NEXT ONE
         TM    ASTFLG,ASTNSWAP THIS ASID ALREADY NONSWAPPABLE?
         BO    SETNSWP8      YES,     INCR TO NEXT ONE
BLDSRB   DS    0H            MUST SCHEDULE AN SRB SINCE NOT OUR ASID
         L     2,SRBADR      SRB ADR IN PGM WKAR
         XC    0(SRBLEN,2),0(2) ZERO SRB
         USING SRB,2
         L     3,SRBWKADR    SRB WKAR ADR IN PGM WKAR
         XC    0(SRBWKL,3),0(3) ZERO SRB WKAR (ECB + MY ASCB + SV AREA)
         USING SRBWK,3
         MVC   SRBAS,MYASCB  PASS ASCB OF THIS PGM TO SRB ROUTINE
         MVC   SRBID,=CL4'SRB' BLD SRB CONTROL BLK--SET NAME
         MVC   SRBASCB,ASTASCB SET ASCB ADDRESS
         MVC   SRBPASID,MYASID SET ADDRESS SPACE ID FOR ASSOC TASK
         MVC   SRBPTCB,MYTCB SET TCB ADDRESS FOR ASSOC TASK
         L     1,TRNSWPAD    GET ADDRESS OF SRB ROUTINE
         ST    1,SRBEP       SAVE ENTRY POINT ADDRESS
         A     1,=F'14'      PT TO ABEND FOR THE CLEAN UP ROUTINE
         ST    1,SRBRMTR     SET CLEAN UP ROUTINE ADDRESS
         LR    1,3           POINT TO SRB WKAR
         ST    1,SRBPARM     SAVE PARM FOR SRB
SCHEDSRB SCHEDULE SRB=(2),SCOPE=LOCAL SEND SRB TO REQUESTED ASID
         WAIT  1,ECB=SRBECB  WAIT FOR ANSWER
         MVC   NSWMSG1(NSWMSGLL),NSWMSGLC INIT WTO AREA FOR MSG I
         MVC   NSWJOBNM,ASTJOBNM
         LA    1,NSWMSGL     ISSUE MSG SAYING JOB NSW
         WTO   MF=(E,(1))
         DROP  2,3
SETNSWP8 DS    0H            INCR TO NEXT ENT IN AST
         BCTR  5,0           THEN DECR AST ENTS USED AND
         LA    4,ASTLTH(4)   INCR TO NXT AST ENT
         B     SETNSWP1
SETNSWP9 DS    0H
         DELETE EP=NOSWAPTR
         MODESET KEY=NZERO,MODE=PROB
         L     2,SRBADR      SRB ADR TO FREE
         FREEMAIN RU,LV=SRBLEN,SP=245,A=(2) FREE SRB STORAGE
         L     3,SRBWKADR    SRB WKAR ADR TO FREE
         FREEMAIN RU,LV=SRBWKL,SP=245,A=(3) FREE SRB WKAR STORAGE
         BR    7
         DROP  4
NSWMSGIC WTO   'NSW001: XXXXXXXX MARKED NONSWAPPABLE',ROUTCDE-(2),     +
               DESC-(4),MF-L
         END   NOSWAP
