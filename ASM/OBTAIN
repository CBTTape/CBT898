***********************************************************************
*                                                                     *
*    Title:    OBTAIN Format 1 or 4 DSCB                              *
*    System:   REXX Function                                          *
*    Module:   OBTAIN                                                 *
*    Program:  OBTAIN                                                 *
*    Function: The purpose of this program is return a Format1 or     *
*              Format4 DSCB to a REXX exec from data returned by      *
*              the IBM OBTAIN macro.                                  *
*                                                                     *
*              Verifies that the parameter passed satisfies the       *
*              following criteria:                                    *
*                 - volser is 6 bytes                                 *
*                                                                     *
*                                                                     *
*              Syntax:                                                *
*                 OBTAIN(volser{,Dsname})                             *
*                 Without 'dsname', format 4 is returned, while       *
*                 with 'dsname', format 1 is returned.                *
*                                                                     *
*                 eg.                                                 *
*                   Format4_Dscb = OBTAIN(volser)                     *
*                   Format1_Dscb = OBTAIN(volser,dsname)              *
*                                                                     *
*              Returned values:                                       *
*                 Format 1 DSCB (in HEX)                              *
*                 Format 4 DSCB (in HEX)                              *
*                 Literal 'ERROR' if an error is found                *
*                                                                     *
*              Program return code:                                   *
*                 0  - Always set to zero.                            *
*                                                                     *
*              Reserved register:                                     *
*                R5  - 2nd. parameter length (dual parameter ident)   *
*                R9  - EVALblock base                                 *
*                R10 - ARG list base                                  *
*                R11 - EFPL base                                      *
*                R12 - Base                                           *
*                R13 - Register save area                             *
*                                                                     *
*    Macros:   The following IBM macros have been used                *
*                - SAVE                                               *
*                - OBTAIN                                             *
*                                                                     *
*    Notes:    Program is not re-entrant                              *
*              AMODE 31, RMODE any.                                   *
*              (Refer System Programming Reference : SC26-4567-2)     *
*    Authors:  Thunderbird Computing Aust P/L                         *
*              (Maurice Clark & Alex Kara)                            *
*    Date:     18th August 1993                                       *
*                                                                     *
***********************************************************************
OBTAIN   CSECT                              *| Identify CSECT
OBTAIN   AMODE 31                           *| Set the Amode
OBTAIN   RMODE ANY                          *| Set the Rmode
         SAVE  (14,12),,'OBTAIN.&SYSDATE'   *| Save Registers
         BASR  R12,0                        *| Load Base Register
         USING *,R12                        *| Addressibilty
         LA    R2,SAVE                      *| My savearea
         ST    R13,4(R2)                    *| Callers savearea addr
         ST    R2,8(R13)                    *| My savearea addr
         LR    R13,R2                       *| My savearea
***********************************************************************
* Get the parameter info...                                           *
***********************************************************************
PARMS    LR    R11,R1                       *| Load Parm info
         USING EFPL,R11                     *| Address the EFPL
         L     R10,EFPLARG                  *| Pointer to ARG List
         USING ARGTABLE_ENTRY,R10           *| Address the ARG List
         L     R8,EFPLEVAL                  *| Pointer to Evalblock
         L     R9,0(0,R8)                   *| Evalblock
         USING EVALBLOCK,R9                 *| Address the Evalblock
***********************************************************************
* Process the Parameter list....                                      *
***********************************************************************
START    DS    0H                           *|
         XR    R5,R5                        *| Initialize R5
         CLC   ARGTABLE_ARGSTRING_PTR,=X'FFFFFFFF'
         BE    ERROR                        *| Check parm validity
         L     R8,ARGTABLE_ARGSTRING_PTR    *| Pointer to Volser
         L     R7,ARGTABLE_ARGSTRING_LENGTH *| Length of Volser
         LA    R10,8(,R10)                  *| Increase R10 by 8 bytes
         CLC   ARGTABLE_ARGSTRING_PTR,=X'FFFFFFFF'
         BE    MVCVOL                       *| Check parm validity
         L     R6,ARGTABLE_ARGSTRING_PTR    *| Pointer to Dsname
         L     R5,ARGTABLE_ARGSTRING_LENGTH *| Length of Dsname
         B     MVCVOL                       *| Branch to move
MVCVOL   C     R7,=F'6'                     *| Is Volser equal 6 bytes
         BNE   ERROR                        *| No, then Error
         MVC   VOLSER,0(R8)                 *| Move Volser to Volser
         LA    R4,140                       *| Length required
         ST    R4,EVALBLOCK_EVLEN           *| Actual length of data
         LTR   R5,R5                        *| Volser only Passed
         BZ    OBTAINM                      *| Get FORMATX DSCB
         MVC   DSN(44),=44C' '              *| Move in spaces
         BCTR  R5,0                         *| Decrement for EX MVC
         EX    R5,MVCDSN                    *| Move in Dsname
***********************************************************************
* Issue the OBTAIN Macro...                                           *
***********************************************************************
OBTAINM  OBTAIN FORMATX                     *| Issue the Obtain Macro
         LTR   R15,R15                      *| Successful ?
         BNZ   ERROR                        *| No, Branch to Error
         MVC   EVALBLOCK_EVDATA(140),DSCBAREA  Move in Fmt4 or Fmt1
         LA    R15,0                        *| Reset RC to zero
         B     EXIT                         *| Branch to Exit
***********************************************************************
* Error Processing...                                                 *
***********************************************************************
ERROR    DS    0H                           *|
         LA    R4,5                         *| Length required
         ST    R4,EVALBLOCK_EVLEN           *| Actual length of data
         MVC   EVALBLOCK_EVDATA(5),=C'ERROR'   Move in error message
         B     EXIT                         *| Branch to Exit
***********************************************************************
* Return to caller...                                                 *
***********************************************************************
EXIT     DS    0H
         L     R13,SAVE+4                   *| Restore
         L     R14,12(,R13)                 *|   Callers
         LM    R1,R12,24(R13)               *|     Registers
         XR    R15,R15                      *|       and return
         BSM   R0,R14                       *|          with RC=0.
***********************************************************************
* Executed Command...                                                 *
***********************************************************************
MVCDSN   MVC   DSN(0),0(R6)                 *| Executed Command
***********************************************************************
* Register Savearea and Workarea...                                   *
***********************************************************************
SAVE     DS    18F                          *| Savearea Storage
FORMATX  CAMLST SEARCH,DSN,VOLSER,DSCBAREA  *| Parms for Obtain Macro
DSN      DC    44X'04'                      *| Dsname or X'04's
VOLSER   DS    CL6                          *| Volume Serial
DSCBAREA DS    CL140                        *| Returned data
***********************************************************************
* Literal pool...                                                     *
***********************************************************************
         LTORG                              *| Literal Org
         IRXEFPL                            *| Ext Function Parm List
         IRXARGTB                           *| Argument Table
         IRXEVALB                           *| Evaluation Block
         YREGS                              *| Register Equate
         END
