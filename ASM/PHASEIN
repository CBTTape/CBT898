*
**       Title:    CICS CEMT PHASEIN command
**       Module:   PHASEIN
**       Program:  PHASEIN
**       Function: Issue a modify CICS operator command to PHASEIN
**                 a new copy of a program.
**
**                 Data may be passed either as a parameter or sysin
**                 via a SYSIN DD card for multiple new copies.
**                 The PARM= value is tested for first.
**
**                 Format of the data is:
**                    REGION,PROGRAM
**                 where:        If long wait periods are required,
**                    REGION  - is a valid CICS region name
**                    ,       - seperator (may use a blank)
**                    PROGRAM - program name
**                 Naming standards are not checked for. Only checks
**                 that region and program names ale 8 bytes or less.
**                 Do not use embedded blanks other than a seperator.
**
**                 Return codes:
**                    0 - Normal completion
**                    8 - Program not authorised
**
**       Note:     Program must be authorised using link-edit parm of:
**                      'SETCODE AC(1)'
**                 Link-edit into an APF authorised dataset.
**                 Link-edit in AMODE=24 because of file I/O.
**       Author:   A. Kara - ASYSTS P/L(With inspiration from R. Hann).
*
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
*        PRINT OFF
         COPY  @MACROS              MISCELLANEOUS MACROS
*        PRINT ON
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
PHASEIN  KICKOFF (R11,R12),AMODE=24,RMODE=24
         LR    R7,R1                ADDRESS OF PARAMETER
         TESTAUTH ,                 TEST AUTHORISATION
         LTR   R15,R15              Q. AUTHORISED
         BNZ   EXITRC08                N. EXIT RETURN CODE 08
INIT#1   DS    0H
         L     R7,0(R7)             LOAD ADDRESS OR PARAMETER
         LH    R9,0(R7)             LOAD LENGTH OF PARAMETER
         LTR   R9,R9                Q. IS PARAMETER LENGTH ZERO
         BNZ   OKCONT#1                N. GO PROCESS PARAMETER
         BAL   R14,NOPARAM          GO AND PROCESS 'SYSIN'
         B     EXITRC00             EXIT PROGRAM
OKCONT#1 DS    0H
         LA    R7,2(R7)             POINT PAST PARAMETER LENGTH
         BAL   R14,SENDCMD          GO AND SEND COMMAND
EXITRC00 RACKOFF RC=0               EXIT PROGRAM RETURN CODE '0'
EXITRC08 RACKOFF RC=8               EXIT PROGRAM RETURN CODE '8'
                                                                SPACE 1
*=====================================================================*
* No parameter passed. Assume using //SYSIN DD statement              *
*---------------------------------------------------------------------*
NOPARAM  DS    0H
         STM   R0,R14,SAVSUBR1      STORE REGISTERS
         LA    R1,BUFFER            LOAD BUFFER ADDRESS
         ST    R1,BUFFER            STORE BUFFER ADDRESS
         MVC   HERE1(3),BUFFER+1    MOVE ADDRESS
         STCM  R1,B'0111',HERE1     STORE BUFFER ADDRESS IN 'EXLST'
         OPEN  (SYSIN,(INPUT))      OPEN SYSIN FILE
         RDJFCB (SYSIN)             GET FILE INFO ON PRINTER FILE
         LTR   R15,R15              Q. RETURN CODE 0
         BNZ   CLOSFILE                N. GO TO ERROR IN DCB INFO
                                                                SPACE 1
GETRECRD DS    0H
         GET   SYSIN,BUFFER         GET LINE OF DATA
         CLC   BUFFER(80),=CL80' '  Q. DATA BLANK LINE
         BE    GETRECRD                Y. GET NEXT LINE OF DATA
         LA    R7,BUFFER            ADDRESS OF PARAMETER
         LA    R9,80                Max parameter length
         BAL   R14,SENDCMD          GO AND SEND COMMAND
         B     GETRECRD             GET NEXT LINE OF DATA
                                                                SPACE 1
CLOSFILE DS    0H
         CLOSE SYSIN                CLOSE PARAMETER FILE
DCBABEX1 DS    0H
         LM    R0,R14,SAVSUBR1      RESTORE REGISTERS
         BR    R14                  RETURN TO CALLER ROUTINE
                                                                SPACE 1
*=====================================================================*
*  Called subroutines                                                 *
*---------------------------------------------------------------------*
*  Send the command using SVC 34                                      *
*---------------------------------------------------------------------*
SENDCMD  DS    0H
         STM   R0,R14,SAVSUBR2      STORE REGISTERS
LOOP#200 DS    0H
         CLI   0(R7),C' '           Q. Leading space found
         BNE   LOOP#20E                N. End of loop
         LA    R7,1(R7)             Point to next character
         BCT   R9,LOOP#200          Loop till no more leading spaces
LOOP#20E DS    0H
         LR    R8,R7                Point to start of field
         TRT   0(9,R8),STARTAB      Q. COMMA/SPACE in input
         BZ    PARERR                  N. Tell of error
         LA    R7,1(R1)             Point to program (past seperator)
         SR    R1,R8                Get length of region name
         CH    R1,=H'8'             Region name > 8 bytes
         BH    PARERR                  Y. Tell of error
         SR    R9,R1                Decrease parameter by region length
         BCTR  R9,0                 -1 for seperator
         BCTR  R1,0                 Prepare for EX command
MOVEREGN MVC   REGION(*-*),0(R8)    Move region
         EX    R1,MOVEREGN          Execute move region
         LA    R8,REGION+1          Load strat of region plus 1
         AR    R8,R1                Add length of move (+1 above
*                                   compensates for EX length)
         MVC   0(5,R8),=C',CEMT'    Set command
         LR    R8,R7                Point to start of field
         TRT   0(9,R8),STARTAB      Q. COMMA/SPACE in input
         BNZ   MOVEPROG                Y. Continue processing
         CH    R9,=H'8'             Progname > 8 bytes
         BH    PARERR                  Y. Tell of error
         LR    R1,R9                Set length of program
         B     CONT#200             Bypass start subtraction
MOVEPROG MVC   PROGRAM(*-*),0(R8)   Move program
         SR    R1,R8                Get length of region name
CONT#200 DS    0H
         BCTR  R1,0                 Prepare for EX command
         EX    R1,MOVEPROG          Execute move program
         MODESET KEY=ZERO,MODE=SUP  SUPERVISOR STATE FOR SVC CALL
         LA    R1,MESSAGEL          SET REGISTERS
         XR    R0,R0                     FOR SVC
         SVC   34                   ISSUE COMMAND
         MODESET KEY=NZERO,MODE=PROB RETURN TO PROBLEM STATE
         B     ENDSEND              Do not Issue cmd
PARERR   WTO   'Invalid input data format. Must be ''REGION(8),PROGRAM(+
               8)''.',                                                 +
               ROUTCDE=(11),DESC=(7)
ENDSEND  DS    0H
         LM    R0,R14,SAVSUBR2      RESTORE REGISTERS
         BR    R14                  RETURN TO CALLER ROUTINE
                                                                SPACE 1
                                                                SPACE 1
*=====================================================================*
*---------------------------------------------------------------------*
         LTORG
*---------------------------------------------------------------------*
SAVSUBR1 DS    16F                  SUBROUTINE REGISTER SAVE AREA
SAVSUBR2 DS    16F                  SUBROUTINE REGISTER SAVE AREA
*
MESSAGEL DC    AL2(MESSL)           LENGTH OF COMMAND
         DC    AL2(0)               Length of command filler
MESSAGE  DC    C'F '                Message
REGION   DC    CL13' '
         DC    C' S PROG('
PROGRAM  DC    CL8' '
         DC    C') PHASEIN'
MESSL    EQU   *-MESSAGEL
*
BUFFER   DS    CL200
*---------------------------------------------------------------------*
STARTAB  DC    XL256'00'
         ORG   STARTAB+X'00'
         DC    C','
         ORG   STARTAB+C','
         DC    C','
         ORG   STARTAB+C' '
         DC    C' '
         ORG
*---------------------------------------------------------------------*
SYSIN    DCB   DDNAME=SYSIN,                                           X
               DSORG=PS,                                               X
               MACRF=(GM),                                             X
               EXLST=CAEXLST1,                                         X
               EODAD=CLOSFILE
CAEXLST1 DS    0F
         DC    X'07'
HERE1    DS    AL3
         DC    X'11'
         DC    AL3(DCBABEX1)
         DC    X'80'
*---------------------------------------------------------------------*
         END
