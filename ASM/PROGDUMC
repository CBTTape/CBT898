***********************************************************************
*                                                                     *
*  Title   : PROGDUMP DEBUGGER                                        *
*  System  : Program debugging                                        *
*  Module  : PROGDUMC                                                 *
*  Program : PROGDUMP                                                 *
*  Function: Process data changes using the ZAP command.              *
*  Company : ASYSTS Pty. Ltd.                                         *
*  Author  : A. Kara                                                  *
*  Date    : 11/01/91                                                 *
*                                                                     *
*---------------------------------------------------------------------*
PROGDUMC KICKOFF (R12),WORKARE1,WORK1LEN,LIST=NO
         LR    R10,R1                  PARAMETER ADDRESS
         LA    R11,4095(R10)           USE R11 AS SECOND BASE
         LA    R11,1(R11)              USE R11 AS SECOND BASE
         USING WORKAREA,R10,R11        ADDREASSABILY TO CALLERS DATA
         MVC   SCRNMSG,SPACES          CLEAR MESSAGE AREA
         MVC   TPUTWK2(TPUTCONL),TPUTCON1 MOVE TPUT TO WORK
         MVC   TGETWK2(TGETCONL),TGETCON1 MOVE TPUT TO WORK
*---------------------------------------------------------------------*
         CLI   AUTH,C'Y'               Q. AUTHORISED FLAG SET
         BNE   NOTAUTH1                   N. BYPASS
         MODESET KEY=ZERO              PLACE IN SUPERVISOR STATE
NOTAUTH1 DS    0H
         BAL   R14,PUT2SCRN            GO OUTPUT SCREEN
         B     EXITPR00                GO TO EXIT PROGRAM
                                                                SPACE 1
*---------------------------------------------------------------------*
* Display screen full of data                                         *
*---------------------------------------------------------------------*
PUT2SCRN DS    0H
         STM   R0,R14,SAVSUB21         STORE CALLERS REGISTERS
WRITE    DS    0H
         MVC   ZCMD,SPACES             CLEAR MESSAGE AREA
         BAL   R14,DISPSCRN            LOAD SCREEN ADDRESS
WHATKEY  DS    0H
         MVC   SCRNMSG,SPACES          INITIALISE MESSAGE
         CLC   REPLY2+6(4),=C'END '    Q. END ENTERED
         BE    EXITPR08                   Y. EXIT
         CLI   REPLY2,X'F3'            Q. END ENTERD
         BE    EXITPR08                   Y. EXIT
TESTPFKY DS    0H
         CLI   REPLY2,X'7D'            Q. ENTER ENTERED
         BE    TESTZCMD                   Y. TEST CHANGES
         MVC   SCRNMSG(20),=C'Invalid key eneterd.'
         B     WRITE                   SHOW DATA
TESTZCMD DS    0H
*-----\|/--------------------<=====-----------------------------------*
*        $WTOGET PROG=PROGDUMC,TRACE=REPLY2,HEX=ON,TRACEL=30,MF=E
*        $WTOGET PROG=PROGDUMC,TRACE=REPLY2+30,HEX=ON,TRACEL=30,MF=E
*        $WTOGET PROG=PROGDUMC,TRACE=REPLY2+60,HEX=ON,TRACEL=6,MF=E
*-----/|\--------------------<=====-----------------------------------*
         CLI   CICSREQ,C'Y'            Q. CICS USAGE
         BNE   BYPCICS1                   N. BYPASS
         MVC   SCRNMSG(46),=C'Cannot ZAP under CICS usage. Use LZAP inst
               tead.'
         B     WRITE                   SHOW DATA
BYPCICS1 DS    0H
         CLC   REPLY2+6(66),SPACES     Q. COMMAND LINE SPACES
         BE    TESTCHNG                   Y. TEST CHANGES
         MVC   SCRNMSG(37),=C'Cannot have data in the command line.'
         B     WRITE                   SHOW DATA
TESTCHNG DS    0H
         STM   R10,R13,BASES#12        STORE MAIN REGISTERS
         LA    R1,ESTAEOF1             RETURN ADDRESS
         ST    R1,ESTAERTN2            STORE RETURN ADDRESS
         LA    R9,PROCESTB             ESTAE PROCESSING ADDRESS
         MVI   RCODE,C'0'              SET ZERO RETURN CODE
         LA    R3,PROCESTB             LOAD ESTAE LIST ADDRESS
         ESTAE (9),MF=(E,(R3))         TRAP "ABEND"
         LA    R9,1                    LOOP COUNTER
         LA    R7,REPLY2+72            START OF CHANGEABLE DATA
         LA    R8,LINE0402+18          ORIGINAL DATA
         CHHEXMAC LINE0402,TARGETX,8,INVCHAR,MF=E
         L     R6,TARGETX              MEMORY LOCATION
CHNGLOP1 DS    0H
         OC    0(44,R7),SPACES         CONVERT TO UPPER CASE
BLOCK11  DS    0H
         LA    R4,1                    PROCESS COUNTER
         TRT   3(4,R7),TRTHEXVL        Q. VALID HEX CHARACTER ENTERED
         BNZ   INVCHAR1                   N. TELL OF ERROR
BLOCK12  DS    0H
         LA    R4,2                    PROCESS COUNTER
         TRT   14(8,R7),TRTHEXVL       Q. VALID HEX CHARACTER ENTERED
         BNZ   INVCHAR1                   N. TELL OF ERROR
BLOCK13  DS    0H
         LA    R4,3                    PROCESS COUNTER
         TRT   25(8,R7),TRTHEXVL       Q. VALID HEX CHARACTER ENTERED
         BNZ   INVCHAR1                   N. TELL OF ERROR
BLOCK14  DS    0H
         LA    R4,4                    PROCESS COUNTER
         TRT   36(8,R7),TRTHEXVL       Q. VALID HEX CHARACTER ENTERED
         BNZ   INVCHAR1                   N. TELL OF ERROR
BLOCK21  DS    0H
         CLC   3(8,R7),0(R8)           Q. DATA CHANGED
         BE    BLOCK22                    N. NEXT BLOCK
         MVC   TARGET(8),3(R7)         MOVE DATA FOR CONVERSION
         CHHEXMAC TARGET,TARGET+8,8,INVCHAR1,MF=E
         MVC   0(4,R6),TARGET+8        MOVE CONVERTED CHARACTERS
BLOCK22  DS    0H
         CLC   14(8,R7),9(R8)          Q. DATA CHANGED
         BE    BLOCK23                    N. NEXT BLOCK
         MVC   TARGET(8),14(R7)        MOVE DATA FOR CONVERSION
         CHHEXMAC TARGET,TARGET+8,8,INVCHAR1,MF=E
         MVC   4(4,R6),TARGET+8        MOVE CONVERTED CHARACTERS
BLOCK23  DS    0H
         CLC   25(8,R7),18(R8)         Q. DATA CHANGED
         BE    BLOCK24                    N. NEXT BLOCK
         MVC   TARGET(8),25(R7)        MOVE DATA FOR CONVERSION
         CHHEXMAC TARGET,TARGET+8,8,INVCHAR1,MF=E
         MVC   8(4,R6),TARGET+8        MOVE CONVERTED CHARACTERS
BLOCK24  DS    0H
         CLC   36(8,R7),27(R8)         Q. DATA CHANGED
         BE    BLOCK25                    N. NEXT BLOCK
         MVC   TARGET(8),36(R7)        MOVE DATA FOR CONVERSION
         CHHEXMAC TARGET,TARGET+8,8,INVCHAR1,MF=E
         MVC   12(4,R6),TARGET+8       MOVE CONVERTED CHARACTERS
BLOCK25  DS    0H
         CLC   50(16,R7),35(R8)         Q. DATA CHANGED
         BE    PNEXTLIN                   N. PROCESS NEXT LINE
         LA    R4,16                   LOOP COUNTER
         LA    R2,50(R7)               USE R2 AS TEMP REPLY2 POINTER
         LA    R3,35(R8)               USE R3 AS TEMP DISPLAY POINTER
         LA    R5,0(R6)                USE R6 AS TEMP MEMORY POINTER
CHNGLOP2 DS    0H
         CLC   0(1,R2),0(R3)           Q. DATA CHANGED
         BE    INCLOP2                    Y. INCREMENT LOOP 2
         MVC   0(1,R5),0(R2)           MOVE THE CHANGED DATA
INCLOP2  DS    0H
         LA    R2,1(R2)                INCREMENT POINTER
         LA    R3,1(R3)                INCREMENT POINTER
         LA    R5,1(R5)                INCREMENT POINTER
         BCT   R4,CHNGLOP2             LOOP TILL END
PNEXTLIN DS    0H
         LA    R6,16(R6)               NEXT BLOCK OF MEMORY
         LA    R7,66(R7)               NEXT BLOCK OF REPLY2
         LA    R8,80(R8)               NEXT BLOCK OF DISPLAY
         LA    R9,1(R9)                UP OUTER LOOP COUNTER
         CH    R9,=H'10'               Q. WITHIN LOOP LIMIT
         BNH   CHNGLOP1                   N. LOOP TILL END
         LA    R3,PROCESTB             LOAD ESTAE LIST ADDRESS
         ESTAE 0,MF=(E,(R3))           TURN ESTAE OFF
         B     EXITPR00                EXIT WITH ZERO RETURN CODE
INVCHAR1 DS    0H
         MVC   SCRNMSG(34),=C'Invalid HEX character ''.'' entered.'
         MVC   SCRNMSG+23(1),0(R1)     MOVE INVALID CHARACTER
         MVC   SCRNMSG+35(16),=C'Changes ignored.'
         B     EXITPR04                EXIT WITH ZERO RETURN CODE
ESTAEOF1 DS    0H
         ESTAE 0
         MVC   SCRNMSG(52),=C'Addressing error encountered attempting t+
               o zap data.'
         B     EXITPR04                EXIT WITH ZERO RETURN CODE
INVCHAR  DS    0H
RETMAIN0 DS    0H
         B     WRITE                   GO TELL OF ERROR
         LM    R0,R14,SAVSUB21         RESTORE CALLERS REGISTERS
         BR    R14                     RETURN
                                                                SPACE 1
*---------------------------------------------------------------------*
* Build the screen and get the return data                            *
*---------------------------------------------------------------------*
DISPSCRN DS    0H
         STM   R0,R14,SAVSUB22         RESTORE CALLERS REGISTERS
*---------------------------------------------------------------------*
* Calculate time for display in top-left of screen                    *
*---------------------------------------------------------------------*
         TIME  DEC                     GET TIME  => IN R0
         ST    R0,TARGET+20            SAVE TIME IN FULLWORD
         HEXCHMAC TARGET+20,TARGET,3,MF=E
         MVC   CURTIME(2),TARGET       INSERT HH
         MVC   CURTIME+3(2),TARGET+2   INSERT MM
         MVC   CURTIME+6(2),TARGET+4   INSERT SS
         LA    R2,PROGDMP2             SCREEN ADDRESS
         LH    R3,SCRNSIZE             LOAD SCREEN SIZE
         BCTR  R3,0                    RELATIVE LENGTH
         BAL   R14,TPUTSCR             DISPLAY SCREEN
         LA    R2,PROGDMP3             SCREEN ADDRESS
         LA    R3,SCRSZ3               LOAD SCREEN SIZE
         BAL   R14,TPUTSCR             DISPLAY SCREEN
         CLEARV  REPLY2,MF=E
         LA    R2,REPLY2               REPLY2 ADDRESS
         LA    R3,L'REPLY2             REPLY2 LENGTH
         BAL   R14,TGETSCR             RECEIVE SCREEN
RETMAIN3 DS    0H
         LM    R0,R14,SAVSUB22         RESTORE CALLERS REGISTERS
         BR    R14                     RETURN
                                                                SPACE 1
*---------------------------------------------------------------------*
* TPUT to screen                                                      *
*---------------------------------------------------------------------*
TPUTSCR  DS    0H
         ST    R14,R14SAVER            STORE RETURN ADDRESS
         CLC   LINE0401(4),SPACES      Q. LINE 4 COL 1 BEEN CLOBERED
         BNE   L0401OK                    N. BYPASS
         MVC   LINE0401,LIN#0401       FIX IT UP
         MVC   SCRNMSG+63(16),=C'L0401 corrected.'
L0401OK  DS    0H
         CLI   CICSREQ,C'Y'            Q. CICS ENVIRONMENT
         BNE   TSOTPUT                    N. BYPASS
*---------------------------------------------------------------------*
*   CALL PROGRAM THAT ISSUES A 'EXEC CICS SEND' COMMAND               *
*---------------------------------------------------------------------*
         ST    2,TARGET                STORE SCREEN ADDRESS
         ST    3,TARGET+4              STORE SCREEN LENGHT
         ST    13,TARGET+8             STORE SCREEN LENGHT
         LA    1,TARGET                POINT TO PARAMETER LIST
         L     15,=V(PROGCPUT)         LOAD TPUT ADDRESS                DPSO7746
         BALR  14,15                   GO PUT TO SCREEN
         B     LEAVTPUT                EXIT TPUT ROUTINE
TSOTPUT  DS    0H
         TPUT  (R2),(R3),NOEDIT,WAIT,,BREAKIN,HIGHP,MF=(E,TPUTWK1)
LEAVTPUT DS    0H
         L     R14,R14SAVER            RESTORE RETURN ADDRESS
         BR    R14                     RETURN
*---------------------------------------------------------------------*
TGETSCR  DS    0H
         ST    R14,R14SAVER            STORE RETURN ADDRESS
         CLI   CICSREQ,C'Y'            Q. CICS ENVIRONMENT
         BNE   TSOTGET                    N. BYPASS
*---------------------------------------------------------------------*
*   CALL PROGRAM THAT ISSUES A 'EXEC CICS RECEIVE' COMMAND            *
*---------------------------------------------------------------------*
         ST    2,TARGET                STORE SCREEN ADDRESS
         ST    3,TARGET+4              STORE SCREEN LENGHT
         ST    13,TARGET+8             STORE SCREEN LENGHT
         LA    1,TARGET                POINT TO PARAMETER LIST
         L     15,=V(PROGCGET)                                          DPSO7746
         BALR  14,15
         B     LEAVTGET                EXIT TGET ROUTINE
TSOTGET  DS    0H
         TGET  (R2),(R3),ASIS,WAIT,MF=(E,TGETWK1)
LEAVTGET DS    0H
         L     R14,R14SAVER            RESTORE RETURN ADDRESS
         BR    R14                     RETURN
                                                                SPACE 1
*#####################################################################*
EXITPR00 DS    0H
         MVC   SCRNMSG(23),=C'Changes have been made.'
         MVI   RCODE,C'0'              ZET ZERO RETURN CODE
         B     EXITPROG                GO TO COMMON EXIT
EXITPR04 DS    0H
         MVI   RCODE,C'0'              ZET ZERO RETURN CODE
         B     EXITPROG                GO TO COMMON EXIT
EXITPR08 DS    0H
         MVC   SCRNMSG(24),=C'Change screen abandoned.'
         MVI   RCODE,C'8'              ZET ZERO RETURN CODE
EXITPROG DS    0H
         CLI   AUTH,C'Y'               Q. AUTHORISED FLAG SET
         BNE   NOTAUTH2                   N. BYPASS
         MODESET KEY=NZERO             TURN MODESET OFF
NOTAUTH2 DS    0H          N. BYPASS
         LA    R2,PROGDMP4             SCREEN ADDRESS
         LA    R3,SCRSZ4               LOAD SCREEN SIZE
         BAL   R14,TPUTSCR             DISPLAY SCREEN
         RACKOFF RC=0,LIST=NO
                                                                SPACE 1
*=====================================================================*
*---------------------------------------------------------------------*
         LTORG
*---------------------------------------------------------------------*
         DS    0D
SPACES   DC    CL80' '
LIN#0401  SBADC 04,01,PLN,B,O
*---------------------------------------------------------------------*
TRTUPPER DC    X'000102030405060708090A0B0C0D0E0F'          00-0F
         DC    X'101112131415161718191A1B1C1D1E1F'          10-1F
         DC    X'202122232425262728292A2B2C2D2E2F'          20-2F
         DC    X'303132333435363738393A3B3C3D3E3F'          30-3F
         DC    X'404142434445464748494A4B4C4D4E4F'          40-4F
         DC    X'505152535455565758595A5B5C5D5E5F'          50-5F
         DC    X'606162636465666768696A6B6C6D6E6F'          60-6F
         DC    X'707172737475767778797A7B7C7D7E7F'          70-7F
         DC    X'80C1C2C3C4C5C6C7C8C98A8B8C8D8E8F'          80-8F
         DC    X'90D1D2D3D4D5D6D7D8D99A9B9C9D9E9F'          90-9F
         DC    X'A0E1E2E3E4E5E6E7E8E9AAABACADAEAF'          A0-AF
         DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'          B0-BF
         DC    X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'          C0-CF
         DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'          D0-DF
         DC    X'E011E2E3E4E5E6E7E8E9EAEBECEDEEEF'          E0-EF
         DC    X'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF'          F0-FF
*---------------------------------------------------------------------*
TRTHEXVL DC    X'01010101010101010101010101010101'          00-0F
         DC    X'01010101010101010101010101010101'          10-1F
         DC    X'01010101010101010101010101010101'          20-2F
         DC    X'01010101010101010101010101010101'          30-3F
         DC    X'01010101010101010101010101010101'          40-4F
         DC    X'01010101010101010101010101010101'          50-5F
         DC    X'01010101010101010101010101010101'          60-6F
         DC    X'01010101010101010101010101010101'          70-7F
         DC    X'01010101010101010101010101010101'          80-8F
         DC    X'01010101010101010101010101010101'          90-9F
         DC    X'01010101010101010101010101010101'          A0-AF
         DC    X'01010101010101010101010101010101'          B0-BF
         DC    X'01000000000000010101010101010101'          C0-CF
         DC    X'01010101010101010101010101010101'          D0-DF
         DC    X'01010101010101010101010101010101'          E0-EF
         DC    X'00000000000000000000010101010101'          F0-FF
*---------------------------------------------------------------------*
PROGDMP4  WCCDC W,,COLOR
          SBADC 04,17,PLY,B,O
          SBADC 04,26,PLY,B,O
          SBADC 04,35,PLY,B,O
          SBADC 04,44,PLY,B,O
          SBADC 04,53,PLY,B,O
          SBADC 04,54,PLY,B,O
          SBADC 04,71,PLN,B,O
          SBADC 05,17,PLY,B,O
          SBADC 05,26,PLY,B,O
          SBADC 05,35,PLY,B,O
          SBADC 05,44,PLY,B,O
          SBADC 05,53,PLY,B,O
          SBADC 05,54,PLY,B,O
          SBADC 05,71,PLN,B,O
          SBADC 06,17,PLY,B,O
          SBADC 06,26,PLY,B,O
          SBADC 06,35,PLY,B,O
          SBADC 06,44,PLY,B,O
          SBADC 06,53,PLY,B,O
          SBADC 06,54,PLY,B,O
          SBADC 06,71,PLN,B,O
          SBADC 07,17,PLY,B,O
          SBADC 07,26,PLY,B,O
          SBADC 07,35,PLY,B,O
          SBADC 07,44,PLY,B,O
          SBADC 07,53,PLY,B,O
          SBADC 07,54,PLY,B,O
          SBADC 07,71,PLN,B,O
          SBADC 08,17,PLY,B,O
          SBADC 08,26,PLY,B,O
          SBADC 08,35,PLY,B,O
          SBADC 08,44,PLY,B,O
          SBADC 08,53,PLY,B,O
          SBADC 08,54,PLY,B,O
          SBADC 08,71,PLN,B,O
          SBADC 09,17,PLY,B,O
          SBADC 09,26,PLY,B,O
          SBADC 09,35,PLY,B,O
          SBADC 09,44,PLY,B,O
          SBADC 09,53,PLY,B,O
          SBADC 09,54,PLY,B,O
          SBADC 09,71,PLN,B,O
          SBADC 10,17,PLY,B,O
          SBADC 10,26,PLY,B,O
          SBADC 10,35,PLY,B,O
          SBADC 10,44,PLY,B,O
          SBADC 10,53,PLY,B,O
          SBADC 10,54,PLY,B,O
          SBADC 10,71,PLN,B,O
          SBADC 11,17,PLY,B,O
          SBADC 11,26,PLY,B,O
          SBADC 11,35,PLY,B,O
          SBADC 11,44,PLY,B,O
          SBADC 11,53,PLY,B,O
          SBADC 11,54,PLY,B,O
          SBADC 11,71,PLN,B,O
          SBADC 12,17,PLY,B,O
          SBADC 12,26,PLY,B,O
          SBADC 12,35,PLY,B,O
          SBADC 12,44,PLY,B,O
          SBADC 12,53,PLY,B,O
          SBADC 12,54,PLY,B,O
          SBADC 12,71,PLN,B,O
          SBADC 13,17,PLY,B,O
          SBADC 13,26,PLY,B,O
          SBADC 13,35,PLY,B,O
          SBADC 13,44,PLY,B,O
          SBADC 13,53,PLY,B,O
          SBADC 13,54,PLY,B,O
          SBADC 13,71,PLN,B,O
SCRSZ4   EQU   *-PROGDMP4
TPUTCON1 TPUT  MF=L
TPUTCONL EQU   *-TPUTCON1
TGETCON1 TGET  MF=L
TGETCONL EQU   *-TGETCON1
                                                                SPACE 1
*#####################################################################*
*--------------------------<=======-----------------------------------*
PROCESTB DS    0F
         LR    R2,R15                   R1 SET AS BASE
         USING PROCESTB,R2              BASE REGISTER
         LM    R10,R13,12(R15)          RESTORE REGISTERS FROM "BASES1"
         B     MOVEERR2                 BYPASS R10 - R13 SAVE AREA
BASES#12 DS    4F
XXXXXX2  DC    CL20'ESTAE IN PROGDUMC'  ESTAE EYE CATCHER
*---------------------------------------------------------------------*
MOVEERR2 DS    0H
         STM   R0,R13,BASES#22          STORE REGISTERS INTO "BASES2"
*---------------------------------------------------------------------*
*                                                                     *
*        CONTROL GETS HERE IF THE AN ABEND OCCURED DURING A MOVE      *
*        FROM SECONDARY TO PRIMARY. USUALLY CAUSED BY AN ADDRESS      *
*        EXCEPTION ERROR.                                             *
*                                                                     *
*---------------------------------------------------------------------*
         LA    R15,12
         CR    R0,R15                   Q. SDWA CREATED BY RTM2
         BE    MESTAER22                   N. DO NOT RETRY
         SETRP FRESDWA=YES,RC=4,RETADDR=MESTAER20,DUMP=NO
         BR    R14                      RETURN
MESTAER20 DS    0F
         LM    R0,R13,8(R15)            RESTORE REGISTERS
         B     MESTAER22
BASES#22  DS    14F
MESTAER22 DS    0H
*---------------------------------------------------------------------*
         ICM   R4,B'0111',=C'ERR'    <=====
         MVI   RCODE,C'E'               SET RETURN CODE
         L     R1,ESTAERTN2             LOAD ESTAE RETURN ADDRESS
         LR    R5,R1     <=======
         BR    R1                       CONTINUE
ESTAERTN2 DS    A                       RETURN ADDRESS FROM ESTAE
*--------------------------<=======-----------------------------------*
*---------------------------------------------------------------------*
         COPY  PROGDUMA                 ISSUE AN ERASE/WRITE "WCC"
                                                                SPACE 1
*#####################################################################*
WORKARE1 DSECT
  DS           18F                      REGISTER SAVE AREA ON ENTRY
SAVSUB21 DS    18F                      SUBROUTINE 1 SAVE AREA
SAVSUB22 DS    18F                      SUBROUTINE 2 SAVE AREA
R14SAVE1 DS    F
R14SAVE2 DS    F
SBAW1    SBA   TARGETX,TARGET,MF=L
TPUTWK2  TPUT  MF=L
TGETWK2  TGET  MF=L
REPLY2   DS    CL1680                   REPLY2
WORK1LEN EQU   *-WORKARE1
                                                                SPACE 1
*#####################################################################*
PDUMPPL  DSECT
         DS    8F                       PARAMETER LIST AREA
PREGS    DS    16F                      REGISTER SAVE AREA
PMESL    DS    H                        MESSAGE LENGTH
PMESS    DS    CL79                     MESSAGE
*---------------------------------------------------------------------*
         PUSH PRINT
         PRINT NOGEN
*
         IHASDWA DSECT=YES              ENTRY : SDWA
*
         POP PRINT
*---------------------------------------------------------------------*
         END
