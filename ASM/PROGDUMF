***********************************************************************
*                                                                     *
*  Title   : PROGDUMP DEBUGGER                                        *
*  System  : Program debugging                                        *
*  Module  : PROGDUMF                                                 *
*  Program : PROGDUMP                                                 *
*  Function: Executes the 'FIND string' option. Removed because of    *
*            addressability error.                                    *
*  Company : ASYSTS Pty. Ltd.                                         *
*  Author  : A. Kara                                                  *
*  Date    : 08/09/94                                                 *
*                                                                     *
***********************************************************************
PROGDUMF KICKOFF (R12),WORKARE1,WORK1LEN,LIST=NO
         LR    R10,R1                  PARAMETER ADDRESS
         LA    R11,4095(R10)           USE R11 AS SECOND BASE
         LA    R11,1(R11)              USE R11 AS SECOND BASE
         USING WORKAREA,R10,R11        ADDREASSABILY TO CALLERS DATA
         MVC   SCRNMSG,SPACES          CLEAR MESSAGE AREA
         MVI   RCODE,C'0'              SET ZERO RETURN CODE
         CLI   REPLY,X'F5'             Q. REFIND ENTERED
         BE    FINDIT                     Y. GO AND USE PREV FIND CMD
         CLC   REPLY+6(3),=C'FN '      Q. FIND NEXT BLOCK
         BE    FINDIT                     Y. GO AND USE PREV FIND CMD
         CLC   REPLY+6(3),=C'FP '      Q. FIND PREV BLOCK
         BE    FINDIT                     Y. GO AND USE PREV FIND CMD
         CLC   REPLY+6(3),=C'REF'      Q. REFIND ENTERED
         BE    FINDIT                     Y. GO AND USE PREV FIND CMD
         MVI   FNDSTRNG,C' '           CLEAR FOUND STRING FLAG
         XC    FNDNEXTB,FNDNEXTB       CLEAR FINF NEXT BLOCK COUNTER
         LA    R7,2(R7)                POSITION PAST "F "
         MVI   FINDTYPE,C'C'           SET DEFAULT CHARACTER FIND TYPE
         OC    LCFIND(2),SPACES        LOWER TO UPPER
         CLC   LCFIND(3),=C'LC'''      Q. PROMPT = "LC'...."
         BNE   NOTLOWCS                   N. NOT LOWER CASE
         LA    R7,LCFIND+3             POSITION PAST "F LC'"
         MVI   FINDTYPE,C'L'           SET LOWER CASE FIND TYPE
NOTLOWCS DS    0H
         CLC   0(60,R7),SPACES         Q. NEXT 40 CHARS SPACES
         BNE   TESTHEXF                   N. TEST IF 'HEX FIND'
         MVC   SCRNMSG(35),=C'String or X''string must be entered.'
         B     ERETMAI8                ERROR RETURN
TESTHEXF DS    0H
         CLC   0(2,R7),=X'E77D'        Q. IS STRING PREFIXED BY "X'"
         BNE   PARSFIND                   N. PARSE IT
         LA    R7,2(R7)                   Y. POINT PAST X'
         MVI   FINDTYPE,C'X'           SET HEX FIND TYPE
         CLC   0(60,R7),SPACES         Q. NEXT 40 CHARS SPACES
         BNE   PARSFIND                   N. TEST IF 'HEX FIND'
         MVC   SCRNMSG(25),=C'String required atrer X''.'
         B     ERETMAI8                ERROR RETURN
PARSFIND DS    0H
         XR    R9,R9                   INITIALISE R9 AS STRING LENGTH
         MVC   STRING(8),SPACES        CLEAR TARGET WITH SPACES
         LA    R8,STRING               USE R8 AS TARGET POINTER
         LA    R5,60                   USE R5 AS LOOP COUNTER
PARSLOOP DS    0H
         CLI   0(R7),C' '              Q. END OF STRING
         BE    PARSEXIT                   Y. END LOOP
         MVC   0(1,R8),0(R7)           MOVE CHARACTER
         LA    R7,1(R7)                INCREMENT SOURCE POINTER
         LA    R8,1(R8)                INCREMENT DESTINATION POINTER
         LA    R9,1(R9)                INCREMENT NO OF CHRS MOVED CNTR
         BCT   R5,PARSLOOP             LOOP TILL ENDT
         CLI   0(R7),C' '              Q. MORE CHAR FOLLOWING
         BE    PARSEXIT                   N. CONTINUE
         MVC   SCRNMSG(27),=C'Maximum of 40 chars allowed.'
         B     ERETMAI8                ERROR RETURN
PARSEXIT DS    0H
         MVC   DSTRING(8),STRING       SET UP DISPLAY STRING
         STH   R9,FSTRLEN              STORE STRING LENGTH
         CLI   FINDTYPE,C'X'           Q. FIND TYPE = HEX
         BNE   FINDIT                     N. GO FIND IT
         XR    R4,R4                   CLEAR EVEN PAIR FOR DIVISION
         LR    R5,R9                   LOAD ODD PAIR BY DIVIDEND
         D     R4,=F'2'                DIVIDE BY 2
         STH   R5,FSTRLEN              STORE STRING LENGTH
         LTR   R4,R4                   Q. ANY REMAINDER
         BZ    CONVHEX                    N. MUST BE EVEN NO
         MVC   SCRNMSG(33),=C'HEX find must be even # of chars.'
         B     ERETMAI8                ERROR RETURN
CONVHEX  DS    0H
         MVC   TARGET(60),SPACES       CLEAR TARGET
         CHHEXMAC STRING,TARGET,(R9),INVCHAR,MF=E
         MVC   STRING(60),TARGET       RESET STRING WITH HEX VALUE
FINDIT   DS    0H
         STM   R10,R13,BASES#1         STORE MAIN REGISTERS
         LA    R1,ESTAEOF2             RETURN ADDRESS
         ST    R1,ESTAERTN             STORE RETURN ADDRESS
         LA    R9,PROCESTA             LOAD ESTAE ROUTINE ADDRESS
         MVI   RCODE,C'0'              SET ZERO RETURN CODE
         ESTAE (9)                     TRAP "ABEND"
         CLI   FOVERF,C'Y'             Q. ALREADY OVERLAY ON
         BE    OLAYOFF                    Y. SET OVERLAY OFF
         MVI   FOVERF,C'N'             SET OVERLAY NOT REQUIRED
         B     CONT#200                BYPASS SETING OVERLAY OFF
OLAYOFF  DS    0H
         MVI   FOVERF,C'O'             SET OVERLAY OFF
CONT#200 DS    0H
         CLC   FDISP,=F'0'             Q. NO OF 16 BYTES DATA MVD > 0
         BH    FINDDATA                   Y. BYPASS
         MVC   SCRNMSG(60),SPACES      CLEAR SCREEN MESSAGE AREA
         MVC   SCRNMSG(16),=C'No data to find.'
         B     ERETMAI8                ERROR RETURN
FINDDATA DS    0H
         L     R3,PROGADRS             PROGRAM ENTRY ADDRESS
         L     R5,TDISP                SET R5 AS DISPLACEMENT COUNTER
         SLL   R5,4                    MULTIPLY BY 16
         A     R5,SDISP                ADD SIDE DISPLACEMENT
         AR    R3,R5                   ADD DISP OF TOP DISP
         LH    R4,=H'4096'             LOAD END ADDRESS OF 1 PAGE
         CLI   PARTDISP,C'Y'           Q. ONLY PART DISPLAY
         BNE   NOTPART1                   N. BYPASS
         L     R4,DATALEN              LOAD DATA LENGTH
NOTPART1 DS    0H
         UNPACK R4,6,TARGETX,MF=E      UNPACK AND SAVE FOR LATER
         LH    R2,FSTRLEN              SET R2 TO STRING LENGTH
         BCTR  R2,0                    DECREMENT LENGTH BY 1 FOR "EX"
         CLI   FNDSTRNG,C' '           Q. FIRST FIND
         BE    ADDNEXTB                   Y. BYPASS
         CLI   FNDSTRNG,C'F'           Q. REFIND
         BNE   REFINDIT                   N. BYPASS
         AH    R3,FSTRLEN              POINT PAST FOUND STRING
         AH    R5,FSTRLEN              UP DISPLACEMENT BY SAME
         B     ADDNEXTB
REFINDIT DS    0H
         L     R3,PROGADRS             PROGRAM ENTRY ADDRESS
         XR    R5,R5                   SET DISPLACEMENT TO TOP
ADDNEXTB DS    0H
         CLC   REPLY+6(3),=C'FN '      Q. FIND NEXT BLOCK
         BNE   SUBNEXTB                   N. TEST SUBTRACT BLOCK
         L     R5,FNDNEXTB             LOAD NEXT BLOCK DISPLACEMENT
         A     R5,FNDINCR              UP BY FIND INCREMENT
         ST    R5,FNDNEXTB             STORE NEXT BLOCK DISPLACEMENT
         L     R3,PROGADRS             LOAD START SEARCH
         AR    R3,R5                   ADD TO START SEARCH
         UNPACK R5,6,TARGETX,MF=E      UNPACK AND SAVE FOR LATER
SUBNEXTB DS    0H
         CLC   REPLY+6(3),=C'FP '      Q. FIND PREV BLOCK
         BNE   FINDLOOP                   N. BYPASS BLOCK INCREMENT
         L     R5,FNDNEXTB             LOAD NEXT BLOCK DISPLACEMENT
         S     R5,FNDINCR              UP BY FIND INCREMENT
         ST    R5,FNDNEXTB             STORE NEXT BLOCK DISPLACEMENT
         L     R3,PROGADRS             LOAD START SEARCH
         AR    R3,R5                   ADD TO START SEARCH
         UNPACK R5,6,TARGETX,MF=E      UNPACK AND SAVE FOR LATER
FINDLOOP DS    0H
         EX    R2,FINDSTRG
         BE    STRGFND                 Q. STRING FOUND
         LA    R3,1(R3)                   N. INCREMENT AREA POINTER
         LA    R5,1(R5)                INCREMENT DISPLACEMENT POINTER
         BCT   R4,FINDLOOP             LOOP TILL END
         MVI   FNDSTRNG,C'N'           SET NOT FOUND FLAG
                                                                SPACE 1
*---------------------------------------------------------------------*
ESTAEOF2 DS    0H
         ESTAE 0                       TURN ESTAE OFF
         LA    R8,SCRNMSG              BASE ADDRESS OF CREEN MESSAGE
         MVC   0(8,R8),=C'STRING "'
         LA    R7,DSTRING              SOURCE
         LA    R8,8(R8)                POINT PAST LITERAL
         LA    R9,8                    LENGTH OF MOVE
MOVLOP2  DS    0H
         CLI   0(R7),C' '              Q. CHARACTER A SPACE
         BE    EXLOOP2                    Y. EXIT LOOP
         MVC   0(1,R8),0(R7)           MOVE THE CHARACTER
         LA    R7,1(R7)                INCREMENT POINTER
         LA    R8,1(R8)                INCREMENT POINTER
         BCT   R9,MOVLOP2              LOOP
EXLOOP2  DS    0H
         CLI   RCODE,C'E'              Q. ESTAE ROUTINE ENTERED
         BNE   NOESTAE2                   N. BYPASS
         MVC   0(36,R8),=C'" NOT FOUND BEFORE ADDRESSING ERROR.'
         B     ERETMAI8                ERROR RETURN
NOESTAE2 DS    0H
         MVC   0(24,R8),=C'" NOT FOUND IN THE NEXT '
         MVC   24(6,R8),TARGETX        MOVE COUNTER TO DISPLAY
         MVC   30(7,R8),=C' BYTES.'    MOVE TEXT
         CLI   PARTDISP,C'Y'           Q. ONLY PART DISPLAY
         BE    ERETMAI8                   Y. COMMON RETURN POINT
         MVC   38(23,R8),=C'ENTER "FN" TO CONTINUE.'
         B     ERETMAI8                ERROR RETURN
                                                                SPACE 1
*---------------------------------------------------------------------*
STRGFND  DS    0H
         ESTAE 0                       TURN ESTAE OFF
         MVI   FNDSTRNG,C'F'           SET FOUND FLAG
         XR    R4,R4                   CLEAR EVEN REG PAIR
         LA    R1,16                   SET UP DIVISOR
         DR    R4,R1                   DIVIDE BY LENGTH OF LINE
         ST    R4,SDISP                SET REMAINDER AS SHIFT
         ST    R5,TDISP                SET QUOTIENT AS TOP OF DISPLAY
         MVC   SCRNMSG(13),=C'String found.'
         MVI   FOVERF,C'Y'             FOUND OVERLAY ON
         B     RETMAIN8                GO TO COMMON EXIT
INVCHAR  DS    0H
         MVC   SCRNMSG(34),=C'Invalid HEX format of find string.'
         B     ERETMAI8                GO TO ERROR EXIT FROM ROUTINE
                                                                SPACE 1
*---------------------------------------------------------------------*
ERETMAI8 DS    0H
         MVI   RCODE,C'8'              SET ERROR RETURN CODE
                                                                SPACE 1
RETMAIN8 DS    0H
         RACKOFF RC=0,LIST=NO          RETURN TO CALLER
                                                                SPACE 1
*---------------------------------------------------------------------*
FINDSTRG CLC   0(0,R3),STRING          Q. NEXT CHARS = STRING
*---------------------------------------------------------------------*
*#####################################################################*
         LTORG
*---------------------------------------------------------------------*
SPACES   DC    CL80' '                 SPACES
                                                                SPACE 1
*#####################################################################*
WORKARE1 DSECT
  DS           18F                     REGISTER SAVE AREA ON ENTRY
WORK1LEN EQU   *-WORKARE1
                                                                SPACE 1
         COPY  PROGDUMA                COMMON WORK AREA
                                                                SPACE 1
         PUSH PRINT
         PRINT NOGEN
                                                                SPACE 1
         IHASDWA DSECT=YES             ENTRY : SDWA
                                                                SPACE 1
         POP PRINT
*---------------------------------------------------------------------*
         END
