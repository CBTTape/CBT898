***********************************************************************
*                                                                     *
*  Title   : PROGDUMP DEBUGGER                                        *
*  System  : Program debugging                                        *
*  Module  : PROGDUMR                                                 *
*  Program : PROGDUMP                                                 *
*  Function: Change registers using the ZAP command. Only permits the *
*            changing of the original program's registers. Will not   *
*            permit changes either under/after issuing a NEXT/PREV    *
*            command to chain through programs.                       *
*  Company : ASYSTS Pty. Ltd.                                         *
*  Author  : A. Kara                                                  *
*  Date    : 11/01/91                                                 *
*                                                                     *
*---------------------------------------------------------------------*
PROGDUMR KICKOFF (R12),WORKARE1,WORK1LEN,LIST=NO
         ST    R10,PDUMPPL@            ORIG PARAMETER LIST ADDRESS
         LR    R10,R1                  PARAMETER ADDRESS
         LA    R11,4095(R10)           USE R11 AS SECOND BASE
         LA    R11,1(R11)              USE R11 AS SECOND BASE
         USING WORKAREA,R10,R11        ADDREASSABILY TO CALLERS DATA
         MVC   SCRNMSG,SPACES          CLEAR MESSAGE AREA
         MVC   TPUTWK2(TPUTCONL),TPUTCON1 MOVE TPUT TO WORK
         MVC   TGETWK2(TGETCONL),TGETCON1 MOVE TPUT TO WORK
         MVI   TRACEIT,C'Y'            RESERVED FOR 'PDUMP$'
*---------------------------------------------------------------------*
         CLI   AUTH,C'Y'               Q. AUTHORISED FLAG SET
         BNE   NOTAUTH1                   N. BYPASS
         MODESET KEY=ZERO              PLACE IN SUPERVISOR STATE
NOTAUTH1 DS    0H
         BAL   R14,PUT2SCRN            GO OUTPUT SCREEN
         B     EXITPR00                GO TO EXIT PROGRAM
                                                                SPACE 1
*---------------------------------------------------------------------*
* Display screen full of data                                         *
*---------------------------------------------------------------------*
PUT2SCRN DS    0H
         STM   R0,R14,SAVSUB21         STORE CALLERS REGISTERS
WRITE    DS    0H
         MVC   ZCMD,SPACES             CLEAR MESSAGE AREA
         BAL   R14,DISPSCRN            LOAD SCREEN ADDRESS
WHATKEY  DS    0H
         MVC   SCRNMSG,SPACES          INITIALISE MESSAGE
         OC    REPLY2+6(4),SPACES      CONVERT TO UPPER CASE
         CLC   REPLY2+6(4),=C'END '    Q. END ENTERED
         BE    EXITPR08                   Y. EXIT
         CLI   REPLY2,X'F3'            Q. END ENTERD
         BE    EXITPR08                   Y. EXIT
TESTPFKY DS    0H
         CLI   REPLY2,X'7D'            Q. ENTER ENTERED
         BE    TESTZCMD                   Y. TEST CHANGES
         MVC   SCRNMSG(20),=C'Invalid key eneterd.'
         B     WRITE                   SHOW DATA
TESTZCMD DS    0H
*-----\|/--------------------<=====-----------------------------------*
         $WTOGET PROG=PROGDUMR,TRACE=REPLY2,TRACEL=30,MF=E
         $WTOGET PROG=PROGDUMR,TRACE=REPLY2,HEX=ON,TRACEL=30,MF=E
         $WTOGET PROG=PROGDUMR,TRACE=REPLY2+30,TRACEL=30,MF=E
         $WTOGET PROG=PROGDUMR,TRACE=REPLY2+30,HEX=ON,TRACEL=30,MF=E
         $WTOGET PROG=PROGDUMR,TRACE=REPLY2+60,TRACEL=6,MF=E
         $WTOGET PROG=PROGDUMR,TRACE=REPLY2+60,HEX=ON,TRACEL=6,MF=E
*-----/|\--------------------<=====-----------------------------------*
         CLI   CICSREQ,C'Y'            Q. CICS USAGE
         BNE   BYPCICS1                   N. BYPASS
         MVC   SCRNMSG(46),=C'Cannot ZAP under CICS usage. Use LZAP inst
               tead.'
         B     WRITE                   SHOW DATA
BYPCICS1 DS    0H
         CLC   REPLY2+6(66),SPACES     Q. COMMAND LINE SPACES
         BE    TESTCHNG                   Y. TEST CHANGES
         MVC   SCRNMSG(37),=C'Cannot have data in the command line.'
         B     WRITE                   SHOW DATA
                                                                SPACE 1
TESTCHNG DS    0H
         L     R9,PDUMPPL@             ORIG PARAMETER LIST ADDRESS
         USING PDUMPPL,R9              ADDRESABILITY
         STM   R10,R13,BASES#12        STORE MAIN REGISTERS
         LA    R1,ESTAEOF1             RETURN ADDRESS
         ST    R1,ESTAERTN2            STORE RETURN ADDRESS
         LA    R5,PROCESTB             ESTAE PROCESSING ADDRESS
         MVI   RCODE,C'0'              SET ZERO RETURN CODE
         LA    R3,PROCESTB             LOAD ESTAE LIST ADDRESS
         ESTAE (5),MF=(E,(R3))         TRAP "ABEND"
         LA    R6,16                   LOOP COUNTER
         LA    R7,REPLY2+72            START OF CHANGEABLE DATA
VERDATA1 DS    0H
         CLI   0(R7),X'11'             Q. 'SBA' IDENTIFIER
         BNZ   INVCHAR1                   N. TELL OF ERROR
         OC    0(11,R7),SPACES         CONVERT TO UPPER CASE
         TRT   3(8,R7),TRTHEXVL        Q. VALID HEX CHARACTER ENTERED
         BNZ   INVCHAR2                   N. TELL OF ERROR
         LA    R7,11(R7)               POINT TO NEXT REGISTER'S DATA
         BCT   R6,VERDATA1             LOOP TILL END
                                                                SPACE 1
         LA    R6,16                   LOOP COUNTER
         LA    R7,REPLY2+72            START OF CHANGEABLE DATA
         LA    R8,PREGS                ORIGINAL DATA
CHNGLOP2 DS    0H
         CHHEXMAC 3(R7),0(R8),8,NEXTCHR2,MF=E,LIST=Y
NEXTCHR2 DS    0H
         LA    R7,11(R7)               POINT TO NEXT SOURCE
         LA    R8,4(R8)                POINT TO NEXT DESTINATION
         BCT   R6,CHNGLOP2             LOOP TILL END
         LA    R3,PROCESTB             LOAD ESTAE LIST ADDRESS
         ESTAE 0,MF=(E,(R3))           TURN ESTAE OFF
         B     EXITPR00                EXIT WITH ZERO RETURN CODE
                                                                SPACE 1
INVCHAR1 DS    0H
         MVC   SCRNMSG(40),=C'SBA structure seem''s to have been broken+
               '
         B     EXITPR04                EXIT WITH ZERO RETURN CODE
INVCHAR2 DS    0H
         MVC   SCRNMSG(34),=C'Invalid HEX character ''.'' entered.'
         MVC   SCRNMSG+23(1),0(R1)     MOVE INVALID CHARACTER
         MVC   SCRNMSG+35(16),=C'Changes ignored.'
         B     EXITPR04                EXIT WITH ZERO RETURN CODE
ESTAEOF1 DS    0H
         ESTAE 0
         MVC   SCRNMSG(52),=C'Addressing error encountered attempting t*
               o ZAP data.'
         B     EXITPR04                EXIT WITH ZERO RETURN CODE
RETMAIN0 DS    0H
         B     WRITE                   GO TELL OF ERROR
         LM    R0,R14,SAVSUB21         RESTORE CALLERS REGISTERS
         BR    R14                     RETURN
         DROP  R9                      BREAK ADDRESABILITY
                                                                SPACE 1
*---------------------------------------------------------------------*
* Build the screen and get the return data                            *
*---------------------------------------------------------------------*
DISPSCRN DS    0H
         STM   R0,R14,SAVSUB22         RESTORE CALLERS REGISTERS
*---------------------------------------------------------------------*
* Calculate time for display in top-left of screen                    *
*---------------------------------------------------------------------*
         TIME  DEC                     GET TIME  => IN R0
         ST    R0,TARGET+20            SAVE TIME IN FULLWORD
         HEXCHMAC TARGET+20,TARGET,3,MF=E
         MVC   CURTIME(2),TARGET       INSERT HH
         MVC   CURTIME+3(2),TARGET+2   INSERT MM
         MVC   CURTIME+6(2),TARGET+4   INSERT SS
         MVC   SCRNMSG,SPACES          INITIALISE MESSAGE
         MVC   ZCMD,SPACES             INITIALISE COMMAND AREA
         MVC   SCRNMSG(37),=C'Overtype register values as required.'
         LA    R2,PROGDMP2             SCREEN ADDRESS
         LA    R3,SCRSZ2A              LOAD SCREEN SIZE (HEADINGS)
         BAL   R14,TPUTSCR             DISPLAY SCREEN
         LA    R2,PROGDMPR             SCREEN ADDRESS
         LA    R3,SCRSZR               LOAD SCREEN SIZE
         BAL   R14,TPUTSCR             DISPLAY SCREEN
         CLEARV  REPLY2,MF=E
         LA    R2,REPLY2               REPLY2 ADDRESS
         LA    R3,L'REPLY2             REPLY2 LENGTH
         BAL   R14,TGETSCR             RECEIVE SCREEN
RETMAIN3 DS    0H
         LM    R0,R14,SAVSUB22         RESTORE CALLERS REGISTERS
         BR    R14                     RETURN
                                                                SPACE 1
*---------------------------------------------------------------------*
* TPUT to screen                                                      *
*---------------------------------------------------------------------*
TPUTSCR  DS    0H
         ST    R14,R14SAVER            STORE RETURN ADDRESS
         CLC   LINE0401(4),SPACES      Q. LINE 4 COL 1 BEEN CLOBERED
         BNE   L0401OK                    N. BYPASS
         MVC   LINE0401,LIN#0401       FIX IT UP
         MVC   SCRNMSG+63(16),=C'L0401 corrected.'
L0401OK  DS    0H
         CLI   CICSREQ,C'Y'            Q. CICS ENVIRONMENT
         BNE   TSOTPUT                    N. BYPASS
*---------------------------------------------------------------------*
*   CALL PROGRAM THAT ISSUES A 'EXEC CICS SEND' COMMAND               *
*---------------------------------------------------------------------*
         ST    2,TARGET                STORE SCREEN ADDRESS
         ST    3,TARGET+4              STORE SCREEN LENGHT
         ST    13,TARGET+8             STORE SCREEN LENGHT
         LA    1,TARGET                POINT TO PARAMETER LIST
         L     15,=V(PROGCPUT)         LOAD TPUT ADDRESS                DPSO7746
         BALR  14,15                   GO PUT TO SCREEN
         B     LEAVTPUT                EXIT TPUT ROUTINE
TSOTPUT  DS    0H
         TPUT  (R2),(R3),NOEDIT,WAIT,,BREAKIN,HIGHP,MF=(E,TPUTWK1)
LEAVTPUT DS    0H
         L     R14,R14SAVER            RESTORE RETURN ADDRESS
         BR    R14                     RETURN
*---------------------------------------------------------------------*
TGETSCR  DS    0H
         ST    R14,R14SAVER            STORE RETURN ADDRESS
         CLI   CICSREQ,C'Y'            Q. CICS ENVIRONMENT
         BNE   TSOTGET                    N. BYPASS
*---------------------------------------------------------------------*
*   CALL PROGRAM THAT ISSUES A 'EXEC CICS RECEIVE' COMMAND            *
*---------------------------------------------------------------------*
         ST    2,TARGET                STORE SCREEN ADDRESS
         ST    3,TARGET+4              STORE SCREEN LENGHT
         ST    13,TARGET+8             STORE SCREEN LENGHT
         LA    1,TARGET                POINT TO PARAMETER LIST
         L     15,=V(PROGCGET)                                          DPSO7746
         BALR  14,15
         B     LEAVTGET                EXIT TGET ROUTINE
TSOTGET  DS    0H
         TGET  (R2),(R3),ASIS,WAIT,MF=(E,TGETWK1)
LEAVTGET DS    0H
         L     R14,R14SAVER            RESTORE RETURN ADDRESS
         BR    R14                     RETURN
                                                                SPACE 1
*#####################################################################*
EXITPR00 DS    0H
         MVC   SCRNMSG(23),=C'Changes have been made.'
         MVI   RCODE,C'0'              ZET ZERO RETURN CODE
         B     EXITPROG                GO TO COMMON EXIT
EXITPR04 DS    0H
         MVI   RCODE,C'0'              ZET ZERO RETURN CODE
         B     EXITPROG                GO TO COMMON EXIT
EXITPR08 DS    0H
         MVC   SCRNMSG(24),=C'Change screen abandoned.'
         MVI   RCODE,C'8'              ZET ZERO RETURN CODE
EXITPROG DS    0H
         CLI   AUTH,C'Y'               Q. AUTHORISED FLAG SET
         BNE   NOTAUTH2                   N. BYPASS
         MODESET KEY=NZERO             TURN MODESET OFF
NOTAUTH2 DS    0H          N. BYPASS
         LA    R2,PROGDMP4             SCREEN ADDRESS
         LA    R3,SCRSZ4               LOAD SCREEN SIZE
         BAL   R14,TPUTSCR             DISPLAY SCREEN
         RACKOFF RC=0,LIST=NO
                                                                SPACE 1
*=====================================================================*
*---------------------------------------------------------------------*
         LTORG
*---------------------------------------------------------------------*
         DS    0D
SPACES   DC    CL80' '
LIN#0401  SBADC 04,01,PLN,B,O
*---------------------------------------------------------------------*
TRTHEXVL DC    X'01010101010101010101010101010101'          00-0F
         DC    X'01010101010101010101010101010101'          10-1F
         DC    X'01010101010101010101010101010101'          20-2F
         DC    X'01010101010101010101010101010101'          30-3F
         DC    X'01010101010101010101010101010101'          40-4F
         DC    X'01010101010101010101010101010101'          50-5F
         DC    X'01010101010101010101010101010101'          60-6F
         DC    X'01010101010101010101010101010101'          70-7F
         DC    X'01010101010101010101010101010101'          80-8F
         DC    X'01010101010101010101010101010101'          90-9F
         DC    X'01010101010101010101010101010101'          A0-AF
         DC    X'01010101010101010101010101010101'          B0-BF
         DC    X'01000000000000010101010101010101'          C0-CF
         DC    X'01010101010101010101010101010101'          D0-DF
         DC    X'01010101010101010101010101010101'          E0-EF
         DC    X'00000000000000000000010101010101'          F0-FF
*---------------------------------------------------------------------*
* 3270 data stream to convert register display screen ito input       *
* fields.                                                             *
*---------------------------------------------------------------------*
PROGDMPR  DS    0D
          WCCDC W,,COLOR
          SBADC 05,14,UHY,G,O
          SBADC 05,23,PHN,T,O
          SBADC 06,14,UHY,G,O
          SBADC 06,23,PHN,T,O
          SBADC 07,14,UHY,G,O
          SBADC 07,23,PHN,T,O
          SBADC 08,14,UHY,G,O
          SBADC 08,23,PHN,T,O
          SBADC 09,14,UHY,G,O
          SBADC 09,23,PHN,T,O
          SBADC 10,14,UHY,G,O
          SBADC 10,23,PHN,T,O
          SBADC 11,14,UHY,G,O
          SBADC 11,23,PHN,T,O
          SBADC 12,14,UHY,G,O
          SBADC 12,23,PHN,T,O
          SBADC 13,14,UHY,G,O
          SBADC 13,23,PHN,T,O
          SBADC 14,14,UHY,G,O
          SBADC 14,23,PHN,T,O
          SBADC 15,14,UHY,G,O
          SBADC 15,23,PHN,T,O
          SBADC 16,14,UHY,G,O
          SBADC 16,23,PHN,T,O
          SBADC 17,14,UHY,G,O
          SBADC 17,23,PHN,T,O
          SBADC 18,14,PHY,Y,O
*         SBADC 18,23,PHN,T,O
          SBADC 19,14,UHY,G,O
          SBADC 19,23,PHN,T,O
          SBADC 20,14,UHY,G,O
          SBADC 20,23,PHN,T,O
SCRSZR   EQU   *-PROGDMPR
PROGDMP4  DS    0D
          WCCDC W,,COLOR
          SBADC 05,14,PHN,Y,O
          SBADC 06,14,PHN,Y,O
          SBADC 07,14,PHN,Y,O
          SBADC 08,14,PHN,Y,O
          SBADC 09,14,PHN,Y,O
          SBADC 10,14,PHN,Y,O
          SBADC 11,14,PHN,Y,O
          SBADC 12,14,PHN,Y,O
          SBADC 13,14,PHN,Y,O
          SBADC 14,14,PHN,Y,O
          SBADC 15,14,PHN,Y,O
          SBADC 16,14,PHN,Y,O
          SBADC 17,14,PHN,Y,O
          SBADC 18,14,PHN,Y,O
          SBADC 19,14,PHN,Y,O
          SBADC 20,14,PHN,Y,O
SCRSZ4   EQU   *-PROGDMP4
TPUTCON1 TPUT  MF=L
TPUTCONL EQU   *-TPUTCON1
TGETCON1 TGET  MF=L
TGETCONL EQU   *-TGETCON1
                                                                SPACE 1
*#####################################################################*
PROCESTB DS    0F
         LR    R2,R15                   R1 SET AS BASE
         USING PROCESTB,R2              BASE REGISTER
         LM    R10,R13,12(R15)          RESTORE REGISTERS FROM "BASES1"
         B     MOVEERR2                 BYPASS R10 - R13 SAVE AREA
BASES#12 DS    4F
XXXXXX2  DC    CL20'ESTAE IN PROGDUMR'  ESTAE EYE CATCHER
*---------------------------------------------------------------------*
MOVEERR2 DS    0H
         STM   R0,R13,BASES#22          STORE REGISTERS INTO "BASES2"
*---------------------------------------------------------------------*
*                                                                     *
*        CONTROL GETS HERE IF THE AN ABEND OCCURED DURING A MOVE      *
*        FROM SECONDARY TO PRIMARY. USUALLY CAUSED BY AN ADDRESS      *
*        EXCEPTION ERROR.                                             *
*                                                                     *
*---------------------------------------------------------------------*
         LA    R15,12
         CR    R0,R15                   Q. SDWA CREATED BY RTM2
         BE    MESTAER22                   N. DO NOT RETRY
         SETRP FRESDWA=YES,RC=4,RETADDR=MESTAER20,DUMP=NO
         BR    R14                      RETURN
MESTAER20 DS    0F
         LM    R0,R13,8(R15)            RESTORE REGISTERS
         B     MESTAER22
BASES#22  DS    14F
MESTAER22 DS    0H
*---------------------------------------------------------------------*
         ICM   R4,B'0111',=C'ERR'    <=====
         MVI   RCODE,C'E'               SET RETURN CODE
         L     R1,ESTAERTN2             LOAD ESTAE RETURN ADDRESS
         LR    R5,R1     <=======
         BR    R1                       CONTINUE
ESTAERTN2 DS    A                       RETURN ADDRESS FROM ESTAE
*--------------------------<=======-----------------------------------*
*---------------------------------------------------------------------*
         COPY  PROGDUMA                 ISSUE AN ERASE/WRITE "WCC"
                                                                SPACE 1
*#####################################################################*
WORKARE1 DSECT
  DS           18F                      REGISTER SAVE AREA ON ENTRY
SAVSUB21 DS    18F                      SUBROUTINE 1 SAVE AREA
SAVSUB22 DS    18F                      SUBROUTINE 2 SAVE AREA
R14SAVE1 DS    F
R14SAVE2 DS    F
PDUMPPL@ DS    F
TRACEIT  DS    CL1                      PROGDUMP (PDUMP$) TRACE FLAG
SBAW1    SBA   TARGETX,TARGET,MF=L
TPUTWK2  TPUT  MF=L
TGETWK2  TGET  MF=L
REPLY2   DS    CL1680                   REPLY2
WORK1LEN EQU   *-WORKARE1
                                                                SPACE 1
*#####################################################################*
PDUMPPL  DSECT
         DS    8F                       PARAMETER LIST AREA
PREGS    DS    16F                      REGISTER SAVE AREA
PMESL    DS    H                        MESSAGE LENGTH
PMESS    DS    CL79                     MESSAGE
*---------------------------------------------------------------------*
         PUSH PRINT
         PRINT NOGEN
*
         IHASDWA DSECT=YES              ENTRY : SDWA
*
         POP PRINT
*---------------------------------------------------------------------*
         END
