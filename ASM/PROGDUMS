***********************************************************************
*                                                                     *
*  Title   : PROGDUMP DEBUGGER                                        *
*  System  : Program debugging                                        *
*  Module  : PROGDUMO                                                 *
*  Program : PROGDUMS                                                 *
*  Function: Maintain a chain of 20 last accessed addresses. Display  *
*            and control their recall using PF22 (up), PF23 (down)    *
*            and PF24 (cursor placement selection).                   *
*  Company : ASYSTS Pty. Ltd.                                         *
*  Author  : A. Kara                                                  *
*  Date    : 08/09/94                                                 *
*                                                                     *
***********************************************************************
*#####################################################################*
PROGDUMS KICKOFF (12),WORKARE1,WORK1LEN,LIST=NO
         LR    10,1                    PARAMETER ADDRESS
         LA    11,4095(10)             USE 11 AS SECOND BASE
         LA    11,1(11)                USE 11 AS SECOND BASE
         USING WORKAREA,10,11          ADDREASSABILY TO CALLERS DATA
         CLI   TARGET,C'O'             Q. SET UP DISPLAY SCREEN
         BNE   TESTOPTN                   N. NEXT TEST
                                                                SPACE 1
         BAL   14,DISPSLOT             GOT AND DISPLAY SLOTS
         B     EXITPROG                EXIT ON RETURN
                                                                SPACE 1
TESTOPTN DS    0H
         LH    2,CMDTRAC#              LOAD MAX NO OF ENTRIES
         LH    3,CMDTRACC              LOAD CURRENT POINTER
         CLI   TARGET,C'N'             Q. NEXT SLOT UPDATE REQUEST
         BNE   TESTOPTU                   N. NEXT TEST
         BAL   14,NEXTSLOT             GOT DROP IN NEXT SLOT
         B     EXITPROG                EXIT ON RETURN
TESTOPTU DS    0H
         CLI   TARGET,C'U'             Q. PREV SLOT UPDATE REQUEST
         BNE   TESTOPTD                   N. NEXT TEST
         BAL   14,PREVSLOT             GET PREV SLOT
         B     EXITPROG                EXIT ON RETURN
TESTOPTD DS    0H
         CLI   TARGET,C'D'             Q. PREV SLOT UPDATE REQUEST
         BNE   TESTOPTC                   N. NEXT TEST
         BAL   14,DOWNSLOT             GET PREV SLOT
         B     EXITPROG                EXIT ON RETURN
TESTOPTC DS    0H
         CLI   TARGET,C'C'             Q. PREV SLOT UPDATE REQUEST
         BNE   TESTOPT@                   N. NEXT TEST
         BAL   14,USECSRPS             USE CURSOR POSITION
         B     EXITPROG                EXIT ON RETURN
TESTOPT@ DS    0H
         CLI   TARGET,C'@'             Q. PF12 HIT
         BNE   TESTOPTX                   N. NEXT TEST
         BAL   14,PF12HIT              USE CURSOR POSITION
         B     EXITPROG                EXIT ON RETURN
TESTOPTX DS    0H
*  PDUMP$ CMDTRAC#,MSG='OPTION_NOT_DEVP'
EXITPROG DS    0H
         RACKOFF RC=0
                                                                SPACE 1
NEXTSLOT DS    0H
         ST    14,R14SAVE1             SAVE RETURN REGISTER
         LTR   3,3                     Q. FIRST TIME THROUGH
         BZ    PROCNEW@                   y. GO PROCESS IT
         LR    4,3                     USE 15 AS WORK
         BCTR  4,0                     RELATIVE DISPALCEMENT
         SLL   4,2                     MULTIPLY BY 4
         LA    1,CMDTRACE              POINT TO START OF SLOTS
         AR    4,1                     POINT TO CURRENT ADDRESS
         CLC   0(4,4),PROGADRS         Q. CHANGED ADDRESSES
         BE    RETMAIN1                   Y. RETURN WITHOUT CHANGE
PROCNEW@ DS    0H
         LA    3,1(3)                  BUMP CURRENT POINTER
         CR    3,2                     Q. HIGHER THAN MAX ENTRIES
         BNH   PLUGITIN                   N. PLUG IT IN
         LA    3,1                     GO WRAPIT IT
PLUGITIN DS    0H
         STH   3,CMDTRACC              STORE CURRENT POINTER
         LH    1,CMDTRACL              LOAD LAST POINTER
         CR    3,1                     Q. NEW POINTER GREATER THAN LAST
         BNH   BYPASS01                   N. BYPASS
         STH   3,CMDTRACL              STORE LAST POINTER
BYPASS01 DS    0H
         BCTR  3,0                     BACK 1 FOR RELATIVE POSITION
         SLL   3,2                     MULTIPLY BY 4
         LA    1,CMDTRACE              LOAD START OF TABLE
         AR    1,3                     POINT INTO TABLE
         ST    6,0(1)                  SAVE IN TABLE
RETMAIN1 DS    0H
         L     14,R14SAVE1             RESTORE RETURN REGISTER
         BR    14                      RETURN TO CALLER
                                                                SPACE 1
*---------------------------------------------------------------------*
* SCROLL DOWN TO THE PREVIOUS POSITION. WRAP AROUND IF AT THE BOTTOM  *
* OF THE TABLE.                                                       *
*---------------------------------------------------------------------*
DOWNSLOT DS    0H
         ST    14,R14SAVE1             SAVE RETURN REGISTER
         LA    3,1(3)                  POINT TO NEXT SLOT
         CH    3,CMDTRACL              Q. PAST LAST POINTER
         BNH   NEWDOWN@                   N. BYPASS
         LA    3,1                     POINT TO SLOT 1
NEWDOWN@ DS    0H
         STH   3,CMDTRACC              STORE CURRENT POINTER
         BCTR  3,0                     BACK 1 FOR RELATIVE POSITION
         LR    4,3                     USE 15 AS WORK REGISTER
         SLL   4,2                     MULTIPLY BY 4
         LA    1,CMDTRACE              LOAD START OF TABLE
         AR    1,4                     POINT INTO TABLE
         MVC   PROGADRS(4),0(1)        MOVE IN NEW ADDRESS
         L     14,R14SAVE1             RESTORE RETURN REGISTER
         BR    14                      RETURN TO CALLER
                                                                SPACE 1
*---------------------------------------------------------------------*
* SCROLL UP TO THE PREVIOUS POSITION. WRAP AROUND IF AT THE TOP OF    *
* THE TABLE.                                                          *
*---------------------------------------------------------------------*
PREVSLOT DS    0H
         ST    14,R14SAVE1             SAVE RETURN REGISTER
         BCTR  3,0                     BUMP BACK ONE
         LTR   3,3                     Q. ZERO POINTER
         BNZ   NEWPREV1                   N. BYPASS
         LH    3,CMDTRACL              LOAD HIGHEST USED POINTER
NEWPREV1 DS    0H
         STH   3,CMDTRACC              STORE CURRENT POINTER
         BCTR  3,0                     BUMP BACK ONE
         LR    4,3                     USE 15 AS WORK REGISTER
         SLL   4,2                     MULTIPLY BY 4
         LA    1,CMDTRACE              LOAD START OF TABLE
         AR    1,4                     POINT INTO TABLE
         MVC   PROGADRS(4),0(1)        MOVE IN NEW ADDRESS
         L     14,R14SAVE1             RESTORE RETURN REGISTER
         BR    14                      RETURN TO CALLER
                                                                SPACE 1
*---------------------------------------------------------------------*
* Move screen to work area and tag overlay on end.                    *
* Note on entry R2 -> screen and R3 is the length.                    *
*---------------------------------------------------------------------*
DISPSLOT DS    0H
         ST    14,R14SAVE1             SAVE RETURN REGISTER
         LA    6,PROGVAR1              LOAD SCREEN DISPLAY CONSTANT
         LA    8,PROGCON1              LOAD SCREEN DISPLAY DSECT @
         LA    7,PSIZEB                LOAD SCREEN SISE
         LR    9,7                     LOAD SCREEN SISE
         ICM   9,B'1000',C' '          FILL CHARACTER
         MVCL  6,8                     MOVE SCREEN DISPLAY AREA
         LA    6,PROGVAR1              LOAD SCREEN DISPLAY CONSTANT
         LH    9,CMDTRACL              LOAD LAST USED COUNTER
         LTR   9,9                     Q. ANY TRACE ENTRIES
         BZ    SENDSCRN                   N. BYPASS SLOTS PORCESSING
*                                            WITH R2/R3 SET ON ENTRY
         LA    8,O0573                 OUTPUT ADDRESS LINE 5 COL 73
         LA    7,CMDTRACE              SOURCE ADDRESS
         LA    4,INPINCR               LENGTH BETWEEN OUTPUT DATA
LOOPBLD1 DS    0H
         HEXCHMAC 0(7),0(8),4,MF=E,LIST=Y
         AR    8,4                     BUMP BY OUTPUT LENGTH
         LA    7,4(7)                  NEXT ADDRESS
         BCT   9,LOOPBLD1              LOOP TILL END
         LA    1,LINE0572+8            1ST STACK ENTRY'S COLOR
         LH    9,CMDTRACC              LOAD CURRENT STACK POINTER
         BCTR  9,0                     RELATIVE POSITION
         XR    8,8                     INITIALISE EVEN REGISTER
         MR    8,4                     MULTIPLY BY ENTRY LENGTH
         AR    1,9                     DISPLACEMENT
         MVI   0(1),#PINK              SET ACTIVE CHAIN ADDRESS COLOR
SETUPSCR DS    0H
         LA    0,DATA1                 WORKAREA AS DESTINATION
         LR    1,3                     LOAD BUFFER LENGTH
         LR    14,2                    SOURCE (ORIGINAL SCREEN)
         LR    15,1                    CLEAR REGISTER
         ICM   15,B'1000',=C' '        SET PAD CHARACTER
         MVCL  0,14                    MOVE DATA
         LA    0,DATA1(3)              DESTINATION PAST ORIGINAL SCREEN
         LA    1,PSIZEB                LOAD 'OVERLAY' BUFFER LENGTH
         AR    3,1                     ADD OVERLAY LENGTH
         LA    14,PROGVAR1             LOAD 'OVERLAY' BUFFER ADDRESS
         LR    15,1                    LOAD MOVE LENGTH
         ICM   15,B'1000',=C' '        SET PAD CHARACTER
         MVCL  0,14                    MOVE DATA
         LA    2,DATA1                 POINT TO NEW BUFFER ADDRESS
SENDSCRN DS    0H
*        TPUT  (2),(3),NOEDIT,WAIT,,BREAKIN,HIGHP,MF=(E,TPUTWK1)
         BAL   14,TPUTSCR             CALL TPUT ROUTINE
RETMAIN2 DS    0H
         L     14,R14SAVE1             RESTORE RETURN REGISTER
         BR    14                      RETURN TO CALLER
                                                                SPACE 1
*---------------------------------------------------------------------*
* INTERROGATE CURSOR POSITION.                                        *
*---------------------------------------------------------------------*
USECSRPS DS    0H
         ST    14,R14SAVE1             SAVE RETURN REGISTER
*---------------------------------------------------------------------*
         MVC   TARGETX(2),REPLY+1      MOVE CURSOR POS TO SOURCE
         FBA   TARGETX,TARGETX+4       GET CURSOR POSITION IN HEX
         LH    R1,TARGETX+4            MOVE CURSOR LINE TO R9
         CLC   TARGETX+4(2),=H'5'      Q. IS CURSOR BEFORE LINE 5
         BL    ERRORET2                   Y. TELL OF ERROR
         CLC   TARGETX+4(2),=H'23'     Q. IS CURSOR AFTER LINE 23
         BH    ERRORET2                   Y. TELL OF ERROR
         LH    R3,TARGETX+4            MOVE CURSOR LINE TO R9
         SH    R3,=H'4'                SUBTRACT NON DATA LINES
         CH    3,CMDTRACL              Q. PAST LAST USED SLOT
         BH    ERRORET2                   Y. TELL OF ERROR
CALCSCRL DS    0H
         STH   3,CMDTRACC              STORE CURRENT POINTER
         BCTR  3,0                     BUMP BACK ONE
         LR    4,3                     USE 15 AS WORK REGISTER
         SLL   4,2                     MULTIPLY BY 4
         LA    1,CMDTRACE              LOAD START OF TABLE
         AR    1,4                     POINT INTO TABLE
         MVC   PROGADRS(4),0(1)        MOVE IN NEW ADDRESS
         B     RETMAIN3                BYOASS ERROR MESSAGE
ERRORET2 DS    0H
         MVC   SCRNMSG(25),=C'Invalid-cursor-placement.'
RETMAIN3 DS    0H
         L     14,R14SAVE1             RESTORE RETURN REGISTER
         BR    14                      RETURN TO CALLER
                                                                SPACE 1
*---------------------------------------------------------------------*
PF12HIT  DS    0H
         ST    14,R14SAVE1             SAVE RETURN REGISTER
*---------------------------------------------------------------------*
         MVC   TARGETX(2),REPLY+1      MOVE CURSOR POS TO SOURCE
         FBA   TARGETX,TARGETX+4       GET CURSOR POSITION IN HEX
         CLC   TARGETX+4(2),=H'4'      Q. IS CURSOR BEFORE LINE 5
         BL    ERRORET2                   Y. TELL OF ERROR
         CLC   TARGETX+4(2),=H'23'     Q. IS CURSOR AFTER LINE 23
         BH    ERRORET2                   Y. TELL OF ERROR
         CLC   TARGETX+6(2),=H'18'     Q. IS CURSOR BEFORE DISP X'0'
         BL    ERRORET2                   Y. TELL OF ERROR
         CLC   TARGETX+6(2),=H'52'     Q. IS CURSOR BEFORE DISP X'F'
         BH    ERRORET2                   Y. TELL OF ERROR
         LH    9,TARGETX+4             MOVE CURSOR LINE
         SH    9,=H'4'                 SUBTRACT NON DATA LINES
         MH    9,=H'80'                DISPLACEMNET BY LINES
         AR    9,6                     USE R9 AS WORK REGISTER
         LR    7,9                     DISPLACEMNET INTO DISPLAY
         AH    7,TARGETX+6             MOVE CURSOR COLUMN
         SR    7,9                     FIND DISPLACEMENT INTO LINE
         SH    7,=H'16'                POINT PAST ADDRESS/DISPLACEMENT
         AH    9,=H'16'                POINT PAST ADDRESS/DISPLACEMENT
         XR    6,6                     INITIALISE EVEN PAIR
         D     6,=F'9'                 DIVIDE BY ENTRY LENGTH
         MH    7,=H'9'                 MULTIPLE QUOTIENT BY ENTRY LEN
         AR    9,7                     POINT TO START OF ADDRESS
         CHHEXMAC 0(9),PROGADRS,8,ERRORET2,MF=E,LIST=Y
RETMAIN4 DS    0H
         L     14,R14SAVE1             RESTORE RETURN REGISTER
         BR    14                      RETURN TO CALLER
                                                                SPACE 1
*=====================================================================*
TPUTSCR  DS    0H
         ST    14,R14SAVE2             STORE RETURN ADDRESS
         CLI   CICSREQ,C'Y'            Q. CICS ENVIRONMENT
         BNE   TSOTPUT                    N. BYPASS
*---------------------------------------------------------------------*
*   CALL PROGRAM THAT ISSUES A 'EXEC CICS SEND' COMMAND               *
*---------------------------------------------------------------------*
         LA    2,2(2)                  POINT PAST THE WCC
         ST    2,TARGET                STORE SCREEN ADDRESS
         SH    3,=H'2'                 LESS LENGTH OF WCC
         ST    3,TARGET+4              STORE SCREEN LENGHT
         ST    13,TARGET+8             STORE SCREEN LENGHT
         LA    1,TARGET                POINT TO PARAMETER LIST
         L     15,=V(PROGCPUT)         LOAD TPUT ADDRESS                DPSO7746
         BALR  14,15                   GO PUT TO SCREEN
         B     LEAVTPUT                EXIT TPUT ROUTINE
TSOTPUT  DS    0H
         TPUT  (2),(3),NOEDIT,WAIT,,BREAKIN,HIGHP,MF=(E,TPUTWK1)
LEAVTPUT DS    0H
         L     14,R14SAVE2             RESTORE RETURN ADDRESS
         BR    14                      RETURN
*---------------------------------------------------------------------*
*=====================================================================*
*#####################################################################*
         LTORG
#BLUE    EQU   X'F1'                   COLOR
#RED     EQU   X'F2'                   COLOR
#PINK    EQU   X'F3'                   COLOR
#GREEN   EQU   X'F4'                   COLOR
#TURQ    EQU   X'F5'                   COLOR
#YELLOW  EQU   X'F6'                   COLOR
#WHITE   EQU   X'F7'                   COLOR
*---------------------------------------------------------------------*
SPACES   DC    CL80' '                 SPACES
*ROGCON1  DC   X'F1C2'
PROGCON1  DS   0F
          DC   X'11C4F72902C0F442F6'
          DC   CL08'-Chain--'
          DC   X'2902C0F442F1'
          DC   X'11C6C72902C0F442F7'
          DC   CL08' '
          DC   X'2902C0F442F1'
          DC   X'11C7D72902C0F442F7'
          DC   CL08' '
          DC   X'2902C0F442F1'
          DC   X'11C8E72902C0F442F7'
          DC   CL08' '
          DC   X'2902C0F442F1'
          DC   X'11C9F72902C0F442F7'
          DC   CL08' '
          DC   X'2902C0F442F1'
          DC   X'114BC72902C0F442F7'
          DC   CL08' '
          DC   X'2902C0F442F1'
          DC   X'114CD72902C0F442F7'
          DC   CL08' '
          DC   X'2902C0F442F1'
          DC   X'114DE72902C0F442F7'
          DC   CL08' '
          DC   X'2902C0F442F1'
          DC   X'114EF72902C0F442F7'
          DC   CL08' '
          DC   X'2902C0F442F1'
          DC   X'1150C72902C0F442F7'
          DC   CL08' '
          DC   X'2902C0F442F1'
          DC   X'11D1D72902C0F442F7'
          DC   CL08' '
          DC   X'2902C0F442F1'
          DC   X'11D2E72902C0F442F7'
          DC   CL08' '
          DC   X'2902C0F442F1'
          DC   X'11D3F72902C0F442F7'
          DC   CL08' '
          DC   X'2902C0F442F1'
          DC   X'11D5C72902C0F442F7'
          DC   CL08' '
          DC   X'2902C0F442F1'
          DC   X'11D6D72902C0F442F7'
          DC   CL08' '
          DC   X'2902C0F442F1'
          DC   X'11D7E72902C0F442F7'
          DC   CL08' '
          DC   X'2902C0F442F1'
          DC   X'11D8F72902C0F442F7'
          DC   CL08' '
          DC   X'2902C0F442F1'
          DC   X'115AC72902C0F442F7'
          DC   CL08' '
          DC   X'2902C0F442F1'
          DC   X'115BD72902C0F442F7'
          DC   CL08' '
          DC   X'2902C0F442F1'
          DC   X'115CE72902C0F442F7'
          DC   CL08' '
          DC   X'2902C0F442F1'
          DC   X'115DF72902C0F442F7'
          DC   CL08' '
          DC   X'2902C0F442F1'
*---------------------------------------------------------------------*
WORKARE1 DSECT
         DS    18F                     REGISTER SAVE AREA ON ENTRY
R14SAVE1 DS    F
R14SAVE2 DS    F
*ROGVAR1  DC   X'F1C2'
PROGVAR1  DS   0F
LINE0472  DC   X'11C4F72902C0F442F6'
          DC   CL08'-Chain--'
          DC   X'2902C0F442F1'
LINE0572  DC   X'11C6C72902C0F442F7'
O0573     DC   CL08' '
          DC   X'2902C0F442F1'
LINE0672  DC   X'11C7D72902C0F442F7'
INPINCR   EQU  *-O0573
O0673     DC   CL08' '
          DC   X'2902C0F442F1'
LINE0772  DC   X'11C8E72902C0F442F7'
O0773     DC   CL08' '
          DC   X'2902C0F442F1'
LINE0872  DC   X'11C9F72902C0F442F7'
O0873     DC   CL08' '
          DC   X'2902C0F442F1'
LINE0972  DC   X'114BC72902C0F442F7'
O0973     DC   CL08' '
          DC   X'2902C0F442F1'
LINE1072  DC   X'114CD72902C0F442F7'
O1073     DC   CL08' '
          DC   X'2902C0F442F1'
LINE1172  DC   X'114DE72902C0F442F7'
O1173     DC   CL08' '
          DC   X'2902C0F442F1'
LINE1272  DC   X'114EF72902C0F442F7'
O1273     DC   CL08' '
          DC   X'2902C0F442F1'
LINE1372  DC   X'1150C72902C0F442F7'
O1373     DC   CL08' '
          DC   X'2902C0F442F1'
LINE1472  DC   X'11D1D72902C0F442F7'
O1473     DC   CL08' '
          DC   X'2902C0F442F1'
LINE1572  DC   X'11D2E72902C0F442F7'
O1573     DC   CL08' '
          DC   X'2902C0F442F1'
LINE1672  DC   X'11D3F72902C0F442F7'
O1673     DC   CL08' '
          DC   X'2902C0F442F1'
LINE1772  DC   X'11D5C72902C0F442F7'
O1773     DC   CL08' '
          DC   X'2902C0F442F1'
LINE1872  DC   X'11D6D72902C0F442F7'
O1873     DC   CL08' '
          DC   X'2902C0F442F1'
LINE1972  DC   X'11D7E72902C0F442F7'
O1973     DC   CL08' '
          DC   X'2902C0F442F1'
LINE2072  DC   X'11D8F72902C0F442F7'
O2073     DC   CL08' '
          DC   X'2902C0F442F1'
LINE2172  DC   X'115AC72902C0F442F7'
O2173     DC   CL08' '
          DC   X'2902C0F442F1'
LINE2272  DC   X'115BD72902C0F442F7'
O2273     DC   CL08' '
          DC   X'2902C0F442F1'
LINE2372  DC   X'115CE72902C0F442F7'
O2373     DC   CL08' '
          DC   X'2902C0F442F1'
LINE2472  DC   X'115DF72902C0F442F7'
O2473     DC   CL08' '
*         DC   X'1140402902C0F442F6'
PSIZEB   EQU   *-PROGVAR1
DATA1    DS    CL4000
WORK1LEN EQU   *-WORKARE1
                                                                SPACE 1
*---------------------------------------------------------------------*
         COPY  PROGDUMA             COMMON WORK AREA
*---------------------------------------------------------------------*
         PUSH PRINT
         PRINT NOGEN
*
         IHASDWA DSECT=YES          ENTRY : SDWA
*
         POP PRINT
*---------------------------------------------------------------------*
         END
