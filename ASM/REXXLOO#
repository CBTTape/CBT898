***********************************************************************
*                                                                     *
*  Title   : REXX look.                                               *
*  Module  : REXXLOOK                                                 *
*  Program : REXXLOOK                                                 *
*  Function: Program to be called by any other program (eg. COBOL) to *
*            display program memory.                                  *
*            On entry, R1 should containg the pointer to a parameter  *
*            list.  This parameter list can be up to 79 bytes long.   *
*            It can containg anything but it is recommended to        *
*            contain a series of pointers from the calling program    *
*            to specific parts of memory. This program will call      *
*            SHOWSTOR whereby you can:                                *
*              . Navigate through memory                              *
*              . If the parameter list is well designed, yoy can use  *
*                the "/SIS(nn)" SHOWSTOR command to stack the pointers*
*                in the dot command area and quickly navigate through *
*                them using the dot command navigation feature.       *
*  Company : ASYSTS Pty. Ltd.                                         *
*  Author  : A. Kara                                                  *
*  Date    : 26/08/2005                                               *
*                                                                     *
***********************************************************************
REXXLOOK KICKOFF (R12)
*---------------------------------------------------------------------*
         LR    R3,R1                   LOAD PARAMETER POINTER
         ST    R1,MESSAGE              LOAD ADDRESS OF MESSAGE AREA
         PDUMPR ISPI=Y,MF=E X2CE=Y
         L     R2,MESSAGE              LOAD ADDRESS OF MESSAGE AREA
*        TM    0(R2),X'80'             Q. LAST ADDRESS IN CHAIN
*        BO    DMPWOMSG                   Y. DUMPIT WITHOUT MESSAGE
         L     R1,0(R2)                LOAD ADDRESS OF MESSAGE AREA
         MVC   MESSAGE,0(R1)           MOVE MESSAGE TO MESSAGE AREA
*        LA    R2,4(R2)                POINT PAST MESSAGE ADDRESS
         L     R1,0(R2)                LOAD ADDRESS OF MESSAGE AREA
         TM    0(R1),X'80'             Q. LAST ADDRESS IN CHAIN
         BNO   DMPWMSG                    N. DUMPIT
*        L     R2,0(R2)                   Y. DISPLAY THE SOLE DATA
DMPWMSG  DS    0H
         PDUMPR 0(R2),MF=E,MSG=MESSAGE(79) LIST=Y
         B     EXITPROG
DMPWOMSG DS    0H
         L     R2,0(R2)                LOAD ADDRESS OF MESSAGE AREA
         PDUMPR 0(R2),MF=E LIST=Y
EXITPROG RACKOFF
         DS    0F
REGSAVER DS    F
MESSAGE  DC    CL79' '
         LTORG
         PDUMPR MF=L,X2CL=Y
         END
