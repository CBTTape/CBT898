RNANY    KICKOFF (R11,R12),WORKAREA,WORKAREL,LIST=NO,HELP=NO,DREG=R10
         L     R1,0(R1)                LOAD PARAMETER LIST POINTER
         L     R9,0(R1)                LOAD NUMBER TABLE POINTER
         MVC   MIN(2),2(R1)            MOVE MINIMUM
         MVC   MAX(2),0(R1)            MOVE MINIMUM
         CLC   MIN(2),=H'0'            Q. MINIMUM VALUE MISSING
         BNE   CONT#100                   N. BYPASS
         MVC   MIN(2),=H'1'            MOVE MINIMUM
CONT#100 DS    0H
         MVC   XTRA(8),=C'00000004' <======
         LA    R9,NUMBERS              <======
         MVC   MIN(2),=H'1'            <=====
         MVC   MAX(2),=H'500'          <=====
         PDUMP MAX,MSG='ZAP 2 BYTES IN DECIMAL',QUIT=EXITPR00
*---------------------------------------------------------------------*
         TIME  DEC                     GET TIME  => IN R0
         ST    R0,SEED                 SAVE TIME IN SEED
         HEXCHMAC SEED,WORK1,3
         MVC   TARGET(2),WORK1         HH
         MVC   TARGET+2(2),WORK1+2     MM
         MVC   TARGET+4(2),WORK1+4     SS
         TIME
*   FORMAT YYDDD
         ST    R1,WORK1                USE WORK1 AS WORK AREA
         UNPK  WORK2(5),WORK1+1(3)     UNPACK "DDD" INTO WORK2 WORK
         MVC   TARGET(2),WORK2         MOVE FIRST TWO DAYS TO TARG
         CLI   TARGET,C'0'             Q. IS NUMBER < "0"99999
         BNE   CONVSEED                   N. BYPASS
         MVI   TARGET,C'1'             Y. UP IT BY 1000000
CONVSEED DS    0H
         PACK  DWORK8(8),TARGET(6)
         CVB   R1,DWORK8               CONVERT TO BINARY
         ST    R1,SEED#                SAVE AS NEW SEED
*---------------------------------------------------------------------*
         LH    R3,MAX                  LOAD MAXIMUM LIMIT
         LH    R1,MIN                  LOAD MINIMUM
         SR    R3,R1                   SUBTRACT MINIMUM LIMIT
         LA    R3,1(R3)                BUMP BY 1 FOR ACTUAL NO REQ'D
         STH   R3,RANGE                STORE RANGE
         BCTR  R1,0                    DECREMENT BY 1
         STH   R1,DIFF                 STORE DIFFERENCE
         LA    R8,0                    NUMBERS GOT COUNTER
         LR    R2,R9                   R2 NUMBERS DESTINATION POINTER
         OPEN  (RNFILE,(OUTPUT))    <=======
         MVC   TARGET,SPACES           <======
         LA    R1,4                    OUTER LOOP COUNTER
LOOP0    DS    0H
         STH   R1,OUTLOOP              STORE OUTER LOOP COUNTER
         L     R1,SEED#                SAVE AS NEW SEED
         ST    R1,SEED                 SAVE AS NEW SEED
*        LA    R1,0004(R1)             DECREASE SEED BY 5 FOR LATER
         PACK  DWORK8(8),XTRA(8)     <=====
         CVB   R14,DWORK8            <=====
         AR    R1,R14                <=====
         ST    R1,SEED#                SAVE AS NEW SEED
*---------------------------------------------------------------------*
*---------------------------------------------------------------------*
*  DUMMY FIRST SEED                                                   *
*---------------------------------------------------------------------*
         L     R5,=F'15625'
         XR    R4,R4                   INIT EVEN REG
         M     R4,SEED                 MULT EVEN REG PAIR BY SEED
         AL    R5,=F'22221'            ADD LOGICAL
         BC    14,CONT0                BYPASS IF NO CARRY
         LA    R4,1(R4)                MOVE CARRY TO EVEN REG
CONT0    DS    0H
         D     R4,DIVISOR              DIVIDE BY 2 ** 31
         ST    R4,SEED                 REMAINDER (EVEN REG) NEW SEED
         LH    R3,RANGE                LOAD RANGE
*<====== SLL   R3,2                    REPEAT FOUR TIMES
LOOP1    DS    0H
         L     R5,=F'15625'
         XR    R4,R4                   INIT EVEN REG
         M     R4,SEED                 MULT EVEN REG PAIR BY SEED
         AL    R5,=F'22221'            ADD LOGICAL
         BC    14,CONT                 BYPASS IF NO CARRY
         LA    R4,1(R4)                MOVE CARRY TO EVEN REG
CONT     DS    0H
         D     R4,DIVISOR              DIVIDE BY 2 ** 31
         ST    R4,SEED                 REMAINDER (EVEN REG) NEW SEED
         XR    R4,R4
         LH    R5,RANGE                LOAD MAXIMUM LIMIT
         M     R4,SEED
*---------------------------------------------------------------------*
         D     R4,DIVISOR              DIVIDE BY 2 ** 31
         C     R5,=F'0'                Q. IS R5 < 0 IE NEGATIVE
         BNL   UPBYONE                    N. BYPASS
         MH    R5,=H'-1'               CONVERT TO POSITIVE
UPBYONE  DS    0H
         LA    R5,1(R5)                UP BY 1
         CH    R5,RANGE                Q. IS RETURNED # > MAX VALUE
         BH    NOTNEW#                     Y. BYPASS
         LR    R7,R5
         BCTR  R7,0                    DECREMENT BY 1 FOR REL DISPLACE
         LA    R6,TABLE                POINT TO START OF TABLE
         AR    R6,R7                   DISPALCEMENT INTO TABLE
         CLI   0(R6),X'00'             Q. NUMBER HIT ALREADY
         BNE   NOTNEW#                    Y. BYPASS
         AH    R5,DIFF                 ADD DIFFERENCE
         STH   R5,0(R2)                STORE NUMBER IN TABLE
         MVI   0(R6),X'01'             Q. NUMBER HIT ALREADY
         UNPACK R5,6,TARGET           <======
         PUT   RNFILE,TARGET          <======
         LA    R2,2(R2)                NEXT DESTINATION
         LA    R8,1(R8)                BUMP HITS COUNTER
NOTNEW#  DS    0H
         BCT   R3,LOOP1                LOOP TILL END
EXLOOP1  DS    0H
         LH    R1,OUTLOOP              LOAD OUTER LOOP COUNTER
         BCT   R1,LOOP0                LOOP TILL END
EXLOOP0  DS    0H
         STH   R8,NOFND                STORE NUMBERS FOUND
         CH    R8,RANGE                Q. GOT ALL NUMBERS
         BE    PRINTIT                    Y. BYPASS
*---------------------------------------------------------------------*
*   GET MISSING NUMBERS (PROCESS IN REVERSE ORDER)                    *
*---------------------------------------------------------------------*
         LA    R2,TABLE             <=======
         LH    R3,RANGE                NUMBERS REQUIRED
         SR    R3,R8                   NUMBERS GOT => NOS MISSING
         LA    R3,1(R3)                UP BY ONE
         LR    R8,R9                   START OF NUMBERS
         LH    R1,RANGE                NUMBERS REQUIRED
         BCTR  R1,0                    POINT TO LAST NUMBER
         SLL   R1,1                    MULTIPLY BY 2 (LENGTH OF ENTRY)
         AR    R8,R1                   POINT TO LAST NUMBER POSITION
         LA    R2,TABLE                START OF TABLE
         LA    R4,0                    CARD NUMBER COUNTER
         PDUMP XTRA,MSG='ZAP XTRA,R8=MISS,R2=TABL',QUIT=EXITPR00 <=====
LOOP3    DS    0H
         LA    R4,1(R4)                NEXT NUMBER
         CH    R4,RANGE                Q. LIMIT REACHED
         BH    EXLOOP3                    Y. EXIT LOOP
         CLI   0(R2),X'01'             Q. HAS # BEEN RETURNED PREV
         BE    NEXTTEST                   Y. TEST NEXT NUMBER
         LR    R1,R4                   MOVE TO WORK REGISTER
         AH    R1,DIFF                 ADD DIFFERENCE
         STH   R1,0(R8)                PUT TO END OF TABLE
         UNPACK R1,6,TARGET           <======
         PUT   RNFILE,TARGET          <======
         SH    R8,=H'2'                POINT TO PREV ENTRY
         LA    R2,1(R2)                NEXT NUMBER TO BE  TESTED
         BCT   R3,LOOP3                DECREASE MISS COUNTER + LOOP
         B     EXLOOP3                 MISS COUNTER = 0
NEXTTEST DS    0H
         LA    R2,1(R2)                NEXT ENTRY
         B     LOOP3                   LOOP
EXLOOP3  DS    0H
*---------------------------------------------------------------------*
*---------------------------------------------------------------------*
*   CONVERT TO CARDS                                                  *
*---------------------------------------------------------------------*
PRINTIT  DS    0H
         LH    R3,RANGE                LOOP COUNTER
         LA    R2,TABLE                RANDOM NUMBERS POINTER
LOOP5    DS    0H
*        LH    R6,0(R2)                HALFWORD NUMBER
*        BCTR  R6,0                    DECREASE  BY 1 FOR TABLE OFFSET
*        MH    R6,=H'2'                LENGTH OF TABLE ENTRY
*        AR    R6,R8                   START OF TRANSLATE TABLE ADR
*        MVC   0(2,R7),0(R6)           MOVE CARD NUMBER TO COMMON AREA
*        LA    R2,3(R2)                UP NUMBER POINTER
*        LA    R7,2(R7)                UP COMMON AREA POINTER
*        BCT   R3,LOOP5                LOOP TILL END
EXLOOP5  DS    0H
         CLOSE RNFILE              <=======
         B     CONT#100            <=======
EXITPR00 DS    0H
         RACKOFF RC=0
*---------------------------------------------------------------------*
         LTORG
         DS    0F
DIVISOR  DC    X'80000000'
*---------------------------------------------------------------------*
*-----------------------------<=======--------------------------------*
SPACES   DC    CL256' '
RNFILE   DCB   DDNAME=RNFILE,                                          X
               DSORG=PS,                                               X
               MACRF=(PM),                                             X
               LRECL=80,                                               X
               BLKSIZE=6160,                                           X
               RECFM=FB
*-----------------------------<=======--------------------------------*
WORKAREA DSECT
         DS    18F
SAVSUBR1 DS    18F                  SUBROUTINE 1 SAVE AREA
SAVSUBR2 DS    18F                  SUBROUTINE 2 SAVE AREA
SAVSUBR3 DS    18F                  SUBROUTINE 3 SAVE AREA
DWORK8   DS    D
WORK1    DS    CL8
WORK2    DS    CL8
SEED     DS    F
SEED#    DS    F
HALFWORD DS    H
BYTES    DS    0CL2
BYTE1    DS    CL1
BYTE2    DS    CL1
NOFND    DS    F
MIN      DS    H
MAX      DS    H
RANGE    DS    H
DIFF     DS    H
XTRA     DS    D
OUTLOOP  DS    H
TARGET   DS    CL80
NUMBERS  DS    CL1000
TABLE    DS    CL32760
WORKAREL EQU   *-WORKAREA
         END
