*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
**
**       TITLE:    'READ A VSAM DATASET'
**       SYSTEM:   N/A
**       MODULE:   RVSMDISP
**       PROGRAM:  RVSMMAIN
**       FUNCTION: TO DISPLAY A SCREEN FULL OF DATA AND INTERCEPT
**                 SCROLLING ACTION.
**       AUTHOR:   A. KARA.
*
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
RVSMDISP KICKOFF (R13)
         LR    R12,R1                  ADDRESABILITY TO COMMON DATA
         USING RVSMCOMA,R12            ADDRESABILITY TO COMMON DATA
*---------------------------------------------------------------------*
         ISPINIT                       INITIALISE ISPF ENVIRONMENT
MOVEDATA DS    0H
         LA    R1,RVSMCOMA             ADDRESS OF COMMON AREA
         CALL  RVSMMDAT                MOVE DATA
DISPSCR1 DS    0H
         MVC   ZCMD,SPACES             CLEAR COMMAND LINE
DISPSCR2 DS    0H
         MVI   RCODE,C'0'              SET ZERO RETURN CODE
         MVC   @OFLINES(2),#OFLINES    SAVE DOSPLAYABLE LINES
         ISPEXEC 'CONTROL ERRORS CANCEL'
         ISPEXEC 'DISPLAY PANEL(READVSAM)'
         LTR   R15,R15                 Q. PF3 USER
         BZ    TESTPFK                    Y. TEST WHAT KEY ENTERED
         MVI   RCODE,C'9'              SET ERROR RETURN CODE
         B     EXITPR00                GO TO COMMON EXIT POINT RC=0
TESTPFK  DS    0H
         MVC   SCSR(16),CSR            SAVE CURSOR POSITIONING
         MVC   CSR,SPACES              INITIALISE CURSOR
         MVC   CSRP,SPACES             INITIALISE CURSOR POSITION
         TR    PARM,TRTUPPER           CONVERT TO UPPER CASE
         TR    ZCMD,TRTUPPER           CONVERT TO UPPER CASE
         ISPEXEC 'VGET (ZVERB ZSCROLLA ZSCROLLN) SHARED'
         PACK  DWORK8(8),#OFLINES(4)   PACK DISPLAYABLE LINES
         CVB   R1,DWORK8               CONVERT TO BINARY
         BCTR  R1,0                    -1 FOR KEY INDICATOR
         STH   R1,#OFLINES             STORE NUMBER OF LINES
         CLC   ZSCROLLN(4),SPACES      Q. SCROLL AMOUNT PASSED
         BE    TESTHEXO                   N. DO NOT SUBTRACT
         PACK  DWORK8(8),ZSCROLLN(4)   PACK SCROLL AMOUNT
         CVB   R3,DWORK8               CONVERT TO BINARY
         STH   R3,SCROLLN              STORE SCROLL AMOUNT
         CLC   ZVERB(5),=C'RIGHT'      Q. SCROLL RIGHT
         BE    SCRLRGHT                   Y. GO SCROLL RIGHT
         CLC   ZVERB(4),=C'LEFT'       Q. SCROLL LEFT
         BE    SCRLLEFT                   Y. GO SCROLL LEFT
         MVI   EMPT1STI,C'N'           SET EMPTY FLAG OFF AS ACTION
         CLC   ZSCROLLA(3),=C'CSR'     Q. SCROLLING ON CURSOR
         BNE   TESTHEXO                   N. DO NOT SUBTRACT
         CLC   ZVERB(2),=C'UP'         Q. SCROLLING UP
         BNE   SUB1SCR1                   N. SUBTRACT 1 FROM SCROLL AMT
         CLI   HEXON,C'Y'              Q. HEX TURNED ON FOR SCRL UP
         BNE   TESTHEXO                   N. DO NOT SUBTRACT
         LA    R3,4(R3)                ADD 1 WITH HEX ON
         B     TESTHEXO                BYPASS SUBTRACT
SUB1SCR1 DS    0H
         BCTR  R3,0                    SUBTRACT 1 FOR DUMMY TOP
NOCRSMP1 DS    0H
         STH   R3,SCROLLN              STORE SCROLL AMOUNT
TESTHEXO DS    0H
         CLI   HEXON,C'N'              Q. HEX TURNED ON
         BE    TESTSCRL                   N. BYPASS
         LH    R5,#OFLINES             LOAD NUMBER OF DISPLAYABLE LINES
         XR    R4,R4                   INITIALISE EVEN PAIR
         D     R4,=F'4'                DIVIDE BY 4 (LINES/HEX)
         CLC   ZCMD(2),=C'F '          Q. REQUEST TO FIND
         BE    DONTPLS1                   Y. SEE IF TOP OF DATASET
         CLC   ZCMD(5),=C'RFIND'       Q. IS COMMAND REFIND
         BE    DONTPLS1                   Y. SEE IF TOP OF DATASET
DOPLUS1  DS    0H
         LA    R5,1(R5)                ADD 1 MORE (IT WORKS)
DONTPLS1 DS    0H
*---------------------------------------------------------------------*
         STH   R5,#OFLINES             STORE DISPLAYABLE HEX LINES
         CLC   ZSCROLLN(4),SPACES      Q. SCROLL AMOUNT PASSED
         BE    TESTZCMD                   N. TEST COMMAND
         CLC   ZSCROLLA(3),=C'CSR'     Q. CURSOR SCROLL
         BNE   TESTSCRL                   N. BYPASS
         XR    R2,R2                   INITIALISE EVEN PAIR
         D     R2,=F'4'                DIVIDE BY 4 (LINES/HEX)
         CLC   ZVERB(2),=C'DOWN'       Q. SCROLLING UP
         BNE   CONT#000                   N. BYPASS
         LA    R3,1(R3)                ALLOW FOR RELATIVE POSITION
CONT#000 DS    0H
         CLC   ROWPTR(4),=F'0'         Q. AT TOP OF PAGE
         BNE   NOHEXREM                   N. BYPASS
HEXADD1  DS    0H
         LA    R3,1(R3)                ALLOW FOR RELATIVE POSITION
NOHEXREM DS    0H
         CLI   HEXON,C'Y'              Q. HEXON
         BNE   STRSCRLN                   N. STORE SCROLL AMOUNT
         CLC   ZSCROLLA(3),=C'CSR'     Q. CURSOR SCROLL
         BNE   STRSCRLN                   N. STORE SCROLL AMOUNT
         BCTR  R3,0                    SUBTRACT 1 FOR CURSOR SCROLL
STRSCRLN DS    0H
         STH   R3,SCROLLN              STORE SCROLL AMOUNT
TESTSCRL DS    0H
         CLC   ZVERB(2),=C'UP'         Q. UP PF KEY USED
         BE    SCRLUP                     Y. GO SCROLL UP
         CLC   ZVERB(4),=C'DOWN'       Q. UP PF KEY USED
         BE    SCRLDOWN                   Y. GO SCROLL DOWN
TESTZCMD DS    0H
         CLC   ZCMD(3),=C'HEX'         Q. HEX REQUEST
         BE    HEXONL                     Y. GO TURN IT ON
         CLC   ZCMD(3),=C'COL'         Q. COL REQUEST
         BE    COLONL                     Y. GO TURN IT ON
         MVI   EMPT1STI,C'N'           SET EMPTY FLAG OFF AS ACTION
         CLC   ZCMD(4),=C'EDIT'        Q. EDIT
         BE    EDITON                     Y. GO CHANGE TO EDIT
         CLC   ZCMD(6),=C'BROWSE'      Q. BROWSE
         BE    BROWSEON                   Y. GO CHANGE TO BROWSE
         CLC   ZCMD(4),=C'FIND'        Q. FIND
         BE    FINDIT                     Y. GO FIND STRING
         CLC   ZCMD(2),=C'F '          Q. FIND
         BE    FINDIT                     Y. GO FIND STRING
         CLC   ZCMD(5),=C'RFIND'       Q. REFIND KEY USED
         BE    GOANDFND                   Y. GO REFIND IT
         CLC   ZCMD(3),=C'TOP'         Q. GO TO TOP
         BE    TOPOFFIL                   Y. GOTO THE TOP
         CLC   ZCMD(3),=C'BOT'         Q. GO TO BOTTOM
         BE    SCRLDWNM                   Y. SCROLL MAXIMUM
         CLC   ZCMD,SPACES             Q. SPACES FOR COMMAND
         BNE   INVLZCMD                   N. REDISPLAY SCREEN WITH ERR
*---------------------------------------------------------------------*
         CLI   PANELID,C'B'            Q. BROWSING
         BE    DISPSCR2                   Y. REDISPLAY SCREEN
         LA    R1,RVSMCOMA             ADDRESS OF COMMON AREA
         CALL  RVSMENTR                CALL ENTER ROUTINE
         LTR   R15,R15                 Q. ZEROR RETURN CODE
         BZ    DISPSCR1                   Y. GO DISPLAY SCREEN
         B     ERRORDIS                REDISPLAY SCREEN WITH ERRORS
*---------------------------------------------------------------------*
INVLZCMD DS    0H
         MVC   GC011S(15),=C'INVALID COMMAND'
         MVC   GC011(55),=C'COMMAND ISSUED IS NOT A VALID VSAM EDIT/BROW
               WSE COMMAND.'
         B     ERRORDIS                REDISPLAY SCREEN
SCRLDOWN DS    0H
         CLC   NLOGR(4),=F'1'          Q. ANY RECORDS IN DATASET
         BNH   DISPSCR1                   Y. CANNOT SCROLL
         CLC   ZSCROLLA(3),=C'MAX'     Q. MAX SCROLL DOWN
         BE    SCRLDWNM                   Y. SCROLL MAXIMUM
         CLC   ROWPTR(4),NLOGR         Q. ROWPTR PAST EOF
         BH    DISPSCR1                   Y. CANNOT SCROLL
         B     NBOTFIL1                PROCESS AS NORMAL
SCRLDWNM DS    0H
         CLI   HITBOTOM,C'Y'           Q. HIT BOTTOM ALREADY
         BNE   HAVENOTK                   N. WILL NEED TO READ TILL END
         MVC   KEYTOP,KEYBOTM          MOVE KEY BOTTOM MAX TO TOP KEY
         MVI   VSAMOPER,C'F'           SET BACKWARD CHANGE OPERATION
         MVI   DIRC1GET,C'Y'           SET CHANGE DIRECTION GET FLAG
         LA    R1,RVSMCOMA             LOAD COMMON AREA ADDRESS
         CALL  RVSMREAD                CALL I/O OPERATION
         MVC   KEYTOP,KEYBOTM          MOVE KEY BOTTOM MAX TO TOP KEY
         B     HAVEBOTK                CONTINUE FROM THE BOTTOM
HAVENOTK DS    0H
         L     R7,NLOGR                LOAD # OF RECORDS (LOOP COUNTER)
         LA    R7,1(R7)                ENSURE WE GET TO THE BOTTOM
         ST    R7,#READ                STORE DISPLAYABLE LINES
         MVI   VSAMOPER,C'R'           SET READ ONLY OPERATION FLAG
         LA    R1,RVSMCOMA             LOAD COMMON AREA ADDRESS
         CALL  RVSMREAD                CALL I/O ROUTINE
*  INITIATE REVERSE READ
         MVC   KEYTOP,KEYBOT           MOVE KEY BOTTOM TO TOP
HAVEBOTK DS    0H
         MVI   VSAMOPER,C'B'           SET BACKWARD CHANGE OPERATION
         MVI   DIRC1GET,C'N'           SET CHANGE DIRECTION GET FLAG
         LA    R1,RVSMCOMA             LOAD COMMON AREA ADDRESS
         CALL  RVSMREAD                CALL I/O OPERATION
*  PERFORM REVERSE READ
         LH    R2,#OFLINES             LOAD # OF DISPLAY LINES
         CLI   HEXON,C'Y'              Q. IS HEX ON
         BNE   NOHEXCP1                   N. BYPASS HEX ON COMPENSATION
NOHEXCP1 DS    0H
         CLC   ROWPTR(4),=F'0'         Q. AT TOP OF PAGE
         BE    NTOPDISP                   Y. BYPASS READ COMPENSATE
         BCTR  R2,0                    SUBTRACT 1 FOR BOTTOM DISP
NTOPDISP DS    0H
         ST    R2,#READ                STORE DISPLAYABLE LINES
         MVI   VSAMOPER,C'R'           SET READ ONLY OPERATION FLAG
         LA    R1,RVSMCOMA             LOAD COMMON AREA ADDRESS
         CALL  RVSMREAD                CALL I/O ROUTINE
*  INITIATE REVERSE READ
         MVC   KEYTOP,KEYBOT           MOVE KEY BOTTOM TO TOP
         MVI   VSAMOPER,C'F'           SET BACKWARD CHANGE OPERATION
         MVI   DIRC1GET,C'N'           SET CHANGE DIRECTION GET FLAG
         LA    R1,RVSMCOMA             LOAD COMMON AREA ADDRESS
         CALL  RVSMREAD                CALL I/O OPERATION
         L     R1,NLOGR                LOAD NUMBER OF LOGICAL RECORDS
         SH    R1,#OFLINES             SUBTRACT NO OF LINES
         LA    R1,1(R1)                ADD 1 FOR BOTTOM COMMENT
         ST    R1,ROWPTR               STORE ROW POINTER
         B     EXRTN288                GO TO COMMON EXIT POINT RC=0
NBOTFIL1 DS    0H
         CLC   SCROLLN(2),#MAXLINE     Q. SCROLL OUTSIDE DISPLAY SCREEN
         BNL   NOREPOS1                   Y. BYPASS REPOSITIONING
         LH    R1,SCROLLN              LOAD NUMBER OF LINES TO SCROLL
         L     R11,ARRAY@              SOURCE ADDRESS
         LA    R11,4(R11)              + 4 FOR RECLEN
         L     R2,ROWPTR               LOAD ROW POINTER
         LR    R3,R2                   STORE ROW POINTER FOR LATER USE
         AR    R2,R1                   ADD SCROLL AMOUNT
         ST    R2,ROWPTR               LOAD ROW POINTER
         L     R10,LRECL               LOAD LENGTH OF RECORD
         LA    R10,4(R10)              + 4 FOR RECLEN/RECORD
         STH   R10,ALRECL              STORE ACTUAL LENGTH
         LTR   R3,R3                   Q. TOP OF FILE
         BNZ   PINARRAY                   N. BYPASS
         AH    R11,ALRECL              BYPASS DUMMY TOP OF DATA
         BCTR  R1,0                    SUBTRACT 1 FOR TOP OF PAGE
PINARRAY DS    0H
         MH    R1,ALRECL               MULTIPLY BY LENGTH OF RECORD
         AR    R11,R1                  DISPALCEMENT INTO TABLE
         AH    R11,RKP+2               ADD RELATIVE KEY POSITION
         L     R1,KEYLEN               LOAD KEY LENGTH
         BCTR  R1,0                    RELATIVE LENGTH
         LA    R10,KEYTOP              FUTURE SEARCH KEY
         EX    R1,MOVEKEY1             RIPPLE FILL REST
         MVI   VSAMOPER,C'F'           SET FORWARD CHANGE OPERATION
         MVI   DIRC1GET,C'N'           SET CHANGE DIRECTION GET FLAG
         LA    R1,RVSMCOMA             LOAD COMMON AREA ADDRESS
         CALL  RVSMREAD                CALL I/O OPERATION
         B     SCRLDWN3                GO GET DATA
NOREPOS1 DS    0H
         CLC   SCROLLN(2),#MAXLINE     Q. SCROLL OUTSIDE DISPLAY SCREEN
         BE    SCRLDWN2                   N. BYPASS REPOSITIONING
         LH    R1,SCROLLN              LOAD SCROLL AMOUNT
         L     R2,ROWPTR               LOAD ROW POINTER TO IT
         AR    R2,R1                   ADD SCROLL AMOUNT TO ROW POINTER
         ST    R2,ROWPTR               STORE NEW ROW POINTER
         SH    R1,#MAXLINE             SUBTRACT MAX LINES/SCREEN
         ST    R1,#READ                STORE DISPLAYABLE LINES
         MVI   VSAMOPER,C'R'           SET READ ONLY OPERATION FLAG
         LA    R1,RVSMCOMA             LOAD COMMON AREA ADDRESS
         CALL  RVSMREAD                CALL I/O ROUTINE
         MVC   KEYTOP,KEYBOT           MOVE KEY BOTTOM TO TOP
         B     SCRLDWN3                BYPASS ROWPTR ADJUSTMENT
SCRLDWN2 DS    0H
         L     R1,ROWPTR               LOAD ROW POINTER
         LH    R2,#OFLINES             ADD SCREEN SIZE
         CLC   ZSCROLLA(3),=C'CSR'     Q. SCROLL CALCULATED FROM CURSOR
         BE    CONT#100                   Y. KEEP CSR SCROLL AMOUNT
         LH    R2,#MAXLINE             ADD MAX SCREEN SIZE
CONT#100 DS    0H
         AR    R1,R2                   ADD SCREEN SIZE
         ST    R1,ROWPTR               STORE ROW POINTER
SCRLDWN3 DS    0H
         L     R5,NLOGR                LOAD NO OF LOGICAL RECORDS
         C     R5,ROWPTR               Q. NEW ROW PTR PAST EOF
         BH    EXRTN288                   N. EXIT ROUTINE
         CLEARV  DISPLAY               CLEAR DISPLAY AREA
         MVC   DISPLAY+1(79),=C'****** ************************* BOTTOMC
                OF DATA *******************************'
         MVI   DISPLAY,X'02'           MOVE ATTRIBUTE BYTE
         MVI   DISPLAY+7,X'03'         MOVE ATTRIBUTE BYTE
         CLI   PANELID,C'E'            Q. EDITING
         BE    DISPSCR1                   Y. BYPASS
         UNPACK R5,8,DSNAME+49         UNPACK ROW PTR IN TOP DISPLAY
         MVC   DISPLAY(8),=C'********' MOVE OVER EDIT DISPLAY
         B     DISPSCR1                GO DISPLAY SCREEN
*---------------------------------------------------------------------*
SCRLUP   DS    0H
         CLC   NLOGR(4),=F'1'          Q. ANY RECORDS IN DATASET
         BNH   DISPSCR1                   Y. CANNOT SCROLL
         CLC   ZSCROLLA(3),=C'MAX'     Q. MAX SCROLL UP
         BE    TOPOFFIL                   Y. GOTO THE TOP
         CLC   ROWPTR(4),=F'0'         Q. ALREADY AT THE TOP
         BE    DISPSCR1                   Y. REDISPLAY SCREEN
         L     R1,ROWPTR               LOAD ROW POINTER
         CH    R1,SCROLLN              Q. MOVE PAST THE TOP
         BL    TOPOFFIL                   Y. GO TO THE TOP
*---------------------------------------------------------------------*
         CLC   ROWPTR(4),NLOGR         Q. ROWPTR PAST EOF
         BL    SCRLUP1                    N. BYPASS
         L     R1,NLOGR                LOAD NUMBER OR RECORDS
         ST    R1,ROWPTR               STORE UNDER ROW POINTER
         MVC   KEYTOP,KEYBOTM          LOAD BOTTOM MOST KEY
SCRLUP1  DS    0H
         CLC   ZSCROLLA(3),=C'CSR'     Q. CURSOR SCROLLING
         BNE   NOCSRCM1                   N. BYPASS COMPENSATION
         CLC   #OFLINES(2),SCROLLN     Q. SCROLL MORE RHAN DISPALYED
         BNL   NOCSRCM1                   N. BYPASS COMPENSATION
         LH    R2,SCROLLN              LOAD SCROLL AMOUNT
         BCTR  R2,0                    SUBTRACT 1 FROM SCROLL AMOUNT
         STH   R2,SCROLLN              STOTE NEW SCROLL AMOUNT
NOCSRCM1 DS    0H
         LH    R2,SCROLLN              LOAD SCROLL AMOUNT
         ST    R2,#READ                STORE NUMBER OF LINES TO GET
         MVI   VSAMOPER,C'B'           SET BACKWARD CHANGE OPERATION
         MVI   DIRC1GET,C'N'           SET CHANGE DIRECTION GET FLAG
         LA    R1,RVSMCOMA             LOAD COMMON AREA ADDRESS
         CALL  RVSMREAD                CALL I/O OPERATION
*  PERFORM REVERSE READ
         LH    R1,SCROLLN              LOAD SCROLL AMOUNT
         CLC   ROWPTR(4),NLOGR         Q. POINTING PAST DATA
         BNL   NOCSRCM2                   N. BYPASS COMPENSATION
         LA    R1,1(R1)                EXTRA FOR RECORD OFF LAST SCREEN
NOCSRCM2 DS    0H
         ST    R1,#READ                STORE NUMBER OF LINES TO GET
         MVI   VSAMOPER,C'R'           SET READ ONLY OPERATION FLAG
         LA    R1,RVSMCOMA             LOAD COMMON AREA ADDRESS
         CALL  RVSMREAD                CALL I/O ROUTINE
*  INITIATE REVERSE READ
         MVC   KEYTOP,KEYBOT           MOVE LAST READ TO TOP
         MVI   VSAMOPER,C'F'           SET BACKWARD CHANGE OPERATION
         MVI   DIRC1GET,C'N'           SET CHANGE DIRECTION GET FLAG
         LA    R1,RVSMCOMA             LOAD COMMON AREA ADDRESS
         CALL  RVSMREAD                CALL I/O OPERATION
         MVC   KEYTOP,KEYBOT           MOVE LAST READ TO TOP
         L     R1,ROWPTR               LOAD ROW POINTER
         SH    R1,SCROLLN              SUBTRACT SCROLL AMOUNT
         ST    R1,ROWPTR               SAVE NEW POINTER
         B     EXRTN288                GO TO COMMON EXIT POINT RC=0
TOPOFFIL DS    0H
         MVC   KEYTOP,KEYTOPM          RIPPLE FILL REST
         MVI   VSAMOPER,C'F'           SET BACKWARD CHANGE OPERATION
         MVI   DIRC1GET,C'N'           SET CHANGE DIRECTION GET FLAG
         LA    R1,RVSMCOMA             LOAD COMMON AREA ADDRESS
         CALL  RVSMREAD                CALL I/O OPERATION
         XC    ROWPTR,ROWPTR           SET ROW POINTER TO 0
EXRTN288 DS    0H
         LH    R1,#MAXLINE             LOAD MAX DISPLAYABLE LINES
         ST    R1,#READ                LOAD MAX DISPLAYABLE LINES
         MVI   RCODE,C'0'              SET ZERO RETURN CODE
         B     EXITPR00                GO TO COMMON RETURN POINT
*---------------------------------------------------------------------*
SCRLRGHT DS    0H
         CLC   ZSCROLLA(3),=C'MAX'     Q. MAX SCROLL RIGHT
         BNE   NOTMAXR                    N. BYPASS MAX RIGHT
         L     R1,LRECL                LOAD MAX LENGTH
         STH   R1,COLPTR2              STORE RIGHT POINTER
         SH    R1,=H'79'               SUBTRACT COL LIMIT
         SH    R1,EDITCOMP             SUBTRACT EDIT COMPENSATION
         STH   R1,COLPTR1              STORE LEFT POINTER
         CH    R1,=H'1'                Q. BEFORE COLUMN 1
         BNL   MOVEDATA                   N. GO AND MOVE DATA
         MVC   COLPTR1(2),=H'1'        SET LEFT TO 1
         B     MOVEDATA                GO AND MOVE DATA
NOTMAXR  DS    0H
         LH    R2,COLPTR1              LOAD RIGHT POINTER
         AH    R2,SCROLLN              ADD SCROLL AMOUNT
         CLC   ZSCROLLA(3),=C'CSR'     Q. CURSOR SCROLL
         BNE   CONT#200                   N. BYPASS
         SH    R2,EDITCOMP             SUBTRACT EDIT COMPENSATION
CONT#200 DS    0H
         C     R2,LRECL                Q. NEW LEFT PTR > RECORD LENGTH
         BH    DISPSCR1                   Y. NO SCROOL
         STH   R2,COLPTR1              STORE NEW LEFT POINTER
         LA    R2,79(R2)               ADD MAX SCREEN INCREMENT
         SH    R2,EDITCOMP             SUBTRACT EDIT COMPENSATION
         C     R2,LRECL                Q. RIGHT > RECORD LENGTH
         BNH   CONT#205                   N. BYPASS
         L     R2,LRECL                LOAD RECORD LENGTH
CONT#205 DS    0H
         STH   R2,COLPTR2              STORE RIGHT POINTER
         B     MOVEDATA                GO AND MOVE DATA
*---------------------------------------------------------------------*
SCRLLEFT DS    0H
         CLC   ZSCROLLA(3),=C'MAX'     Q. MAX SCROLL RIGHT
         BNE   NOTMAXL                    N. BYPASS MAX RIGHT
         LA    R1,1                    SET LEFT POINTER TO 1
         B     CONT#220                BYPASS
NOTMAXL  DS    0H
         LH    R1,COLPTR1              LOAD LEFT POINTER
         CH    R1,=H'1'                Q. LEFT MOST CHARACTER
         BNH   DISPSCR1                   Y. NO SCROOL
         CH    R1,SCROLLN              Q. SCROLL MORE THAN LEFT
         BH    CONT#210                   N. BYPASS
         LA    R1,1                    POINT TO COL 1
         B     CONT#220                BYPASS
CONT#210 DS    0H
         SH    R1,SCROLLN              SUBTRACT SCROLL AMOUNT
CONT#220 DS    0H
         STH   R1,COLPTR1              STORE LEFT POINTER
         LA    R1,79(R1)               ADD MAX SCREEN INCREMENT
         SH    R1,EDITCOMP             SUBTRACT EDIT COMPENSATION
         STH   R1,COLPTR2              STORE RIGHT COLUMN POINTER
         B     MOVEDATA                GO AND MOVE DATA
*---------------------------------------------------------------------*
HEXONL   DS    0H
         CLC   PARM(3),=C'OFF'         Q. REQUEST HEX OFF
         BE    HEXOFFL                    Y. TURN HEX OFF
         CLI   HEXON,C'Y'              Q. HEX ALREADY ON
         BE    DISPSCR1                   Y. REDISPLAY SCREEN
         MVI   HEXON,C'Y'              SET INDICATOR ON
         B     MOVEDATA                GO AND MOVE DATA
*---------------------------------------------------------------------*
HEXOFFL  DS    0H
         CLI   HEXON,C'Y'              Q. HEX ALREADY OFF
         BNE   DISPSCR1                   N. REDISPLAY SCREEN
         MVI   HEXON,C'N'              SET INDICATOR ON
         B     MOVEDATA                GO AND MOVE DATA
*---------------------------------------------------------------------*
COLONL   DS    0H
         CLC   PARM(3),=C'OFF'         Q. REQUEST COL OFF
         BE    COLOFFL                    Y. TURN COL OFF
         CLI   COLON,C'Y'              Q. COL ALREADY ON
         BE    DISPSCR1                   Y. REDISPLAY SCREEN
         MVI   COLON,C'Y'              SET INDICATOR ON
         MVI   RCODE,C'C'              SET CHAN COL INDICATOR
         B     MOVEDATA                GO AND MOVE DATA
*---------------------------------------------------------------------*
COLOFFL  DS    0H
         CLI   COLON,C'Y'              Q. COL ALREADY OFF
         BNE   DISPSCR1                   N. REDISPLAY SCREEN
         MVI   COLON,C'N'              SET INDICATOR ON
         MVI   RCODE,C'C'              SET CHAN COL INDICATOR
         LH    R1,COLPTR2              LOAD RIGHT POINTER
         B     MOVEDATA                GO AND MOVE DATA
*---------------------------------------------------------------------*
EDITON   DS    0H
         CLI   PANELID,C'E'            Q. ALREADY EDITING
         BE    DISPSCR1                   Y. REDISPLAY SCREEN
         MVC   EDITCOMP(2),=H'8'       INITIALISE EDIT COMPENSATOR
         MVI   PANELID,C'E'            SET PANELID
         MVI   DSNAME+44,C'-'          RIPPLE MOVE '-'S
         MVC   DSNAME+45(12),DSNAME+44     TO MESSAGE 1
         LH    R1,COLPTR2              LOAD RIGHT POINTER
         SH    R1,EDITCOMP             ADD EDIT COMPENSATE
         CH    R1,COLPTR1              Q. ENCROACH INTO LEFT PTR
         BL    MOVEDATA                   Y. MOVE DATA
         STH   R1,COLPTR2              STORE NEW RIGHT POINTER
         B     MOVEDATA                GO AND MOVE DATA
*---------------------------------------------------------------------*
BROWSEON DS    0H
         CLI   PANELID,C'B'            Q. ALREADY BROWSE
         BE    DISPSCR1                   Y. REDISPLAY SCREEN
         MVI   PANELID,C'B'            SET PANELID
         LH    R1,COLPTR2              LOAD RIGHT POINTER
         AH    R1,EDITCOMP             ADD EDIT COMPENSATE
         XC    EDITCOMP,EDITCOMP       INITIALISE EDIT COMPENSATOR
         C     R1,LRECL                Q. POINT PAST LRECL
         BH    MOVEDATA                   Y. MOVE DATA
         STH   R1,COLPTR2              STORE NEW RIGHT POINTER
         B     MOVEDATA                GO AND MOVE DATA
*---------------------------------------------------------------------*
FINDIT   DS    0H
         CLC   PARM,SPACES             Q. ANY PARAMETER PASSED
         BNE   GOANDFND                   Y. GO AND FIND IT
         MVC   GC011S,SPACES            CLEAR MESSAGE AREA
         MVC   GC011S(24),=C'REQUIRED STRING MISSING.'
         MVC   GC011(60),=C'THE FIND COMMAND REQUIRES SPECIFICATIONN OFX
                A TARGET STRING.'
         B     ERRORDIS                GO DISPLAY ERROR
GOANDFND DS    0H
         LA    R1,RVSMCOMA             ADDRESS OF COMMON AREA
         CALL  RVSMFIND                CALL FIND ROUTINE
         CH    R15,=H'4'               Q. RETURN CODE > 4
         BH    DISPSCR2                   Y. GO AND DISPLAY SCREEN
         CLI   ZVERB,C'R'              Q. SCROLL RIGHT
         BE    SCRLRGHT                   Y. GO AND SCROLL
         CLI   ZVERB,C'L'              Q. SCROLL LEFT
         BE    SCRLLEFT                   Y. GO AND SCROLL
         B     DISPSCR1                GO DISPLAY SCREEN
*---------------------------------------------------------------------*
ERRORDIS DS    0H
         ISPEXEC 'SETMSG MSG(GC011)'
         B     DISPSCR2                GO REDISPLAY SCREEN
*---------------------------------------------------------------------*
EXITPR00 DS    0H
         RACKOFF RC=0                  RETURN TO THE CALLER
*---------------------------------------------------------------------*
MOVEDAT1 MVC   0(0,R6),0(R2)           MOVE DATA
MOVEDAT2 MVC   0(0,R2),0(R3)           MOVE DATA
MOVEKEY1 MVC   0(0,R10),0(R11)         MOVE KEY
*=====================================================================*
         LTORG
*---------------------------------------------------------------------*
@OFLINES DS    H
ALRECL   DS    H
         COPY  RVSMTRTB                TRANSLATE TABLES
*---------------------------------------------------------------------*
RVSMCOMA DS    0D
         COPY  RVSMCOMA
         END
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-*
