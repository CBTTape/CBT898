*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
**
**       TITLE   : 'READ A VSAM DATASET'
**       SYSTEM  : N/A
**       MODULE  : RVSMINIT
**       PROGRAM : RVSMMAIN
**       FUNCTION: INITIALISE THE VARIABLES ON ENTRY.
**       AUTHOR  : A. KARA.
**       DATE    : 13/11/90.
*
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
RVSMINIT KICKOFF (R13),LIST=NO
*---------------------------------------------------------------------*
         LR    R12,R1                  ADDRESS OF COMMON AREA
         USING RVSMCOMA,R12            ADDRESABILITY TO COMMON DATA
         ISPINIT                       INITIALISE ISPF ENVIRONMENT
         ISPVDEFX INM=(GC011),ANM=GC011,FORMAT=CHAR,LEN=79
         ISPVDEFX INM=(GC011S),ANM=GC011S,FORMAT=CHAR,LEN=24
         ISPVDEFX INM=(DISPLAY),ANM=DISPLAY,FORMAT=CHAR,LEN=1840
         ISPVDEFX INM=(#OFLINES),ANM=#OFLINES,FORMAT=CHAR,LEN=4
         ISPVDEFX INM=(ZCMD),ANM=ZCMD,FORMAT=CHAR,LEN=79
         ISPVDEFX INM=(PARM),ANM=PARM,FORMAT=CHAR,LEN=77
         ISPVDEFX INM=(DSNAME),ANM=DSNAME,FORMAT=CHAR,LEN=72
         ISPVDEFX INM=(PANELID),ANM=PANELID,FORMAT=CHAR,LEN=5
         ISPVDEFX INM=(AMT),ANM=AMT,FORMAT=CHAR,LEN=4
         ISPVDEFX INM=(CSR),ANM=CSR,FORMAT=CHAR,LEN=8
         ISPVDEFX INM=(CSRP),ANM=CSRP,FORMAT=CHAR,LEN=8
         ISPVDEFX INM=(ZVERB),ANM=ZVERB,FORMAT=CHAR,LEN=8
         ISPVDEFX INM=(ZSCROLLA),ANM=ZSCROLLA,FORMAT=CHAR,LEN=4
         ISPVDEFX INM=(ZSCROLLN),ANM=ZSCROLLN,FORMAT=CHAR,LEN=4
         ISPVDEFX INM=(HEXON),ANM=HEXON,FORMAT=CHAR,LEN=4
         ISPVDEFX INM=(FINDSTRG),ANM=FINDSTRG,FORMAT=CHAR,LEN=77
         ISPVDEFX INM=(SPARM),ANM=SPARM,FORMAT=CHAR,LEN=77
         ISPVDEFX INM=(FINDLEN),ANM=FINDLEN,FORMAT=CHAR,LEN=2
         ISPVDEFX INM=(SPARMLEN),ANM=SPARMLEN,FORMAT=CHAR,LEN=2
*--------------------------------------------------------------------*
         ISPEXEC 'CONTROL ERRORS RETURN'
         ISPEXEC 'TBEND RVSMEDBR'
         ISPEXEC 'TBOPEN RVSMEDBR LIBRARY(ISPPROF)'
         LTR   R15,R15                 Q. TABLE OPENED
         BZ    TBISOPEN                   Y. PROCESS TABLE
         ISPEXEC 'TBCREATE RVSMEDBR KEYS(DSNAME) NAMES(HEXON AMT SPARM X
               FINDSTRG FINDLEN SPARMLEN) REPLACE LIBRARY(ISPPROF)'
TBISOPEN DS    0H
         ISPEXEC 'CONTROL ERRORS CANCEL'
         ISPEXEC 'VGET (DSNAME PANELID) SHARED'
         ISPEXEC 'TBGET RVSMEDBR'
         LTR   R15,R15                 Q. ENTRY EXIST FOR DSNAME
         BZ    CLOSETB                    Y. GO CLOSE TABLE
         ISPEXEC 'TBADD RVSMEDBR'
CLOSETB  DS    0H
         ISPEXEC 'TBCLOSE RVSMEDBR LIBRARY(ISPPROF)'
*---------------------------------------------------------------------*
         PACK  DWORK8(8),DDNAME+6(2)   PACK LAST 2 BYTES OF DDNAME
         CVB   R10,DWORK8              CONVERT TO DECIMAL
         LA    R11,99                  LOOP COUNTER
         MVI   VSAMOPER,C'I'           SET INFO FLAG
LOOPDDN  DS    0H
         LA    R1,RVSMCOMA             COMMON DATA AREA
         CALL  RVSMDYNA                CALL DYNAMIC ALLOCATE ROUTINE
         LTR   R15,R15                 Q. ZERO RETURN CODE FROM INFO
         BNZ   NOTALLOC                   N. DDNAME NOT ALLOCATED
         LA    R10,1(R10)              GET NEXT SEQUENCE NUMBER
         UNPACK R10,2,DDNAME+6         UNPACK INTO DDNAME
         BCT   R11,LOOPDDN             TRY NEXT SEQUENCE NUMBER
         MVC   GC011S(16),=C'ALLOACTION ERROR'
         MVC   GC011(60),=C'ALL 99 SEQUENCES OF DD ''VSMACB..'' HAVE BEE
               EN ALLOCATED.'
         B     EXITPR08                GOTO ERROR EXIT
NOTALLOC DS    0H
         MVI   VSAMOPER,C'A'           SET ALLOCATE FLAG
         LA    R1,RVSMCOMA             COMMON DATA AREA
         CALL  RVSMDYNA                CALL DYNAMIC ALLOCATE ROUTINE
         LTR   R15,R15                 Q. ZERO RETURN CODE FROM INFO
         BZ    ALOCATED                   Y. DDNAME ALLOCATED
         MVC   GC011S(16),=C'ALLOACTION ERROR'
         MVC   GC011(31),=C'DATASET COULD NOT BE ALLOCATED.'
         B     EXITPR08                GOTO ERROR EXIT
*---------------------------------------------------------------------*
ALOCATED DS    0H
         CLI   PANELID,C'B'            Q. IN BROWSE MODE
         BE    OPENFILE                   Y. GO OPEN FILE
         MVI   ALTROPER,C'O'           SET INDICATOR TO OUTPUT
OPENFILE DS    0H
         MVI   VSAMOPER,C'O'           SET OPEN FLAG
         LA    R1,RVSMCOMA             COMMON DATA AREA
         CALL  RVSMREAD                CALL OPEN ROUTINE
         CLI   RCODE,C'0'              Q. ZERO RETURN CODE FROM OPEN
         BNE   EXITPR00                   N. EXIT WITH ERROR CARRIED
         L     R1,NLOGR                LOAD NUMBER OF RECORDS
         LA    R1,1(R1)                COMPENSATE FOR DUMMY TOP
         ST    R1,NLOGR                STORE NUMBER OF RECORDS
*----------<=======---------------------------------------------------*
*        LA    R1,100                  USED TO TEST KEY INDICATORS
*        ST    R1,RKP
*        LA    R1,85
*        ST    R1,KEYLEN
*---------------------------------------------------------------------*
         LA    R1,72                   LOOP COUNTER
         LA    R2,DSNAME+71            LAST BYTE OF DSNAME
DSNLOOP1 DS    0H
         CLI   0(R2),C' '              Q. IS CHARACTER A SPACE
         BNE   DSNLOP1E                   N. EXIT LOOP
         MVI   0(R2),C'-'              MOVE HYPHEN
         BCTR  R2,0                    PREVIOUS CHAR
         BCT   R1,DSNLOOP1             LOOP TIL END
DSNLOP1E DS    0H
         ISPEXEC 'CONTROL NONDISPL ENTER'
         ISPEXEC 'DISPLAY PANEL(READVSAM)'
         PACK  DWORK8(8),#OFLINES(4)   PACK DISPLAYABLE LINES
         CVB   R1,DWORK8               CONVERT TO BINARY
         STH   R1,#OFLINES             STORE NUMBER OF LINES
         LH    R1,#MAXLINE             MOVE MAXIMUM DISPLAY
         ST    R1,#READ                MOVE MAXIMUM DISPLAY
         MVC   DSNAME+57(14),TMESS2    MOVE MESSAGE 1
         CLI   PANELID,C'E'            Q. IN EDIT MODE
         BE    CONT#090                   Y. BYPASS
         MVC   DSNAME+44(13),TMESS1    MOVE MESSAGE 1
CONT#090 DS    0H
*---------------------------------------------------------------------*
         CLI   PANELID,C'E'            Q. IN EDIT MODE
         BE    CONT#100                   Y. BYPASS
         XC    EDITCOMP,EDITCOMP       INITIALISE EDIT COMPENSATOR
         MVC   COLPTR2(2),=H'80'       INITIALISE RIGHT POINTER
CONT#100 DS    0H
         XR    R4,R4                   INITIALISE EVEN PAIR
         LH    R5,#MAXLINE             LOAD MAXIMUM LINES
         D     R4,=F'4'                DIVIDE BY 4
         STH   R5,#HEXLINE             STORE NUMBER OF HEX LINES
*---------------------------------------------------------------------*
         L     R2,LRECL                LOAD LOGICAL RECORD LENGTH
         LA    R2,4(R2)                +4 FOR RECLEN
         MH    R2,=H'22'               NUMBER OF ARRAYS
         GETMAIN RC,LV=(2),LOC=ANY     ACQUIRE ARRAY WORK AREA
         LTR   R15,R15                 Q. 0 RC FROM GETMAIN
         BZ    GETMGOT1                   Y. CONTINUE PROCESSING
GETMFAIL DS    0H
         MVC   GC011,SPACES            CLEAR MESSAGE AREA
         MVC   GC011(60),=C'INSUFFICIENT VIRTUAL STORAGE. FAILED GETTING
               G ...... GETMAIN.'
         UNPACK R2,6,GC011+45          UNPACK LENGTH TO MESSAGE
         B     EXITPR08                AS IT SAYS
GETMGOT1 DS    0H
         ST    R1,ARRAY@               STORE ARRAY ADDRESS
         L     R2,LRECL                LOAD LOGICAL RECORD LENGTH
         LA    R2,4(R2)                +4 FOR RECLEN
         MH    R2,=H'21'               NUMBER OF ARRAYS - 1
         AR    R2,R1                   ADD START OF ARRAY
         ST    R2,ARRAYW@              STORE ARRAY WORKAREA ADDRESS
*---------------------------------------------------------------------*
EXITPR00 DS    0H
         RACKOFF RC=0
EXITPR08 DS    0H
         MVI   RCODE,C'8'              SET ERROR RETURN CODE
         ISPEXEC 'SETMSG MSG(GC011)'
         RACKOFF RC=8
*=====================================================================*
         LTORG
*---------------------------------------------------------------------*
         DS    0D
RVSMCOMA DSECT
         COPY RVSMCOMA
         END
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-*
