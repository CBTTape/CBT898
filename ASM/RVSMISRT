*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
**
**       TITLE:    'READ A VSAM DATASET'
**       SYSTEM:   N/A
**       MODULE:   RVSMISRT
**       PROGRAM:  RVSMREAD
**       FUNCTION: PROCESS INSERT ON SEQUENCE NUMBER.
**       AUTHOR:   A. KARA.
*
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
RVSMISRT KICKOFF (R13,R12),LIST=NO
*---------------------------------------------------------------------*
START    DS    0H
         LR    R11,R1                  ADDRESS OF COMMON AREA
         USING RVSMCOMA,R11            ESTABLISH ADDRESABILITY
         ISPINIT               <==== FOR PDUMP(REFRESH)
         XC    RCODE,RCODE             INITIALISE RETURN CODE
         BAL   R14,ISRTLINE            GO AND INSERT A LINE
EXITPR00 DS    0H
         XR    R15,R15                 INITIALISE RETURN REGISTER
         IC    R15,RCODE               SET RETURN CODE
         RACKOFF RC=(R15)              EXIT PROGRAM
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
*     PERCOLATE THE CURRENT LINE DOWN BY 1 AND INITIALISE CURRENT
*     LINE.
*---------------------------------------------------------------------*
ISRTLINE DS    0H
         STM   R14,R12,SAVSUBR1        STORE REGISTERS
         ST    R4,#ARRAY@              SAVE CURRENT ARRAY POINTER
         ST    R6,#DISP@               SAVE CURRENT DISPLAY POINTER
         L     R2,LRECL                LOAD LOGICAL RECORD LENGTH
         LA    R2,4(R2)                +4 FOR REC LEN
*---------------------------------------------------------------------*
         LH    R1,#MAXLINE             LOAD MAX LINES DISPALYABLE
         BCTR  R1,0                    RELATIVE NUMBER
         XR    R8,R8                   INITIALISE EVEN PAIR
         LR    R9,R2                   LOAD RECORD LENGTH
         MR    R8,R1                   POINT TO LAST RECORD DISP
         L     R8,ARRAY@               START OF ARRAY
         AR    R8,R9                   ADD DISPLACEMENT
         LR    R7,R8                   POINT TO LAST RECORD ADDRESS
         SR    R7,R4                   SUBTRACT CURRENT ARRAY POINTER
         LTR   R7,R7                   Q. ZERO LOOP COUNT
         BZ    PERCLUP1                   Y. MOVE ALL RECORDS UP 1
         BCTR  R7,0                    LESS 1 FOR
         LTR   R7,R7                   Q. ZERO LOOP COUNT
         BZ    PERCLOPE                   Y. BYPASS LOOP
         XR    R6,R6                   INITIALISE EVEN PAIR
         DR    R6,R2                   DIVIDE BY RECORD LENGTH
         LR    R4,R8                   POINT TO LAST RECORD ADDRESS
         SR    R4,R2                   POINT TO PREVIOUS RECORD
         LA    R14,DISPLAY+1600        POINT TO SECOND LAST DISP LINE
         PDUMP (R4),MSG='B4LOOP, R14=DISPLAY,R7=LOOP CTR',REFRESH=YES
*                                      R7 WILL BE LOOP COUNTER
*---------------------------------------------------------------------*
PERCLOP1 DS    0H
         LR    R5,R2                   LOAD SOURCE LENGTH
         ICM   R5,B'1000',=X'00'       LOAD PAD CHARACTER
         LR    R9,R2                   LOAD SOURCE LENGTH
         MVCL  R8,R4                   MOVE DATA UP 1
         MVC   80(80,R14),0(R14)       MOVE DISPLAY DATA ALONG 1 LINE
         SR    R8,R2                      FOR MVCL
         SR    R4,R2                   POINT TO PREV DESTINATION + COMP
         SR    R8,R2                   POINT TO PREV DESTINATION + COMP
         SR    R4,R2                      FOR MVCL
         SH    R14,=H'80'              POINT TO PREVIOUS DISPLAY RECORD
         BCT   R7,PERCLOP1             LOOP TILL END
*---------------------------------------------------------------------*
PERCLOPE DS    0H
         L     R4,#ARRAY@              RESTORE ARRAY POINTER
         AR    R4,R2                   POINT TO NEXT RECORD
         L     R6,#DISP@               SAVE CURRENT DISPLAY POINTER
         LR    R5,R2                   LOAD SOURCE LENGTH
         XR    R8,R8                   LOAD SOURCE ADDRESS
         XR    R9,R9                   LOAD SOURCE LENGTH
         ICM   R9,B'1000',=X'00'       LOAD PAD CHARACTER
         MVCL  R4,R8                   MOVE DATA UP 1
         MVI   80(R6),X'12'            MOVE INDICATOR (INPUT/RED)
         MVC   81(6,R6),=C'''''''''''''' MOVE INSERT INDICATOR
         MVI   87(R6),X'11'            MOVE INDICATOR (INPUT/GREEN)
         MVC   88(72,R6),SPACES        MOVE SPACES TO REST
         B     RETMAIN1                GOTO COMMON RETURN
*---------------------------------------------------------------------*
PERCLUP1 DS    0H
         LH    R7,#MAXLINE             LOAD LINE NUMBER
         BCTR  R7,0                    LESS 1 FOR LAST LINE
         LA    R14,DISPLAY+80          POINT TO DATA PART OF DISPLAY
         L     R8,ARRAY@               POINT TO START OF ARRAY
         LR    R4,R8                   POINT TO THE NEXT
         AR    R4,R2                       ARRAY RECORD (SOURCE)
         PDUMP (R4),MSG='B4LOOP, R14=DISPLAY,R7=LOOP CTR',REFRESH=YES
*---------------------------------------------------------------------*
PERCLOP2 DS    0H
         LR    R5,R2                   LOAD SOURCE LENGTH
         ICM   R5,B'1000',=X'00'       LOAD PAD CHARACTER
         LR    R9,R2                   LOAD SOURCE LENGTH
         MVCL  R8,R4                   MOVE DATA UP 1
         MVC   0(80,R14),80(R14)       MOVE DISPLAY DATA ALONG 1 LINE
         LA    R14,80(R14)             POINT TO PREVIOUS DISPLAY RECORD
         BCT   R7,PERCLOP2             LOOP TILL END
*---------------------------------------------------------------------*
PERCLPE2 DS    0H
         LR    R5,R2                   LOAD SOURCE LENGTH
         XR    R8,R8                   LOAD SOURCE ADDRESS
         LR    R9,R2                   LOAD SOURCE LENGTH
         ICM   R9,B'1000',=X'00'       LOAD PAD CHARACTER
         MVCL  R4,R8                   MOVE NULLS TO ARRAY
         MVI   0(R6),X'12'             MOVE INDICATOR (INPUT/RED)
         MVC   1(6,R6),=C'''''''''''''' MOVE INSERT INDICATOR
         MVI   7(R6),X'11'             MOVE INDICATOR (INPUT/GREEN)
         MVC   8(72,R6),SPACES         MOVE SPACES TO REST
*                                         RESTORED BY 'RVSMENTR'
         PDUMP (R8),MSG='R8-R2=ARRAY,R6=DISPLAY POINTER',REFRESH=YES
RETMAIN1 DS    0H
         LM    R14,R12,SAVSUBR1        RESTORE REGISTERS
         BR    R14                     RETURN TO CALLER
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
*---------------------------------------------------------------------*
         LTORG
*---------------------------------------------------------------------*
SAVSUBR1 DS    16F
#ARRAY@  DS    F
#DISP@   DS    F
*---------------------------------------------------------------------*
RVSMCOMA DSECT
         COPY  RVSMCOMA
DUMPL    EQU   *-RVSMCOMA
         END
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-*
