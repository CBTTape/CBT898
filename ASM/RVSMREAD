*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
**
**       TITLE:    'READ A VSAM DATASET'
**       SYSTEM:   N/A
**       MODULE:   RVSMREAD
**       PROGRAM:  RVSMREAD
**       FUNCTION: PERFORM ALL I/O (INCLUDING OPEN CLOSE ETC..) ON THE
**                 VSAM DATASET.
**       AUTHOR:   A. KARA.
*
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
RVSMREAD KICKOFF (R13),LIST=NO
*---------------------------------------------------------------------*
START    DS    0H
         LR    R12,R1                  ADDRESS OF COMMON AREA
         USING RVSMCOMA,R12            ESTABLISH ADDRESABILITY
         ISPINIT                       INITIALISE ISPF ENVIRONMENT
         MVI   RCODE,C'0'              SET ZERO RETURN CODE
*        MVI   VSAMOPER+1,C'T'         TURN TRACE ON <-------
         CLI   VSAMOPER+1,C'T'         Q. TRACE ON   <-------
         BNE   NOTRACE1                   N. BYPASS  <-------
         TPUT  VSAMOPER,1,EDIT,WAIT,,BREAKIN,HIGHP   <-------
NOTRACE1 DS    0H                                    <-------
         CLI   VSAMOPER,C'G'           Q. OPERATION 'GET'
         BE    VSAMGETR                   Y. GO GET RECORDS
         CLI   VSAMOPER,C'R'           Q. OPERATION 'READ' FOR POSITION
         BE    VSAMREAD                   Y. GO GET RECORDS
         CLI   VSAMOPER,C'O'           Q. OPERATION 'OPEN'
         BE    VSAMOPEN                   Y. GO OPEN FILE
         CLI   VSAMOPER,C'C'           Q. OPERATION 'CLOSE'
         BE    VSAMCLOS                   Y. GO CLOSE DATASET
         CLI   VSAMOPER,C'F'           Q. OPERATION 'FWD' SKIP
         BE    VSAMFWDS                   Y. GO SET FORWARD
         CLI   VSAMOPER,C'B'           Q. OPERATION 'BWD' SKIP
         BE    VSAMBWDS                   Y. GO SET BACKWARD
         CLI   VSAMOPER,C'K'           Q. OPERATION 'FIND' SKIP
         BE    VSAMFIND                   Y. GO FIND DATA
         CLI   VSAMOPER,C'A'           Q. OPERATION 'ALTER'
         BNE   OPERERR1                   N. SET ERROR CODE
         LA    R14,EXITPR00            SET RETURN ADDRESS FROM ROUTINE
         B     VSAMALTR                GO GET RECORDS
OPERERR1 DS    0H
         MVI   RCODE,C'8'              SET ERROR RETURN CODE
         B     EXITPR08                GO RETURN TO CALLER
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
VSAMOPEN DS    0H
         MVC   VSAMACB1+X'28'(8),DDNAME MOVE DDNAME
         BAL   R14,VSAMALTR            GO AND ALTER RPL TO OUTPUT
         OPEN  (VSAMACB1)              OPEN DATASET
         LTR   R15,R15                 Q. SUCCESSFUL OPEN
         BZ    GETCBDET                   Y. GET DETAILS
*
         MVI   EMPT1STI,C'Y'           SET EMPTY INDICATOR FLAG ON
         MVI   ALTROPER,C'O'           SET INDICATOR TO OUTPUT
         BAL   R14,VSAMALTR            GO AND ALTER RPL TO OUTPUT
         OPEN  (VSAMACB1)              OPEN DATASET
         LTR   R15,R15                 Q. SUCCESSFUL OPEN
         BZ    GETCBDET                   Y. GET DETAILS
*
         MVC   GC011S(11),=C'OPEN FAILED'
         MVC   GC011(46),=C'DATASET COULD NOT BE OPENED. RETURN CODE = X
               ...'
         UNPACK R15,2,GC011+43         MOVE RC INTO MESSAGE
         ISPEXEC 'SETMSG MSG(GC011)'   SET ERROR MESSAGE
         MVI   RCODE,C'9'              SET ERROR RETURN CODE
         B     EXITPR00                EXIT PROGRAM
GETCBDET DS    0H
         SHOWCB ACB=VSAMACB1,                                          X
               AREA=SHOWA,                                             X
               FIELDS=(KEYLEN,LRECL,RKP,NLOGR),                        X
               LENGTH=16
         MVC   SHOWB(SHOWBL),SHOWA     MOVE TO COMMON AREA (SHOWA USED
         B     EXITPR00                GO RETURN TO CALLER
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
VSAMCLOS DS    0H
         CLOSE (VSAMACB1)              CLOSE DATASET
         B     EXITPR00                GO RETURN TO CALLER
*---------------------------------------------------------------------*
EXITPR00 DS    0H
         RACKOFF RC=00
EXITPR08 RACKOFF RC=08
EXITPR20 RACKOFF RC=20
*=====================================================================*
VSAMGETR DS    0H
VSAMREAD DS    0H
         CLC   NLOGR(4),=F'1'          Q. ANY RECORDS IN DATASET
         BNH   EXITPR00                   N. EXIT PROGRAM
         L     R7,#READ                SET LOOP COUNTER
         MVI   POF,C'M'                SET 'MIDDLE' POSIT-OF-FILE
         L     R6,ARRAY@               LOAD ARRAY ADDRESS
         L     R9,LRECL                LOAD RECORD LENGTH
         LA    R9,4(R9)                ADD RECORD LENGTH HOLDER LENGTH
         L     R1,ROWPTR               LOAD ROW POINTER
         LTR   R1,R1                   Q. ROW POINTER TOP
         BNZ   NOTMAXDN                   N. BYPASS
         AR    R6,R9                   UP BY LENGTH OF DATA
         BCTR  R7,0                    DECREMENT LOOP COUNTER BY 1
         LTR   R7,R7                   Q. ZERO RECORDS TO GET
         BNZ   NOTMAXDN                   N. BYPASS
         LA    R7,1(R7)                GET AT LEAST 1 RECORD
NOTMAXDN DS    0H
         MVI   RCODE,C'0'              SET ZERO RETURN CODE
         MVI   #1STHRU1,C'Y'           SET FIRST TIME THRU FLAG
         XR    R4,R4                   INITIALISE PROCESS COUNTER
*        CLEARV  DISPLAY               CLEAR DISPLAY AREA
READLOP1 DS    0H
         GET   RPL=RPLACB1             READ VSAM DATASET
         CHECK RPL=RPLACB1             WAIT FOR DATA TRANSFER
         LTR   R15,R15                 Q. READ OK
         BNZ   ACB1ERR                    N. GO TO ERROR ROUTINE
         LA    R4,1(R4)                INCREASE # OF RECORDS PROCESSED
         SHOWCB RPL=RPLACB1,                                           X
               AREA=RECLEN,                                            X
               FIELDS=(RECLEN),                                        X
               LENGTH=4
         L     R11,DATA@               SOURCE ADDRESS
         CLI   VSAMOPER+1,C'T'         Q. TRACE ON  <-------
         BNE   NOTRACE2                   N. BYPASS <-------
         TPUT  (11),79,EDIT,WAIT,,BREAKIN,HIGHP     <-------
NOTRACE2 DS    0H                                   <-------
         AH    R11,RKP+2               ADD RELATIVE KEY POSITION
         L     R1,KEYLEN               LOAD KEY LENGTH
         BCTR  R1,0                    RELATIVE KEY LENGTH
         LA    R10,KEYBOT              POINT TO BOTTOM KEY
         EX    R1,MOVEKEY1             MOVE DATA
         CLI   VSAMOPER,C'R'           Q. READ ONLY W/O MOVE
         BE    LOP1CONT                   Y. BYPASS
         CLI   #1STHRU1,C'Y'           Q. FIRST TIME THRU
         BNE   N1STIME                    N. BYPASS
         LA    R10,KEYTOP              POINT TO TOP KEY
         EX    R1,MOVEKEY1             MOVE DATA
         CLI   #1STREAD,C'Y'           Q. 1ST. READ
         BNE   NOT1STR1                   N. BYPASS
         LA    R10,KEYTOPM             POINT TO TOP KEY MAXIMUM
         EX    R1,MOVEKEY1             MOVE DATA
         MVI   #1STREAD,C'N'           Q. 1ST. READ
NOT1STR1 DS    0H
         MVI   #1STHRU1,C'N'           FIRST TIME THRU = NO
N1STIME  DS    0H
*---------------------------------------------------------------------*
*    MOVE DATA TO DISPLAY SCREEN                                      *
*---------------------------------------------------------------------*
         MVC   0(4,R6),RECLEN          MOVE RECORD LENGTH
         LA    R0,4(R6)                LOAD DESTINATION ADDRESS
         L     R1,LRECL                LOAD LOGICAL RECORD LENGTH
         L     R14,DATA@               SOURCE ADDRESS
         LR    R15,R1                  LOAD LOGICAL RECORD LENGTH
         ICM   R15,B'1000',C' '        SET PAD CHARACTER TO SPACE
         MVCL  R0,R14                  MOVE DATA
*---------------------------------------------------------------------*
         AR    R6,R9                   UP BY LENGTH OF DATA
LOP1CONT DS    0H
         BCT   R7,READLOP1             LOOP TILL END
LOP1END  DS    0H
         B     EXRTN188                GO TO EXIT POINT RC=0
*=====================================================================*
VSAMFIND DS    0H
         LH    R9,ZCMD                 ACTUAL LENGTH OF STRING
         BCTR  R9,0                    RELATIVE LENGTH OF STRING
         MVC   HOWMANY(2),ZCMD+2       MOVE NUMBER OF FINDS REQ'D
         XC    ZCMD(4),ZCMD            SET FIND RETURN TO 0
         CLC   NLOGR(4),=F'1'          Q. ANY RECORDS IN DATASET
         BNH   EXITPR00                   N. EXIT PROGRAM
         L     R7,#READ                SET LOOP COUNTER
         MVI   POF,C'M'                SET 'MIDDLE' POSIT-OF-FILE
         MVI   #1STHRU1,C'Y'           SET FIRST TIME THRU FLAG
         XR    R4,R4                   INITIALISE PROCESS COUNTER
         XR    R5,R5                   INITIALISE FIND COUNTER
         LA    R8,1(R9)                ACTUAL LENGTH OF STRING
         LA    R6,PARM                 ADDRESS OF STRING
READLOP2 DS    0H
         GET   RPL=RPLACB1             READ VSAM DATASET
         CHECK RPL=RPLACB1             WAIT FOR DATA TRANSFER
         LTR   R15,R15                 Q. READ OK
         BNZ   ACB1ERR                    N. GO TO ERROR ROUTINE
         LA    R4,1(R4)                INCREASE # OF RECORDS PROCESSED
         SHOWCB RPL=RPLACB1,                                           X
               AREA=RECLEN,                                            X
               FIELDS=(RECLEN),                                        X
               LENGTH=4
         L     R2,DATA@                SOURCE ADDRESS
         CLI   VSAMOPER+1,C'T'         Q. TRACE ON  <-------
         BNE   NOTRACE3                   N. BYPASS <-------
         TPUT  (11),79,EDIT,WAIT,,BREAKIN,HIGHP     <-------
NOTRACE3 DS    0H                                   <-------
         L     R3,RECLEN               LOAD RECORD LENGTH
         SR    R3,R9                   DEC SEARCH LEN BY STRING LEN
FINDLOOP DS    0H
         CLI   HOWMANY+1,C'.'          Q. FIND UNPRINTABLE
         BNE   PRINABLE                   N. GO FIND PRINTABLE
         ST    R2,R2SAVER              SAVE R2 AS TRT CHANGES IT
         EX    R9,TESTUNPR             Q. FIND PRINTABLE STRING
         L     R2,R2SAVER              RESTORE R2 AFTER TRT CHANGE
         BNZ   NOTFOUND                   Y. BYPASS
         B     FOUNDHIT                PROCESS HIT
PRINABLE DS    0H
         EX    R9,MOVEUPER             MOVE FOR UPPER CASE TRANSLATION
         CLI   HEXFIND,C'Y'            Q. HEX FIND
         BE    DONTTRAN                   Y. BYPASS UPPER TRANSLATION
         EX    R9,TRANUPER             TRANSLATE TO UPPER CASE
DONTTRAN DS    0H
         EX    R9,SRCHSTRG             Q. FIND STRING
         BNE   NOTFOUND                   N. BYPASS
FOUNDHIT DS    0H
         LTR   R5,R5                   Q. FIRST FIND
         BNZ   NOTFIRST                   N. BYPASS FIRST HIT
         L     R11,DATA@               SOURCE ADDRESS
         AH    R11,RKP+2               ADD RELATIVE KEY POSITION
         L     R1,KEYLEN               LOAD KEY LENGTH
         BCTR  R1,0                    RELATIVE KEY LENGTH
         LA    R10,KEYTOP              POINT TO BOTTOM KEY
         EX    R1,MOVEKEY1             MOVE DATA
         L     R1,DATA@                LOAD START OF DATA ADDRESS
         LR    R11,R2                  LOAD CURRENT DATA POINTER
         SR    R11,R1                  GET DISPLACEMENT INTO DATA
         ST    R11,ZCMD+4              STORE DISPLACEMENT
         ST    R4,ZCMD+8               STORE RECORDS PROC B4 1ST HIT
NOTFIRST DS    0H
         LA    R5,1(R5)                UP FIND COUNTER BY 1
         ST    R5,ZCMD                 STORE FIND COUNTER
         CLI   HOWMANY,C'A'            Q. FIND ALL
         BNE   EXITPR00                   N. RETURN TO CALLER
         CR    R3,R8                   Q. ENOUGH CHARS FOR MATCH
         BNL   MORE2SRC                   Y. MORE TO SEARCH IN DATA
         BCT   R7,READLOP2             LOOP TILL END
         B     EXITPR00                RETURN TO CALLER
MORE2SRC DS    0H
         AR    R2,R8                   POINT PAST MATCHED CHARS
         SR    R3,R8                   DECREMENT LOOP COUNTER BY MATCH
         LA    R3,1(R3)                COMPENSATE FOR FOLLOWING 'BCT'
NOTFOUND DS    0H
         LA    R2,1(R2)                POINT TO NEXT CHARACTER
         BCT   R3,FINDLOOP             LOOP TILL END OF DATA
         BCT   R7,READLOP2             LOOP TILL REQ'D RECORDS READ
         B     EXITPR00                RETURN TO CALLER
*---------------------------------------------------------------------*
MOVEUPER MVC   UPPER(0),0(R2)          MOVE FOR UPPER TRANSLATION
TRANUPER TR    UPPER(0),TRTUPPER       TRANSLATE TO UPPER CASE
SRCHSTRG CLC   UPPER(0),0(R6)          COMPARE WITH FIND STRING
TESTUNPR TRT   0(0,R2),TRTNONPR        FIND NON PRINTABLE STRING
*---------------------------------------------------------------------*
*=====================================================================*
VSAMALTR DS    0H
         ST    R14,R14SAVER            STORE RETURN ADDRESS
         CLI   ALTROPER,C'I'           Q. CHANGE TO INPUT
         BE    ALTRINPT                   Y. PROCESS
         CLI   ALTROPER,C'O'           Q. CHANGE TO OUTPUT
         BE    ALTROUTP                   Y. PROCESS
         B     EXITPR08                RETURN TO CALLER
ALTRINPT DS    0H
         MODCB ACB=VSAMACB1,MACRF=(IN)
         B     ALTREXIT                GOTO COMMON EXIT
ALTROUTP DS    0H
         MODCB ACB=VSAMACB1,MACRF=(OUT)
         B     ALTREXIT                GOTO COMMON EXIT
ALTREXIT DS    0H
         L     R14,R14SAVER            RESTORE RETURN ADDRESS
         BR    R14                     RETURN TO CALLER
*=====================================================================*
*   ARRIVE HERE IF THERE IS AN ERROR IN THE GET.                      *
*   END OF FILE ON A VSAM DATASET IS INDICATED BY A LOGICAL ERROR     *
*   (R15 =8) AFTER A CHECK MACRO WITH A VALUE OF 4 IN THE FEEDBACK    *
*   FIELD OF THE RPL.                                                 *
*---------------------------------------------------------------------*
ACB1ERR  DS    0H
         MVC   CSR,SPACES              CLEAR CURSOR PLACEMENT
         MVC   CSR(4),=C'ZCMD'         PUT CURSOR ON COMMAND LINE
         CH    R15,=H'08'              Q. LOGICAL ERROR
         BE    ACB1LOGE                   Y. TEST FOR END OF FILE
         MVC   GC011(21),=C'RC=.., IN GET EXITING'
         UNPACK R15,2,GC011+3          PLACE RETURN CODE IN THE MESSAGE
         TPUT  GC011,79,EDIT,WAIT,,BREAKIN,HIGHP
         MVI   RCODE,C'9'              SET ERROR RETURN CODE
         B     EXRTN199                GO TO EXIT POINT
ACB1LOGE DS    0H
         C     R4,NLOGR                Q. MORE RECORDS THAN INDIC
         BNH   TESTBOTF                   N. TEST FOR BOTTOM ALREADY
         LA    R4,1(R4)                POINT PAST BOTTOM RECORD
*-----------------------------<======---------------------------------*
         MVC   UPPER,SPACES
         UNPACK R4,8,UPPER
         L     R1,NLOGR
         UNPACK R1,8,UPPER+26
         MVC   UPPER(50),=C'........ RECORDS READ C/F ........ PASSED BY
               SHOWCB.'
         TPUT  UPPER,77,EDIT,WAIT,,BREAKIN,HIGHP            <=====
*-----------------------------<======---------------------------------*
*        ST    R4,NLOGR                STORE NEW TOTAL # RECORDS
TESTBOTF DS    0H
         CLI   VSAMOPER,C'G'           Q. GET READ
         BNE   HAVEPOF                    N. BYPASS KEY MOVES ETC
         MVI   POF,C'B'                SET POSITION-OF-FILE = BOTTOM
         MVC   KEYBOTM,KEYBOT          STORE BOTTOM KEY
         MVI   HITBOTOM,C'Y'           INDICATE BOTTOM REACHED
HAVEPOF  DS    0H
         TESTCB RPL=RPLACB1,FDBK=4     Q. END OF DATA
         BE    EXRTN188                   Y. GO TO EXIT POINT RC=0
         MVC   GC011(21),=C'RC=8, HOWEVER FDBK¬=4'
         ISPEXEC 'SETMSG MSG(GC011)'   SET MESSAGE
EXRTN188 DS    0H
         MVI   RCODE,C'0'              SET ZERO RETURN CODE
EXRTN199 DS    0H
         B     EXITPR00                GO RETURN TO CALLER
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
VSAMFWDS DS    0H
         MODCB RPL=RPLACB1,ACB=VSAMACB1,OPTCD=(FWD)
         B     VSAMDIRS                GO BRANCH TO DIRECTION SET
VSAMBWDS DS    0H
         MODCB RPL=RPLACB1,ACB=VSAMACB1,OPTCD=(BWD)
VSAMDIRS DS    0H
         L     R1,KEYLEN               LOAD KEY LENGTH
         BCTR  R1,0                    RELATIVE LENGTH
         LA    R10,SRCHKEY             SERCH KEY
         LA    R11,KEYTOP              BOTTOM KEY (IN TOP POSITION)
         EX    R1,MOVEKEY1             MOVE DATA
         POINT RPL=RPLACB1             POINT TO THAT KEY 4 REVER OP
         CLI   DIRC1GET,C'Y'           Q. DIRECTION GET FLAG SET
         BNE   EXITPR00                   N. GO RETURN TO CALLER
         GET   RPL=RPLACB1             READ PAST BOTTOM RECORD
         CHECK RPL=RPLACB1             WAIT FOR DATA TRANSFER
         B     EXITPR00                GO RETURN TO CALLER
*---------------------------------------------------------------------*
MOVEKEY1 MVC   0(0,R10),0(R11)         MOVE KEY
MOVEDAT1 MVC   4(0,R6),0(R2)           MOVE DATA
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
*=====================================================================*
         LTORG
*---------------------------------------------------------------------*
RPLACB1  RPL   AM=VSAM,ACB=VSAMACB1,AREA=DATA@,AREALEN=4,              X
               OPTCD=(KEY,SEQ,SYN,UPD,LOC,FWD),ARG=SRCHKEY
*
VSAMACB1 ACB   AM=VSAM,DDNAME=DYNAMDDN,MACRF=(KEY,IN,SEQ)
SHOWA    DS    0F
         DS    F
         DS    F
         DS    F
         DS    F
SHOWAL   EQU   *-SHOWA
DATA@    DS    F
RECLEN   DS    F
R2SAVER  DS    F
R14SAVER DS    F
KOCOMPL  DS    H
HOWMANY  DS    CL2
SRCHKEY  DS    CL256
UPPER    DS    CL77
         COPY  RVSMTRTB                     TRANSLATE TABLE
*---------------------------------------------------------------------*
RVSMCOMA DSECT
         COPY  RVSMCOMA
DUMPL    EQU   *-RVSMCOMA
         END
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-*
