         TITLE  'LOCATE A MODULE,CLISTS ETC UNDER TSO'
SCAN     START
*******************************************************************
* SYNTAX   : SCAN ICHRIN03
* VERSION  : 2.0
* ABSTRACT : IT SEARCHES ISPLLIB, STEPLIB, FLPA, MLPA, PLPA,
*            LNKLST AND THE TIOT(SYSPROC, SYSEXEC,ISPPLIB ETC.)
*            PROGRAM IS MODIFIED TO WORK UNDER ESA      30/09/91 AC
*            ADD SYSEXEC TO LIBRARIES BEING CHECKED     17/11/92 MC
*            RE-WRITE TO - PICK UP TEMP ALLOCATIONS     24/01/96 MC
*                        - LIST ALL DUPLICATES
*                        - SHOW ALLOCATIONS FOR PANELS ETC.
*            24/5/96 MCC ADD RACHECK PROCESSING
*                ==> AC 1 AND AUTHORISED: ADD COMMAND NAME TO IKJTSOXX
*            N.B.  SCAN4 CANNOT BE ADDED TO AN ISPF CMDS TABLE
* USAGE: SCAN4 MODULE (ALL)
*******************************************************************
         PRINT NOGEN
**************************
*    ADDRESSABILITY
**************************
SCAN4    CSECT
         BAKR  R14,0                STORE REGS 14 - 12 IN CALLER RSA
         LR    R12,R15              PUT BASE ADDRESS IN GR10
         USING SCAN4,R12            MAKE R12 AS BASE ADDRESS REGS
********************************************************************
* PROCESS ANY PARM INFO
********************************************************************
         BAL   R14,PARM100
         LTR   R15,R15
         BNZ   MAIN900
*
********************************************************************
* SEARCH FOR MODULE IN : TASKLIBS (STEPLIB, TASKLIBS)
*                        LPA
*                        LINKLIST
*                        TIOT     ( ANY ALLOCATED DATASETS )
* SEARCH ALGORITHM:
* IS IT FOUND IN TASKLIB CONCAT ? (STEPLIB, JOBLIB, TASKLIB, LINKLIST)
* YES
*      IS IT FOUND IN THE LINKLST ?
*      YES
*          SEARCH LPALST
*          SEARCH LINKLST
*          SEARCH TIOT (PANELS ETC)
*      FINISH
*      NO  SEARCH TASKLIB
*          SEARCH LPA
*      FINISH
* NO
*      SEARCH LPA
*      SEARCH TIOT (PANELS ETC)
*      FINISH
*
********************************************************************
         TM    SCAN1ST,X'80'          ARE WE SCANNING FOR ALL OCCURANC?
         BNZ   MAIN050
         MVC   FALL,FALLTXT           SET MSG TEXT FOR PARAMETER ALL
MAIN050  DS    0H
         LA    R1,FNDMSG1
         BAL   R14,DISPL100
         LA    R1,FNDMSG2
         BAL   R14,DISPL100
         LA    R1,FNDMSG3
         BAL   R14,DISPL100
MAIN100  DS    0H
*        WTO   'MAIN 100        .......'
         BLDL  0,BLDLIST
         LTR   R15,R15                 IS IT FOUND IN TASKLIB CONCAT ?
         BZ    MAIN110                 YES
         BAL   R14,LPA100              NO - SEARCH LPA
         TM    PGMFLAG,FINISH          KEEP GOING ?
         BO    MAIN900                 NO.
         BAL   R14,TIOT100                  SEARCH TIOT (PANELS ETC)
         B     MAIN900                 FINISH
MAIN110  DS    0H                  *** FOUND IN TASKLIB ***
*        WTO   'MAIN110 TASKLIB .......'
         CLC   Z,=X'1'                 IS IT FOUND IN THE LINKLST ?
         BZ    MAIN130                 YES
         BAL   R14,TIOT100             NO - SEARCH TASKLIB
         TM    PGMFLAG,FINISH          KEEP GOING ?
         BO    MAIN900                 NO.
         BAL   R14,LPA100                 - SEARCH LPA
         B     MAIN900                 FINISH
MAIN130  DS    0H                  *** FOUND IN LINKLIST ***
*        WTO   'MAIN130 - LNKLST.......'
         BAL   R14,LPA100              SEARCH LPALST
         TM    PGMFLAG,FINISH          KEEP GOING ?
         BO    MAIN900                 NO.
         BAL   R14,LNKLST100           SEARCH LINKLST
         TM    PGMFLAG,FINISH          KEEP GOING ?
         BO    MAIN900                 NO.
         BAL   R14,TIOT100             SEARCH TIOT (PANELS ETC)
MAIN900  DS 0H                         FINISH
         TM    FOUND,X'80'             DID WE FIND ANYTHING ?
         BNZ   MAIN950
         LA    R1,FNDMSG7
         BAL   R14,DISPL100            DISPLAY NOT FOUND MSG
MAIN950  DS 0H                         FINISH
         PR
**************************************
*     SUBROUTINES
**************************************
*
***************************************************************
*     SCAN LPA  (FLPA, MLPA, PLPA)
***************************************************************
*
*  INPUT:  NONE
*  OUTPUT: DISPLAYS DATASETS AS FOUND
*          SETS A FLAG TO INDICATE KEEP LOOKING OR FINISH SEARCH
*          - IF FOUND AND SCAN FOR ALL OCCURANCES - KEEP GOING
*          - IF FOUND AND WANT ONLY 1ST OCCURANCE - STOP
*
*--------------------------------------------------------------
LPA100   DS    0H
         BAKR  R14,0
*        WTO   'SCANNING LPALIB .......'
         MVC   DDNAME,=CL8'F/MLPA'
         L     R6,CVTPTR
         USING CVT,R6
         L     R6,CVTQLPAQ
         USING CDENTRY,R6
         LA    R6,0(R6)
LPA150   DS    0H
         LTR   R6,R6                AT END OF FLPA ?
         BZ    LPA160               YES - SEARCH PLPA
         CLC   CDNAME,MEMBER        IS IT FOUND ?
         BE    LPA155               YES
         L     R6,0(R6)             NO - KEEP LOOKING
         B     LPA150
LPA155   DS    0H
         OC    PGMFLAG,SCAN1ST      SET FINISH FLAG IF NOT SCAN1ST
         LA    R1,FNDMSG4
         BAL   R14,DISPL100         - DISPLAY RESULTS
         OC    FOUND,FOUNDYES       SET FOUND = 1 ==> FOUND MEMBER
         TM    PGMFLAG,FINISH       KEEP GOING?
         BZ    LPA160               YES
         PR                         NO - RETURN
*
LPA160   DS    0H
         MVC   DDNAME,=CL8'PLPA'
         L     R5,CVTPTR
         USING CVT,R5
         L     R6,CVTLPDIA
         USING LPDE,R6
         LA    R6,0(R6)
LPA170   EQU   *
         CLI   8(R6),X'FF'          AT END OF PLPA ?
         BE    LPA190
LPA180   DS    0H
         CLC   LPDENAME,MEMBER
         BE    LPA185               IS IT FOUND ?
         LA    R6,40(R6)            NO  - KEEP LOOKING
         B     LPA170
LPA185   DS    0H
         L     R3,CVTSMEXT
         USING CVTVSTGX,R3
         L     R2,CVTEPLPS          GET ADDR OF LPAT
         USING LPAT,R2
         L     R7,LPATCNT
LPA186   DS    0H
         LA    R1,LPATDSN           GET DSN
         MVC   FDSN,0(R1)
         BAL   R14,SCANDS100        LOOK FOR MEM
         TM    PGMFLAG,FINISH       ARE WE FINISHED ?
         BO    LPA190               YES
         LA    R2,45(0,R2)          INCREMENT PTR TO DSLIST
         BCT   R7,LPA186            AT END OF LIST?
LPA190   DS    0H
         PR
****************************************************************
*    SEARCH LNKLST
****************************************************************
*
*  INPUT:  NONE
*  OUTPUT: DISPLAYS DATASETS AS FOUND
*          SETS A FLAG TO INDICATE KEEP LOOKING OR FINISH SEARCH
*          - IF FOUND AND SCAN FOR ALL OCCURANCES - KEEP GOING
*          - IF FOUND AND WANT ONLY 1ST OCCURANCE - STOP
*
*--------------------------------------------------------------
LNKLST100  DS  0H
         BAKR  R14,0
*        WTO   'SCANNING LINKLIST......'
         MVC   DDNAME,=CL8'*LNKLST*'
         L     R6,CVTPTR
         USING CVT,R6
         L     R6,CVTLLTA
         USING LLT,R6
         L     R7,LLTCOUNT               GET NO OF ENTRIES IN LNIKLST
         SR    R2,R2
         IC    R2,K                      K = CONCAT # OF FOUND DS.
         SR    R7,R2                     NO ENTRIES LEFT IN LNKLST
         BCTR  R7,0                      SUBTRACT 1 TO FIX COUNT.
         MH    R2,=H'45'
         AR    R6,R2
         MVC   FDSN,LLTDSN
         OC    PGMFLAG,SCAN1ST           SET FINISH FLAG IF NOT SCAN1ST
         LA    R1,FNDMSG4
         BAL   R14,DISPL100
         OC    FOUND,FOUNDYES            SET FOUND = 1 ==> FOUND MEMBER
         TM    PGMFLAG,FINISH             CONTINUE SEARCHING LINKLIST ?
         BO    LNKLST190                  NO
*        TPUT  =CL23'CONTINUE SCAN OF LL....',23
LNKLST180 DS 0H
         LA    R6,45(0,R6)                INCREMENT DS PTR
         LA    R1,LLTDSN
         MVC   FDSN,0(R1)                 KEEP DS FOR LATER PRINTING
         BAL   R14,SCANDS100
         BCT   R7,LNKLST180               AT END OF LNKLST ?
LNKLST190  DS  0H                         YES
         PR
***********************************************************************
*        SCAN A DATASET FOR MEMBER
***********************************************************************
*        INPUT   R1 -> DSNAME FOR ALLOCATE
*        OUTPUT  R15 = 00 = BLDL WAS SUCCESSFULL - MEM FOUND !
*                R15 = 04 ==> SET IF NOT AUTHORISED TO DS.
*                (R15 IS NEVER CHECKED AFTER RETURN FROM SCANDS)
*                DISPLAYS DATASETS AS FOUND
*                SETS A FLAG TO INDICATE KEEP LOOKING OR FINISH SEARCH
*                  - IF FOUND AND SCAN FOR ALL OCCURANCES - KEEP GOING
*                  - IF FOUND AND WANT ONLY 1ST OCCURANCE - STOP
*
*--------------------------------------------------------------------
SCANDS100 DS 0H
         BAKR  R14,0
         LR    R2,R1                   SAVE DSN PTR
         MVC   ALLTXTDS,0(R2)          PUT DSN IN ALLOC PARM LIST
*        TPUT  =CL23'SCANNING ANY DATASET ..',23
*        TPUT  ALLTXTDS,L'ALLTXTDS
         LA    R1,ALLRBP               GET ADDR OF ALLOC PARM LIST
*
         DYNALLOC
         LTR   R15,R15                 DYNALLOC OK ?
         BZ    SCANDS110               YES. BRANCH
         L     R3,ALLERRCD
         ABEND 3,DUMP
SCANDS110 DS   0H
         LA    R13,RACSAVE             LOAD A SAVE AREA FOR ROUTER CALL
         RACROUTE REQUEST=AUTH,                                        X
               ATTR=READ,                                              X
               ENTITY=((R2)),                                          X
               WORKA=RACWORK,                                          X
               LOG=NOSTAT,                                             X
               RACFIND=NO,                                             X
               RELEASE=1.8,                                            X
               VOLSER=VOLUME,                                          X
               MF=(E,RACROTE)
*
         LTR   R15,R15                 ARE YOU AUTHORISED ?
         BZ    SCANDS115               YES  - CONTINUE
         MVC   FDSN6,0(R2)             NO-PUT DSN IN MSG BUFFER
         LA    R1,FNDMSG6              NO-DISPLAY DSN AND NOT AUTH MSG
         BAL   R14,DISPL100
         LA    R9,4                    SET RC TO 4
         B     SCANDS190               RETURN TO CALLER
SCANDS115 DS   0H
         OPEN  (##MYDCB#,(INPUT))
         BLDL  ##MYDCB#,BLDLIST        LOOK FOR MEMBER
         LR    R9,R15                  SAVE RETURN CODE
         CLOSE ##MYDCB#
SCANDS120 DS 0H
         LTR   R9,R9                   FOUND IN THIS ENTRY ?
         BNZ   SCANDS190               NO - KEEP LOOKING
         OC    PGMFLAG,SCAN1ST         YES - SET FLAG
         LA    R1,FNDMSG4
         BAL   R14,DISPL100            DISPLAY RESULTS
         OC    FOUND,FOUNDYES          SET FOUND = 1 ==> FOUND MEMBER
SCANDS190 DS   0H
         LA    R1,DALRBP               GET ADDR OF ALLOC PARM LIST
         DYNALLOC                      DEALLOCATE
         LTR   R15,R15                 DYNALLOC OK ?
         BZ    SCANDS195               YES. BRANCH
         L     R4,DALERRCD
         ABEND 4,DUMP
SCANDS195 DS   0H
         LR    R15,R9                  SET RETURN CODE 0 => FOUND
         PR                            RETURN TO CALLER
*
*************************************************************
*    PROCESS PARMS
*************************************************************
*    INPUT:  NONE
*    OUTPUT: UPT, ECT PTRS (FOR USE BY PUTLINE)
*            SCAN1ST FLAG SET TO 0 => GET ALL OCCURANCES
*            MEMBER ( + FMEM :FOR LATER PRINTING)
*------------------------------------------------------------
PARM100  DS    0H
         BAKR  R14,0
         ST    R1,CPPLPTR
         L     R2,CPPLPTR
         USING CPPL,R2
         LA    R3,PPLAREA
         USING PPL,R3
         MVC   PPLUPT,CPPLUPT      GET THE UPT POINTER
         MVC   PPLECT,CPPLECT      GET THE ECT POINTER
         MVC   UPTADDR,CPPLUPT     SAVE FOR LATER
         MVC   ECTADDR,CPPLECT     SAVE FOR LATER
         MVC   PPLCBUF,CPPLCBUF    GET COMMAND BUFFER POINTER
         LA    R1,ECB              SET
         ST    R1,PPLECB           - ECB POINTER
         LA    R1,ANS              SET
         ST    R1,PPLANS           - PARAMETER DESCRIPTOR LIST PTR
         MVC   PPLPCL,=V(PCL)      SET PARAMETER CONTROL LIST POINTER
         LA    R1,PPL              POINT TO PARSE PARAMETER LIST
         LINK  EP=IKJPARS          CALL PARSE
         LTR   R15,R15             CHECK PARSE
         BZ    PARM120             SKIP IF OK
         TPUT  =CL23'ERROR DURIN PARSE......',23
         B     PARM190                 GET OUT RC(4)
MVMEM    MVC   MEMBER(0),0(R5)
PARM120  DS    0H
         L     R4,ANS              MAP ANSWER AREA
         USING PDL,R4
         LH    R7,SCANPARM
         L     R5,MEMBNAME
         LH    R6,MEMBNAME+4
         BCTR  R6,0
         EX    R6,MVMEM
         MVC   FMEM,MEMBER         KEEP FOR PRINTING
*        TPUT  =CL23'SUCCESSFULL PARSE......',23
*        TPUT  MEMBER,24
         C     R7,=F'1'
         BNE   PARM190
         XC    SCAN1ST,SCAN1ST      SET SCAN1ST = 0 ==> GET EVERYTHING
*        TPUT  =CL23'KEYWORD ALL FOUND......',23
*
PARM190  DS    0H
         PR
NAMECPY  MVC   MEMBER,0(R5)
*
***************************************************
* SCAN TIOT TO FIND MEMBER IN AN ALLOCATED DATASET
***************************************************
*
*     ENTRY MUST VALID: PARTITIONED
*                       NOT FREE SPACE
*                       NOT A CONCATENATION
*                       NOT DUMMY
*
***************************************************
TIOT100  DS    0H
         BAKR  R14,0
*        WTO   'SCANNING TIOT .........'
         EXTRACT TIOTADDR,FIELDS=(TIOT) EXTRACT THE ADDRESS OF TIOT
         L     R4,TIOTADDR               ADDR FIRST ENTRY
         USING TIOT1,R4
         MVC   SAVEDCB(MYDCBLEN),MYDCB   SAVE DCB JUST IN CASE.
         LA    R3,MYDCB
         USING IHADCB,R3
TIOT010  DS    0H
         SR    R7,R7
         IC    R7,TIOELNGH             GET LENGTH OF TIOT ENTRY
         LTR   R7,R7                   AT END OF TIOT?
         BZ    TIOT090                 YES - EXIT
         MVC   DCBDDNAM,TIOEDDNM
         MVC   DDNAME,TIOEDDNM         KEEP DDNAME
         BAL   R14,VALID100            IS THIS A VALID ENTRY ?
         LTR   R15,R15
         BNZ   TIOT050                 NO - GET NEXT ENTRY
         ICM   R1,7,TIOEJFCB           R1 = JFCB TOKEN
         BAL   R14,JFCB100             GET DATASET NAME
         MVC   FDSN,0(R1)              SAVE FOR LATER DISPLAY
         MVC   FDSN6,0(R1)             SAVE DSN FOR LATER DISPLAY
         LR    R2,R1                   SAVE PTR TO DSN
*
         LA    R13,RACSAVE             LOAD A SAVE AREA FOR ROUTER CALL
         RACROUTE REQUEST=AUTH,                                        X
               ATTR=READ,                                              X
               ENTITY=((R2)),                                          X
               LOG=NOSTAT,                                             X
               RACFIND=NO,                                             X
               RELEASE=1.8,                                            X
               VOLSER=VOLUME,                                          X
               WORKA=RACWORK,                                          X
               MF=(E,RACROTE)
         LTR   R15,R15                 ARE YOU AUTHORISED ?
         BZ    TIOT025                 YES  - CONTINUE
         LA    R1,FNDMSG6              NO-DISPLAY DSN AND NOT AUTH MSG
         BAL   R14,DISPL100
         B     TIOT050                 GET NEXT TIOT ENTRY
TIOT025  DS    0H
         OPEN  (MYDCB,(INPUT))
         BLDL  MYDCB,BLDLIST           FOUND IN THIS ENTRY ?
         LR    R9,R15                  SAVE RETURN CODE
         CLOSE MYDCB
         LTR   R9,R9
         BNZ   TIOT050                 NO - KEEP GOING
*        WTO 'FOUND '                  YES - DISPLAY RESULTS
         SR    R2,R2                   GET CORRECT OFFSET INTO LIST
         IC    R2,K
         MH    R2,=H'20'               R2 = K * 20 = TIOTE OFFSET
         AR    R4,R2                   R4 = ADDRESS TIOTE
         ICM   R1,7,TIOEJFCB           R1 = JFCB TOKEN
         BAL   R14,JFCB100             GET DATASET NAME
         MVC   FDSN,0(R1)              SAVE DSN FOR LATER DISPLAY
         OC    PGMFLAG,SCAN1ST         SET FINISH FLAG IF NOT SCAN1ST
         LA    R1,FNDMSG4
         BAL   R14,DISPL100
         OC    FOUND,FOUNDYES          SET FOUND = 1 ==> FOUND MEMBER
TIOT050  DS 0H
         SR    R7,R7
         IC    R7,TIOELNGH             GET LENGTH OF TIOT ENTRY
         LTR   R7,R7                   AT END OF TIOT?
         BZ    TIOT090
         AR    R4,R7                   PT TO NEXT TIOT ENTRY
         CLI   TIOEDDNM,C' '           IS THIS A CONCATENATION ?
         BNE   TIOT010                 NO. PROCESS NEW DDNAME
         LTR   R9,R9                   DID BLDL FIND IT IN CONCAT DS?
         BNZ   TIOT050                NO - SKIP TO NEXT NON BL. DDNAME
         TM    PGMFLAG,FINISH          CONTINUE SEARCHING TIOT  ?
         BO    TIOT090                    NO
*                                      YES. PROCESS CONCATENATION
         LR    R1,R2                   RELOAD PTR TO DSN
         BAL   R14,SCANDS100           SCAN DATASETNAME
         B     TIOT050
TIOT090  PR
*
*****************************************************************
* VALIDATE TIOT ENTRY
* INPUT:  TIOT ALREADY MAPPED
* OUTPUT: R15 = 0 ==> VALID ENTRY
*         R15 = 4 ==> NOT A VALID ENTRY
*         FDSN - SAVE DSN FOR LATER PRINTING
*
*****************************************************************
VALID100 DS    0H
         BAKR  R14,0
         TM    TIOESTTA,TIOSLTYP       FREED TIOT ENTRY ?
         BO    VALID190                YES. SKIP TIOT FREE SPACE
         CLI   TIOELINK,X'0'           IS IT A REAL DATASET?
         BNE   VALID190                NO. SKIP IT
         SR    R2,R2
         ICM   R2,7,TIOEFSRT           GET UCB ADDR
         LTR   R2,R2                   IS THERE A UCB ?
         BZ    VALID190                NO => DUMMY ALLOCATION
         USING UCBOB,R2                MAP UCB
         MVC   VOLUME,UCBVOLI          GET VOLSER
         DROP R2
*
*----------------------------------------------------------------
* GET THE DATASET NAME FROM THE JFCB
*----------------------------------------------------------------
         ICM   R1,7,TIOEJFCB           R1 = JFCB TOKEN
         BAL   R14,JFCB100             GET DATASET NAME
         MVC   FDSN,0(R1)              SAVE DSN FOR LATER DISPLAY
*
*----------------------------------------------------------------
* IS THE DATASET PARTITIONED ?
*----------------------------------------------------------------
         LA    R1,VOLUME               DSNAME AND VOLSER REQD TO :
         LA    R0,FDSN
         BAL   R14,VTOC100             CHECK DSORG (FROM VTOC)
         LTR   R15,R15                 IS IT PARTITIONED ?
         BNZ   VALID190                NO. SKIP IT
         SR    R15,R15                 YES. SET RC = 0 => DS OK.
         PR
VALID190 DS    0H
         LA    R15,4                   SET RC = 4 => ENTRY NOT VALID
         PR
*
******************************************************************
* GET VTOC
*
* R0 = PTR TO DSNAME
* R1 = PTR TO VOLUME
* R15 = 0 => PARTITIONED
* R15 = 8 => NOT PARTITIONED
******************************************************************
VTOC100  DS    0H
         BAKR  R14,0
         ST    R0,OBCAMLST+4           PUT DSNAME PTR IN CAMLST
         MVC   VOLUME,0(R1)            PUT VOLUME
         OBTAIN OBCAMLST               GET VTOC ENTRY
         LTR   R15,R15                 DATASET IN VTOC ?
         BZ    VTOC110                 YES. BRANCH
         ABEND 2,DUMP
VTOC110  DS 0H
         LA    R2,LOCAREA-44           GET ADDR OF VTOC ENTRY
         USING FMT1,R2                 MAP ENTRY
         LA    R15,0                   SET RC
         TM    DS1DSORG,DS1DSGPO       IS IT PARTITIONED ?
         BO    VTOC190
         LA    R15,8                   NO - SET RC
VTOC190  PR
*
*******************************************************************
* GET DSN FROM JFCB
* INPUT:  R9 = ADDRESS OF TIOT
*         R1 = JFCB TOKEN
* OUTPUT: R1 = ADDRESS OF DSN
*******************************************************************
JFCB100  DS    0H
         BAKR  R14,0
         LA    R8,EPA
         ST    R8,SWEPAPTR
         USING ZB505,R8
         XC    SWAEPA,SWAEPA
         STCM  R1,B'0111',SWVA
         SWAREQ FCODE=RL,EPA=SWEPAPTR,MF=(E,SWAPARMS),UNAUTH=YES
         LTR   R15,R15
         BZ    JFCB190
         ABEND 1,DUMP
JFCB190  DS    0H
*        TPUT  =CL23'RETURN FROM JFCB.......',23
         L     R1,SWBLKPTR             GET JFCB ADDR
         SR    R15,R15
         PR
********************************************************************
* DISPLAY RESULTS
* INPUT: R1 CONTAINS ADDRESS OF LINE TO BE DISPLAYED
* OUTPUT: LINE DISPLAYED
********************************************************************
DISPL100  DS 0H
         BAKR  R14,0
         LR    R6,R1
         L     R5,UPTADDR              GET UPT ADDR
         L     R4,ECTADDR              GET ECT ADDR
         XC    IOPLADS,IOPLADS         CLEAR PUTLINE WORK AREA
         XC    ECBADS,ECBADS           CLEAR PUTLINE WORK AREA
         PUTLINE    PARM=PUTBLOK,UPT=(R5),ECT=(R4),ECB=ECBADS,         X
               OUTPUT=((R6),TERM,SINGLE,DATA),MF=(E,IOPLADS)
         LTR   R15,R15
         BZ    DISPL190
         ABEND 5,DUMP
DISPL190 PR
********************************************************************
*     END OF SUBROUTINES
********************************************************************
*
********************************************************************
*     DCB FOR ALLOCATION
********************************************************************
MYDCBLEN EQU   *-MYDCB
SAVEDCB  DC    (MYDCBLEN)X'00'
*******************************************
*  BLDL LIST
*******************************************
BLDADDR  DC    A(BLDLIST)
         DS    0F
BLDLIST  DC    X'0001'
         DC    X'000E'
MEMBER   DC    CL8' '
         DS    XL3
K        DS    X        CONCATENATION NUMBER
Z        DS    X        WHERE SYSTEM FOUND THE ENTY
*******************************************
* STORAGE FOR REGISTERS IN CALLED PROGRAM
* AND MISCELLANEOUS DATA AREAS
*******************************************
SWEPAPTR DS    F                       USED BY SWAREQ MACRO
EPA      DS    CL20                    USED BY SWAREQ MACRO
SWAPARMS SWAREQ MF=L                   USED BY SWAREQ MACRO
TIOTADDR DS    A                       ADDRESS OF TIOT
OBCAMLST CAMLST SEARCH,0,VOLUME,LOCAREA  VTOC
LOCAREA  DS    265C                    CAMLST WORK AREA
VOLUME   DC    CL6' '
PGMFLAG  DC    X'0'                    PGM RUN FLAGS
FINISH   EQU   X'80'                   WHEN SET PGM SHOULD FINISH
*                                      PGMFLAG=00 => KEEP GOING
*                                      PGMFLAG=80 => FINISH
SCAN1ST  DC    X'80'                   USER ONLY WANTS 1ST OCCURANCE
FOUND    DC    X'00'                   DID YOU FIND THE MEMBER ?
FOUNDYES DC    X'80'                   DID YOU FIND THE MEMBER ?
ZERO     EQU   X'00'
ONE      DC    F'1'
BLANKS   DC    CL12' '
*
RACROTE  RACROUTE REQUEST=AUTH,                                        X
               CLASS='DATASET',                                        X
               WORKA=*-*,                                              X
               MF=L
*
RACSAVE  DS    18F
RACWORK  DS    512C
FNDMSG1  DC    AL2(FNDMSG1L),AL2(0)
         DC    C'SCAN4 V2.0: LOOKING FOR: '
FMEM     DC    CL8' '
FALL     DC    C'                '
FNDMSG1L EQU   *-FNDMSG1
FALLTXT  DC    C' ALL OCCURRANCES'
FNDMSG2  DC    AL2(FNDMSG2L),AL2(0)
         DC    C'DDNAME    DATASET NAME '
FNDMSG2L EQU   *-FNDMSG2
FNDMSG3  DC    AL2(FNDMSG3L),AL2(0)
         DC    C'------    ------------ '
FNDMSG3L EQU   *-FNDMSG3
FNDMSG4  DC    AL2(FNDMSG4L),AL2(0)
DDNAME   DC    CL8' '
         DC    CL2' '
FDSN     DC    CL44' '
FNDMSG4L EQU   *-FNDMSG4
FNDMSG5  DC    AL2(FNDMSG5L),AL2(0)
         DC    C'MEMBER NOT FOUND'
FNDMSG5L EQU   *-FNDMSG5
FNDMSG6  DC    AL2(FNDMSG6L),AL2(0)
FDSN6    DC    CL44' '
         DC    C'...NOT AUTHORISED TO SEARCH LIBRARY'
FNDMSG6L EQU   *-FNDMSG6
FNDMSG7  DC    AL2(FNDMSG7L),AL2(0)
         DC    C'MEMBER NOT FOUND '
FNDMSG7L EQU   *-FNDMSG7
ECBADS   DS    F'0'                   SPACE FOR THE EVENT CONTROL BLOCK
PUTBLOK  PUTLINE    MF=L              LIST FORM OF THE PUTLINE MACRO
*                                     INSTRUCTION. THIS EXPANDS INTO A
*                                     PUTLINE PARAMETER BLOCK.
IOPLADS  DC    4F'0'                  SPACE FOR THE INPUT/OUTPUT
ERASE    DC    X'27F5F3'           ERASE WRITE COMMAND
ECB      DS    A                   ECB FOR PARSE
ANS      DS    A                   ANSWER AREA FOR PARSE
CPPLPTR  DS    A                   CPPL ADDRESS
UPTADDR  DS    F                       ADDR OF USERS UPT
ECTADDR  DS    F                       ADDR OF USERS ECT
PPLAREA  DC    (PPLLEN)X'0'
***********************************************************************
* SCANDS DEFINITIONS (FOR DYNALLOC)                                   *
***********************************************************************
ALLRBP   DC    X'80',AL3(ALLRB)
*
ALLRB    DS    0F
ALLLEN   DC    AL1(20)
ALLVERB  DC    X'01'                  OPTION:ALLOCATION
ALLFLG1  DC    H'0'
ALLERRCD DC    H'0'
ALLINFO  DC    H'0'
ALLTXTP  DC    A(ALLTXTS)
         DC    F'0'
ALLFLG2  DC    F'0'
*
ALLTXTS  DC    A(ALLTXT1)
         DC    A(ALLTXT2)
         DC    X'80',AL3(ALLTXT3)        TURN ON HIGH ORDER BIT TO END
*                                      PARM LIST
ALLTXT1  DS    0F                      DDNAME TEXT UNIT
         DC    XL2'01',XL2'01',AL2(8)  KEY,#,LENGTH
ALLTXTDD DC    CL8'##MYDD#'            DDNAME
*
ALLTXT2  DS    0F                      DSNAME TEXT UNIT
         DC    XL2'02',XL2'01',AL2(44) KEY,#,LENGTH
ALLTXTDS DS    CL44                    DSNAME
*
ALLTXT3  DS    0F                      DISP TEXT UNIT
         DC    XL2'04',XL2'01',XL2'01',X'08' KEY,#,LENGTH,DISP=SHR
*
MYDCBLN# EQU   *-##MYDCB#
         EJECT
***********************************************************************
*              DE-ALLOCATE RB                                         *
***********************************************************************
         DS    0F
DALRBP   DC    X'80',AL3(DALRB)
*
DALRB    DS    0F
DALLEN   DC    AL1(20)
DALVERB  DC    X'02'                  OPTION:DEALLOCATE
DALFLG1  DC    H'0'
DALERRCD DC    H'0'
DALINFO  DC    H'0'
DALTXTP  DC    A(DALTXTS)
         DC    F'0'
DALFLG2  DC    F'0'
*
DALTXTS  DC    X'80',AL3(DALTXT1)
*
DALTXT1  DS    0F                      DDNAME TEXT UNIT
         DC    XL2'01',XL2'01',AL2(8)  KEY,#,LENGTH
         DC    CL8'##MYDD#'            DDNAME
*
         LTORG
***********************************************************************
* PARSE CONTROL LIST                                                  *
***********************************************************************
PCL      IKJPARM DSECT=PDL         START THE PARAMETER CONTROL LIST
*
MEMBNAME IKJIDENT '$$FRED',FIRST=ANY,OTHER=ANY,                        *
               PROMPT='MEMBER NAME',MAXLNTH=8,                         *
               HELP='WHAT MEMBER DO YOU WISH TO LOOK FOR?'
SCANPARM IKJKEYWD
         IKJNAME 'ALL'
         IKJENDP
         EJECT
*******************************************************************
*     MAP REQUIRED DSECTS
*******************************************************************
         CVT DSECT=YES
         IEFJESCT
         IHACDE
         IHALPDE
         IEFZB505
         REGEQU
         DCBD DSORG=PS
FMT1     DSECT
         IECSDSL1 1
         IEFUCBOB
         IKJCPPL
         IKJPPL                    PARSE PARAMETER LIST
PPLLEN   EQU   *-PPL
LLT      DSECT
LLTHEAD  DS    0F
LLTID    DS    CL4
LLTCOUNT DS    XL4
LLTDSLTH DS    XL1
LLTDSN   DS    CL44
*
LPAT     DSECT
LPATID   DS  CL4
LPATCNT  DS  XL4
LPATNTRY DS 0CL45
LPATDSLN DS  X
LPATDSN  DS  CL44
         IEFTIOT1
         END
 SCAN4 ISFLPA
