*  DISPLAYING THE PR/SM CONFIGURATION UNDER TSO.                      *
*      COPIED FROM MVS UPDATE ISSUE 74, NOVEMBER 92.                  *
*      TPUTS MODIFIED TO PUTLINES TO PERMIT TRAPPING BY REXX/CLIST    *
*      'OUTTRAP' COMMANDS.                                            *
*                                                                     *
*  THIS PROGRAM DISPLAYS THE CURRENT PR/SM CONFIGURATION IT USES AN   *
*  AUTHORIZATION SVC (SVC 235).  BUT YOU CAN GET RID OF THE SVC       *
*  AUTHORIZATION CALL BY CREATING AN ENTRY FOR SHOWLPAR IN IKJTSOXX   *
*  TABLE (PARAMETER AUTHCMD OR AUTHPGM) THIS AN EXAMPLE OF THE        *
*  DISPLAY YOU WILL GET :                                             *
*---------------------------------------------------------------------*
*  03 PARTITIONS, 04 PHYSICAL PROCESSORS. CURRENT PARTITION IS MVSTEST*
*                                                                     *
*  DISPATCH TIMES WERE EVALUATED ON A 1001 MILLISECONDS INTERVAL      *
*                                                                     *
*   MVSLOCA    PARTITION NUMBER 01, 01 LOGICAL PROCESSORS             *
*       CP      -WEIGHT-        W/A     DISPATCH                      *
*       01        500           NO        17.0 %                      *
*                                                                     *
*   MVSPROD    PARTITION NUMBER 02, 03 LOGICAL PROCESSORS             *
*       CP      -WEIGHT-        W/A     DISPATCH                      *
*       01        DED           YES        99.1%                      *
*       02        DED           YES       101.7%                      *
*       03        DED           YES        99.5%                      *
*                                                                     *
*   MVSTEST : PARTITION NUMBER 03. 01 LOGICAL PROCESSORS              *
*       CP      -WEIGHT-        W/A     DISPATCH                      *
*       01        500           NO         1.8 %                      *
*---------------------------------------------------------------------*
         MACRO
&NLA     SUBDW &D1,&D2
&NLA     DS    0H
* THIS MACRO SUBTRACTS 2 UNSIGNED DOUBLE-WORDS D1, D2
* (D1 MUST BE >= D2)
* RETURNS D1=D1-D2
         MNOTE '** THIS MACRO USES REGS 0 - 1'
         L     0,&D1   1ST DOUBLE-WORD
         L     1,&D2   2ND DOUBLE-WORD
         SLR   0,1     SUBTRACT
         ST    0,&D1   STORE THE RESULT
         L     0,&D1+4 1ST DOUBLE-WORD
         L     1,&D2+4 2ND DOUBLE-WORD
         SLR   0,1     SUBTRACT
         CLC   &D1+4(4),&D2+4  COMPARE
         BH    DIFP&SYSNDX
         L     1,&D1   THE 1ST RESULT WAS TOO BIG
         S     1,=F'1' DECREMENT
         ST    1,&D1   STORE AGAIN 1ST RESULT
DIFP&SYSNDX    DS 0H
         ST    0,&D1+4
         MEND
*
*#####################################################################*
*
SHOWLPAR CSECT
         SAVE  (14,12),,SHOWLPAR-&SYSDATE-&SYSTIME
         LR    R12,R15
         LA    R11,4095(R12)
         LA    R11,1(R11)
         USING SHOWLPAR,R12,R11
         LR    R9,R13
         LA    R13,SAVE
         ST    R13,8(R9)
         ST    R9,4(R13)
                                                                SPACE 1
         LR    R2,R1                   SAVE ADDRESS OF THE CPPL
         USING CPPL,R2                 ADDRESSABILITY FOR THE CPPL
         MVC   UPT@(4),CPPLUPT         SAVE ADDRESS OF THE UPT
         MVC   ECT@(4),CPPLECT         SAVE ADDRESS OF THE UPT
         DROP  R2                      RELEASE ADDRESSABILITY
                                                                SPACE 1
* OBTAIN 1 PAGEAND FIX IT (FOR THE PRSM BUFFER)
         LA    R0,1                    AUTHORIZATION SVC : AUTH ON
         ICM   R1,B'1111',=C'AUTH'     SET AUTH CODE
         SVC   235                     AUTHORIZATION SVC : AUTH ON
         MODESET MODE=SUP,KEY=ZERO
         GETMAIN RU,LV=4096,BNDRY=PAGE GETMAIN 1 PAGE
         LR    R8,R1                   KEEP ADDRESS OF PAGE
         L     R7,=F'4096'
         AR    R7,R8                   END ADDRESS
         PGFIX R,A=(R8),ECB=0,EA=(R7)  FIX THE PAGE FOR DIAGNOSE
         ST    R15,RETCODE
         MODESET MODE=PROB,KEY=NZERO
         XR    R0,R0                   AUTHORIZATION SVC : AUTH OFF
         ICM   R1,B'1111',=C'AUTH'     SET AUTH CODE
         SVC   235                     AUTHORIZATION SVC : AUTH OFF
         L     R1,RETCODE              TEST RC FROM FIX
         LTR   R1,R1
         BZ    FIX0
         TPUT  =C'** BAD RETURN CODE AFTER PGFIX **',33
         B     END0
* ISSUE DIAGNOSE INSTRUCTION TO GET PRSM DATA (FIRST PASS)
FIX0     DS    0H
         LA    R0,1                    AUTHORIZATION SVC : AUTH ON
         ICM   R1,B'1111',=C'AUTH'     SET AUTH CODE
         SVC   235                     AUTHORIZATION SVC : AUTH ON
         MODESET MODE=SUP,KEY=ZERO
         LRA   R1,0(R8,0)              LOAD REAL ADDRESS OF BUFFER
         LA    R0,4                    GET INFORMATION FROM PRSM
         DC    X'83',X'10',X'0204'     DIAGNOSE CODE 0204
         LTR   R0,R0                   EXECUTION CORRECT ?
         BNZ   ITSBAD                  NO
         MODESET MODE=PROB,KEY=NZERO
         XR    R0,R0                   AUTHORIZATION SVC : AUTH OFF
         ICM   R1,B'1111',=C'AUTH'     SET AUTH CODE
         SVC   235                     AUTHORIZATION SVC : AUTH OFF
* STORE CPU DISPATCH TIMES IN THE TABLE
         LR    R5,R8
         USING PRSMBUF,R5
* PROCESS 1 PARTITION
         XR    R9,R9
         IC    R9,PRNBPART             HOW MANY PARTITIONS ?
         LTR   R9,R9
         BZ    END0                    NO PARTITION
         MVC   DW1,PRTOD
         LR    R4,R5
         LA    R4,(PRPRFLEN)(0,R4)     ACCESS TO 1ST PARTITION
         DROP  R5
         USING PRSMPART,R4
LOPPART0 DS    0H
         IC    R1,PRNOPART             PARTITION NUMBER
         STC   R1,PARTNO               STORE
*  PROCESS 1 LOGICAL PROCESSOR IN 1 PARTITION
         XR    R3,R3
         IC    R3,PRNBPRLO             HOW MANY PROCESSORS ?
         LTR   R3,R3                   NONE ?
         BZ    NXTPART                 YES. PARTITION DEACTIVATED
         LA    R4,(PRPALENG)(0,R4)     ACCESS IST PROC. IN PARTITION
         DROP  R4
         USING PRSMPARP,R4
LOPPROC0 DS    0H
* STORE DISPATCH TIMES IN THE TABLE
         LA    R2,TABLE
         XR    R1,R1
         IC    R1,PRNBPRLN             PROCESSOR NUMBER
         SLL   R1,3                    X8 (SIZE OF AN ENTRY)
         AR    R2,R1                   + ADDRESS OF TOP OF TABLE
         XR    R1,R1                   CLEAR R1
         IC    R1,PARTNO               PARTITION NUMBER
         SLL   R1,7                    X8 X16 (16 PROC. MAXIMUM)
         AR    R2,R1                   + ADDRESS
         MVC   0(8,R2),PRDISP          DISPATCH TIME COPIED IN TABLE
         LA    R4,(PRPRLENG)(0,R4)     ACCESS TO NEXT PROCESSOR ENTRY
         BCT   R3,LOPPROC0             PROCESS NEXT PROCESSOR
NXTPART  BCT   R9,LOPPART0             PROCESS NEXT PARTITION
* WAIT 1 SECONDBEFORE GETTING NEW STATISTICS
         STIMER WAIT,,DINTVL=INT
* RE-ISSUE DIAGNOSE INSTRUCTION (SECOND PASS)
         LA    R0,1                    AUTHORIZATION SVC : AUTH ON
         ICM   R1,B'1111',=C'AUTH'     SET AUTH CODE
         SVC   235                     AUTHORIZATION SVC : AUTH ON
         MODESET MODE=SUP,KEY=ZERO
         LRA   R1,0(R8,0)              LOAD REAL ADDRESS
         LA    R0,4
         DC    X'83',X'10',X'0204'     DIAGNOSE CODE 0204
         LTR   R0,R0
         BNZ   ITSBAD
         MODESET MODE=PROB,KEY=NZERO
         XR    R0,R0                   AUTHORIZATION SVC : AUTH OFF
         ICM   R1,B'1111',=C'AUTH'     SET AUTH CODE
         SVC   235                     AUTHORIZATION SVC : AUTH OFF
* SECOND PASS, PROCESS DATA IN THE BUFFER
         LR    R5,R8
         USING PRSMBUF,R5
         MVC   DW2,PRTOD
* COMPUTE THE EXACT LENGTH OF THE TIME INTERVAL
         SUBDW DW2,DW1                 SUBTRACT THE 2 DOUBLE WORDS
         LM    R0,R1,DW2
         SRDL  R0,12                   GET TIME IN MICROSECONDS
         D     R0,=F'1000'             THEN IN MILLISECONDS
         ST    R1,INTREAL              STORE TIME INTERVAL LENGTH
         CVD   R1,DW1                  CONVERSION TO PACKED DECIMAL
         UNPK  OUT,DW1                 AND TO DECIMAL ZONED
         OI    OUT+L'OUT-1,X'F0'       NORMALIZE THE SIGN
* HOW MANY PARTITIONS ?
         XR    R0,R0
         IC    R0,PRNBPART             LOAD NUMBER OF PARTITIONS
         CVD   R0,DW1                  CONVERSION TO PACKED DECIMAL
         UNPK  NBPART,DW1              AND TO DECIMAL ZONED
         OI    NBPART+L'NBPART-1,X'F0' NORMALIZE THE SIGN
* HOW MANY PHYSICAL PROCESSORS ?
         XR    R0,R0
         IC    R0,PRNBPROC             LOAD NUMBER OF PARTITIONS
         CVD   R0,DW1                  CONVERSION TO PACKED DECIMAL
         UNPK  NBPROC,DW1              AND TO DECIMAL ZONED
         OI    NBPROC+L'NBPROC-1,X'F0' NORMALIZE THE SIGN
         LR    R4,R5
         AH    R4,PROFFCUR             OFFSET TO CURRENT PARTITION
         MVC   PARTCUR,(PRNAME-PRSMPART)(R4)  NAME OF PARTITION
*---------------------------------------------------------------------*
         MVC   OUTPUT(2),=AL2(LMSG1+4) OUTPUT LENGTH FOR PUTLINE
         MVC   OUTPUTA,SPACES          CLEAR OUTPUT AREA
         MVC   OUTPUTA(LMSG1),MSG1     POPULATE LINE
         BAL   R14,PUTLRTN             GO AND DISPLAY IT
         MVC   OUTPUT(2),=AL2(LMSG2+4) OUTPUT LENGTH FOR PUTLINE
         MVC   OUTPUTA,SPACES          CLEAR OUTPUT AREA
         MVC   OUTPUTA(LMSG2),MSG2     POPULATE LINE
         BAL   R14,PUTLRTN             GO AND DISPLAY IT
*---------------------------------------------------------------------*
* PROCESS 1 PARTITION
         XR    R9,R9
         IC    R9,PRNBPART             NUMBER OF PARTITIONS
         LTR   R9,R9
         BZ    END0                    NO PARTITION
         LR    R4,R5
         LA    R4,(PRPRFLEN)(0,R4)     ACCESS TO IST PARTITION
         DROP  R5
         USING PRSMPART,R4
LOPPART  DS    0H
* WHAT IS THE PARTITION NUMBER ?
         XR    R0,R0
         IC    R0,PRNOPART             PARTITION NUMBER
         CVD   R0,DW1                  CONVERSION TO PACKED DECIMAL
         UNPK  NPART,DW1               AND TO DECIMAL ZONED
         OI    NPART+L'NPART-1,X'F0'   NORMALIZE THE SIGN
* HOW MANY LOGICAL PROCESSORS FOR THIS PARTITION ?
         XR    R0,R0
         IC    R0,PRNBPRLO             PROCESSORS
         CVD   R0,DW1                  CONVERSION TO PACKED DECIMAL
         UNPK  NPROC,DW1               AND TO DECIMAL ZONED
         OI    NPROC+L'NPROC-1,X'F0'   NORMALIZE THE SIGN
* STATUS OF THE PARTITION (ACTIVE / INACTIVE)
         MVC   STATUS,=C'               '
         CLI   PRNBPRLO,X'00'          NO PROCESSOR ?
         BNE   PROCNONE
         MVC   STATUS,=C' ** INACTIVE **'
PROCNONE DS    0H
         MVC   PARTN,PRNAME            NAME OF PARTITION
*---------------------------------------------------------------------*
         MVC   OUTPUT(2),=AL2(1+4)     OUTPUT LENGTH FOR PUTLINE
         MVC   OUTPUTA,SPACES          CLEAR OUTPUT AREA
         BAL   R14,PUTLRTN             GO AND DISPLAY IT
         MVC   OUTPUT(2),=AL2(LMSG3+4) OUTPUT LENGTH FOR PUTLINE
         MVC   OUTPUTA,SPACES          CLEAR OUTPUT AREA
         MVC   OUTPUTA(LMSG3),MSG3     POPULATE LINE
         BAL   R14,PUTLRTN             GO AND DISPLAY IT
*---------------------------------------------------------------------*
         IC    R1,PRNOPART             PARTITION NUMBER
         STC   R1,PARTNO               STORED
* PROCESS 1 PROCESSOR FOR 1 PARTITION
         XR    R3,R3
         IC    R3,PRNBPRLO             HOW MANY PROCESSORS ?
         LTR   R3,R3                   NONE ?
         BZ    NEXTPART                YES, PARTITION WAS DEACTIVATED
*---------------------------------------------------------------------*
         MVC   OUTPUT(2),=AL2(40+4)    OUTPUT LENGTH FOR PUTLINE
         MVC   OUTPUTA,SPACES          CLEAR OUTPUT AREA
         MVC   OUTPUTA(40),=C'       CP    -WEIGHT-    W/A    DISPATCH'
         BAL   R14,PUTLRTN             GO AND DISPLAY IT
*---------------------------------------------------------------------*
         LA    R4,(PRPALENG)(0,R4)     ACCESS 1ST PROCESSOR IN PARTITN
         DROP  R4
         USING PRSMPARP,R4
LOPPROC  DS    0H
*LOGICAL PROCESSOR NUMBER
         XR    R1,R1                   R1 = 0
         IC    R1,PRNBPRLN             LOGICAL PROCESSOR NUMBER
         CVD   R1,DW1                  CONVERT TO PACKED
         UNPK  NOPROC,DW1              AND TO DECIMAL ZONED
         OI    NOPROC+L'NOPROC-1,X'F0' NORMALIZE THE SIGN
* WEIGHT OF THE PROCESSOR
         LH    R1,PRWEIGHT             WEIGHT OF THIS PROCESSOR
         CVD   R1,DW1                  CONVERT TO PACKED
         MVC   WEIGHT,=X'4020202020202020' MASK FOR INSTRUCTION ED
         ED    WEIGHT,WORD             CONVERT TO DECIMAL ZONED
* WAIT ASSIST
         MVC   ASSIST,=CL3'NO'
         TM    PRPRFLAG,X'80'          WAIT ASSIST-YES?
         BNO   NOWASST                 NO
         MVC   ASSIST,=CL3'YES'        YES
NOWASST  DS    0H
* DISPATCH TIME PERCENTAGE
         MVC   DISPPC,=CL5'?????'      PERCENT DISPATCH TIME UNKNOWN
* WEIGHT OF THE PROCESSOR
         CLC   PRWEIGHT,=H'-1'         WEIGHT - X'FFFF' ?
         BNE   NOTDEDIC                NO
         MVC   WEIGHT,=CL8'     DED'   YES : DEDICATED PROCESSOR
NOTDEDIC DS    0H
* COMPUTE CPU UTILIZATION FROM TABLE
         LA    R2,TABLE
         XR    R1,R1
         IC    R1,PRNBPRLN             PROCESSOR NUMBER
         SLL   R1,3                    X 8
         AR    R2,R1                   + BEGINNING OF TABLE
         XR    R1,R1
         IC    R1,PARTNO               PARTITION NUMBER
         SLL   R1,7                    X 8  X 16
         AR    R2,R1                   + BEGINNING OF TABLE
         MVC   DW1,0(R2)               LAST DISPATCH TIME
         MVC   DW2,PRDISP              PRESENT DISPATCH TIME
         CLC   DW1,DW2                 COMPARE OLD AND NEW DISP TIMES
         BNL   NOCALC                  IF OLD > NEW. ABNORMAL
         SUBDW DW2,DW1                 SUBTRACT THEM
         LM    R0,R1,DW2               LOAD MICROSECONDS
         D     R0,INTREAL              DIVIDE BY TIME INTERVAL LENGTH
         CVD   R1,DW1                  CONVERT TO PACKED
         UNPK  DISPP,DW1               AND TO DECIMAL ZONED
         OI    DISPP+L'DISPP-1,X'F0'   NORMALIZE THE SIGN
         MVC   DISPPC(3),DISPP         100
         MVI   DISPPC+3,C'.'
         MVC   DISPPC+4(1),DISPP+3     0
         CLI   DISPPC,C'0'             REPLACE LEADING ZEROES
         BNE   NOCALC
         MVI   DISPPC,C' '             BY BLANKS
         CLI   DISPPC+1,C'0'           REPLACE LEADING ZEROES
         BNE   NOCALC
         MVI   DISPPC+1,C' '           BY BLANKS
NOCALC   DS    0H
* DISPLAY AN INFORMATION LINE ABOUT THE PROCESSOR USED BY THE PARTITION
*---------------------------------------------------------------------*
         MVC   OUTPUT(2),=AL2(LMSG4+4) OUTPUT LENGTH FOR PUTLINE
         MVC   OUTPUTA,SPACES          CLEAR OUTPUT AREA
         MVC   OUTPUTA(LMSG4),MSG4     POPULATE LINE
         BAL   R14,PUTLRTN             GO AND DISPLAY IT
*---------------------------------------------------------------------*
         LA    R4,(PRPRLENG)(0,R4)     NEXT PROCESSOR
         BCT   R3,LOPPROC
NEXTPART BCT   R9,LOPPART
         B     END0
ITSBAD   DS    0H
         MODESET MODE=PROB,KEY=NZERO
         XR    R0,R0                   AUTHORIZATION SVC : AUTH OFF
         ICM   R1,B'1111',=C'AUTH'     SET AUTH CODE
         SVC   235                     AUTHORIZATION SVC : AUTH OFF
*---------------------------------------------------------------------*
         MVC   OUTPUT(2),=AL2(26+4)    OUTPUT LENGTH FOR PUTLINE
         MVC   OUTPUTA,SPACES          CLEAR OUTPUT AREA
         MVC   OUTPUTA(26),=C'** ERROR AFTER DIAGNOSE **'
         BAL   R14,PUTLRTN             GO AND DISPLAY IT
*---------------------------------------------------------------------*
END0     DS    0H
* FREE THE ALLOCATED PAGE
         LA    R0,1                    AUTHORIZATION SVC : AUTH ON
         ICM   R1,B'1111',=C'AUTH'     SET AUTH CODE
         SVC   235                     AUTHORIZATION SVC : AUTH ON
         MODESET MODE=SUP,KEY=ZERO
         L     R7,=F'4096'
         AR    R7,R8                   END ADDRESS
         PGFREE   R,A=(R8),ECB=0,EA=(R7) UNFIX PAGE IN MEMORY
         FREEMAIN RC,LV=4096,A=(8)
         MODESET  MODE=PROB,KEY=NZERO
         XR    R0,R0                   AUTHORIZATION SVC : AUTH OFF
         ICM   R1,B'1111',=C'AUTH'     SET AUTH CODE
         SVC   235                     AUTHORIZATION SVC : AUTH OFF
END      DS    0H
         L     R13,4(R13)
         RETURN (14,12),T,RC=0
                                                                SPACE 1
*---------------------------------------------------------------------*
PUTLRTN  DS    0H
         STM   R14,R4,SAVER14          SAVE RETURN ADDRESS
         L     R2,UPT@                 LOAD UPT ADDRESS
         L     R3,ECT@                 LOAD ECT ADDRESS
         LA    R4,OUTPUT               LOAD MESSAGE ADDRESS
         XC    ECB@,ECB@               INITIALISE ECB
         PUTLINE PARM=PUTBLOCK,UPT=(R2),ECT=(R3),ECB=ECB@,             +
               OUTPUT=((R4),TERM,SINGLE,DATA),                         +
               MF=(E,IOPLADS)
         LM    R14,R4,SAVER14          RESTORE RETURN ADDRESS
         BR    R14                     RETURN TO CALLER
*---------------------------------------------------------------------*
                                                                SPACE 1
*#####################################################################*
         LTORG
                                                                SPACE 1
INT      DC    CL8'00000100'           WAIT INTERVAL : 1 SECOND
RETCODE  DS    F                       RETURN CODE FROM PGFIX
MSG1     DC    CL2' '
NBPART   DS    CL2
         DC    C' PARTITIONS, '
NBPROC   DS    CL2
         DC    C' PHYSICAL PROCESSORS, CURRENT PARTITION IS '
PARTCUR  DS    CL8
LMSG1    EQU   *-MSG1
MSG2     DC    C' DISPATCH TIMES WERE EVALUATED ON A '
OUT      DS    CL4
         DC    C' MILLISECONDS INTERVAL'
LMSG2    EQU   *-MSG2
MSG3     DC    CL3' '
PARTN    DS    CL8
         DC    C' : PARTITION NUMBER '
NPART    DS    CL2
         DC    C', '
NPROC    DS    CL2
         DC    C' LOGICAL PROCESSORS    '
STATUS   DC    CL15' '
LMSG3    EQU   *-MSG3
MSG4     DC    CL7' '
NOPROC   DS    CL2
         DC    C' '
WEIGHT   DS    CL8
         DC    CL7' '
ASSIST   DS    CL3
         DC    CL5' '
DISPPC   DS    CL5     % DISPATCH TIME FROM 000.0 TO 100.0 (OR MORE)
         DC    C' %'
LMSG4    EQU   *-MSG4
INTREAL  DS    F       TIME INTERVAL LENGTH
PARTNO   DS    CL1
DISPP    DS    CL4     % DISPATCH TIME FROM 0000 TO 1000 (OR MORE ...
DW1      DS    D       DOUBLE-WORD FOR WORK
         ORG   DW1+4
WORD     DS    F
DW2      DS    D       DOUBLE-WORD   FOR WORK
* WE  STORE PROCESSOR DISPATCH TIMES IN THIS TABLE
TABLE    DS    0CL2048         16 PARTITIONS X 16 PROCESSORS X 8C
         DC    2048X'00'       16 PARTITIONS X 16 PROCESSORS X 8C
SAVE     DS    18F
*---------------------------------------------------------------------*
SAVER14  DS    16F                     PUTLINE ROUTINE REGISTER SAVE
SPACES   DC    CL80' '
OUTPUT   DC    H'83'                   OUTPUT LENGTH FOR PUTLINE
         DC    H'0'                    RESERVED FOR PUTLINE
OUTPUTA  DC    CL80' '                 TPUT BUILD AREA
ECB@     DS    F                       ECB SAVE ADDRESS FOR PUTLINE
UPT@     DS    F                       ECB SAVE ADDRESS FOR PUTLINE
ECT@     DS    F                       ECB SAVE ADDRESS FOR PUTLINE
IOPLADS  DC    4F'0'                   SPACE FOR I/O PARAMETER LIST
PUTBLOCK PUTLINE MF=L
*---------------------------------------------------------------------*
* THIS DSECT DESCRIBES THE CONTENTS OF THE PR/SM BUFFER (OCO)
* RETURNED BY THE DIAGNOSE X'204' INSTRUCTION
PRSMBUF  DSECT
* HEADER
PRNBPART DS    CL1     HOW MANY PARTITIONS
         DS    CL4
PRNBPROC DS    CL1     HOW MANY PHYSICAL PROCESSORS
PROFFCUR DS    H       OFFSET TO ENTRY FOR CURRENT PARTITION
PRTOD    DS    D       TOD
PRPRFLEN EQU   (*-PRSMBUF)
* ENTRY FOR PARTITION
PRSMPART DS    0F
PRNOPART DS    CL1     PARTITION NUMBER
PRNBPRLO DS    CL1     HOW MANY LOGICAL PROCESSORS FOR THIS PARTITION
         DS    CL6
PRNAME   DS    CL8     NAME OF THE PARTITION
PRPALENG EQU   (*-PRSMPART)
* ENTRY FOR LOGICAL PROCESSOR IN USE BY THE PARTITION
PRSMPARP DS    0F
         DS    CL1
PRNBPRLN DS    CL1     LOGICAL PROCESSOR NUMBER
         DS    CL3
PRPRFLAG DS    CL1     FLAG (WAIT ASSIST. ETC)
PRWEIGHT DS    H       WEIGHT OF PARTITION
PRDISP   DS    D       TIME A LOGICAL PROC. WAS DISPATCHED ON A PHYS.
         DS    CL8
PRPRLENG EQU   (*-PRSMPARP)
*
         YREGS
*
         IKJCPPL
*
         END
