* CSECT <- Permit GOAKing
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
*
**       Title:    'SORT TABLE'
**       System:   N/A
**       Module:   SORTTAB
**       Program:  SORTTAB
**       Function: This program sorts a table of less than 32768
**                 entries with record length not longer than 32768.
**
**       Parameters: R1 points to a parameter list address where the
**                   parameter list is as follows:
**                     Bytes 1 - 4 : Start of table
**                     Bytes 5 - 6 : Number of table entries
**                     Bytes 7 - 8 : Length of each table entry
**
**
**       Notes:
**                 1. Program7is entrant.th of each table entry
**                 2. If a negative length is passed, program is
**                    immediately terminated and returned with RC=12.
**                 3. If aenegative number of entries are passed, the
**                    program is immediately terminated and returned
**                    with RC=16.
**       Author:   A. Kara (ASYSTS Pty. Ltd.) 10/01/93.
*
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
*
SORTTAB  KICKOFF (R12,R11),WORKAREA,WORKAREL,LIST=NO,HELP=NO
         LR    R7,R1                Address of parameter
         LH    R5,6(R7)             Load record length
         C     R5,=F'0'             Q. Is number negative
         BL    EXITPR12                Y. Exit with RC=12
         LH    R4,4(R7)             Load number off entries
         C     R4,=F'0'             Q. Is number negative
         BL    EXITPR16                Y. Exit with RC=16
         L     R6,0(R7)             Load address of table
         BCTR  R4,0                 Adjust loop counter to # entries
*        B     OUTLOOP2             Branch to outer loop
OUTLOOP1 DS    0H
         LR    R9,R4                Load loop counter (# of entries)
         LR    R7,R6                Load start of table
INLOOP1  DS    0H
         LR    R0,R7                Load record pointer
         LR    R1,R5                Length of source
         LR    R2,R7                Load record pointer
         LR    R3,R5                Length of source
         AR    R2,R5                Point to next record
         CLCL  R0,R2                Q. First higher than next
         BNH   NEXTTBE                 N. Next compare
BACKUP#1 DS    0H
         LA    R0,TEMPSTOR          Load temp dest pointer
         LR    R1,R5                Length of source
         LR    R2,R7                Load record pointer
         LR    R3,R5                Length of source
*        ICM   R3,B'1000',=X'40'    Set pad character
         MVCL  R0,R2                Save original record
MOVE2TO1 DS    0H
         LR    R0,R7                Load record pointer
         LR    R1,R5                Length of source
         LR    R2,R7                Load record pointer
         LR    R3,R5                Length of source
         AR    R2,R3                Point to next record
*        ICM   R3,B'1000',=X'40'    Set pad character
         MVCL  R0,R2                Move 2nd. over 1st.
MOVE1TO2 DS    0H
         LR    R0,R7                Load record pointer
         LR    R1,R5                Length of source
         AR    R0,R1                Point to next record
         LA    R2,TEMPSTOR          Load temp dest pointer
         LR    R3,R5                Length of source
*        ICM   R3,B'1000',=X'40'    Set pad character
         MVCL  R0,R2                Move backup 1st. over 2nd.
NEXTTBE  DS    0H
         AR    R7,R5                Point to next table entry
         BCT   R9,INLOOP1           Loop till end
OUTLOOP2 DS    0H
         BCT   R4,OUTLOOP1          Loop till end
EXITPROG RACKOFF RC=0               Return to caller
EXITPR12 RACKOFF RC=12              Return to caller with RC=12
EXITPR16 RACKOFF RC=16              Return to caller with RC=16
                                                                SPACE 1
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
         LTORG
*---------------------------------------------------------------------* ---*
WORKAREA DSECT
         DS    18F                  Register save area on entry
SAVEREG1 DS    18F                  Sub rtn 1 register save area
SAVEREG2 DS    18F                  Sub rtn 1 register save area
TEMPSTOR DS    CL32768              Temporary storage
*---------------------------------------------------------------------*
WORKAREL EQU   *-WORKAREA
         END
