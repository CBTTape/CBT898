*
* JCL TO EXECUTE
*
* //ZTSALKSA  JOB (01845),'SVCA',MSGCLASS=X,NOTIFY=ZTSALK,
* //   CLASS=A,MSGLEVEL=(1,1),TIME=1440,REGION=4096K
* /*JOBPARM ROOM=ZTS,LINES=9999
* //*
* //*     LIB: 'ZTSALK.JCL.CNTL(SVCA)'...
* //*
* //*
* //* where nnn is a three-digit SVC number between 200 and 255, and
* //* xxxxxxxxx is the name of the SVC routine (I to 8 characters).
* //*
* //STEPNAME EXEC PGM=SVCADD,PARM='220,IGC0022A'
* //STEPLIB  DD   DISP=SHR,DSN=ZTSALK.LOADLIB
* //SVCPDS   DD   DSN=ZTS.AUTH.LOADLIB,DISP=SHR
* //SYSUDUMP DD   SYSOUT=*
***********************************************************************
DYNAMSVC CSECT
* THIS ROUTINE DYNAMICALLY ADDS OR REPLACES AN SVC INTO THE OPERATING
* SYSTEM WITHOUT REQUIRING AN IPL
         SAVE  (14,12)
         BASR  R12,0
         USING *,R12
         ST    R13,SAVEA+4
         LA    R13,SAVEA
*  COPY PARMS FROM EXEC CARD
GETPARM  L     R1,0(0,R1)              GET ADDR OF JCL PARMS
         LH    R15,0(0,R1)             GET LEN OF JCL PARMS
         LTR   R15,R15                 ANY PARMS?
         BZ    NOPARM                  NO PARMS PASSED
         BCTR  R15,0                   DECREM PARM FOR LEN FOR EX INST
         EX    R15,MOVEPARM            MOVE PARMS
         B     CHECKSVC                PRESS ON
MOVEPARM MVC   SVCPARM(0),2(R1)        MOVE INST FOR PARMS
NOPARM   WTO   '* NO SVC PARMS PASSED, PROGRAM TERMINATED *',ROUTCDE=11
         ABEND 301
* MAKE SURE THAT SVC NUMBER IS BETWEEN 200 AND 255
CHECKSVC LA    R0,3                    SET MAX DIGITS FOR SVC NUMBER
         LA    R3,SVCNO                POINT TO SVC NUMBER
NXTDIGIT CLI   0(R3),C'0'              IS IT LESS THAN 0?
         BL    BADSVCNO                IF SO. SVC NUMBER IS BAD
         CLI   0(R3),C'9'              IS IT GREATER THAN 9?
         BH    BADSVCNO                IF SO, SVC NUMBER IS BAD
         LA    R3,1(0,R3)              INCREMENT TO NEXT DIGIT
         BCT   R0,NXTDIGIT             CONTINUE CHECKING
         CLC   SVCNO,=C'200'           IS SVCNO LESS THAN 200?
         BL    BADSVCNO                IF SO, SVC NUMBER IS BAD
         CLC   SVCNO,=C'255'           IS SVCNO GREATER THAN 255
         BH    BADSVCNO                IF SO, SVC NUMBER IS BAD
         B     CNVTSVC                 ELSE GO TO SVC CONVERSION RTN
BADSVCNO WTO   '* INVALID SVC  NUMBER SPECIFIED, PROGRAM TERMINATED *',-
               ROUTCDE=11
         ABEND 302
*  CONVERT SVC NUMBER FROM DECIMAL TO BINARY
CNVTSVC  PACK  PKSVCNO,SVCNO           PACK SVCNO
         CVB   R3,PKSVCNO              CONVERT SVCNO TO BINARY
         ST    R3,SAVESVC              SAVE BINARY SVC NUMBER
*  GET   INTO SUPERVISOR STATE   / KEY 0, SO WE CAN EXECUTE:
*  "SVCUPDTE MACRO"
         SVC235 ON                     SET AUTHORISATION OK
         MODESET MODE=SUP,KEY=ZERO
OPENPDS  OPEN SVCPDS                   OPEN PDS THAT HAS SVC ROUTINE
*  LOAD SVC INTO CSA FROM PDS POINTED TO BY SVCPDS DDNAME
LOADSVC  LOAD EPLOC=SVCNAME,GLOBAL=(YES,P),DCB=SVCPDS,LSEARCH=YES
         ST    R0,SVCEP                SAVE SVC ENTRY POINT ADDR
CLOSEPDS CLOSE SVCPDS                  CLOSE PDS THAT HAS SVC ROUTINE
*  UPDATE SCVTABLE WITH ENTRY POINT OF NEW SVC
UPDSVCTB L     R3,SVCEP                LOAD ENTRY POINT ADDR OF NEW SVC
         L     R4,SAVESVC              LOAD SAVED BINARY SVC NUMBER
         ENQ   (QNAME,RNAME,E,,SYSTEM)
*        SVCUPDTE (R4),REPLACE,TYPE=3,EP=(R3)
         SVCUPDTE (R4),DELETE,TYPE=3
         DEQ   (QNAME,RNAME,,SYSTEM)
         LTR   R15,R15                 WAS SVC TABLE UPDATE SUCCESSFUL?
         BZ    FINISHED                IF SO.  EXIT PROGRAM.
         MODESET MODE=PROB,KEY=NZERO
         SVC235 OFF                    SET AUTHORISATION OK
         WTO   '* ERROR UPDATING SVC TABLE, PROGRAM TERMINATED *'
         ABEND 303,DUMP
* EXIT PROGRAM
FINISHED DS    0H
         MODESET MODE=PROB,KEY=NZERO
         SVC235 OFF                    SET AUTHORISATION OK
         L     R13,SAVEA+4
         RETURN (14,12),RC=0
* WORK AREAS
SAVEA    DS    18F
PKSVCNO  DS    D
SAVESVC  DS    F
SVCEP    DS    F
SVCPARM  DS    0CL12
SVCNO    DS    CL3
         DS    CL1
SVCNAME  DC    CL8' '
QNAME    DC    CL8'SYSZSVC'    USED BY ENQ/DEQ MACROS
RNAME    DC    C'TABLE'
* SVC PDS DCB (MUST BE AUTHORIZED)
SVCPDS   DCB    DSORG=PO,MACRF=R,DDNAME=SVCPDS
* REQUIRED DSECTS (FOUND IN SYS1.MACLIB)
         CVT   DSECT=YES,LIST=NO   GENERATES CSECT REQUIRED BY SVCUPDTE
         YREGS
         END
