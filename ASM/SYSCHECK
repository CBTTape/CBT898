*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
**
**       Title:    'System-Id Check'
**       System:   N/A
**       Module:   SYSCHECK
**       Program:  SYSCHECK
**       Function: The purpose of this program is to set a return code
**                 according to the a parameter list VS system-id of
**                 executing system.
**
**                 This program may be invoked as a command processor
**                 or called. Both parameter passing conventions are
**                 accepted.
**
**                 Input parameter(s):
**                    Single system id or a string of system ids
**                    seperated by commas.
**
**                 Program return code:
**                    0  - If the actual system id matches one in the
**                         input parameter list.
**                    8  - If no match found.
**                   20  - Missing input parameter string.
**
**       Macros:   The following macros have been used from @MACROS
**                   - KICKOFF
**                   - RACKOFF
**
**       Notes:    Program is re-entrant, Amode 31.
**       Author:   ASYSTS Pty. Ltd. (A. Kara)
**       Date:     18/06/98.
*
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
*
*        COPY    @MACROS                    COMMON MACROS USED BY PROG
*
***********************************************************************
SYSCHECK KICKOFF (R12),WORKAREA,WORKAREL,AMODE=31,RMODE=ANY
*
***********************************************************************
* Get parameter(s). Decide whether command processor or parameter     *
* list.                                                               *
***********************************************************************
         LR    R7,R1                   CPPL address
         TM    0(R7),X'80'             Q. Parameter address
         BO    TESTPARM                   Y. Process as parameter
*---------------------------------------------------------------------*
* Command processor                                                   *
*---------------------------------------------------------------------*
         USING CPPL,R7                 Addressability to CPPL
         L     R5,CPPLCBUF             Get common buffer address
         LH    R3,0(R5)                Total command length
         SH    R3,=H'4'                Subtract lenthh's length
         LH    R9,2(R5)                Operand length
         SR    R3,R9                   Subtract operand length
         LTR   R3,R3                   Q. Any parameter length
         BZ    EXITPR20                   N. Error exit, BIG error
         LA    R5,4(R5)                Address of start of command
         AR    R5,R9                   Add displacement of operand
         B     PROCPARM                Go process command
                                                                SPACE 1
*---------------------------------------------------------------------*
* Called program                                                      *
*---------------------------------------------------------------------*
TESTPARM DS    0H
         L     R5,0(R7)                Load address of parameter
         LH    R3,0(R5)                Load length of parameter
         LTR   R3,R3                   Q. Is parameter length zero
         BZ    EXITPR20                   N. Error exit, BIG error
         LA    R5,2(R5)                Point to parameter
                                                                SPACE 1
PROCPARM DS    0H
***********************************************************************
* Get SYSID                                                           *
***********************************************************************
         L     R9,CVTPTR               CVT pointer
         USING CVT,R9                  Addressability
*
         LA    R9,CVTSNAME             Get sysname
         DROP  R9                      Relinquish addressability
***********************************************************************
* Process data...                                                     *
***********************************************************************
*        LH    R3,PARMLL               Parameter length
LOOP1    DS    0H
         LR    R4,R3                   Parameter length
         CH    R4,=H'8'                Q. Parameter > 8 bytes
         BNH   FINDELM0                   N. Parm OK
         LA    R4,8                    Force max length of 8
FINDELM0 TRT   0(*-*,R5),COMMATAB      Find comma/space in name
         BCTR  R4,0                     Prepare for 'EX' command
         EX    R4,FINDELM0              Q. Any delimiters
         BZ    COMPLEN0                   N. Use full length
         LR    R4,R1                   Determine length of this field
         SR    R4,R5                   Length of data
         BCTR  R4,0                    Point before delimiter
COMPLEN0 CLC   0(*-*,R9),0(R5)         Compare fields
         EX    R4,COMPLEN0             Q. Fields compare?
         BE    EXITPR00                   Y. Exit with hit (RC=0)
         LA    R4,2(R4)                Entry length + delimiter length
         SR    R3,R4                   Decrement overall length
         BNP   EXITPR08                End of data, Error
         AR    R5,R4                   Point past processed data
         B     LOOP1                   Loop till end
***********************************************************************
EXITPR00 DS    0H
         SR    R15,R15                 Set zero return code
         B     EXITPROG                Go to common exit
EXITPR08 DS    0H
         LA    R15,8                   Sse Error return code
         B     EXITPROG                Go to common exit
EXITPR20 DS    0H
         LA    R15,20                  Set Error return code
*        B     EXITPROG                Go to common exit
EXITPROG DS    0H
         RACKOFF RC=(R15)              Exit with R15 set to return code
*=====================================================================*
***********************************************************************
* Literal pool...                                                     *
***********************************************************************
         LTORG
*
COMMATAB DC    XL256'00'               Translate table
         ORG   COMMATAB+C','
         DC    C','
         ORG   COMMATAB+C' '
         DC    C' '
         ORG
*
***********************************************************************
WORKAREA DSECT
         DS    0D
REGSAVE$ DS    18F                     Register save area
WORKAREL EQU   *-WORKAREA
***********************************************************************
* DSECTS...                                                           *
***********************************************************************
         IKJCPPL COMMAND               Processor parameter list
         CVT     DSECT=YES
*
         END
