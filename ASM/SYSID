*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
**
**       Title:    'System Id'
**       System:   REXX Function
**       Module:   SYSID
**       Program:  SYSID
**       Function: The purpose of this program is to return the SYSID.
**
**                 Syntax:
**                    x = Sysid(ccc)
**
**                 Returned values:
**                    x = System Id
**
**                 Program return code:
**                    0  - If 'ccc' is present and matches systemid
**                    8  - If 'ccc' is present and does not match
**                         system I.
**
**       Macros:   The following macros have been used from @MACROS
**                   - KICKOFF
**                   - RACKOFF
**
**       Notes:    Program is re-entrant.
**       Author:   ASYSTS Pty. Ltd. (A. Kara)
**       Date:     18/08/93.
*
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
*
*        COPY    @MACROS                    COMMON MACROS USED BY PROG
*
***********************************************************************
SYSID    KICKOFF (R12),WORKAREA,WORKAREL,AMODE=31,RMODE=ANY
*
***********************************************************************
* Get the parameter info...                                           *
***********************************************************************
         LR    R11,R1                       EFPL ADDRESS
         USING EFPL,R11                     ESTABLISH ADDRESABILITY
         L     R10,EFPLARG                  ARGUMENT TABLE
         USING ARGTABLE_ENTRY,R10           ESTABLISH ADDRESABILITY
         L     R8,EFPLEVAL                  ADDRESS OF EVALBLOCK
         L     R9,0(0,R8)                   EVALBLOCK
         USING EVALBLOCK,R9                 ESTABLISH ADDRESABILITY
***********************************************************************
* Get SYSID                                                           *
***********************************************************************
         L     R3,CVTPTR              CVT pointer
         USING CVT,R3
*
         LA    R2,CVTSNAME             Get sysname
***********************************************************************
* Process data...                                                     *
***********************************************************************
         XR    R3,R3                        LOOP COUNTER
         LA    R2,=CL20'MVS12345678'
         LR    R4,R2
LOOPID   DS    0H
         CLI   0(R4),C' '                   Q. SPACE
         BE    GOTID                        LOAD START COLUMN
         LA    R3,1(R3)                     Q. START > END
         LA    R4,1(R4)                     Q. START > END
         CH    R3,=H'8'                        Y. EXIT WITH ERROR
         BL    LOOPID                       SUBTRACT START FROM END
GOTID    MVC   EVALBLOCK_EVDATA(0),0(R2)    ADD 1 FOR COMPENSATION
         BCTR  R3,0
         EX    R3,GOTID                     STORE RESULT LENGTH
         LA    R3,1(R3)
         ST    R3,EVALBLOCK_EVLEN           STORE RESULT LENGTH
***********************************************************************
* Get the string value passed                                         *
***********************************************************************
         L     R6,ARGTABLE_ARGSTRING_PTR    PARAMETER ADDRESS FIELD
         C     R6,=F'-1'                    Q. END OF PARMLIST ?
         BE    EXITPR00                        Y. EXIT WITH RC=20
         LTR   R8,R8                        Q. PARAMETER PRESENT
         BE    EXITPR00                        Y. EXIT WITH RC=20
         L     R7,ARGTABLE_ARGSTRING_LENGTH LENGTH OF STING FIELD
         LTR   R7,R7                        Q. IS LENGTH > 0 BYTES
         BZ    EXITPR00                        N. EXIT WITH RC=20
***********************************************************************
* Get start column of substring...                                    *
***********************************************************************
         LA    R4,0(R10)
         LA    R3,4(R10)
  PDUMP CVTSNAME,MSG='LOOK AT R8, R9 R10'
  B EXITPR00
EXITPR00 DS    0H
         SR    R15,R15                      SET ZERO RETURN CODE
         B     EXITPROG                     GO EXIT PROGRAM
EXITPR08 DS    0H
         LA    R15,20                       SET Error return code
EXITPROG DS    0H
         RACKOFF RC=(R15)                   EXIT WITH ZERO RETURN CODE
*=====================================================================*
***********************************************************************
* Literal pool...                                                     *
***********************************************************************
         LTORG
***********************************************************************
WORKAREA DSECT
         DS    0D
REGSAVE$ DS    18F                          REGISTER SAVE AREA
DWORK8   DS    D
SCOL     DS    F
ECOL     DS    F
LENGTH   DS    F
PADCHAR  DS    CL1
DATA1    DS    CL32760
WORKAREL EQU   *-WORKAREA
***********************************************************************
* DSECTS...                                                           *
***********************************************************************
         IRXEFPL
         IRXARGTB
         IRXEVALB
*
         CVT   DSECT=YES
*        YREGS
         END
