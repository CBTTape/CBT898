***********************************************************************
*
* THIS FACILITY IS USED TO NAVIGATE AROUND CICS MEMORY.
*
* MEMORY MAY BE CHANGED BY OVERTYPING UPROTECTED FIELDS AND HITTING
* <ENTER> (UNLESS IN 'PROTECT' MODE). THE DEFAULT INITIAL ENTRY MODE
* IS UNPROTECTED.
* PROCEED WITH CAUTION AS THERE IS NO CONFIRMATION REQUEST OR ANY
* 'OOPS' FACILITY TO RESET TO ORIGINAL VALUES.
* >>>> CARELESS OR DELINQUENT USAGE MAY CRASH THE REGION.  <<<<
*
* UNPROTECTED/PROTECTED MODE CAN BE IDENTIFIED BY THE HEADING
* 'ACCESS/DISPLAY MEMORY' RESPECTIVELY. YOU CAN TOGGLE BETWEEN THEM BY
* USING THE UNPROT/PROTECT COMMANDS RESPECTIVELY. PF02 IS A QUICK
* PROTECT INVOKER.
*
* --------------------------------------------------------------------
*
* MEMBERS REQUIRED TO PACKAGE THIS FACILITY:
*     TP08T95  - THIS PROGRAM (REQUIRES TRANSLATION) - ORIGINALLY
*                CALLED KPS1127
*     KPS0824  - ASSEMBLER MODULE USING OLD CICS MACRO
*                'DFHTM' TO RETURN ADDRESSES OF CICS
*                FACILITIES. (MAY NOT BE 4.1 COMPLIANT, HOWEVER
*                IT WOULD ONLY PREVENT ISSUING THE FOLLOWING
*                COMMANDS: DCT, FCT, PCT(X), PPT, TCT(X)).
*     KPW0825  - COMMON COPYBOOK FOR KPS0824 PROCESSING.
*     CICS@    - MACRO TO RETURN THEORETICALLY VERBOTTEN DATA
*                AREA ADDRESSES: CSA, CWA & TCA.
*
* --------------------------------------------------------------------
*
* LIST OF COMMANDS:
*     DCT, FCT, PCT, PCTR, PFT, PPT, TCT, TCTN, TCTS
*              - WITH A PARAMETER, RETURNS THE ADDRESS TO THAT
*                FACILITY.
*     ADDRESS | ADDR | A
*              - FOLLOWED BY ONE OF THE FOLLOWING SEPERATORS ' ',
*                '=', ':', '_' WILL DISPLAY THE REQUIRED ADDRESS
*        ====>   YOU MAY ALSO GET TO AN ADDRESS BY TABBING TO THE
*                REQUIRED ADDRESS ON THE SCREEN AND USING THE
*                FOLLOWING PF KEYS:
*                     PF12 - 31 BIT ADDRESSING (ALSO FOR 24)
*                     PF24 - 24 BIT ADDRESSING ONLY (NOTE PF24 ON
*                            A 31 BIT ADDRESS MAY CAUSE AN 'ASRA')
*                EG. A=BBB30
*     ABENDOFF - DO NOT HANDLE ABENDS
*     ABENDON  - HANDLE ABENDS
*     AEFI     - 'AEF' INCLUDE LIST (ONLY VALID AT GECF)
*     AEFX     - 'AEF' EXCLUDE LIST (ONLY VALID AT GECF)
*     AICB     - ADDRESS OF EIQ (USED BY DFHEI1)
*     AFCB     - AUTHORISED FUNCTION CONTROL BLOCK (QUICK MOVE)
*     BASE3, B3
*              - GO TO ADDRESS STORED AT THE BASE ADDRESS OF SCREEN
*                IN 31 BIT ADDRESSING
*     BASE, B  - GO TO ADDRESS STORED AT THE BASE ADDRESS OF SCREEN
*                IN 24 BIT ADDRESSING
*     CEMT     - INVOKES CEMT DIRECT
*     CSA, CWA - VERBOTTEN CICS ADDRESSES
*     FIND | F - FIND TEXT. MAY PASS A HEX STRING ENCLOSED IN X'  '
*     INQUIRE | IP
*              - RETURN BASIC STATS FOR INQUIRED PROGRAM
*     LOADHOLD | LH
*              - LOAD HOLD PROGRAM (UPS 'RES' COUNT BY 1)
*     LOADMOD  | LM
*              - LOAD MODULE INTO MEMORY (RESIDENT PROGRAMS)
*     LOAD | L - LOAD PROGRAM
*     NEWCOPY | NEW | N
*              - NEW COPY A PROGRAM (MARKED)
*     OFFSET | OFF | O
*              - OFFSET +/- FROM THE BASE ADDRESS. BASE ADDRESS WILL
*                BE DISPLAYED IN TOP LEFT. QUICK WAY TO GET TO AN
*                ADDRESS
*                SAME SEPERATORS APPLY AS FOR 'A'
*     OPEN | CLOSE
*              - OPEN/CLOSE FILES
*     PASSWORD | PASS
*              - ????
*     PROTECT  - PROTECT MEMORY FROM BEING CHANGED (ALSO US PF2)
*     Q        - QUERY ????
*     RELEASE | REL
*              - RELEASE PROGRAM - REDUCES THE 'RES' COUNTER BY 1
*     REFRESH | REF | R
*              - NEW COPY A PROGRAM WITH RES COUNT > 0
*     S | SE | SEND | SENDE
*              - SEND BMS MAP
*     SETBASE | SB
*              - SET CURRENT ADDRESS AS BASE ADDRESS
*     TCTUA    - TCT USER AREA FOR SPECIFIED TERMINAL
*     UNPROT   - UN PROTECT MEMORY. PERMIT CHANGES
*     VERSION | VER
*              - RETURNS THE VERSION OF CICS
*
* --------------------------------------------------------------------
*
* PF KEYS:
*     PF01 -
*     PF02 - PROTECT
*     PF03 - END
*     PF04 - COMMAND RECALL
*     PF05 - REFIND
*     PF06 -
*     PF07 - SCROLL UP
*     PF08 - SCROLL DOWN
*     PF09 - CSA ADDRESS
*     PF10 - UP CHAIN (PREV ADDRESS)
*     PF11 - DOWN CHAIN (NEXT ADDRESS) IF AVAILABLE
*     PF12 - 31 BIT ADDRESS
*     PF13 -
*     PF14 -
*     PF15 -
*     PF16 -
*     PF17 -
*     PF18 -
*     PF19 -
*     PF20 -
*     PF21 -
*     PF22 -
*     PF23 -
*     PF24 - 24 BIT ADDRESS
*
***********************************************************************
         MACRO
         COMMAND &CMD=,&LABEL=,&CSECT=,&OPTION=
*                                                  STRT MACRO COMMAND
         LCLA  &L
&L       SETA  K'&CMD
         AIF   (T'&OPTION EQ 'O').A1
         DC    AL1(&L),AL1(&OPTION),CL8'&CMD'
         AGO   .A2
.A1      ANOP
         DC    AL1(&L),AL1(0),CL8'&CMD'
.A2      ANOP
         DC    AL2(&LABEL-&CSECT),V(&CSECT)
*                                                  END  MACRO COMMAND
         MEND
         MACRO
         CMDVAR &R1,&R2,&R3,&LENIN,&OUT,&LENOUT
*                                                  STRT MACRO CMDVAR
         MVI   &OUT,X'40'
         MVC   &OUT+1(L'&OUT-1),&OUT
         XC    &LENOUT,&LENOUT
         LH    &R3,&LENIN
         LTR   &R3,&R3
         BZ    CVX&SYSNDX
         CLC   0(2,&R1),=C'X'''
         BNE   *+14
         OI    CMDSW,CONVERT
         LA    &R1,1(&R1)
         BCTR  &R3,0
         CLI   0(&R1),C''''
         BNE   *+14
         OI    CMDSW,DELIMIT
         LA    &R1,1(&R1)
         BCTR  &R3,0
         STH   &R3,&LENIN
         LA    &R2,&OUT
CV1&SYSNDX EQU *
         CLI   0(&R1),C' '
         BE    CV3&SYSNDX
         CLI   0(&R1),C'_'
         BE    CV3&SYSNDX
         CLI   0(&R1),C';'
         BE    CV3&SYSNDX
         TM    CMDSW,DELIMIT
         BNO   CV2&SYSNDX
         CLI   0(&R1),C''''
         BE    CV4&SYSNDX
CV2&SYSNDX EQU *
         MVC   0(1,&R2),0(&R1)
         LA    &R1,1(&R1)
         LA    &R2,1(&R2)
         BCT   &R3,CV1&SYSNDX
         B     CV5&SYSNDX
CV3&SYSNDX EQU *
         TM    CMDSW,DELIMIT
         BO    CV2&SYSNDX
         B     CV5&SYSNDX
CV4&SYSNDX EQU *
         LA    &R1,1(&R1)
         CLI   0(&R1),C''''
         BNE   CV5&SYSNDX
         B     CV2&SYSNDX
CV5&SYSNDX EQU *
         LA    &R3,&OUT
         SR    &R2,&R3
         STH   &R2,&LENOUT
         LH    &R2,&LENIN
         SH    &R2,&LENOUT
         TM    CMDSW,DELIMIT
         BNO   *+6
         BCTR  &R2,0
         STH   &R2,&LENIN
         TM    CMDSW,CONVERT
         BNO   CVX&SYSNDX
         LA    &R2,&OUT
         XC    WORKFLD,WORKFLD
         LA    &R3,WORKFLD
         CHR2HEX &R2,&R3,&LENOUT
         BNZ   P#CMD@E
CVC&SYSNDX EQU *
         LH    &R2,&LENOUT
         SRL   &R2,1
         STH   &R2,&LENOUT
         MVC   &OUT,WORKFLD
CVX&SYSNDX EQU *
         NI    CMDSW,X'FF'-(CONVERT+DELIMIT)
*                                                  END  MACRO CMDVAR
         MEND
         MACRO
         LEFT &R1,&LEN
*                                                  STRT MACRO LEFT
         LH    0,FLDLEN
LF1&SYSNDX EQU *
         CLI   0(&R1),C' '
         BE    LF2&SYSNDX
         CLI   0(&R1),C'_'
         BE    LF2&SYSNDX
         CLI   0(&R1),C';'
         BE    LF2&SYSNDX
         CLI   0(&R1),C'='
         BE    LF2&SYSNDX
         STH   0,FLDLEN
         B     LF3&SYSNDX
LF2&SYSNDX EQU *
         LA    &R1,1(&R1)
         BCT   0,LF1&SYSNDX
         STH   0,FLDLEN
LF3&SYSNDX EQU *
*                                                  END  MACRO LEFT
         MEND
         MACRO
         LEFTC &R1,&LEN
*                                                  STRT MACRO LEFTC
         LH    0,FLDLEN
         MVI   CMDEND,C'N'
LF1&SYSNDX EQU *
         CLI   0(&R1),C' '
         BE    LF3&SYSNDX
         CLI   0(&R1),C'_'
         BE    LF3&SYSNDX
         CLI   0(&R1),C'='
         BE    LF3&SYSNDX
         CLI   0(&R1),C';'
         BE    LF2&SYSNDX
         STH   0,FLDLEN
         B     LF4&SYSNDX
LF2&SYSNDX EQU *
         MVI   CMDEND,C'Y'
LF3&SYSNDX EQU *
         LA    &R1,1(&R1)
         BCT   0,LF1&SYSNDX
         STH   0,FLDLEN
LF4&SYSNDX EQU *
*                                                  END  MACRO LEFTC
         MEND
         MACRO
         CSR2MEM &BIN,&OFFSET,&OFFSET2
*                                                  STRT MACRO CSR2MEM
         L     1,&BIN
         SH    1,=H'417'
         XR    0,0
         D     0,=F'80'
         MH    1,=H'16'
         LR    15,1
         LR    1,0
         XR    0,0
         D     0,=F'9'
         CH    1,=H'3'
         BNH   *+10
         LA    1,4
         XR    0,0
         MH    1,=H'4'
         AR    15,1
         ST    15,&OFFSET
         SRL   0,1
         AR    15,0
         ST    15,&OFFSET2
*                                                  END  MACRO CSR2MEM
         MEND
         MACRO
         BUMPCHN
*                                                  STRT MACRO BUMPCHN
         LH    15,CHAINNBR
         CH    15,=Y(CHAINMAX)
         BNL   *+12
         LA    15,1(15)
         STH   15,CHAINNBR
         LH    15,CHAINIDX
         CH    15,=Y(CHAINMAX)
         BL    *+8
         LA    15,0
         LA    15,1(15)
         STH   15,CHAINIDX
*                                                  END  MACRO BUMPCHN
         MEND
         MACRO
         BUMPNBR
*                                                  STRT MACRO BUMPNBR
         LH    15,CHAINNBR
         CH    15,=Y(CHAINMAX)
         BNL   *+12
         LA    15,1(15)
         STH   15,CHAINNBR
*                                                  END  MACRO BUMPNBR
         MEND
         MACRO
         BUMPIDX
*                                                  STRT MACRO BUMPIDX
         LH    15,CHAINIDX
         CH    15,=Y(CHAINMAX)
         BL    *+8
         LA    15,0
         LA    15,1(15)
         STH   15,CHAINIDX
*                                                  END  MACRO BUMPIDX
         MEND
         MACRO
         NEXTCHNI
*                                                  STRT MACRO NEXTCHNI
         LH    15,CHAINIDX
         CH    15,=Y(CHAINMAX)
         BL    *+8
         LA    15,0
         LA    15,1(15)
         STH   15,CHAINIDX
*                                                  END  MACRO NEXTCHNI
         MEND
         MACRO
         PREVCHNI
*                                                  STRT MACRO PREVCHNI
         LH    15,CHAINIDX
         CH    15,=H'1'
         BH    *+8
         LA    15,CHAINMAX+1
         BCTR  15,0
         STH   15,CHAINIDX
*                                                  END  MACRO PREVCHNI
         MEND
         MACRO
         BUMP &R1,&FROM
*                                                  STRT MACRO BUMP
         GETCHN &R1
         CLC   0(4,&R1),&FROM
         BE    BXMP&SYSNDX
         NEXTCHN &R1
         OC    0(4,&R1),0(&R1)
         MVC   0(4,&R1),&FROM
         BNZ   BUMP&SYSNDX
         BUMPNBR
BUMP&SYSNDX EQU *
         BUMPIDX
BXMP&SYSNDX EQU *
*                                                  END  MACRO BUMP
         MEND
         MACRO
         GETCHN &R1
*                                                  STRT MACRO GETCHN
         LH    &R1,CHAINIDX
         BCTR  &R1,0
         MH    &R1,=H'4'
         LA    &R1,CHAIN(&R1)
*                                                  END  MACRO GETCHN
         MEND
         MACRO
         NEXTCHN &R1
*                                                  STRT MACRO NEXTCHN
         LH    &R1,CHAINIDX
         CH    &R1,=Y(CHAINMAX)
         BL    *+8
         LA    &R1,0
         MH    &R1,=H'4'
         LA    &R1,CHAIN(&R1)
*                                                  END  MACRO NEXTCHN
         MEND
         MACRO
         PREVCHN &R1
*                                                  STRT MACRO PREVCHN
         LH    &R1,CHAINIDX
         CH    &R1,=H'1'
         BH    *+8
         LA    &R1,CHAINMAX+1
         SH    &R1,=H'2'
         MH    &R1,=H'4'
         LA    &R1,CHAIN(&R1)
*                                                  END  MACRO PREVCHN
         MEND
         MACRO
         OUTSF &OUT,&ATTR
*                                                  STRT MACRO OUTSF
         MVI   0(&OUT),X'1D'
         LA    15,ATTR
         AH    15,ATTROFF
         CLI   0(15),X'00'
         BE    *+14
         MVC   1(1,&OUT),0(15)
         B     *+8
         MVI   1(&OUT),&ATTR
         LA    &OUT,2(&OUT)
*                                                  END  MACRO OUTSF
         MEND
         MACRO
         SETATTR &OUT,&ATTR
*                                                  STRT MACRO SETATTR
         LA    15,ATTR
         A     15,&OUT
         BCTR  15,0
         MVI   0(15),&ATTR
*                                                  END  MACRO SETATTR
         MEND
         MACRO
         HW2CHR &HW,&OUT
*                                                  STRT MACRO HW2CHR
         LA    15,&HW
         HEX2CHR 15,&OUT,2
*                                                  END  MACRO HW2CHR
         MEND
         MACRO
         FW2CHR &FW,&OUT
*                                                  STRT MACRO FW2CHR
         LA    15,&FW
         HEX2CHR 15,&OUT,4
*                                                  END  MACRO FW2CHR
         MEND
         MACRO
         HW2CHRN &HW,&OUT
*                                                  STRT MACRO HW2CHRN
         LH    15,&HW
         LTR   15,15
         BNM   HWN1&SYSNDX
         MVI   0(&OUT),C'-'
         LA    &OUT,1(&OUT)
         MH    15,=H'-1'
         STH   15,HWNH&SYSNDX
         LA    15,HWNH&SYSNDX
         B     HWN2&SYSNDX
HWN1&SYSNDX EQU   *
         MVI   0(&OUT),X'00'
         LA    &OUT,1(&OUT)
         LA    15,&HW
HWN2&SYSNDX EQU   *
         HEX2CHR 15,&OUT,2
         B     HWNX&SYSNDX
HWNH&SYSNDX DS    H
HWNX&SYSNDX EQU   *
*                                                  END  MACRO HW2CHRN
         MEND
         MACRO
         FW2CHRN &FW,&OUT,&R1
*                                                  STRT MACRO FW2CHRN
         L     15,&FW
         LTR   15,15
         BNM   FWN1&SYSNDX
         MVI   0(&OUT),C'-'
         LA    &OUT,1(&OUT)
         MH    15,=H'-1'
         ST    15,FWNH&SYSNDX
         LA    15,FWNH&SYSNDX
         B     FWN2&SYSNDX
FWN1&SYSNDX EQU   *
         MVI   0(&OUT),X'00'
         LA    &OUT,1(&OUT)
         LA    15,&FW
FWN2&SYSNDX EQU   *
         LA    &R1,FWNC&SYSNDX
         HEX2CHR 15,&R1,4
         MVC   0(5,&OUT),FWNC&SYSNDX+3
         LA    &OUT,5(&OUT)
         B     FWNX&SYSNDX
FWNH&SYSNDX DS    F
FWNC&SYSNDX DS    CL8
FWNX&SYSNDX EQU   *
*                                                  END  MACRO FW2CHRN
         MEND
         MACRO
         OUTREG &R1,&OUT
         GBLB  &ORF
         GBLC  &CS
*                                                  STRT MACRO OUTREG
         AIF   (&ORF).OR1
         B     *+8
RWORK&CS DS    AL4
&ORF     SETB  1
.OR1     ANOP
         STCM  &R1,B'1111',RWORK&CS
         LA    15,RWORK&CS
         HEX2CHR 15,&OUT,4
*                                                  END  MACRO OUTREG
         MEND
         MACRO
         OUTREGH &R1,&OUT
         GBLB  &ORHF
         GBLC  &CS
*                                                  STRT MACRO OUTREGH
         AIF   (&ORHF).ORH1
         B     *+6
RHWORK&CS DS    AL2
&ORHF    SETB  1
.ORH1    ANOP
         STCM  &R1,B'0011',RHWORK&CS
         LA    15,RHWORK&CS
         HEX2CHR 15,&OUT,2
*                                                  END  MACRO OUTREGH
         MEND
         MACRO
         HEX2DSP &IN,&OUT,&LEN
         GBLB  &H2DF
         GBLC  &CS
         LCLC  &S
*                                                  STRT MACRO HEX2DSP
         AIF   (&H2DF).H2D1
         B     *+260
H2DTR&CS DC    64X'4B'
         DC    X'404B4B4B4B4B4B4B4B4B4A4B4C4D4E4F'
         DC    X'504B4B4B4B4B4B4B4B4B5A5B5C5D5E5F'
         DC    X'60614B4B4B4B4B4B4B4B6A6B6C6D6E6F'
         DC    X'4B4B4B4B4B4B4B4B4B797A7B7C7D7E7F'
         DC    X'4B8182838485868788894B8B8C8D8E8F'
         DC    X'4B9192939495969798994B4B4B4B4B4B'
         DC    X'4B4BA2A3A4A5A6A7A8A9AA4B4B4B4B4B'
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'
         DC    X'C0C1C2C3C4C5C6C7C8C94B4B4B4B4B4B'
         DC    X'D0D1D2D3D4D5D6D7D8D94B4B4B4B4B4B'
         DC    X'E0E1E2E3E4E5E6E7E8E94B4B4B4B4B4B'
         DC    X'F0F1F2F3F4F5F6F7F8F94B4B4B4B4B4B'
&H2DF    SETB  1
.H2D1    ANOP
&S       SETC  '(&OUT)'
         MVC   0(&LEN,&OUT),0(&IN)
         TR    0(&LEN,&OUT),H2DTR&CS
         LA    &OUT,&LEN&S
*                                                  END  MACRO HEX2DSP
         MEND
         MACRO
         HEX2CHR &IN,&OUT,&LEN
         GBLB  &H2CF
         GBLC  &CS
         LCLA  &L,&L2,&L3
         LCLC  &S
         LCLC  &S2
*                                                  STRT MACRO HEX2CHR
         AIF   (&H2CF).H2C1
         B     *+100
HWORK&CS DS    CL80
H2CTR&CS DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
&H2CF    SETB  1
.H2C1    ANOP
&L       SETA  &LEN*2
&L2      SETA  (&LEN*2)+2
&L3      SETA  &LEN+1
&S       SETC  '(&OUT)'
&S2      SETC  '(&L2)'
         UNPK  HWORK&CS&S2,0(&L3,&IN)
         TR    HWORK&CS&S2,H2CTR&CS-240
         MVC   0(&L,&OUT),HWORK&CS+1
         LA    &OUT,&L&S
*                                                  END  MACRO HEX2CHR
         MEND
         MACRO
         CHR2HEX &IN,&OUT,&LEN
         GBLB  &C2HF
         GBLC  &CS
         LCLC  &S
*                                                  STRT MACRO CHR2HEX
&S       SETC  '(*-*)'
         AIF   (&C2HF).C2H1
         B     *+404
CWORK&CS DS    CL80
CWORK2&CS DS    CL40
CHRT&CS  DC    64X'4B'
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'
         DC    X'4BFAFBFCFDFEFF4B4B4B4B4B4B4B4B4B'
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'
         DC    X'4BFAFBFCFDFEFF4B4B4B4B4B4B4B4B4B'
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'
         DC    X'F0F1F2F3F4F5F6F7F8F94B4B4B4B4B4B'
&C2HF    SETB  1
CHRMOVE&CS MVC   CWORK&CS&S,0(&IN)
CHRTR&CS   TR    CWORK&CS&S,CHRT&CS
CHRPACK&CS PACK  CWORK2&CS&S,CWORK&CS&S
CHROUT&CS  MVC   0(*-*,&OUT),CWORK2&CS
.C2H1    ANOP
         TM    &LEN+1,X'01'
         BO    C2HE&SYSNDX
         LH    15,&LEN
         BCTR  15,0
         EX    15,CHRMOVE&CS
         EX    15,CHRTR&CS
         LH    0,&LEN
         LA    1,CWORK&CS
C2HV&SYSNDX EQU *
         CLI   0(1),X'4B'
         BE    C2HE&SYSNDX
         LA    1,1(1)
         BCT   0,C2HV&SYSNDX
         LH    1,&LEN
         SRL   1,1
         SLL   1,4
         AH    1,&LEN
         EX    1,CHRPACK&CS
         SRL   15,1
         EX    15,CHROUT&CS
         SR    1,1
         B     C2HX&SYSNDX
C2HE&SYSNDX EQU *
         MVC   EMSG,=CL78' '
         MVC   EMSG(16),=C'INVALID HEX DATA'
         LTR   1,1
C2HX&SYSNDX EQU *
*                                                  END  MACRO CHR2HEX
         MEND
         MACRO
         GETIN &IN,&LIN,&OUT,&LOUT,&SOUT
         GBLB  &GINF
         GBLC  &CS
*                                                  STRT MACRO GETIN
         AIF   (&GINF).GIN1
         B     *+266
GINTR&CS DC    17X'00'
         DC    X'11'
         DC    238X'00'
GINTRT&CS TRT   0(*-*,&IN),GINTR&CS
&GINF    SETB  1
.GIN1    ANOP
         LA    &IN,1(&IN)
         LR    1,&IN
         LA    15,&SOUT
         SBA2BIN 1,15
         LH    15,&LIN
         CH    15,=H'256'
         BNH   *+8
         LA    15,256
         SH    15,=H'2'
         EX    15,GINTRT&CS
         BNZ   *+30
         LA    &OUT,2(0,&IN)
         LA    &IN,1(15,&IN)
         SH    15,=H'1'
         STH   15,&LOUT
         XC    &LIN,&LIN
         B     *+32
         SR    1,&IN
         SR    15,1
         LA    15,1(15)
         STH   15,&LIN
         SH    1,=H'2'
         STH   1,&LOUT
         LA    &OUT,2(0,&IN)
         LA    &IN,2(1,&IN)
*                                                  END  MACRO GETIN
         MEND
         MACRO
         HW2DEC4 &IN,&OUT
         LCLC  &S
&S       SETC  '(4)'
*                                                  STRT MACRO HW2DEC4
         LH    15,&IN
         CVD   15,H2DP&SYSNDX
         UNPK  H2DZ&SYSNDX,H2DP&SYSNDX
         OI    H2DZ&SYSNDX+3,X'F0'
         MVC   &OUT&S,H2DZ&SYSNDX
         B     H2D1&SYSNDX
H2DZ&SYSNDX DS  CL4
H2DP&SYSNDX DS  D
H2D1&SYSNDX EQU *
*                                                  END  MACRO HW2DEC4
         MEND
         MACRO
         HW2DEC8 &IN,&OUT
         LCLC  &S
&S       SETC  '(8)'
*                                                  STRT MACRO HW2DEC8
         LH    15,&IN
         CVD   15,H2DP&SYSNDX
         UNPK  H2DZ&SYSNDX,H2DP&SYSNDX
         OI    H2DZ&SYSNDX+7,X'F0'
         MVC   &OUT&S,H2DZ&SYSNDX
         B     H2D1&SYSNDX
H2DZ&SYSNDX DS  CL8
H2DP&SYSNDX DS  D
H2D1&SYSNDX EQU *
*                                                  END  MACRO HW2DEC8
         MEND
         MACRO
         FW2DEC4 &IN,&OUT
         LCLC  &S
&S       SETC  '(4)'
*                                                  STRT MACRO FW2DEC4
         L     15,&IN
         CVD   15,F2DP&SYSNDX
         UNPK  F2DZ&SYSNDX,F2DP&SYSNDX
         OI    F2DZ&SYSNDX+3,X'F0'
         MVC   &OUT&S,F2DZ&SYSNDX
         B     F2D1&SYSNDX
F2DZ&SYSNDX DS  CL4
F2DP&SYSNDX DS  D
F2D1&SYSNDX EQU *
*                                                  END  MACRO FW2DEC4
         MEND
         MACRO
         FW2DEC8 &IN,&OUT
         LCLC  &S
&S       SETC  '(8)'
*                                                  STRT MACRO FW2DEC8
         L     15,&IN
         CVD   15,F2DP&SYSNDX
         UNPK  F2DZ&SYSNDX,F2DP&SYSNDX
         OI    F2DZ&SYSNDX+7,X'F0'
         MVC   &OUT&S,F2DZ&SYSNDX
         B     F2D1&SYSNDX
F2DZ&SYSNDX DS  CL8
F2DP&SYSNDX DS  D
F2D1&SYSNDX EQU *
*                                                  END  MACRO FW2DEC8
         MEND
         MACRO
         CURSOR &ROW,&COL,&OUT
*                                                  STRT MACRO CURSOR
         OUTSBA &ROW,&COL,&OUT
         MVI   0(&OUT),X'13'
         LA    &OUT,1(&OUT)
*                                                  END  MACRO CURSOR
         MEND
         MACRO
         CURSORX &ROW,&COL,&OUT
*                                                  STRT MACRO CURSORX
         LA    0,&ROW
         LA    15,&COL
         OUTSBA 0,15,&OUT
         MVI   0(&OUT),X'13'
         LA    &OUT,1(&OUT)
*                                                  END  MACRO CURSORX
         MEND
         MACRO
         OUTDATA &OUT,&DATA,&DATAL
         LCLC  &S
&S       SETC  '(&OUT)'
*                                                  STRT MACRO OUTDATA
         MVC   0(&DATAL,&OUT),&DATA
         LA    &OUT,&DATAL&S
*                                                  END  MACRO OUTDATA
         MEND
         MACRO
         OUTFLD &ROW,&COL,&OUT,&ATTR,&DATA,&DATAL
         LCLA   &L
         LCLC   &X
*                                                  STRT MACRO OUTFLD
         OUTSBA &ROW,&COL,&OUT
         OUTSF &OUT,&ATTR
         AIF   (T'&DATA EQ 'O').EXIT
&X       SETC  ''''
         AIF   ('&DATA'(1,1) EQ '&X').CONST
         AIF   (T'&DATAL EQ 'O').NOLEN
         OUTDATA &OUT,&DATA,&DATAL
         AGO   .EXIT
.NOLEN   ANOP
&L       SETA   L'&DATA
         OUTDATA &OUT,&DATA,&L
         AGO   .EXIT
.CONST   ANOP
         AIF   (T'&DATAL EQ 'O').LEN
         OUTDATA &OUT,=C&DATA,&DATAL
         AGO   .EXIT
.LEN     ANOP
&L       SETA  K'&DATA-2
         OUTDATA &OUT,=C&DATA,&L
.EXIT    ANOP
*                                                  END  MACRO OUTFLD
         MEND
         MACRO
         OUTFLDC &ROW,&COL,&OUT,&ATTR,&DATA,&DATAL
         LCLA   &L
         LCLC   &X
*                                                  STRT MACRO OUTFLDC
         OUTSBA &ROW,&COL,&OUT
         OUTSF &OUT,&ATTR
         MVI   0(&OUT),X'13'
         LA    &OUT,1(&OUT)
         AIF   (T'&DATA EQ 'O').EXIT
&X       SETC  ''''
         AIF   ('&DATA'(1,1) EQ '&X').CONST
         AIF   (T'&DATAL EQ 'O').NOLEN
         OUTDATA &OUT,&DATA,&DATAL
         AGO   .EXIT
.NOLEN   ANOP
&L       SETA   L'&DATA
         OUTDATA &OUT,&DATA,&L
         AGO   .EXIT
.CONST   ANOP
         AIF   (T'&DATAL EQ 'O').LEN
         OUTDATA &OUT,=C&DATA,&DATAL
         AGO   .EXIT
.LEN     ANOP
&L       SETA  K'&DATA-2
         OUTDATA &OUT,=C&DATA,&L
.EXIT    ANOP
*                                                  END  MACRO OUTFLDC
         MEND
         MACRO
         OUTFLDX &ROW,&COL,&OUT,&ATTR,&DATA,&DATAL
*                                                  STRT MACRO OUTFLDX
         LA    0,&ROW
         LA    15,&COL
         OUTFLD 0,15,&OUT,&ATTR,&DATA,&DATAL
*                                                  END  MACRO OUTFLDX
         MEND
         MACRO
         OUTFLDCX &ROW,&COL,&OUT,&ATTR,&DATA,&DATAL
*                                                  STRT MACRO OUTFLDCX
         LA    0,&ROW
         LA    15,&COL
         OUTFLDC 0,15,&OUT,&ATTR,&DATA,&DATAL
*                                                  END  MACRO OUTFLDCX
         MEND
         MACRO
         OUTSBA &ROW,&COL,&OUT
*                                                  STRT MACRO OUTSBA
         MVI   0(&OUT),X'11'
         LA    &OUT,1(&OUT)
         RC2SBA &ROW,&COL,&OUT
         LA    &OUT,2(&OUT)
*                                                  END  MACRO OUTSBA
         MEND
         MACRO
         RC2BIN &ROW,&COL,&BIN
*                                                  STRT MACRO RC2BIN
         LR    0,&ROW
         BCTR  0,0
         MH    0,=H'80'
         AR    0,&COL
         BCTR  0,0
         STH   0,0(&BIN)
*                                                  END  MACRO RC2BIN
         MEND
         MACRO
         BIN2RC &BIN,&ROW,&COL
*                                                  STRT MACRO BIN2RC
         L     1,&BIN
         XR    0,0
         D     0,=F'80'
         LR    &ROW,1
         LA    &ROW,1(&ROW)
         LR    &COL,0
*                                                  END  MACRO BIN2RC
         MEND
         MACRO
         RC2SBA &ROW,&COL,&SBA
*                                                  STRT MACRO RC2SBA
         RC2BIN &ROW,&COL,&SBA
         MVC   ATTROFF,0(&SBA)
         LH    0,0(&SBA)
         BIN2SBA 0,&SBA
*                                                  END  MACRO RC2SBA
         MEND
         MACRO
         BIN2SBA &R1,&R2
*                                                  STRT MACRO BIN2SBA
         GBLB  &B2SF
         GBLC  &CS
         AIF   (&B2SF).B2S1
         B     *+68
C3270$&CS DC    X'40C1C2C3C4C5C6C7C8C94A4B4C4D4E4F'
          DC    X'50D1D2D3D4D5D6D7D8D95A5B5C5D5E5F'
          DC    X'6061E2E3E4E5E6E7E8E96A6B6C6D6E6F'
          DC    X'F0F1F2F3F4F5F6F7F8F97A7B7C7D7E7F'
&B2SF    SETB  1
.B2S1    ANOP
         LR    0,&R1
         STC   0,1(&R2)
         SRL   0,6
         STC   0,0(&R2)
         NC    0(2,&R2),=2X'3F'
         TR    0(2,&R2),C3270$&CS
*                                                  END  MACRO BIN2SBA
         MEND
         MACRO
         SBA2BIN &R1,&R2
*                                                  STRT MACRO SBA2BIN
         MVC   0(2,&R2),0(&R1)
         NC    0(2,&R2),=2X'3F'
         XR    0,0
         IC    0,0(&R2)
         SLL   0,6
         MVI   0(&R2),0
         AH    0,0(&R2)
         ST    0,0(&R2)
*                                                  END  MACRO SBA2BIN
         MEND
         MACRO
         FRED1
DFHEISTG DSECT
SAVEAREA DS    18F
REG13    DS    F
*TMPARM   DS    4F
*  FIELDS FOR KPS0824 CALL
SAVE14   DS    F
SAVESUB1 DS    18F                     REGISTER SAVEAREA
*
KPS0824W DS    0F                      KPS0824 WORK AREA
PARM     DS    2F                      KPS0824 PARM POINTERS
PARMBLK  DS    (P824L)X                KPS0824 PARAMETER BLOCK
@SCR     DS    F
@CSA     DS    F
SAVE13   DS    F
CEMTPRMS EQU   *
CEMT1    DS    F
CEMT2    DS    F
CEMT3    DS    F
CEMT4    DS    F
CEMT5    DS    F
@CMD     DS    F
@TABLE   DS    F                      PRIMARY ADDR FROM KPS0824
@TABLE2  DS    F                      SECONDARY ADDR FROM KPS0824
SCRLEN   DS    H
OFFSET   DS    F
OFFSET2  DS    F
OFFSET3  DS    F
OFFSETX  DS    F
MEMOFF   DS    H
RECLEN   DS    H
FLDLEN   DS    H
ATTROFF  DS    H
TSQNAME  DS    0CL8
TSQID    DS    CL4
TSQTERM  DS    CL4
CEMTCMD  DS    CL70
NEWCMD   DS    CL70
APPLID   DS    CL8
TEMPCHR  DS    CL8
         DS    0F
COMM     EQU   *
RFADDR   DS    F
TSQDATA  EQU   *
OPSYS    DS    X
CEMTLOOP DS    X
CMDSW    DS    X
CONVERT  EQU   X'80'
DELIMIT  EQU   X'40'
JUSTSEND EQU   X'20'
NOERASE  EQU   X'10'
PASSWORD EQU   X'01'
VERIFIED EQU   X'02'
ABENDOFF EQU   X'04'
ADDRESS  DS    F
PADDRESS DS    F
COFFSET  DS    F
POFFSET  DS    F
CHAINMAX EQU   50
CHAINIDX DS    H
CHAINNBR DS    H
         DS    0F
CHAIN    DS    (CHAINMAX*4)X
FINDLEN  DS    H
FINDSTR  DS    CL70
FINDSW   DS    X
REFIND   EQU   X'80'
ALLOWRF  EQU   X'40'
PECMDIDX DS    H
PECMDCX  DS    H
PECMDMX  EQU   30
PECMD    DS    (PECMDMX*70)X
PECMDL   EQU   *-PECMDIDX
TSQL     EQU   *-TSQDATA
COMML    EQU   *-COMM
TSQRL    DS    H
CMDOUT   DS    CL70
CMDOLEN  DS    H
CMDLENSV DS    H
ECMD     DS    CL70
EOUTPUT  DS    CL11
EMSG     DS    CL78
EOUTPUTL EQU   *-EOUTPUT
ECURSOR  DS    CL4
ECMDOUT  DS    CL70
WORKFLD  DS    CL140
         ORG   WORKFLD
REQNAME  DS    CL8                     REQUEST'S NAME FOR KPS824 CALL
REQACTN  DS    CL4                     REQUEST'S ACTION FOR KPS824 CALL
         ORG
DSPSAVE  DS    18F
EDSP     DS    CL78
         SPACE 2
         MEND
         MACRO
         FRED
*        GBLB  &DFHEIMX
         GBLB  &B2SF,&H2CF,&H2DF,&ORF,&ORHF,&GINF,&C2HF,&MVS
         GBLC  &CS,&VERS
&MVS     SETB  0
*&DFHEIMX SETB  1
&VERS    SETC  'V01.0'
&B2SF    SETB  0
&H2CF    SETB  0
&H2DF    SETB  0
&GINF    SETB  0
&ORF     SETB  0
&ORHF    SETB  0
&C2HF    SETB  0
&CS      SETC  '0'
CSACBAR  EQU   13
TCTTEAR  EQU   2
PPTCBAR  EQU   2
EISCBAR  EQU   2
SYTCABAR EQU   2
TIOABAR  EQU   3
         SPACE 2
*        COPY DFHTCTTE
*        COPY DFHPPTDS
*        COPY DFHTIOA
*        DFHEIS
*<=====  DFHTM  MF=(D,PARMLIST)
*        COPY DFHCSADS                    GEN'D BY THE CICS@ MACRO
*        DFHAFCD TYPE=DSECT               GEN'D BY THE CICS@ MACRO
*        DFHTCA CICSYST=YES               GEN'D BY THE CICS@ MACRO
                                                                SPACE 1
         CICS@ (@@@,TCA),MF=L,LIST=NO
                                                                SPACE 1
         PRINT OFF
         COPY DFHTCTTE
         COPY DFHPPTDS
         COPY DFHTIOA
         DFHEIS
         DFHTACB TYPE=DSECT
         DFHAICB TYPE=DSECT
         EJECT
         COPY DFHAID
         EJECT
         COPY DFHBMSCA
         COPY KPW0825                     PARAMETER BLOCK FOR KPS0824
         PRINT ON
         EJECT
MSD      DSECT                         DFHMSD HEADER
MSDNAME  DS    CL8                     MAPSET NAME
MSDOVFLT DS    AL1                     OVERFLOW TRAILER LENGTH
MSDVERS  DS    X                       VERSION
MSDLDC   DS    CL2                     LOGICAL DEVICE COMPONENT
MSD#L    EQU   *-MSD
*                                      DESCRIPTOR FIELDS NOT PRESENT
         SPACE 2
MDI      DSECT                         DFHMDI HEADER
MDIMDL   DS    AL2                     MAP DESCRIPTOR LENGTH
MDIIPR   DS    XL2                     INPUT PARTITION NAME
MDIOPR   DS    XL2                     OUTPUT PARTITION NAME
MDIAPR   DS    XL2                     ACTIVE PARTITION NAME
MDINAME  DS    CL8                     MAP NAME
MDIMAPL  DS    AL2                     MAP LENGTH
MDIMSL   DS    AL2                     MAP SPECIFICATION LENGTH
MDIIWAL  DS    AL2                     INPUT WORK AREA LENGTH
MDIOWAL  DS    AL2                     OUTPUT WORK AREA LENGTH
MDIDFLAG DS    AL1                     MAP DESCRIPTOR FLAG BYTE
MDIDFIO  EQU   X'C0'                   MODE = INOUT
MDIDFOUT EQU   X'80'                   MODE = OUT
MDIDFIN  EQU   X'40'                   MODE = IN
MDIDFOBF EQU   X'08'                   OBFMT = YES
MDIDFBLK EQU   X'01'                   DATA = BLOCK
MDIWCC   DS    CL1                     3270 WRITE CONTROL CHARACTER
MDICPOSN DS    AL2                     3270 CURSOR POSITION
MDIMARG  DS    AL1                     MAP MARGIN
MDILINES DS    AL1                     MAP LENGTH - NUMBER OF LINES
MDICOLS  DS    AL1                     MAP WIDTH - NUMBER OF COLUMNS
MDILINE1 DS    AL1                     MAP STARTING LINE NUMBER
MDICOL1  DS    AL1                     MAP STARTING COLUMN NUMBER
MDIIND   DS    AL1                     MAP INDICATOR
MDIISEQ  EQU   X'01'                   FIELDS NOT IN SEQUENCE
MDIITRL  EQU   X'02'                   TRAILER = YES
MDIIHDR  EQU   X'04'                   HEADER = YES
MDIIALGN EQU   X'20'                   ALIGNED MAP
MDIIATTD EQU   X'40'                   EXTENDED ATTRIBUTES IN DSECT
MDIIATTM EQU   X'80'                   EXTENDED ATTRIBUTES IN MAP
MDIREQ2  DS    AL1                     TYPE REQUEST BYTE TWO
MDIREQ3  DS    AL1                     TYPE REQUEST BYTE THREE
MDIREQ4  DS    AL1                     TYPE REQUEST BYTE FOUR
MDIREQ5  DS    AL1                     TYPE REQUEST BYTE FIVE
MDIRQCPN DS    AL2                     REQUEST CURSOR POSITION
MDIRQWCC DS    AL1                     REQUEST WRITE CONTROL CHARACTER
MDIWRES  EQU   X'40'                   RESET FUNCTION
MDIWALRM EQU   X'04'                   SOUND ALARM
MDIWKBDR EQU   X'02'                   KEYBOARD RESTORE
MDIWMDTR EQU   X'01'                   MDT RESTORE
MDIMAXAT DS    AL1                     MAX NO OF ATTRS
MDICHAIN DS    AL4                     MAP CHAIN POINTER
MDINATF  DS    AL2                     NO. OF ATTRS IN MAP FIELDS
MDINATD  DS    AL2                     NO. OF ATTRS IN DSECT FIELDS
MDIMAPAT DS    12AL1                   MAPATTS
MDIDSAT  DS    12AL1                   DSATTS
MDIFSEPL DS    AL1                     FIELD SEPARATOR LENGTH
MDIFSEP  DS    XL4                     FIELD SEPARATOR VALUE
MDI#L    EQU   *-MDI
         SPACE 2
MDF      DSECT                         DFHMDF ENTRY
MDFPGPOS DS    AL2                     PAGE POSITION
MDFLNG   DS    AL2                     FIELD LENGTH
MDFFLAG  DS    AL1                     FIELD DESCRIPTOR FLAG BYTE
MDFFMX   EQU   X'80'                   MIXED CASE
MDFFPEN  EQU   X'10'                   ATTRB = DET
MDFFJZER EQU   X'08'                   JUSTIFY = ZERO
MDFFJRT  EQU   X'04'                   JUSTIFY = RIGHT
MDFFDFT  EQU   X'02'                   INITIAL = ANY
MDFFDSCT EQU   X'01'                   FLDNAME SPECIFIED
MDFATTR  DS    CL1                     FIELD ATTRIBUTE
MDFAPROT EQU   X'20'                   PROTECTED
MDFANUM  EQU   X'10'                   NUMERIC
MDFADSYP EQU   X'04'                   DISPLAY / SELECTOR PEN DETECT
MDFAIP   EQU   X'08'                   INTENSIFIED / SEL PEN DETECT
MDFANN   EQU   X'0C'                   NONDISPLAY / NONPRINT / NONDET
MDFAMDT  EQU   X'01'                   MODIFIED DATA TAG SET
MDFFPOS  DS    AL2                     FIELD POSITION
MDFDTA   DS    0X                      INITIAL DATA
MDF#L    EQU   *-MDF
         SPACE 2
*        3270 BUFFER CONTROL ORDERS
SF       EQU   X'1D'                   START FIELD        ... SF @
SBA      EQU   X'11'                   SET BUFFER ADDRESS ... SBA X Y
IC       EQU   X'13'                   INSERT CURSOR
PT       EQU   X'05'                   PROGRAM TAB
RA       EQU   X'3C'                   REPEAT TO ADDRESS  ... RA X Y C
EUA      EQU   X'12'                   ERASE UNPROT TO ADDR . EUA X Y
         SPACE 4
ATTRTAB  DSECT
ATTR     DS    X
         SPACE 4
CMDTABDS DSECT
CMDLEN   DS    X
CMDPARMS DS    X
PARMS    EQU   X'80'
CMDID    DS    CL8
CMDOFF   DS    H
CMDCSECT DS    F
CMDTABL  EQU   *-CMDTABDS
         SPACE 4
AIDTABDS DSECT
AIDTABKY DS    X
         DS    3X
AIDTABOF DS    V
AIDTABL  EQU   *-AIDTABDS
         SPACE 4
*
TP08T95  DFHEIENT CODEREG=(7),DATAREG=(8),EIBREG=(9)
                                                                SPACE 1
         CICS@ CSA,BASE=2,USING=NO,CSA@=@CSA
         ST    2,CSA@
         MVI   ECMD,C'_'
         MVC   ECMD+1(L'ECMD-1),ECMD
         MVC   TSQID,EIBTRNID
         MVC   TSQTERM,EIBTRMID
         EXEC CICS GETMAIN SET(10) LENGTH(=H'1920') INITIMG(X'00')
         USING ATTRTAB,10
         OC    EIBTRMID,EIBTRMID
         BZ    NOCOMM
         CLC   EIBCALEN,=Y(COMML)
         BNE   NOCOMM
         LA    2,COMM
         LH    3,=Y(COMML)
         LR    5,3
         EXEC CICS ADDRESS COMMAREA (4)
*        L     4,DFHEICAP
         MVCL  2,4
         TM    CMDSW,ABENDOFF
         BO    NOABEND
         EXEC CICS HANDLE ABEND LABEL(ABENDED)
NOABEND  EQU   *
         TM    CMDSW,JUSTSEND
         BNO   KEYTEST
         NI    CMDSW,X'FF'-JUSTSEND
         L     15,=V(DISPLAY)
         BR    15
KEYTEST  EQU   *
         LA    3,AIDTAB
         USING AIDTABDS,3
         LA    4,AIDTABN
KEYLOOP  EQU   *
         CLC   AIDTABKY,EIBAID
         BNE   *+10
         L     2,AIDTABOF
         BR    2
         LA    3,AIDTABL(3)
         BCT   4,KEYLOOP
         OC    EIBCALEN,EIBCALEN
         BZ    NOCOMM@X
         EXEC CICS RECEIVE SET(3) LENGTH(RECLEN)
GETFIELD EQU   *
         OC    RECLEN,RECLEN
         BZ    REDISP
         GETIN  3,RECLEN,4,FLDLEN,OFFSET
         OC    FLDLEN,FLDLEN
         BZ    GETFIELD
         CLC   OFFSET,=F'161'
         BE    COMMAND
         CLC   OFFSET,=F'320'
         BH    CHGMEM
         B     GETFIELD
COMMAND  EQU   *
         ST    13,REG13
         LA    13,SAVEAREA
         L     15,=V(CMDS)
         AIF   (&MVS).MVS1
         BALR  14,15
         AGO   .MVS2
.MVS1    ANOP
         BASR  14,15
.MVS2    ANOP
         L     13,REG13
         L     15,=V(DISPLAY)
         BR    15
CHGMEM   EQU   *
         TM    CMDSW,VERIFIED
         BNO   CHGMEM@E
         CSR2MEM OFFSET,OFFSET2,OFFSET3
         L     5,ADDRESS
         A     5,OFFSET2
         A     5,COFFSET
         CHR2HEX 4,5,FLDLEN
         BNZ   CHGMEM@Z
         SETATTR OFFSET,DFHBMBRY
         MVI   EIBAID,DFHENTER
         B     GETFIELD
CHGMEM@E EQU   *
         SETATTR OFFSET,DFHBMBRY
         MVC   EMSG,=CL78' '
         MVC   EMSG(36),=C'CANNOT CHANGE MEMORY IN DISPLAY MODE'
         L     15,=V(DISPLAY)
         BR    15
CHGMEM@Z EQU   *
         BIN2RC OFFSET,2,3
         LA    5,EOUTPUT
         OUTFLDC 2,3,5,DFHUNIMD
         OUTFLDX 4,1,5,DFHBMASB
         EXEC CICS SEND FROM(EOUTPUT) LENGTH(=Y(EOUTPUTL))
         EXEC CICS RETURN TRANSID(EIBTRNID) COMMAREA(COMM)             X
               LENGTH(=Y(COMML))
         EJECT
ABENDED  EQU   *
         AIF   (&MVS).MVS3
         BALR  7,0
         AGO   .MVS4
.MVS3    ANOP
         BASR  7,0
.MVS4    ANOP
         LA    15,*-TP08T95
         SR    7,15
         MVC   ADDRESS,PADDRESS
         MVC   COFFSET,POFFSET
         MVI   EMSG,C' '
         MVC   EMSG+1(L'EMSG-1),EMSG
         MVC   EMSG(9),=C'ABENDED -'
         CICS@ TCA,BASE=TCACBAR,USING=NO TCA(U) @
         L     SYTCABAR,TCASYAA
         USING DFHTCADY,SYTCABAR
         L     3,TCAPCACB
         USING DFHABND,3
         MVC   EMSG+10(4),ABNDCODE
         LA    4,EMSG+15
         HW2CHR ABNDPSW,4
         HW2CHR ABNDPSW+2,4
         LA    4,1(4)
         HW2CHR ABNDPSW+4,4
         HW2CHR ABNDPSW+6,4
         LA    4,1(4)
         HW2CHR ABNDINT,4
         HW2CHR ABNDINT+2,4
         LA    4,1(4)
         HW2CHR ABNDINT+4,4
         HW2CHR ABNDINT+6,4
         LA    4,EMSG+62
         HW2CHR ABNDREGS+4,4
         HW2CHR ABNDREGS+6,4
         PREVCHNI
         CLI   OPSYS,C'E'
         BE    *+28
         L     5,16
         L     5,0(5)
         L     5,4(5)
         L     5,X'D0'(5)
         L     5,X'14'(5)
         B     *+12
         L     5,X'14'
         L     5,X'B4'(5)
         USING DFHAFCB,5
         L     5,AFAICB                 @ OF @ EIQ (USED BY DFHEI1)
         DROP  15
         USING DFHAICB,5
         L     6,DFHAIEXC               @ EIQ
*        L     1,=V(TRAP)               GET @ TRAP ROUTINE
*        CR    1,6                      TRAP ALREADY SET ?
*        BNE   RESET
         B     RESET
         L     15,=V(SAVEIQ)
         MVC   DFHAIEXC,0(15)
         XC    0(4,15),0(15)
         EXEC CICS RELEASE PROGRAM('TP08T95')
RESET    EQU   *
         NI    FINDSW,X'FF'-(ALLOWRF+REFIND)
         EXEC CICS HANDLE ABEND RESET
         L     15,=V(DISPLAY)
         BR    15
         SPACE 4
REDISP   EQU   *
         L     15,=V(DISPLAY)
         BR    15
NOCOMM   EQU   *
         MVC   TSQRL,=Y(TSQL)
         MVC   TSQITEM,=Y(1)
         EXEC CICS READQ QUEUE(TSQNAME) INTO(TSQDATA)                  X
               LENGTH(TSQRL) ITEM(TSQITEM) NOHANDLE
         CLC   EIBRESP,DFHRESP(NORMAL)
         BE    NOCOMM@1
         ST    13,ADDRESS
         ST    13,CHAIN
         MVC   CHAINIDX,=H'1'
         MVC   CHAINNBR,=H'1'
         OI    CMDSW,VERIFIED
         EXEC CICS INQUIRE SYSTEM OPSYS(OPSYS)
NOCOMM@1 EQU   *
         CLC   EIBTRNID,=C'CSTP'
         BNE   NOCOMM@2
         MVC   FLDLEN,=H'7'
         LA    4,CSTPCMD
         B     NOCOMM@R
CSTPCMD  DC    CL70'CEMTON;'
NOCOMM@2 EQU   *
         OC    EIBTRMID,EIBTRMID
         BZ    NOCOMM@3
         TM    CMDSW,ABENDOFF
         BO    NOCOMM@3
         EXEC CICS HANDLE ABEND LABEL(ABENDED)
NOCOMM@3 EQU   *
         OC    EIBCALEN,EIBCALEN
         BZ    NOCOMM@4
*        EXEC CICS ADDRESS COMMAREA (4)
*        L     4,DFHEICAP
         MVC   FLDLEN,EIBCALEN
         B     NOCOMM@R
NOCOMM@4 EQU   *
         EXEC CICS RETRIEVE SET(4) LENGTH(FLDLEN) NOHANDLE
         CLC   EIBRESP,DFHRESP(NORMAL)
         B     NOCOMM@R
*        BE    NOCOMM@R
         L     TCTTEAR,TCAFCAAA
         USING DFHTCTTE,TCTTEAR
         SLL   TCTTEAR,8
         SRL   TCTTEAR,8
         L     TIOABAR,TCTTEDA
         USING DFHTIOA,TIOABAR
         LTR   TIOABAR,TIOABAR
         BZ    KEYTEST
         SLL   TIOABAR,8
         SRL   TIOABAR,8
         LH    1,TIOATDL
         LTR   1,1
         BZ    KEYTEST
         LA    4,TIOADBA
         CLI   0(4),X'11'
         BNE   *+12
         LA    4,3(4)
         SH    1,=H'3'
         LA    4,4(4)
         SH    1,=H'4'
         LTR   1,1
         BZ    KEYTEST
         STH   1,FLDLEN
NOCOMM@R EQU   *
         MVC   OFFSET,=F'161'
         ST    13,REG13
         LA    13,SAVEAREA
         L     15,=V(CMDS)
         AIF   (&MVS).MVS5
         BALR  14,15
         AGO   .MVS6
.MVS5    ANOP
         BASR  14,15
.MVS6    ANOP
         L     13,REG13
NOCOMM@X EQU   *
         L     15,=V(DISPLAY)
         BR    15
         SPACE 4
         EJECT
         ENTRY RETURNC
RETURNC  EQU   *
         AIF   (&MVS).MVSK1
         BALR  7,0
         AGO   .MVSK2
.MVSK1   ANOP
         BASR  7,0
.MVSK2   ANOP
         LA    15,*-TP08T95
         SR    7,15
         MVC   PECMDCX,PECMDIDX
         MVC   TSQITEM,=Y(1)
         EXEC CICS WRITEQ TS QUEUE(TSQNAME) ITEM(TSQITEM)              X
               FROM(TSQDATA) LENGTH(=Y(TSQL)) REWRITE MAIN NOHANDLE
         CLC   EIBRESP,DFHRESP(NORMAL)
         BE    RETURNCX
         EXEC CICS WRITEQ TS QUEUE(TSQNAME) ITEM(TSQITEM)              X
               FROM(TSQDATA) LENGTH(=Y(TSQL)) MAIN NOHANDLE
RETURNCX EQU   *
         EXEC CICS RETURN
TSQITEM  DS    H
WASAVKY  DS    XL50
         ENTRY CSA@
CSA@     DS    F
         SPACE 3
AIDTAB   DS    0F
         DC    AL1(DFHCLEAR),AL3(0),V(RETURNC)
         DC    AL1(DFHPF2),AL3(0),V(P#PF2)
         DC    AL1(DFHPF3),AL3(0),V(P#PF3)
         DC    AL1(DFHPF4),AL3(0),V(P#PF4)
         DC    AL1(DFHPF5),AL3(0),V(P#PF5)
         DC    AL1(DFHPF6),AL3(0),V(P#PF6)
         DC    AL1(DFHPF7),AL3(0),V(P#PF7)
         DC    AL1(DFHPF8),AL3(0),V(P#PF8)
         DC    AL1(DFHPF9),AL3(0),V(P#PF9)
         DC    AL1(DFHPF10),AL3(0),V(P#PF10)
         DC    AL1(DFHPF11),AL3(0),V(P#PF11)
         DC    AL1(DFHPF12),AL3(0),V(P#PF12)
         DC    AL1(DFHPF14),AL3(0),V(P#PF2)
         DC    AL1(DFHPF15),AL3(0),V(RETURNC)
         DC    AL1(DFHPF16),AL3(0),V(P#PF16)
         DC    AL1(DFHPF17),AL3(0),V(P#PF5)
         DC    AL1(DFHPF18),AL3(0),V(P#PF18)
         DC    AL1(DFHPF19),AL3(0),V(P#PF7)
         DC    AL1(DFHPF20),AL3(0),V(P#PF8)
         DC    AL1(DFHPF21),AL3(0),V(P#PF21)
         DC    AL1(DFHPF22),AL3(0),V(P#PF22)
         DC    AL1(DFHPF23),AL3(0),V(P#PF23)
         DC    AL1(DFHPF24),AL3(0),V(P#PF24)
AIDTABN  EQU   (*-AIDTAB)/AIDTABL
         LTORG
         EJECT
         MEND
         MACRO
         FRED8
         GBLB  &B2SF,&H2CF,&H2DF,&ORF,&ORHF,&GINF,&C2HF,&MVS
         GBLC  &CS,&VERS
PFKEYS   CSECT
&B2SF    SETB  0
&H2CF    SETB  0
&H2DF    SETB  0
&GINF    SETB  0
&ORF     SETB  0
&ORHF    SETB  0
&C2HF    SETB  0
&CS      SETC  '8'
         USING *,7
         ENTRY P#PF2
P#PF2    EQU   *
         AIF   (&MVS).MVSP1
         BALR  7,0
         AGO   .MVSP2
.MVSP1   ANOP
         BASR  7,0
.MVSP2   ANOP
         LA    15,*-PFKEYS
         SR    7,15
         NI    CMDSW,X'FF'-VERIFIED
         L     15,=V(DISPLAY)
         BR    15
         SPACE 3
         ENTRY P#PF3
P#PF3    EQU   *
         AIF   (&MVS).MVSP100
         BALR  7,0
         AGO   .MVSP101
.MVSP100 ANOP
         BASR  7,0
.MVSP101 ANOP
         LA    15,*-PFKEYS
         SR    7,15
         EXEC CICS SEND CONTROL ERASE
         L     15,=V(RETURNC)
         BR    15
         SPACE 3
         ENTRY P#PF4
P#PF4    EQU   *
         AIF   (&MVS).MVSP3
         BALR  7,0
         AGO   .MVSP4
.MVSP3   ANOP
         BASR  7,0
.MVSP4   ANOP
         LA    15,*-PFKEYS
         SR    7,15
         OC    PECMDIDX,PECMDIDX
         BNZ   P#PF4@1
         MVC   EMSG,=CL78' '
         MVC   EMSG(23),=C'NO COMMANDS TO RETRIEVE'
         B     P#PF4@X
P#PF4@1  EQU   *
         LH    2,PECMDCX
         CH    2,=H'0'
         BH    *+8
         LA    2,PECMDMX
         BCTR  2,0
         STH   2,PECMDCX
         MH    2,=Y(L'ECMD)
         LA    2,PECMD(2)
         OC    0(L'ECMD,2),0(2)
         BNZ   P#PF4@2
         MVC   EMSG,=CL78' '
         MVC   EMSG(28),=C'NO MORE COMMANDS TO RETRIEVE'
         MVC   PECMDCX,PECMDIDX
         B     P#PF4@X
P#PF4@2  EQU   *
         MVC   ECMD,0(2)
         MVC   OFFSET,=F'161'
         SETATTR OFFSET,DFHBMFSE
         LA    6,ECURSOR
         CURSORX 3,2,6
P#PF4@X  EQU   *
         L     15,=V(DISPLAY)
         BR    15
         SPACE 3
         ENTRY P#PF5
P#PF5    EQU   *
         AIF   (&MVS).MVSP5
         BALR  7,0
         AGO   .MVSP6
.MVSP5   ANOP
         BASR  7,0
.MVSP6   ANOP
         LA    15,*-PFKEYS
         SR    7,15
         TM    FINDSW,ALLOWRF
         BNO   P#PF5@1
         ST    13,PREG13
         LA    13,PSVAREA
         OI    FINDSW,REFIND
         L     15,=V(CMDS)
         AIF   (&MVS).MVS7
         BALR  14,15
         AGO   .MVS8
.MVS7    ANOP
         BASR  14,15
.MVS8    ANOP
         L     13,PREG13
         B     P#PF5@2
P#PF5@1  EQU   *
         MVC   EMSG,=CL78' '
         MVC   EMSG(18),=C'ENTER FIND COMMAND'
P#PF5@2  EQU   *
         L     15,=V(DISPLAY)
         BR    15
         SPACE 3
         ENTRY P#PF6
P#PF6    EQU   *
         AIF   (&MVS).MVSP7
         BALR  7,0
         AGO   .MVSP8
.MVSP7   ANOP
         BASR  7,0
.MVSP8   ANOP
         LA    15,*-PFKEYS
         SR    7,15
         LA    2,PECMDIDX
         LA    3,PECMDL
         XR    4,4
         XR    5,5
         MVCL  2,4
         L     15,=V(DISPLAY)
         BR    15
         SPACE 3
         ENTRY P#PF7
P#PF7    EQU   *
         AIF   (&MVS).MVSP9
         BALR  7,0
         AGO   .MVSP10
.MVSP9   ANOP
         BASR  7,0
.MVSP10  ANOP
         LA    15,*-PFKEYS
         SR    7,15
         LH    1,EIBCPOSN
         ST    1,OFFSET2
         CSR2MEM OFFSET2,OFFSET,OFFSET3
         L     1,OFFSET3
         CH    1,=H'0'
         BL    P#PF7@1
         CH    1,=H'256'
         BH    P#PF7@1
         L     2,COFFSET
         SH    2,=H'240'
         AR    1,2
         B     P#PF7@2
P#PF7@1  EQU   *
         L     1,COFFSET
         SH    1,=H'256'
P#PF7@2  EQU   *
         ST    1,COFFSET
         L     1,ADDRESS
         A     1,COFFSET
         GETCHN 2
         ST    1,0(2)
         L     15,=V(DISPLAY)
         BR    15
         SPACE 3
         ENTRY P#PF8
P#PF8    EQU   *
         AIF   (&MVS).MVSP11
         BALR  7,0
         AGO   .MVSP12
.MVSP11  ANOP
         BASR  7,0
.MVSP12  ANOP
         LA    15,*-PFKEYS
         SR    7,15
         LH    1,EIBCPOSN
         ST    1,OFFSET2
         CSR2MEM OFFSET2,OFFSET,OFFSET3
         L     1,OFFSET3
         CH    1,=H'0'
         BL    P#PF8@1
         CH    1,=H'256'
         BH    P#PF8@1
         L     2,COFFSET
         AR    1,2
         B     P#PF8@2
P#PF8@1  EQU   *
         L     1,COFFSET
         A     1,=F'256'
P#PF8@2  EQU   *
         ST    1,COFFSET
         L     1,ADDRESS
         A     1,COFFSET
         GETCHN 2
         ST    1,0(2)
         L     15,=V(DISPLAY)
         BR    15
         SPACE 3
         ENTRY P#PF9
P#PF9    EQU   *
         AIF   (&MVS).MVSP13
         BALR  7,0
         AGO   .MVSP14
.MVSP13  ANOP
         BASR  7,0
.MVSP14  ANOP
         LA    15,*-PFKEYS
         SR    7,15
*        DFHAFCD TYPE=LOCATE,REG=1
*        USING DFHAFCB,1
         MVC   ADDRESS,@CSA
         BUMP 1,ADDRESS
         XC    COFFSET,COFFSET
         L     15,=V(DISPLAY)
         BR    15
         SPACE 3
         ENTRY P#PF10
P#PF10   EQU   *
         AIF   (&MVS).MVSP15
         BALR  7,0
         AGO   .MVSP16
.MVSP15  ANOP
         BASR  7,0
.MVSP16  ANOP
         LA    15,*-PFKEYS
         SR    7,15
         PREVCHN 1
         OC    0(4,1),0(1)
         BZ    P#PF10@X
         PREVCHNI
         MVC   ADDRESS,0(1)
         XC    COFFSET,COFFSET
P#PF10@X EQU   *
         L     15,=V(DISPLAY)
         BR    15
         SPACE 3
         ENTRY P#PF11
P#PF11   EQU   *
         AIF   (&MVS).MVSP17
         BALR  7,0
         AGO   .MVSP18
.MVSP17  ANOP
         BASR  7,0
.MVSP18  ANOP
         LA    15,*-PFKEYS
         SR    7,15
         NEXTCHN 1
         OC    0(4,1),0(1)
         BZ    P#PF11@X
         MVC   ADDRESS,0(1)
         NEXTCHNI
         XC    COFFSET,COFFSET
P#PF11@X EQU   *
         L     15,=V(DISPLAY)
         BR    15
         SPACE 3
         ENTRY P#PF12
P#PF12   EQU   *
         AIF   (&MVS).MVSP19
         BALR  7,0
         AGO   .MVSP20
.MVSP19  ANOP
         BASR  7,0
.MVSP20  ANOP
         LA    15,*-PFKEYS
         SR    7,15
         LH    1,EIBCPOSN
         ST    1,OFFSET2
         CSR2MEM OFFSET2,OFFSET,OFFSET3
         L     1,OFFSET
         CH    1,=H'0'
         BL    P#PF12@X
         CH    1,=H'256'
         BH    P#PF12@X
         L     1,ADDRESS
         A     1,COFFSET
         A     1,OFFSET
         MVC   ADDRESS,0(1)
*<=====  MVI   ADDRESS,X'00'           24 BIT ADDRESSING
         NI    ADDRESS,X'FF'-X'80'     31 BIT ADDRESSING
         BUMP 1,ADDRESS
         XC    COFFSET,COFFSET
P#PF12@X EQU   *
         L     15,=V(DISPLAY)
         BR    15
         SPACE 3
         ENTRY P#PF16
P#PF16   EQU   *
         AIF   (&MVS).MVSP21
         BALR  7,0
         AGO   .MVSP22
.MVSP21  ANOP
         BASR  7,0
.MVSP22  ANOP
         LA    15,*-PFKEYS
         SR    7,15
         OC    PECMDIDX,PECMDIDX
         BNZ   P#PF16@1
         MVC   EMSG,=CL78' '
         MVC   EMSG(23),=C'NO COMMANDS TO RETRIEVE'
         B     P#PF16@X
P#PF16@1 EQU   *
         LH    2,PECMDCX
         CH    2,=Y(PECMDMX-1)
         BL    *+8
         LH    2,=H'-1'
         LA    2,1(2)
         STH   2,PECMDCX
         MH    2,=Y(L'ECMD)
         LA    2,PECMD(2)
         OC    0(L'ECMD,2),0(2)
         BNZ   P#PF16@2
         MVC   EMSG,=CL78' '
         MVC   EMSG(28),=C'NO MORE COMMANDS TO RETRIEVE'
         MVC   PECMDCX,PECMDIDX
         B     *+10
P#PF16@2 EQU   *
         MVC   ECMD,0(2)
         MVC   OFFSET,=F'161'
         SETATTR OFFSET,DFHBMFSE
         LA    6,ECURSOR
         CURSORX 3,2,6
P#PF16@X EQU   *
         L     15,=V(DISPLAY)
         BR    15
         SPACE 3
         ENTRY P#PF18
P#PF18   EQU   *
         AIF   (&MVS).MVSP23
         BALR  7,0
         AGO   .MVSP24
.MVSP23  ANOP
         BASR  7,0
.MVSP24  ANOP
         LA    15,*-PFKEYS
         SR    7,15
         LA    2,TSQDATA+1
         LA    3,TSQL-1
         XR    4,4
         XR    5,5
         MVCL  2,4
         MVC   ADDRESS,@CSA
         MVC   CHAIN(4),@CSA
         MVC   CHAINIDX,=H'1'
         MVC   CHAINNBR,=H'1'
         L     15,=V(DISPLAY)
         BR    15
         SPACE 3
         ENTRY P#PF21
P#PF21   EQU   *
         AIF   (&MVS).MVSP25
         BALR  7,0
         AGO   .MVSP26
.MVSP25  ANOP
         BASR  7,0
.MVSP26  ANOP
         LA    15,*-PFKEYS
         SR    7,15
         L     1,ADDRESS
         A     1,COFFSET
         ST    1,ADDRESS
         GETCHN 2
         ST    1,0(2)
         XC    COFFSET,COFFSET
         L     15,=V(DISPLAY)
         BR    15
         SPACE 3
         ENTRY P#PF22
P#PF22   EQU   *
         AIF   (&MVS).MVSP29
         BALR  7,0
         AGO   .MVSP30
.MVSP29  ANOP
         BASR  7,0
.MVSP30  ANOP
         LA    15,*-PFKEYS
         SR    7,15
         CLC   EIBCPOSN,=H'400'
         BL    P#PF22@7
         LH    3,EIBCPOSN
         XR    2,2
         D     2,=F'80'
         SH    3,=H'5'
         LH    1,CHAINNBR
         CH    1,=H'13'
         BNL   P#PF22@1
         LA    1,1
         B     P#PF22@5
P#PF22@1 EQU   *
         LH    1,CHAINIDX
         CH    1,=H'13'
         BNL   P#PF22@4
         CLC   CHAINNBR,=Y(CHAINMAX)
         BE    P#PF22@2
         LA    1,1
         B     P#PF22@5
P#PF22@2 EQU   *
         LA    1,CHAINMAX(1)
P#PF22@4 EQU   *
         SH    1,=H'12'
P#PF22@5 EQU   *
         AR    1,3
         CH    1,CHAINNBR
         BNH   *+8
         LH    1,CHAINNBR
         STH   1,CHAINIDX
         B     P#PF22@7
P#PF22@6 EQU   *
         MVC   CHAINIDX,=H'1'
P#PF22@7 EQU   *
         GETCHN 1
         MVC   ADDRESS,0(1)
         XC    COFFSET,COFFSET
P#PF22@X EQU   *
         L     15,=V(DISPLAY)
         BR    15
         SPACE 3
         ENTRY P#PF23
P#PF23   EQU   *
         AIF   (&MVS).MVSP31
         BALR  7,0
         AGO   .MVSP32
.MVSP31  ANOP
         BASR  7,0
.MVSP32  ANOP
         LA    15,*-PFKEYS
         SR    7,15
         MVC   CHAINIDX,CHAINNBR
         GETCHN 1
         MVC   ADDRESS,0(1)
         XC    COFFSET,COFFSET
P#PF23@X EQU   *
         L     15,=V(DISPLAY)
         BR    15
         SPACE 3
         ENTRY P#PF24
P#PF24   EQU   *
         AIF   (&MVS).MVSP27
         BALR  7,0
         AGO   .MVSP28
.MVSP27  ANOP
         BASR  7,0
.MVSP28  ANOP
         LA    15,*-PFKEYS
         SR    7,15
         LH    1,EIBCPOSN
         ST    1,OFFSET2
         CSR2MEM OFFSET2,OFFSET,OFFSET3
         L     1,OFFSET
         CH    1,=H'0'
         BL    P#PF24@X
         CH    1,=H'256'
         BH    P#PF24@X
         L     1,ADDRESS
         A     1,COFFSET
         A     1,OFFSET
         MVC   ADDRESS,0(1)
         MVI   ADDRESS,X'00'           24 BIT ADDRESSING
*<=====  NI    ADDRESS,X'FF'-X'80'     31 BIT ADDRESSING
         BUMP 1,ADDRESS
         XC    COFFSET,COFFSET
P#PF24@X EQU   *
         L     15,=V(DISPLAY)
         BR    15
         SPACE 3
PREG13   DS    F
PSVAREA  DS    18F
         LTORG
         EJECT
         MEND
         MACRO
         FRED2
         GBLB  &B2SF,&H2CF,&H2DF,&ORF,&ORHF,&GINF,&C2HF,&MVS
         GBLC  &CS,&VERS
DISPLAY  CSECT
&B2SF    SETB  0
&H2CF    SETB  0
&H2DF    SETB  0
&GINF    SETB  0
&ORF     SETB  0
&ORHF    SETB  0
&C2HF    SETB  0
&CS      SETC  '1'
         AIF   (&MVS).MVS9
         BALR  7,0
         AGO   .MVS10
.MVS9    ANOP
         BASR  7,0
.MVS10   ANOP
         USING *,7
         OC    EIBTRMID,EIBTRMID
         BZ    DRETURN
         LA    13,DSPSAVE
         LA    6,ATTR
         DROP  10
         USING ATTRTAB,6
         EXEC CICS GETMAIN SET(3) LENGTH(MAXLEN) INITIMG(X'00')
         ST    3,@SCR
         OC    ECURSOR,ECURSOR
         BZ    *+18
         MVC   0(4,3),ECURSOR
         LA    3,4(3)
         B     DISP@1
         CURSORX 3,2,3
         B     DISP@1
DATE     DS    CL8
TIME     DS    CL8
TEST1    DS    CL4
TEST2    DS    CL4
TITLE    DS    CL14
DISP@1   EQU   *
         OUTFLDX 1,1,3,DFHBMASK,EIBTRNID,4
         TM    CMDSW,VERIFIED
         BNO   *+14
         MVC   TITLE,=CL14' ACCESS MEMORY'
         B     *+10
         MVC   TITLE,=CL14'DISPLAY MEMORY'
         OUTFLDX 1,27,3,DFHBMASB,TITLE,14
         EXEC CICS ASSIGN APPLID(APPLID)
         EXEC CICS ASKTIME ABSTIME(ABSTIME)
         EXEC CICS FORMATTIME ABSTIME(ABSTIME) TIME(TIME) TIMESEP      X
               DDMMYY(DATE) DATESEP('/')
*        HW2DEC4 CHAINIDX,TEST1
*        OUTFLDX 1,50,3,DFHBMASK,TEST1,4
*        HW2DEC4 CHAINNBR,TEST2
*        OUTFLDX 2,50,3,DFHBMASK,TEST2,4
         OUTFLDX 1,62,3,DFHBMASK,APPLID,8
         OUTFLDX 2,62,3,DFHBMASK,EIBTRMID,4
         OUTFLDX 1,71,3,DFHBMASK,DATE,8
         OUTFLDX 2,71,3,DFHBMASK,TIME,8
         TM    CMDSW,PASSWORD
         BNO   DISP@2
         OUTFLDX 3,1,3,DFHBMDAR,ECMD,70
         B     DISP@3
DISP@2   EQU   *
         OUTFLDX 3,1,3,DFHBMUNP,ECMD,70
DISP@3   EQU   *
         OUTSF  3,DFHBMASK
         OUTFLDX 4,1,3,DFHBMASB,EMSG,78
         L     1,ADDRESS
         OC    COFFSET,COFFSET
         BZ    DISP@4
         OUTFLDX 5,1,3,DFHBMASB
         OUTREG 1,3
         B     DISP@5
DISP@4   EQU   *
         OUTFLDX 5,1,3,X'7C'
DISP@5   EQU   *
         OUTFLDX 5,71,3,DFHBMASK,'CHAIN'
         SPACE 3
         A     1,COFFSET
         LR    2,1
         LA    4,6
         MVC   OFFSET,COFFSET
         LA    10,16
LP1      EQU   *
         LA    5,1
         OUTFLD 4,5,3,DFHBMASK
         OUTREG 1,3
         LA    5,10
         OUTFLD 4,5,3,DFHBMASB
         FW2CHRN OFFSET,3,11
         LA    11,4
         LA    5,17
LP2      EQU   *
         OUTFLD 4,5,3,DFHBMUNP
LP2@2    EQU   *
         HEX2CHR 2,3,4
         OUTSF 3,X'F0'
         LA    5,9(5)
         LA    2,4(2)
         BCT   11,LP2
         LA    5,1(5)
         OUTFLD 4,5,3,DFHBMASK
         HEX2DSP 1,3,16
         LA    1,16(1)
         LA    4,1(4)
         L     11,OFFSET
         A     11,=F'16'
         ST    11,OFFSET
         BCT   10,LP1
         L     15,=V(SENDPFK)
         BR    15
         SPACE 3
DRETURN  EQU   *
         EXEC CICS RETURN
MAXLEN   DC    Y(3000)
ABSTIME  DS    D
         LTORG
         EJECT
         MEND
         MACRO
         FRED3
         GBLB  &B2SF,&H2CF,&H2DF,&ORF,&ORHF,&GINF,&C2HF,&MVS
         GBLC  &CS,&VERS
SENDPFK  CSECT
&B2SF    SETB  0
&H2CF    SETB  0
&H2DF    SETB  0
&GINF    SETB  0
&ORF     SETB  0
&ORHF    SETB  0
&C2HF    SETB  0
&CS      SETC  '2'
         SPACE 4
         STM   14,12,12(13)
         AIF   (&MVS).MVS11
         BALR  7,0
         AGO   .MVS12
.MVS11   ANOP
         BASR  7,0
.MVS12   ANOP
         USING *,7
         LA    4,6
         LH    1,CHAINNBR
         CH    1,=H'13'
         BNL   CHAINI1
         LA    1,1
         B     CHAINI5
CHAINI1  EQU   *
         LH    1,CHAINIDX
         CH    1,=H'13'
         BNL   CHAINI4
         CLC   CHAINNBR,=Y(CHAINMAX)
         BE    CHAINI2
         LA    1,1
         B     CHAINI5
CHAINI2  EQU   *
         LA    1,CHAINMAX(1)
CHAINI4  EQU   *
         SH    1,=H'12'
CHAINI5  EQU   *
         LR    2,1
         BCTR  1,0
         MH    1,=H'4'
         LA    1,CHAIN(1)
         LA    10,16
CHAINLP  EQU   *
         LA    5,71
         CH    2,=Y(CHAINMAX)
         BNH   *+12
         LA    2,1
         LA    1,CHAIN
         CH    2,CHAINIDX
         BE    CHAIN1
         OUTFLD 4,5,3,DFHBMASK
         B     CHAIN2
CHAIN1   EQU   *
         OUTFLD 4,5,3,DFHBMASB
CHAIN2   EQU   *
         OC    0(4,1),0(1)
         BZ    CHAIN3
         HEX2CHR 1,3,4
         B     CHAIN4
CHAIN3   EQU   *
         MVC   0(4,3),=CL4' '
         OUTSF 3,X'7C'
CHAIN4   EQU   *
         LA    1,4(1)
         LA    4,1(4)
         LA    2,1(2)
         BCT   10,CHAINLP
         SPACE 3
PFKS     EQU   *
         OUTFLDX 22,01,3,DFHBMASB,EDSP,78
         OUTFLDX 23,01,3,DFHBMASB,'CLEAR'
         OUTFLDX 23,07,3,DFHBMASK,'TO EXIT'
         OUTFLDX 23,21,3,DFHBMASB,'PF5'
         OUTFLDX 23,27,3,DFHBMASK,'FIND ANOTHER'
         OUTFLDX 23,41,3,DFHBMASB,'PF7'
         OUTFLDX 23,47,3,DFHBMASK,'BACKWARD'
         OUTFLDX 23,61,3,DFHBMASB,'PF8'
         OUTFLDX 23,67,3,DFHBMASK,'FORWARD'
         OUTFLDX 24,01,3,DFHBMASB,'PF9'
         OUTFLDX 24,07,3,DFHBMASK,'CSA ADDRESS'
         OUTFLDX 24,21,3,DFHBMASB,'PF10'
         OUTFLDX 24,27,3,DFHBMASK,'UP CHAIN'
         OUTFLDX 24,41,3,DFHBMASB,'PF11'
         OUTFLDX 24,47,3,DFHBMASK,'DOWN CHAIN'
         OUTFLDX 24,61,3,DFHBMASB,'PF12'
         OUTFLDX 24,67,3,DFHBMASK,'LOAD ADDRESS'
         MVI   EDSP,C' '
         MVC   EDSP+1(L'EDSP-1),EDSP
         S     3,@SCR
         STH   3,SCRLEN
         L     3,@SCR
         MVC   PADDRESS,ADDRESS
         MVC   POFFSET,COFFSET
         TM    CMDSW,NOERASE
         BNO   SENDNC
         EXEC CICS SEND FROM(0(3)) LENGTH(SCRLEN)
         EXEC CICS RETURN TRANSID(EIBTRNID) COMMAREA(COMM)             X
               LENGTH(=Y(COMML))
SENDNC   EQU   *
         OI    CMDSW,NOERASE
         EXEC CICS SEND FROM(0(3)) LENGTH(SCRLEN) ERASE
         EXEC CICS RETURN TRANSID(EIBTRNID) COMMAREA(COMM)             X
               LENGTH(=Y(COMML))
         LTORG
         EJECT
         MEND
         MACRO
         FRED4
         GBLB  &B2SF,&H2CF,&H2DF,&ORF,&ORHF,&GINF,&C2HF,&MVS
         GBLC  &CS,&VERS
CMDS     CSECT
&B2SF    SETB  0
&H2CF    SETB  0
&H2DF    SETB  0
&GINF    SETB  0
&ORF     SETB  0
&ORHF    SETB  0
&C2HF    SETB  0
&CS      SETC  '3'
         SPACE 3
         STM   14,12,12(13)
         AIF   (&MVS).MVS13
         BALR  7,0
         AGO   .MVS14
.MVS13   ANOP
         BASR  7,0
.MVS14   ANOP
         USING *,7
CMDBASE  EQU   *
         USING ATTRTAB,10
         TM    FINDSW,REFIND
         BO    P#FIND@0
         LA    3,CMDTAB
         USING CMDTABDS,3
         LEFT  4,FLDLEN
         OC    FLDLEN,FLDLEN
         BZ    P#CMD@X
         TM    CMDSW,PASSWORD
         BNO   CMDSTACK
*        NC    0(7,4),TEMP1
*        OC    0(7,4),TEMP2
         CLC   0(7,4),CMDID
         BE    *+14
         MVC   0(7,4),=CL7' '
         B     P#CMD@E
         NI    CMDSW,X'FF'-PASSWORD
         OI    CMDSW,VERIFIED
         MVI   ECMD,C'_'
         MVC   ECMD+1(L'ECMD-1),ECMD
         B     P#CMD@X
CMDSTACK EQU   *
         LH    2,PECMDIDX
         MH    2,=Y(L'ECMD)
         LA    2,PECMD(2)
         MVI   0(2),C'_'
         MVC   1(L'ECMD-1,2),0(2)
         LH    5,FLDLEN
         BCTR  5,0
         EX    5,PECMDMV
         MVC   CEMTCMD,0(2)
         LH    2,PECMDIDX
         LA    2,1(2)
         CH    2,=Y(PECMDMX)
         BL    *+6
         XR    2,2
         STH   2,PECMDIDX
         STH   2,PECMDCX
         B     CMDSTRT
PECMDMV  MVC   0(*-*,2),0(4)
CMDSTRT  EQU   *
         ST    4,@CMD
         MVC   CMDLENSV,FLDLEN
         LA    15,CMDLENSV
         XR    6,6
         LA    3,CMDTAB
         USING CMDTABDS,3
         LA    5,CMDTABN
CMDLOOP  EQU   *
         IC    6,CMDLEN
         BCTR  6,0
         EX    6,CMDCOMP
         BNE   CMDBUMP
         LA    11,1(6,4)
         CLI   0(11),C' '
         BE    CMDAUTH
         CLI   0(11),C'='
         BE    CMDAUTH
         CLI   0(11),C';'
         BE    CMDAUTH
         CLI   0(11),C'_'
         BE    CMDAUTH
         CLI   0(11),X'00'
         BE    CMDAUTH
         B     CMDBUMP
CMDAUTH  EQU   *
         TM    CMDPARMS,VERIFIED
         BNO   CMDPROC
         TM    CMDSW,VERIFIED
         BO    CMDPROC
         MVC   EMSG,=CL78' '
         MVC   EMSG(34),=C'NOT AVAILABLE IN DISPLAY ONLY MODE'
         B     P#CMD@E
CMDPROC  EQU   *
         LH    5,FLDLEN
         LA    6,1(6)
         LA    4,0(6,4)
         SR    5,6
         STH   5,FLDLEN
         TM    CMDPARMS,PARMS
         BNO   CMDGO
         LEFT  4,FLDLEN
CMDGET   EQU   *
         CMDVAR 4,2,5,FLDLEN,CMDOUT,CMDOLEN
         OC    CMDOLEN,CMDOLEN
         BZ    CMDERR
CMDGO    EQU   *
         L     15,CMDCSECT
         AH    15,CMDOFF
         BR    15
CMDBUMP  EQU   *
         LA    3,CMDTABL(3)
         BCT   5,CMDLOOP
CMDERR   EQU   *
         MVC   EMSG,=CL78' '
         MVC   EMSG(15),=C'INVALID COMMAND'
         B     P#CMD@E
         SPACE 4
P#CMD    EQU   *
P#FIND   EQU   *
         OI    FINDSW,ALLOWRF
         MVC   FINDSTR,CMDOUT
         MVC   FINDLEN,CMDOLEN
         L     1,ADDRESS
         A     1,COFFSET
         ST    1,RFADDR
P#FIND@0 EQU   *
         L     1,RFADDR
         LH    2,FINDLEN
         BCTR  2,0
         L     3,=F'65536'
P#FIND@1 EQU   *
         EX    2,CMDFIND
         BE    P#FIND@2
         LA    1,1(1)
         BCT   3,P#FIND@1
         ST    1,RFADDR
         MVC   EMSG,=CL78' '
         MVC   EMSG(25),=C'SEARCH ARGUMENT NOT FOUND'
         TM    FINDSW,REFIND
         BO    P#CMD@X
         B     P#CMD@E2
P#FIND@2 EQU   *
         XC    COFFSET,COFFSET
         ST    1,ADDRESS
         GETCHN 2
         ST    1,0(2)
         LA    1,1(1)
         ST    1,RFADDR
         TM    FINDSW,REFIND
         BO    P#CMD@X
         B     P#CMD@N
         SPACE 3
P#ADDR   EQU   *
         CLC   CMDOLEN,=H'8'
         BH    P#ADDR@E
         MVI   P#ADDR@A,X'F0'
         MVC   P#ADDR@A+1(L'P#ADDR@A-1),P#ADDR@A
         LA    1,L'P#ADDR@A
         SH    1,CMDOLEN
         LA    1,P#ADDR@A(1)
         LH    2,CMDOLEN
         BCTR  2,0
         EX    2,P#ADDR@M
         MVC   CMDOLEN,=H'8'
         LA    2,P#ADDR@A
         LA    5,ADDRESS
         CHR2HEX 2,5,CMDOLEN
         BNZ   P#ADDR@E
         BUMP  2,ADDRESS
         XC    COFFSET,COFFSET
         B     P#CMD@N
P#ADDR@E EQU   *
         MVC   EMSG,=CL78' '
         MVC   EMSG(15),=C'INVALID ADDRESS'
         B     P#CMD@E
P#ADDR@A DS    CL8
P#ADDR@M MVC   0(*-*,1),CMDOUT
         SPACE 3
P#OFF    EQU   *
         NI    OFFSW,X'FF'-NEGATIVE
         CLC   CMDOLEN,=H'6'
         BH    P#OFF@E
         BL    P#OFF@1
         CLI   CMDOUT,C'-'
         BNE   P#OFF@E
P#OFF@1  EQU   *
         LA    3,CMDOUT
         CLI   CMDOUT,C'-'
         BNE   P#OFF@2
         OI    OFFSW,NEGATIVE
         LA    3,1(3)
         LH    5,CMDOLEN
         BCTR  5,0
         STH   5,CMDOLEN
P#OFF@2  EQU   *
         MVI   P#OFF@A,X'F0'
         MVC   P#OFF@A+1(L'P#OFF@A-1),P#OFF@A
         LA    1,L'P#OFF@A
         SH    1,CMDOLEN
         LA    1,P#OFF@A(1)
         LH    2,CMDOLEN
         BCTR  2,0
         EX    2,P#OFF@M
         MVC   CMDOLEN,=H'8'
         LA    2,P#OFF@A
         LA    5,COFFSET
         CHR2HEX 2,5,CMDOLEN
         BNZ   P#OFF@E
         TM    OFFSW,NEGATIVE
         BNO   P#OFF@X
         L     5,COFFSET
         MH    5,=H'-1'
         ST    5,COFFSET
P#OFF@X  EQU   *
         L     1,ADDRESS
         A     1,COFFSET
         GETCHN 2
         ST    1,0(2)
         B     P#CMD@N
P#OFF@E  EQU   *
         MVC   EMSG,=CL78' '
         MVC   EMSG(14),=C'INVALID OFFSET'
         B     P#CMD@E
CMDTRT   DC    X'00'
OFFSW    DS    X
NEGATIVE EQU   X'80'
P#OFF@A  DS    CL8
P#OFF@M  MVC   0(*-*,1),0(3)
         SPACE 3
P#BADDR  EQU   *
         L     1,ADDRESS
         A     1,COFFSET
         MVC   ADDRESS,0(1)
         MVI   ADDRESS,X'00'
         BUMP  2,ADDRESS
         XC    COFFSET,COFFSET
         B     P#CMD@N
         SPACE 3
P#BADDR3 EQU   *
         L     1,ADDRESS
         A     1,COFFSET
         MVC   ADDRESS,0(1)
         BUMP  2,ADDRESS
         XC    COFFSET,COFFSET
         B     P#CMD@N
         SPACE 3
P#PASS   EQU   *
         OI    CMDSW,PASSWORD
         NI    CMDSW,X'FF'-VERIFIED
         B     P#CMD@N
         SPACE 3
P#PROT   EQU   *
         NI    CMDSW,X'FF'-VERIFIED
         B     P#CMD@N
P#UNPROT   EQU   *
         OI    CMDSW,VERIFIED
         B     P#CMD@N
                                                                SPACE 3
         ENTRY P#CMD@E
         SPACE 3
P#CMD@E  EQU   *
         AIF   (&MVS).MVS15
         BALR  7,0
         AGO   .MVS16
.MVS15   ANOP
         BASR  7,0
.MVS16   ANOP
         LA    15,*-CMDBASE
         SR    7,15
         L     4,@CMD
         MVC   FLDLEN,CMDLENSV
         SETATTR OFFSET,DFHUNIMD
         LA    6,ECURSOR
         CURSORX 3,2,6
         LH    6,FLDLEN
         BCTR  6,0
         EX    6,CMDMOVE
         OC    EIBTRMID,EIBTRMID
         BNZ   P#CMD@X
         DC    X'0000'
         DC    C'FORCED ABEND - INVALID COMMAND'
         SPACE 3
         ENTRY P#CMD@E2
P#CMD@E2 EQU   *
         AIF   (&MVS).MVS17
         BALR  7,0
         AGO   .MVS18
.MVS17   ANOP
         BASR  7,0
.MVS18   ANOP
         LA    15,*-CMDBASE
         SR    7,15
         L     4,@CMD
         MVC   FLDLEN,CMDLENSV
         LA    6,ECURSOR
         CURSORX 3,2,6
         LH    6,FLDLEN
         BCTR  6,0
         EX    6,CMDMOVE
         OC    EIBTRMID,EIBTRMID
         BNZ   P#CMD@X
         DC    X'0000'
         DC    C'FORCED ABEND - INVALID COMMAND'
         SPACE 3
         ENTRY P#CMD@N
P#CMD@N  EQU   *
         AIF   (&MVS).MVS19
         BALR  7,0
         AGO   .MVS20
.MVS19   ANOP
         BASR  7,0
.MVS20   ANOP
         LA    15,*-CMDBASE
         SR    7,15
         LEFTC 4,FLDLEN
         OC    FLDLEN,FLDLEN
         BZ    P#CMD@X
         CLI   CMDEND,C'Y'
         BE    CMDSTRT
         B     CMDGET
P#CMD@X  EQU   *
         NI    FINDSW,X'FF'-REFIND
         LM    14,12,12(13)
         BR    14
         SPACE 3
CMDEND   DS    C
CMDCOMP  CLC   0(*-*,4),CMDID
CMDFIND  CLC   0(*-*,1),FINDSTR
CMDMOVE  MVC   ECMD(*-*),0(4)
         EJECT
CMDTAB   DS    0F
         COMMAND CMD=ADDRESS,LABEL=P#ADDR,CSECT=CMDS,                  X
               OPTION=PARMS
         COMMAND CMD=ABENDOFF,LABEL=P#ABENDF,CSECT=CMDS4
         COMMAND CMD=ABENDON,LABEL=P#ABENDO,CSECT=CMDS4
         COMMAND CMD=ADDR,LABEL=P#ADDR,CSECT=CMDS,                     X
               OPTION=PARMS
*<=====  COMMAND CMD=AEFI,LABEL=P#AEFI,CSECT=CMDS2
*<=====  COMMAND CMD=AEFX,LABEL=P#AEFX,CSECT=CMDS2
         COMMAND CMD=AFCB,LABEL=P#AFCB,CSECT=CMDS4
         COMMAND CMD=AICB,LABEL=P#AICB,CSECT=CMDS4
         COMMAND CMD=A,LABEL=P#ADDR,CSECT=CMDS,                        X
               OPTION=PARMS
         COMMAND CMD=BASE3,LABEL=P#BADDR3,CSECT=CMDS
         COMMAND CMD=BASE,LABEL=P#BADDR,CSECT=CMDS
         COMMAND CMD=B3,LABEL=P#BADDR3,CSECT=CMDS
         COMMAND CMD=B,LABEL=P#BADDR,CSECT=CMDS
*        COMMAND CMD=CEMTOFF,LABEL=P#XEMTFF,CSECT=CMDS4,               X
               OPTION=VERIFIED
*        COMMAND CMD=CEMTON,LABEL=P#XEMTON,CSECT=CMDS4,                X
               OPTION=VERIFIED
         COMMAND CMD=CEMT,LABEL=P#CEMT,CSECT=CMDS4,                    X
               OPTION=VERIFIED
         COMMAND CMD=CLOSE,LABEL=P#CLOSE,CSECT=CMDS4,                  X
               OPTION=PARMS+VERIFIED
         COMMAND CMD=CSA,LABEL=P#CSA,CSECT=CMDS2
         COMMAND CMD=CWA,LABEL=P#CWA,CSECT=CMDS2
         COMMAND CMD=DCT,LABEL=P#DCT,CSECT=CMDS2,                      X
               OPTION=PARMS
         COMMAND CMD=FIND,LABEL=P#FIND,CSECT=CMDS,                     X
               OPTION=PARMS
         COMMAND CMD=FCT,LABEL=P#FCT,CSECT=CMDS2,                      X
               OPTION=PARMS
         COMMAND CMD=F,LABEL=P#FIND,CSECT=CMDS,                        X
               OPTION=PARMS
         COMMAND CMD=INQPROG,LABEL=P#IPRG,CSECT=CMDS3,                 X
               OPTION=PARMS
         COMMAND CMD=IP,LABEL=P#IPRG,CSECT=CMDS3,                      X
               OPTION=PARMS
         COMMAND CMD=LOADHOLD,LABEL=P#LOADH,CSECT=CMDS3,               X
               OPTION=PARMS+VERIFIED
         COMMAND CMD=LOADMOD,LABEL=P#PPTL,CSECT=CMDS2,                 X
               OPTION=PARMS
         COMMAND CMD=LM,LABEL=P#PPTL,CSECT=CMDS2,                      X
               OPTION=PARMS
         COMMAND CMD=LH,LABEL=P#LOADH,CSECT=CMDS3,                     X
               OPTION=PARMS+VERIFIED
         COMMAND CMD=LOAD,LABEL=P#LOAD,CSECT=CMDS3,                    X
               OPTION=PARMS+VERIFIED
         COMMAND CMD=Q,LABEL=P#LOADM,CSECT=CMDS3,                      X
               OPTION=PARMS+VERIFIED
         COMMAND CMD=L,LABEL=P#LOAD,CSECT=CMDS3,                       X
               OPTION=PARMS+VERIFIED
         COMMAND CMD=NEWCOPY,LABEL=P#NEW,CSECT=CMDS3,                  X
               OPTION=PARMS+VERIFIED
         COMMAND CMD=NEW,LABEL=P#NEW,CSECT=CMDS3,                      X
               OPTION=PARMS+VERIFIED
         COMMAND CMD=N,LABEL=P#NEW,CSECT=CMDS3,                        X
               OPTION=PARMS+VERIFIED
         COMMAND CMD=OPEN,LABEL=P#OPEN,CSECT=CMDS4,                    X
               OPTION=PARMS+VERIFIED
         COMMAND CMD=OFFSET,LABEL=P#OFF,CSECT=CMDS,                    X
               OPTION=PARMS
         COMMAND CMD=OFF,LABEL=P#OFF,CSECT=CMDS,                       X
               OPTION=PARMS
         COMMAND CMD=O,LABEL=P#OFF,CSECT=CMDS,                         X
               OPTION=PARMS
         COMMAND CMD=PASSWORD,LABEL=P#PASS,CSECT=CMDS
         COMMAND CMD=PROTECT,LABEL=P#PROT,CSECT=CMDS
         COMMAND CMD=PASS,LABEL=P#PASS,CSECT=CMDS
         COMMAND CMD=PCTR,LABEL=P#PCTR,CSECT=CMDS2,                    X
               OPTION=PARMS
         COMMAND CMD=PCT,LABEL=P#PCT,CSECT=CMDS2,                      X
               OPTION=PARMS
         COMMAND CMD=PFT,LABEL=P#PFT,CSECT=CMDS2,                      X
               OPTION=PARMS
         COMMAND CMD=PPT,LABEL=P#PPT,CSECT=CMDS2,                      X
               OPTION=PARMS
         COMMAND CMD=RELEASE,LABEL=P#REL,CSECT=CMDS3,                  X
               OPTION=PARMS+VERIFIED
         COMMAND CMD=REL,LABEL=P#REL,CSECT=CMDS3,                      X
               OPTION=PARMS+VERIFIED
         COMMAND CMD=REFRESH,LABEL=P#REF,CSECT=CMDS3,                  X
               OPTION=PARMS+VERIFIED
         COMMAND CMD=REF,LABEL=P#REF,CSECT=CMDS3,                      X
               OPTION=PARMS+VERIFIED
         COMMAND CMD=R,LABEL=P#REL,CSECT=CMDS3,                        X
               OPTION=PARMS+VERIFIED
         COMMAND CMD=S,LABEL=P#SEND,CSECT=CMDS4,                       X
               OPTION=PARMS
         COMMAND CMD=SE,LABEL=P#SENDE,CSECT=CMDS4,                     X
               OPTION=PARMS
         COMMAND CMD=SEND,LABEL=P#SEND,CSECT=CMDS4,                    X
               OPTION=PARMS
         COMMAND CMD=SENDE,LABEL=P#SENDE,CSECT=CMDS4,                  X
               OPTION=PARMS
         COMMAND CMD=SETBASE,LABEL=P#SB,CSECT=CMDS2
         COMMAND CMD=SB,LABEL=P#SB,CSECT=CMDS2
         COMMAND CMD=TCTUA,LABEL=P#TCTUA,CSECT=CMDS2,                  X
               OPTION=PARMS
         COMMAND CMD=TCTN,LABEL=P#TCTN,CSECT=CMDS2,                    X
               OPTION=PARMS
         COMMAND CMD=TCTS,LABEL=P#TCTS,CSECT=CMDS2,                    X
               OPTION=PARMS
         COMMAND CMD=TCT,LABEL=P#TCT,CSECT=CMDS2,                      X
               OPTION=PARMS
         COMMAND CMD=UNPROT,LABEL=P#UNPROT,CSECT=CMDS
         COMMAND CMD=VER,LABEL=P#VER,CSECT=CMDS3
         COMMAND CMD=VERSION,LABEL=P#VER,CSECT=CMDS3
CMDTABN  EQU   (*-CMDTAB)/CMDTABL
         LTORG
TEMP1    DC    X'FBD2D1F9E5E8F2'
TEMP2    DC    X'8184445845A2A2'
         EJECT
         MEND
         MACRO
         FRED5
         GBLB  &B2SF,&H2CF,&H2DF,&ORF,&ORHF,&GINF,&C2HF,&MVS
         GBLC  &CS,&VERS
CMDS2    CSECT
         USING *,7
         ENTRY P#SB
P#SB     EQU   *
         AIF   (&MVS).SB1
         BALR  7,0
         AGO   .SB2
.SB1     ANOP
         BASR  7,0
.SB2     ANOP
         LA    15,*-CMDS2
         SR    7,15
         L     1,ADDRESS
         A     1,COFFSET
         ST    1,ADDRESS
         XC    COFFSET,COFFSET
         L     15,=V(P#CMD@N)
         BR    15
         SPACE 3
         ENTRY P#AEFI
P#AEFI   EQU   *
         AIF   (&MVS).MVSX1AI
         BALR  7,0
         AGO   .MVSX2AI
.MVSX1AI ANOP
         BASR  7,0
.MVSX2AI ANOP
         LA    15,*-CMDS2
         SR    7,15
         EXEC CICS ADDRESS CWA(1)
         L     1,X'20'(1)              TMT@
         L     1,X'18'(1)              LMT@
         L     1,X'1C0'(1)             INCLUSION LIST
         ST    1,ADDRESS
         BUMP  2,ADDRESS
         XC    COFFSET,COFFSET
         L     15,=V(P#CMD@N)
         BR    15
                                                                SPACE 3
         ENTRY P#AEFX
P#AEFX   EQU   *
         AIF   (&MVS).MVSX1AX
         BALR  7,0
         AGO   .MVSX2AX
.MVSX1AX ANOP
         BASR  7,0
.MVSX2AX ANOP
         LA    15,*-CMDS2
         SR    7,15
         EXEC CICS ADDRESS CWA(1)
         L     1,X'20'(1)              TMT@
         L     1,X'18'(1)              LMT@
         L     1,X'F8'(1)              EXCLUSION LIST
         ST    1,ADDRESS
         BUMP  2,ADDRESS
         XC    COFFSET,COFFSET
         L     15,=V(P#CMD@N)
         BR    15
                                                                SPACE 3
         ENTRY P#CSA
P#CSA    EQU   *
         AIF   (&MVS).MVSX1
         BALR  7,0
         AGO   .MVSX2
.MVSX1   ANOP
         BASR  7,0
.MVSX2   ANOP
         LA    15,*-CMDS2
         SR    7,15
         MVC   ADDRESS,@CSA
         BUMP  2,ADDRESS
         XC    COFFSET,COFFSET
         L     15,=V(P#CMD@N)
         BR    15
         SPACE 3
         ENTRY P#CWA
P#CWA    EQU   *
         AIF   (&MVS).MVSX3
         BALR  7,0
         AGO   .MVSX4
.MVSX3   ANOP
         BASR  7,0
.MVSX4   ANOP
         LA    15,*-CMDS2
         SR    7,15
         EXEC CICS ADDRESS CWA(1)
         ST    1,ADDRESS
         BUMP  2,ADDRESS
         XC    COFFSET,COFFSET
         L     15,=V(P#CMD@N)
         BR    15
         SPACE 3
         ENTRY P#PCT
P#PCT    EQU   *
         AIF   (&MVS).MVS21
         BALR  7,0
         AGO   .MVS22
.MVS21   ANOP
         BASR  7,0
.MVS22   ANOP
         LA    15,*-CMDS2
         SR    7,15
         MVC   REQNAME,=CL8'PCT'       REQUEST SERVICE
         MVC   REQACTN,=CL4' '         REQUEST ACTION
         BAL   14,CALL824P             CALL PROGRAM KPS824
         OC    @TABLE,@TABLE           TABLE ADDRESS RETURNED?
         BZ    P#PCT@E                 NO, PROCESS AS ERROR
         XC    COFFSET,COFFSET
         MVC   ADDRESS,@TABLE
         BUMP  2,ADDRESS
         L     15,=V(P#CMD@N)
         BR    15
P#PCT@E  EQU   *
         MVC   EMSG,=CL78' '
         MVC   EMSG(27),=C'TRANSACTION ENTRY NOT FOUND'
         L     15,=V(P#CMD@E)
         BR    15
         SPACE 4
         ENTRY P#PPT
P#PPT    EQU   *
         AIF   (&MVS).MVS23
         BALR  7,0
         AGO   .MVS24
.MVS23   ANOP
         BASR  7,0
.MVS24   ANOP
         LA    15,*-CMDS2
         SR    7,15
         MVC   REQNAME,=CL8'PPT'       REQUEST SERVICE
         MVC   REQACTN,=CL4' '         REQUEST ACTION
         BAL   14,CALL824P             CALL PROGRAM KPS824
         OC    @TABLE,@TABLE           TABLE ADDRESS RETURNED?
         BZ    P#PPT@E                 NO, PROCESS AS ERROR
         XC    COFFSET,COFFSET
         MVC   ADDRESS,@TABLE
         BUMP  2,ADDRESS
         L     15,=V(P#CMD@N)
         BR    15
P#PPT@E  EQU   *
         MVC   EMSG,=CL78' '
         MVC   EMSG(23),=C'PROGRAM ENTRY NOT FOUND'
         L     15,=V(P#CMD@E)
         BR    15
         SPACE 4
P#PPTL   EQU   *
         AIF   (&MVS).MVS25
         BALR  7,0
         AGO   .MVS26
.MVS25   ANOP
         BASR  7,0
.MVS26   ANOP
         LA    15,*-CMDS2
         SR    7,15
         MVC   REQNAME,=CL8'PPT'       REQUEST SERVICE
         MVC   REQACTN,=CL4' '         REQUEST ACTION
         BAL   14,CALL824P             CALL PROGRAM KPS824
         OC    @TABLE,@TABLE           TABLE ADDRESS RETURNED?
         BZ    P#PPTL@E                NO, PROCESS AS ERROR
         L     2,@TABLE
         USING DFHPPTDS,PPTCBAR
         ICM   1,B'1111',PPTCSA
         BZ    P#PPTL@1
         ST    1,ADDRESS
         OC    PPTRCC,PPTRCC
         BNZ   *+10
         MVC   EMSG,=CL78' '
         MVC   EMSG(37),=C'WARNING - LOAD MODULE IS NOT RESIDENT'
         XC    COFFSET,COFFSET
         BUMP  2,ADDRESS
         L     15,=V(P#CMD@N)
         BR    15
P#PPTL@1 EQU   *
         MVC   EMSG,=CL78' '
         MVC   EMSG(28),=C'PROGRAM NOT LOADED IN MEMORY'
         L     15,=V(P#CMD@E)
         BR    15
P#PPTL@E EQU   *
         MVC   EMSG,=CL78' '
         MVC   EMSG(23),=C'PROGRAM ENTRY NOT FOUND'
         L     15,=V(P#CMD@E)
         BR    15
         SPACE 4
P#PFT    EQU   *
         AIF   (&MVS).MVS27
         BALR  7,0
         AGO   .MVS28
.MVS27   ANOP
         BASR  7,0
.MVS28   ANOP
         LA    15,*-CMDS2
         SR    7,15
         MVC   REQNAME,=CL8'PFT'       REQUEST SERVICE
         MVC   REQACTN,=CL4' '         REQUEST ACTION
         BAL   14,CALL824P             CALL PROGRAM KPS824
         OC    @TABLE,@TABLE           TABLE ADDRESS RETURNED?
         BZ    P#PFT@E                 NO, PROCESS AS ERROR
         XC    COFFSET,COFFSET
         MVC   ADDRESS,@TABLE
         BUMP  2,ADDRESS
         L     15,=V(P#CMD@N)
         BR    15
P#PFT@E  EQU   *
         MVC   EMSG,=CL78' '
         MVC   EMSG(19),=C'PFT ENTRY NOT FOUND'
         L     15,=V(P#CMD@E)
         BR    15
         SPACE 4
P#DCT    EQU   *
         AIF   (&MVS).MVS29
         BALR  7,0
         AGO   .MVS30
.MVS29   ANOP
         BASR  7,0
.MVS30   ANOP
         LA    15,*-CMDS2
         SR    7,15
         MVC   REQNAME,=CL8'DCT'       REQUEST SERVICE
         MVC   REQACTN,=CL4' '         REQUEST ACTION
         BAL   14,CALL824P             CALL PROGRAM KPS824
         OC    @TABLE,@TABLE           TABLE ADDRESS RETURNED?
         BZ    P#DCT@E                 NO, PROCESS AS ERROR
         XC    COFFSET,COFFSET
         MVC   ADDRESS,@TABLE
         BUMP  2,ADDRESS
         L     15,=V(P#CMD@N)
         BR    15
P#DCT@E  EQU   *
         MVC   EMSG,=CL78' '
         MVC   EMSG(36),=C'TRANSIENT DATA QUEUE ENTRY NOT FOUND'
         L     15,=V(P#CMD@E)
         BR    15
         SPACE 4
P#FCT    EQU   *
         AIF   (&MVS).MVS31
         BALR  7,0
         AGO   .MVS32
.MVS31   ANOP
         BASR  7,0
.MVS32   ANOP
         LA    15,*-CMDS2
         SR    7,15
         MVC   REQNAME,=CL8'FCT'       REQUEST SERVICE
         MVC   REQACTN,=CL4' '         REQUEST ACTION
         BAL   14,CALL824P             CALL PROGRAM KPS824
         OC    @TABLE,@TABLE           TABLE ADDRESS RETURNED?
         BZ    P#FCT@E                 NO, PROCESS AS ERROR
         XC    COFFSET,COFFSET
         MVC   ADDRESS,@TABLE
         BUMP  2,ADDRESS
         L     15,=V(P#CMD@N)
         BR    15
P#FCT@E  EQU   *
         MVC   EMSG,=CL78' '
         MVC   EMSG(20),=C'FILE ENTRY NOT FOUND'
         L     15,=V(P#CMD@E)
         BR    15
         SPACE 4
P#TCT    EQU   *
         AIF   (&MVS).MVS33
         BALR  7,0
         AGO   .MVS34
.MVS33   ANOP
         BASR  7,0
.MVS34   ANOP
         LA    15,*-CMDS2
         SR    7,15
         MVC   REQNAME,=CL8'TCT'       REQUEST SERVICE
         MVC   REQACTN,=CL4' '         REQUEST ACTION
         BAL   14,CALL824P             CALL PROGRAM KPS824
         OC    @TABLE,@TABLE           TABLE ADDRESS RETURNED?
         BZ    P#TCT@E                 NO, PROCESS AS ERROR
         XC    COFFSET,COFFSET
         MVC   ADDRESS,@TABLE
         BUMP  2,ADDRESS
         L     15,=V(P#CMD@N)
         BR    15
P#TCT@E  EQU   *
         MVC   EMSG,=CL78' '
         MVC   EMSG(24),=C'TERMINAL ENTRY NOT FOUND'
         L     15,=V(P#CMD@E)
         BR    15
         SPACE 4
P#TCTUA  EQU   *
         AIF   (&MVS).MVS33X
         BALR  7,0
         AGO   .MVS34X
.MVS33X  ANOP
         BASR  7,0
.MVS34X  ANOP
         LA    15,*-CMDS2
         SR    7,15
         MVC   REQNAME,=CL8'TCTUA'     REQUEST SERVICE
         MVC   REQACTN,=CL4'TERM'      REQUEST ACTION
         BAL   14,CALL824P             CALL PROGRAM KPS824
         OC    @TABLE2,@TABLE2         2NDARY ADDRESS RETURNED?
         BZ    P#TCTU@E                NO, PROCESS AS ERROR
         XC    COFFSET,COFFSET
*<=====  MVC   ADDRESS,@TABLE
         MVC   ADDRESS,@TABLE2
         BUMP  2,ADDRESS
         L     15,=V(P#CMD@N)
         BR    15
P#TCTU@E  EQU   *
         MVC   EMSG,=CL78' '
         MVC   EMSG(29),=C'TERMINAL USER ENTRY NOT FOUND'
         L     15,=V(P#CMD@E)
         BR    15
         SPACE 4
P#TCTN   EQU   *
         AIF   (&MVS).MVS35
         BALR  7,0
         AGO   .MVS36
.MVS35   ANOP
         BASR  7,0
.MVS36   ANOP
         LA    15,*-CMDS2
         SR    7,15
         MVC   REQNAME,=CL8'TCTN'      REQUEST SERVICE
         MVC   REQACTN,=CL4' '         REQUEST ACTION
         BAL   14,CALL824P             CALL PROGRAM KPS824
         OC    @TABLE,@TABLE           TABLE ADDRESS RETURNED?
         BZ    P#TCTN@E                NO, PROCESS AS ERROR
         XC    COFFSET,COFFSET
         MVC   ADDRESS,@TABLE
         BUMP  2,ADDRESS
         L     15,=V(P#CMD@N)
         BR    15
P#TCTN@E EQU   *
         MVC   EMSG,=CL78' '
         MVC   EMSG(24),=C'TERMINAL ENTRY NOT FOUND'
         L     15,=V(P#CMD@E)
         BR    15
         SPACE 4
P#TCTS   EQU   *
         AIF   (&MVS).MVS37
         BALR  7,0
         AGO   .MVS38
.MVS37   ANOP
         BASR  7,0
.MVS38   ANOP
         LA    15,*-CMDS2
         SR    7,15
         MVC   REQNAME,=CL8'TCTS'      REQUEST SERVICE
         MVC   REQACTN,=CL4' '         REQUEST ACTION
         BAL   14,CALL824P             CALL PROGRAM KPS824
         OC    @TABLE,@TABLE           TABLE ADDRESS RETURNED?
         BZ    P#TCTS@E                NO, PROCESS AS ERROR
         XC    COFFSET,COFFSET
         MVC   ADDRESS,@TABLE
         BUMP  2,ADDRESS
         L     15,=V(P#CMD@N)
         BR    15
P#TCTS@E EQU   *
         MVC   EMSG,=CL78' '
         MVC   EMSG(24),=C'TERMINAL ENTRY NOT FOUND'
         L     15,=V(P#CMD@E)
         BR    15
         SPACE 4
P#PCTR   EQU   *
         AIF   (&MVS).MVS39
         BALR  7,0
         AGO   .MVS40
.MVS39   ANOP
         BASR  7,0
.MVS40   ANOP
         LA    15,*-CMDS2
         SR    7,15
         MVC   REQNAME,=CL8'RPCT'      REQUEST SERVICE
         MVC   REQACTN,=CL4' '         REQUEST ACTION
         BAL   14,CALL824P             CALL PROGRAM KPS824
         OC    @TABLE,@TABLE           TABLE ADDRESS RETURNED?
         BZ    P#PCTR@E                NO, PROCESS AS ERROR
         XC    COFFSET,COFFSET
         MVC   ADDRESS,@TABLE
         BUMP  2,ADDRESS
         L     15,=V(P#CMD@N)
         BR    15
P#PCTR@E EQU   *
         MVC   EMSG,=CL78' '
         MVC   EMSG(20),=C'PCTR ENTRY NOT FOUND'
         L     15,=V(P#CMD@E)
         BR    15
         SPACE 4
CALL824P DS    0H
         ST    14,SAVE14               SAVE RETURN ADDRESS
         LA    6,PARMBLK               KPS0824 PARAMETER BLOCK
         USING P824DS,6                ADDRESSABILITY
         LA    0,@CSA                  PTR TO CSA ADDRESS
         ST    0,PARM                  PTR TO CSA ADDRESS
         ST    6,PARM+4                PTR TO KPS0824 PARM
         LA    1,PARM                  PARM BLOCK FOR CALL
         MVC   P824NME,CMDOUT          MOVE COMMAND NAME
         MVC   P824REQ,REQNAME         REQUEST SERVICE
         MVC   P824ACT,REQACTN         REQUEST ACTION
         ST    13,SAVESUB1+4           SAVE R13
         LA    13,SAVESUB1             POINT R13 TO MY SAVE AREA
         CALL  KPS0824                 PROCESS REQUEST
         L     13,SAVESUB1+4           RESTORE R13
         MVC   @TABLE,P824VALA         RESULTANT ADDRESS
         MVC   @TABLE2,P824RSPA        RESULTANT RESPONSE
         DROP  6                       RELINQUISH ADDRESSABILITY
         L     6,@TABLE                RESTORE WORK REGISTER
         L     14,SAVE14               RESTORE RETURN ADDRESS
         BR    14                      RETURN TO CALLER
         SPACE 4
         LTORG
         EJECT
         MEND
         MACRO
         FRED6
         GBLB  &B2SF,&H2CF,&H2DF,&ORF,&ORHF,&GINF,&C2HF,&MVS
         GBLC  &CS,&VERS
CMDS3    CSECT
         USING *,7
P#VER    EQU   *
         AIF   (&MVS).MVS41
         BALR  7,0
         AGO   .MVS42
.MVS41   ANOP
         BASR  7,0
.MVS42   ANOP
         LA    15,*-CMDS3
         SR    7,15
         EXEC CICS INQUIRE SYSTEM RELEASE(SYSREL) NOHANDLE
         CLC   EIBRESP,DFHRESP(NORMAL)
         BE    P#VER@1
         MVC   EMSG,=CL78' '
         MVC   EMSG(36),=C'INQUIRY OF SYSTEM INFORMATION FAILED'
         L     15,=V(P#CMD@E)
         BR    15
P#VER@1  EQU   *
         MVI   EMSG,C' '
         MVC   EMSG+1(L'EMSG-1),EMSG
         MVC   EMSG(13),=C'CICS VERSION('
         MVC   EMSG+13(4),SYSREL
         MVI   EMSG+17,C')'
         L     15,=V(P#CMD@N)
         BR    15
SYSREL   DS    CL4
         SPACE 4
P#IPRG   EQU   *
         AIF   (&MVS).MVS43
         BALR  7,0
         AGO   .MVS44
.MVS43   ANOP
         BASR  7,0
.MVS44   ANOP
         LA    15,*-CMDS3
         SR    7,15
         EXEC CICS INQUIRE PROGRAM(CMDOUT) RESCOUNT(RESCOUNT)          X
               USECOUNT(USECOUNT) NOHANDLE
         CLC   EIBRESP,DFHRESP(NORMAL)
         BE    P#IPRG@1
         MVC   EMSG,=CL78' '
         MVC   EMSG(37),=C'INQUIRY OF PROGRAM INFORMATION FAILED'
         L     15,=V(P#CMD@E)
         BR    15
P#IPRG@1 EQU   *
         MVI   EMSG,C' '
         MVC   EMSG+1(L'EMSG-1),EMSG
         MVC   EMSG(8),CMDOUT
         MVC   EMSG+8(12),=C' - RESCOUNT('
         FW2DEC4 RESCOUNT,EMSG+20
         MVC   EMSG+24(12),=C')  USECOUNT('
         FW2DEC4 USECOUNT,EMSG+36
         MVI   EMSG+40,C')'
         L     15,=V(P#CMD@N)
         BR    15
USECOUNT DS    F
RESCOUNT DS    F
LOADADDR DS    F
         SPACE 4
P#LOAD   EQU   *
         AIF   (&MVS).MVS45
         BALR  7,0
         AGO   .MVS46
.MVS45   ANOP
         BASR  7,0
.MVS46   ANOP
         LA    15,*-CMDS3
         SR    7,15
         EXEC CICS LOAD PROGRAM(CMDOUT) ENTRY(1) NOHANDLE
         CLC   EIBRESP,DFHRESP(NORMAL)
         BE    P#LOAD@1
         MVC   EMSG,=CL78' '
         MVC   EMSG(11),=C'LOAD FAILED'
         L     15,=V(P#CMD@E)
         BR    15
P#LOAD@1 EQU   *
         ST    1,ADDRESS
         BUMP  2,ADDRESS
         XC    COFFSET,COFFSET
         L     15,=V(P#CMD@N)
         BR    15
         SPACE 4
P#LOADM  EQU   *
         BASR  7,0
         LA    15,*-CMDS3
         SR    7,15
         CSVQUERY INEPNAME=CMDOUT,OUTLOADPT=LOADADDR
         OC    LOADADDR,LOADADDR
         BNZ   P#LOADM1
         LOAD  EPLOC=CMDOUT,ERRET=P#LOADME
         ST    0,LOADADDR
P#LOADM1 EQU   *
         MVC   ADDRESS,LOADADDR
         BUMP  2,ADDRESS
         XC    COFFSET,COFFSET
         L     15,=V(P#CMD@N)
         BR    15
P#LOADME EQU   *
         MVC   EMSG,=CL78' '
         MVC   EMSG(12),=C'QUERY FAILED'
         L     15,=V(P#CMD@E)
         BR    15
         SPACE 4
P#LOADH  EQU   *
         AIF   (&MVS).MVS47
         BALR  7,0
         AGO   .MVS48
.MVS47   ANOP
         BASR  7,0
.MVS48   ANOP
         LA    15,*-CMDS3
         SR    7,15
         EXEC CICS LOAD PROGRAM(CMDOUT) ENTRY(1) HOLD NOHANDLE
         CLC   EIBRESP,DFHRESP(NORMAL)
         BE    P#LOADH1
         MVC   EMSG,=CL78' '
         MVC   EMSG(16),=C'LOAD HOLD FAILED'
         L     15,=V(P#CMD@E)
         BR    15
P#LOADH1 EQU   *
         ST    1,ADDRESS
         BUMP  2,ADDRESS
         XC    COFFSET,COFFSET
         L     15,=V(P#CMD@N)
         BR    15
         SPACE 4
P#REL    EQU   *
         AIF   (&MVS).MVS49
         BALR  7,0
         AGO   .MVS50
.MVS49   ANOP
         BASR  7,0
.MVS50   ANOP
         LA    15,*-CMDS3
         SR    7,15
         EXEC CICS INQUIRE PROGRAM(CMDOUT) RESCOUNT(RESCOUNT) NOHANDLE
         CLC   EIBRESP,DFHRESP(NORMAL)
         BE    P#REL@1
         MVC   EMSG,=CL78' '
         MVC   EMSG(14),=C'RELEASE FAILED'
         L     15,=V(P#CMD@E)
         BR    15
P#REL@1  EQU   *
         OC    RESCOUNT,RESCOUNT
         BNZ   P#REL@2
         MVC   EMSG,=CL78' '
         MVC   EMSG(35),=C'PROGRAM NOT RELEASED - NOT RESIDENT'
         L     15,=V(P#CMD@E)
         BR    15
P#REL@2  EQU   *
         EXEC CICS RELEASE PROGRAM(CMDOUT) NOHANDLE
         CLC   EIBRESP,DFHRESP(NORMAL)
         BE    P#REL@3
         MVC   EMSG,=CL78' '
         MVC   EMSG(14),=C'RELEASE FAILED'
         L     15,=V(P#CMD@E)
         BR    15
P#REL@3  EQU   *
         L     15,=V(P#PPT)
         BR    15
         SPACE 4
P#REF    EQU   *
         AIF   (&MVS).MVS51
         BALR  7,0
         AGO   .MVS52
.MVS51   ANOP
         BASR  7,0
.MVS52   ANOP
         LA    15,*-CMDS3
         SR    7,15
*        L     SYTCABAR,TCASYAA
*        USING DFHTCADY,SYTCABAR
*        L     PPTCBAR,TCAPCTA
*        USING DFHPPTDS,PPTCBAR
*        CLC   PPTPI,CMDOUT
         EXEC CICS ENTER TRACENUM(1) FROM (CMDOUT)
         CLC   CMDOUT(8),=C'TP08T95 '
         BNE   P#REF@1
         MVC   EMSG,=CL78' '
         MVC   EMSG(25),=C'CAN''T REFRESH ZAP PROGRAM'
         L     15,=V(P#CMD@E)
         BR    15
P#REF@1  EQU   *
         EXEC CICS INQUIRE PROGRAM(CMDOUT) RESCOUNT(RESCOUNT) NOHANDLE
         CLC   EIBRESP,DFHRESP(NORMAL)
         BE    P#REF@2
         MVC   EMSG,=CL78' '
         MVC   EMSG(14),=C'REFRESH FAILED'
         L     15,=V(P#CMD@E)
         BR    15
P#REF@2  EQU   *
         OC    RESCOUNT,RESCOUNT
         BZ    P#REF@3
         EXEC CICS RELEASE PROGRAM(CMDOUT) NOHANDLE
         CLC   EIBRESP,DFHRESP(NORMAL)
         BE    P#REF@3
         MVC   EMSG,=CL78' '
         MVC   EMSG(14),=C'REFRESH FAILED'
         L     15,=V(P#CMD@E)
         BR    15
P#REF@3  EQU   *
         XC    PLENGTH1,PLENGTH1
         XC    PLENGTH2,PLENGTH2
         EXEC CICS INQUIRE PROGRAM(CMDOUT) LENGTH(PLENGTH1) NOHANDLE
         CLC   EIBRESP,DFHRESP(NORMAL)
         BE    P#REF@4
         MVC   EMSG,=CL78' '
         MVC   EMSG(41),=C'INQ OF PROGRAM INFO FAILED BEFORE NEWCOPY'
         L     15,=V(P#CMD@E)
         BR    15
P#REF@4  EQU   *
         EXEC CICS SET PROGRAM(CMDOUT) NEWCOPY NOHANDLE
         CLC   EIBRESP,DFHRESP(NORMAL)
         BE    P#REF@5
         MVC   EMSG,=CL78' '
         MVC   EMSG(14),=C'NEWCOPY FAILED'
         L     15,=V(P#CMD@E)
         BR    15
P#REF@5  EQU   *
         EXEC CICS INQUIRE PROGRAM(CMDOUT) LENGTH(PLENGTH2) NOHANDLE
         CLC   EIBRESP,DFHRESP(NORMAL)
         BE    P#REF@6
         MVC   EMSG,=CL78' '
         MVC   EMSG(40),=C'INQ OF PROGRAM INFO FAILED AFTER NEWCOPY'
         L     15,=V(P#CMD@E)
         BR    15
P#REF@6  EQU   *
         MVI   EMSG,C' '
         MVC   EMSG+1(L'EMSG-1),EMSG
         MVC   EMSG(8),CMDOUT
         MVC   EMSG+8(14),=C' NEW COPIED - '
         MVC   EMSG+22(11),=C'OLD LENGTH('
         FW2DEC8 PLENGTH1,EMSG+33
         MVC   EMSG+41(14),=C')  NEW LENGTH('
         FW2DEC8 PLENGTH2,EMSG+55
         MVC   EMSG+63(13),=C') - REFRESHED'
         EXEC CICS LOAD PROGRAM(CMDOUT) ENTRY(1) HOLD NOHANDLE
         CLC   EIBRESP,DFHRESP(NORMAL)
         BE    P#REF@7
         MVC   EMSG,=CL78' '
         MVC   EMSG(16),=C'LOAD HOLD FAILED'
         L     15,=V(P#CMD@E)
         BR    15
P#REF@7  EQU   *
         ST    1,ADDRESS
         BUMP  2,ADDRESS
         XC    COFFSET,COFFSET
         L     15,=V(P#CMD@N)
         BR    15
P#NEW    EQU   *
         AIF   (&MVS).MVS53
         BALR  7,0
         AGO   .MVS54
.MVS53   ANOP
         BASR  7,0
.MVS54   ANOP
         LA    15,*-CMDS3
         SR    7,15
         XC    PLENGTH1,PLENGTH1
         XC    PLENGTH2,PLENGTH2
         CICS@ TCA,BASE=TCACBAR,USING=NO TCA(U) @
         L     SYTCABAR,TCASYAA
         USING DFHTCADY,SYTCABAR
         L     PPTCBAR,TCAPCTA
         USING DFHPPTDS,PPTCBAR
         CLC   PPTPI,CMDOUT
*        BNE   P#NEW@1
*        OI    PPTTLR2,PPTNCPYR
*        MVC   PLENGTH1,PPTSAR
*        B     P#NEW@4
P#NEW@1  EQU   *
         EXEC CICS INQUIRE PROGRAM(CMDOUT) LENGTH(PLENGTH1) NOHANDLE
         CLC   EIBRESP,DFHRESP(NORMAL)
         BE    P#NEW@2
         MVC   EMSG,=CL78' '
         MVC   EMSG(41),=C'INQ OF PROGRAM INFO FAILED BEFORE NEWCOPY'
         L     15,=V(P#CMD@E)
         BR    15
P#NEW@2  EQU   *
         EXEC CICS SET PROGRAM(CMDOUT) NEWCOPY NOHANDLE
         CLC   EIBRESP,DFHRESP(NORMAL)
         BE    P#NEW@3
         MVC   EMSG,=CL78' '
         MVC   EMSG(14),=C'NEWCOPY FAILED'
         L     15,=V(P#CMD@E)
         BR    15
P#NEW@3  EQU   *
         EXEC CICS INQUIRE PROGRAM(CMDOUT) LENGTH(PLENGTH2) NOHANDLE
         CLC   EIBRESP,DFHRESP(NORMAL)
         BE    P#NEW@4
         MVC   EMSG,=CL78' '
         MVC   EMSG(40),=C'INQ OF PROGRAM INFO FAILED AFTER NEWCOPY'
         L     15,=V(P#CMD@E)
         BR    15
P#NEW@4  EQU   *
         MVI   EMSG,C' '
         MVC   EMSG+1(L'EMSG-1),EMSG
         MVC   EMSG(8),CMDOUT
         MVC   EMSG+8(14),=C' NEW COPIED - '
         MVC   EMSG+22(11),=C'OLD LENGTH('
         FW2DEC8 PLENGTH1,EMSG+33
         MVC   EMSG+41(14),=C')  NEW LENGTH('
         FW2DEC8 PLENGTH2,EMSG+55
         MVI   EMSG+63,C')'
         L     15,=V(P#PPT)
         BR    15
PLENGTH1 DS    F
PLENGTH2 DS    F
         SPACE 4
         LTORG
         EJECT
         MEND
         MACRO
         FRED9
         GBLB  &B2SF,&H2CF,&H2DF,&ORF,&ORHF,&GINF,&C2HF,&MVS
         GBLC  &CS,&VERS
CMDS4    CSECT
         USING *,7
P#OPEN   EQU   *
         AIF   (&MVS).MVS67
         BALR  7,0
         AGO   .MVS68
.MVS67   ANOP
         BASR  7,0
.MVS68   ANOP
         LA    15,*-CMDS4
         SR    7,15
         EXEC CICS SET DATASET(CMDOUT) OPEN
         CLC   EIBRESP,DFHRESP(NORMAL)
         BNE   P#OPENER
         EXEC CICS SET DATASET(CMDOUT) ENABLED
         CLC   EIBRESP,DFHRESP(NORMAL)
         BNE   P#OPENER
         MVI   EMSG,C' '
         MVC   EMSG+1(L'EMSG-1),EMSG
         MVC   EMSG(8),CMDOUT
         MVC   EMSG+8(17),=C' - OPENED ENABLED'
         L     15,=V(P#CMD@N)
         BR    15
P#OPENER EQU   *
         MVC   EMSG,=CL78' '
         MVC   EMSG(11),=C'OPEN FAIRED'
         L     15,=V(P#CMD@E)
         BR    15
P#CLOSE  EQU   *
         AIF   (&MVS).MVS65
         BALR  7,0
         AGO   .MVS66
.MVS65   ANOP
         BASR  7,0
.MVS66   ANOP
         LA    15,*-CMDS4
         SR    7,15
         EXEC CICS SET DATASET(CMDOUT) CLOSED
         CLC   EIBRESP,DFHRESP(NORMAL)
         BNE   P#CLOSER
         EXEC CICS SET DATASET(CMDOUT) DISABLED
         CLC   EIBRESP,DFHRESP(NORMAL)
         BNE   P#CLOSER
         MVI   EMSG,C' '
         MVC   EMSG+1(L'EMSG-1),EMSG
         MVC   EMSG(8),CMDOUT
         MVC   EMSG+8(18),=C' - CLOSED DISABLED'
         L     15,=V(P#CMD@N)
         BR    15
P#CLOSER EQU   *
         MVC   EMSG,=CL78' '
         MVC   EMSG(12),=C'CLOSE FAIRED'
         L     15,=V(P#CMD@E)
         BR    15
P#SEND   EQU   *
         AIF   (&MVS).MVS63
         BALR  7,0
         AGO   .MVS64
.MVS63   ANOP
         BASR  7,0
.MVS64   ANOP
         LA    15,*-CMDS4
         SR    7,15
         BAL   11,GETMAPS
         USING MDI,6
P#SEND@1 EQU   *
         EXEC CICS GETMAIN SET(5) LENGTH(MDIIWAL) INITIMG(X'00')
         LR    4,5
         LA    4,12(4)
         LA    6,MDI#L(6)
         USING MDF,6
P#SEND@2 EQU   *
         CLC   MDFPGPOS,=X'FFFF'
         BE    P#SEND@7
         LH    1,MDFLNG
         TM    MDFFLAG,MDFFDSCT
         BNO   P#SEND@6
         TM    MDFFLAG,MDFFDFT
         BNO   P#SEND@4
         LR    2,1
         BCTR  2,0
         EX    2,SENDCLC
         BNE   P#SEND@5
P#SEND@4 EQU   *
         TM    MDFATTR,(MDFAPROT+MDFANUM)
         BO    *+20
         TM    MDFATTR,MDFANUM
         BNO   *+12
         MVI   3(4),C'9'
         B     *+8
         MVI   3(4),C'X'
         CH    1,=H'1'
         BNH   P#SEND@5
         LR    2,1
         SH    2,=H'2'
         EX    2,SENDMOVE
P#SEND@5 EQU   *
         LA    4,3(1,4)
P#SEND@6 EQU   *
         TM    MDFFLAG,MDFFDFT
         BNO   *+8
         LA    6,0(1,6)
         LA    6,MDF#L(6)
         B     P#SEND@2
P#SEND@7 EQU   *
         CLC   SMAP,=CL8' '
         BE    P#SEND@8
         EXEC CICS SEND MAPSET(SMAPSET) MAP(SMAP) FROM(0(5)) ERASE     X
               NOHANDLE
         B     P#SEND@9
P#SEND@8 EQU   *
         EXEC CICS SEND MAP(SMAPSET) FROM(0(5)) ERASE NOHANDLE
P#SEND@9 EQU   *
         CLC   EIBRESP,DFHRESP(NORMAL)
         BE    P#SEND@Z
         MVC   EMSG,=CL78' '
         MVC   EMSG(12),=C'INVALID SEND'
         L     15,=V(P#CMD@E)
         BR    15
P#SEND@Z EQU   *
         OI    CMDSW,JUSTSEND
         NI    CMDSW,X'FF'-NOERASE
         EXEC CICS RETURN TRANSID(EIBTRNID) COMMAREA(COMM)             X
               LENGTH(=Y(COMML))
SENDMOVE MVC   4(*-*,4),3(4)
SENDCLC  CLC   MDF#L(*-*,6),SENDSP
SENDSP   DC    256C' '
P#SENDE  EQU   *
         AIF   (&MVS).MVS73
         BALR  7,0
         AGO   .MVS74
.MVS73   ANOP
         BASR  7,0
.MVS74   ANOP
         LA    15,*-CMDS4
         SR    7,15
         BAL   11,GETMAPS
         USING MDI,6
         CLC   SMAP,=CL8' '
         BE    P#SENDE2
         EXEC CICS SEND MAPSET(SMAPSET) MAP(SMAP) MAPONLY ERASE        X
               NOHANDLE
         B     P#SENDE3
P#SENDE2 EQU   *
         EXEC CICS SEND MAP(SMAPSET) MAPONLY ERASE NOHANDLE
P#SENDE3 EQU   *
         CLC   EIBRESP,DFHRESP(NORMAL)
         BE    P#SENDE4
         MVC   EMSG,=CL78' '
         MVC   EMSG(12),=C'INVALID SEND'
         L     15,=V(P#CMD@E)
         BR    15
P#SENDE4 EQU   *
         OI    CMDSW,JUSTSEND
         NI    CMDSW,X'FF'-NOERASE
         EXEC CICS RETURN TRANSID(EIBTRNID) COMMAREA(COMM)             X
               LENGTH(=Y(COMML))
GETMAPS  EQU   *
         MVI   SMAPSET,C' '
         MVC   SMAPSET+1(15),SMAPSET
         LA    4,CMDOUT
         LH    2,CMDOLEN
         CH    2,=H'16'
         BNH   *+8
         LA    2,16
         LA    3,SMAPSET
GM#0     EQU   *
         CLI   0(4),C'-'
         BNE   *+12
         LA    3,SMAP
         B     GM#1
         MVC   0(1,3),0(4)
         LA    3,1(3)
GM#1     EQU   *
         LA    4,1(4)
         BCT   2,GM#0
         EXEC CICS LOAD PROGRAM(SMAPSET) ENTRY(6) NOHANDLE
         CLC   EIBRESP,DFHRESP(NORMAL)
         BE    GM#2
         MVC   EMSG,=CL78' '
         MVC   EMSG(29),=C'INVALID MAPSET NAME SPECIFIED'
         L     15,=V(P#CMD@E)
         BR    15
GM#2     EQU   *
         LA    6,MSD#L(6)
         USING MDI,6
         CLC   SMAP,=CL8' '
         BER   11
GM#3     EQU   *
         CLC   MDINAME,SMAP
         BER   11
         CLC   MDIMDL,=X'FFFF'
         BE    GM#4
         LH    4,MDIMAPL
         LA    6,0(4,6)
         B     GM#3
GM#4     EQU   *
         MVC   EMSG,=CL78' '
         MVC   EMSG(26),=C'INVALID MAP NAME SPECIFIED'
         L     15,=V(P#CMD@E)
         BR    15
SMAPSET  DS    CL8
SMAP     DS    CL8
P#ABENDF EQU   *
         AIF   (&MVS).MVSD61
         BALR  7,0
         AGO   .MVSD62
.MVSD61  ANOP
         BASR  7,0
.MVSD62  ANOP
         LA    15,*-CMDS4
         SR    7,15
         OI    CMDSW,ABENDOFF
         L     15,=V(P#CMD@N)
         BR    15
P#ABENDO EQU   *
         AIF   (&MVS).MVSO63
         BALR  7,0
         AGO   .MVSO64
.MVSO63  ANOP
         BASR  7,0
.MVSO64  ANOP
         LA    15,*-CMDS4
         SR    7,15
         NI    CMDSW,X'FF'-ABENDOFF
         L     15,=V(P#CMD@N)
         BR    15
P#AFCB   EQU   *
         AIF   (&MVS).MVSB61
         BALR  7,0
         AGO   .MVSB62
.MVSB61  ANOP
         BASR  7,0
.MVSB62  ANOP
         LA    15,*-CMDS4
         SR    7,15
         CLI   OPSYS,C'E'
         BE    *+28
         L     5,16
         L     5,0(5)
         L     5,4(5)
         L     5,X'D0'(5)
         L     5,X'14'(5)
         B     *+12
         L     5,X'14'
         L     5,X'B4'(5)
         ST    5,ADDRESS
         BUMP  2,ADDRESS
         XC    COFFSET,COFFSET
         L     15,=V(P#CMD@N)
         BR    15
P#AICB   EQU   *
         AIF   (&MVS).MVSA61
         BALR  7,0
         AGO   .MVSA62
.MVSA61  ANOP
         BASR  7,0
.MVSA62  ANOP
         LA    15,*-CMDS4
         SR    7,15
         CLI   OPSYS,C'E'
         BE    *+28
         L     5,16
         L     5,0(5)
         L     5,4(5)
         L     5,X'D0'(5)
         L     5,X'14'(5)
         B     *+12
         L     5,X'14'
         L     5,X'B4'(5)
         USING DFHAFCB,5
         L     5,AFAICB                 @ OF @ EIQ (USED BY DFHEI1)
         ST    5,ADDRESS
         BUMP  2,ADDRESS
         XC    COFFSET,COFFSET
         L     15,=V(P#CMD@N)
         BR    15
P#XEMTON EQU   *
         AIF   (&MVS).MVSO61
         BALR  7,0
         AGO   .MVSO62
.MVSO61  ANOP
         BASR  7,0
.MVSO62  ANOP
         LA    15,*-CMDS4
         SR    7,15
         EXEC CICS LOAD PROGRAM('TP08T95') HOLD
         CLI   OPSYS,C'E'
         BE    *+28
         L     5,16
         L     5,0(5)
         L     5,4(5)
         L     5,X'D0'(5)
         L     5,X'14'(5)
         B     *+12
         L     5,X'14'
         L     5,X'B4'(5)
         USING DFHAFCB,5
         L     5,AFAICB                 @ OF @ EIQ (USED BY DFHEI1)
         USING DFHAICB,5
         L     6,DFHAIEXC               @ EIQ
*        L     1,=V(TRAP)               GET @ TRAP ROUTINE
*        CR    1,6                      TRAP ALREADY SET ?
*        BE    P#XEMTOX
         B     P#XEMTOX
         ST    6,SAVEIQ                 SAVE @ EIQ
         ST    1,DFHAIEXC               SET TRAP
P#XEMTOX EQU   *
         L     15,=V(P#CMD@N)
         BR    15
P#XEMTFF EQU   *
         AIF   (&MVS).MVSF61
         BALR  7,0
         AGO   .MVSF62
.MVSF61  ANOP
         BASR  7,0
.MVSF62  ANOP
         LA    15,*-CMDS4
         SR    7,15
         CLI   OPSYS,C'E'
         BE    *+28
         L     5,16
         L     5,0(5)
         L     5,4(5)
         L     5,X'D0'(5)
         L     5,X'14'(5)
         B     *+12
         L     5,X'14'
         L     5,X'B4'(5)
         USING DFHAFCB,5
         L     5,AFAICB                 @ OF @ EIQ (USED BY DFHEI1)
         USING DFHAICB,5
         OC    SAVEIQ,SAVEIQ
         BZ    P#XEMTFX
         MVC   DFHAIEXC,SAVEIQ
         XC    SAVEIQ,SAVEIQ
         EXEC CICS RELEASE PROGRAM('TP08T95')
P#XEMTFX EQU   *
         L     15,=V(P#CMD@N)
         BR    15
P#CEMT   EQU   *
         AIF   (&MVS).MVS61
         BALR  7,0
         AGO   .MVS62
.MVS61   ANOP
         BASR  7,0
.MVS62   ANOP
         LA    15,*-CMDS4
         SR    7,15
         LA    2,CEMTCMD
         ST    2,CEMT1
         MVC   CEMT2,=A(CEMTCMDL)
         MVC   CEMT3,=A(CEMTX)
         MVC   CEMT4,=A(CEMTD)
         LA    2,CEMTLOOP
         ST    2,CEMT4
         LA    2,FLDLEN
         ST    2,CEMT5
         EXEC CICS LOAD PROGRAM('TP08T95') HOLD
         MVI   CEMTLOOP,C'Y'
         CLI   OPSYS,C'E'
         BE    *+28
         L     5,16
         L     5,0(5)
         L     5,4(5)
         L     5,X'D0'(5)
         L     5,X'14'(5)
         B     *+12
         L     5,X'14'
         L     5,X'B4'(5)
         USING DFHAFCB,5
         L     5,AFAICB                 @ OF @ EIQ (USED BY DFHEI1)
         USING DFHAICB,5
         L     6,DFHAIEXC               @ EIQ
*        L     1,=V(TRAP)               GET @ TRAP ROUTINE
*        CR    1,6                      TRAP ALREADY SET ?
*        BE    P#CEMT@2
         B     P#CEMT@2
         ST    6,SAVEIQ                 SAVE @ EIQ
         ST    1,DFHAIEXC               SET TRAP
         B     P#CEMT@2
         ENTRY SAVEIQ
SAVEIQ   DS    F
         SPACE 4
P#CEMT@2 EQU   *
         TR    CEMTCMD,TRTAB
         EXEC CICS LINK PROGRAM('DFHEMTA') COMMAREA(CEMTPRMS)          X
               LENGTH(20)
         CLC   CEMTCMD(5),=C' CEMT'
         BE    P#CEMT@3
         CLC   CEMTCMD(4),=C'CEMT'
         BE    P#CEMT@3
         MVC   NEWCMD,CEMTCMD
         LA    4,NEWCMD+5
         NI    CMDSW,X'FF'-NOERASE
         MVC   DFHAIEXC,SAVEIQ
         XC    SAVEIQ,SAVEIQ
         EXEC CICS RELEASE PROGRAM('TP08T95')
         ST    13,REG13
         LA    13,SAVEAREA
         L     15,=V(CMDS)
         AIF   (&MVS).MVSC1
         BALR  14,15
         AGO   .MVSC2
.MVSC1   ANOP
         BASR  14,15
.MVSC2   ANOP
         L     13,REG13
         B     P#CEMT@4
P#CEMT@3 EQU   *
*
*  THE NEXT 2 LINES REMOVES TO PREVENT RECURSION AT NAB
*
*<=====  CLI   CEMTLOOP,C'N'
*<=====  BNE   P#CEMT@2
         EXEC CICS RELEASE PROGRAM('TP08T95')
         NI    CMDSW,X'FF'-NOERASE
         MVC   DFHAIEXC,SAVEIQ
         XC    SAVEIQ,SAVEIQ
P#CEMT@4 EQU   *
         L     15,=V(DISPLAY)
         BR    15
P#XEMT   EQU   *
         AIF   (&MVS).MVSX61
         BALR  7,0
         AGO   .MVSX62
.MVSX61  ANOP
         BASR  7,0
.MVSX62  ANOP
         LA    15,*-CMDS4
         SR    7,15
         LA    2,CEMTCMD
         ST    2,CEMT1
         MVC   CEMT2,=A(CEMTCMDL)
         MVC   CEMT3,=A(CEMTX)
         MVC   CEMT4,=A(CEMTD)
         LA    2,CEMTLOOP
         ST    2,CEMT4
         LA    2,FLDLEN
         ST    2,CEMT5
P#XEMT@2 EQU   *
         TR    CEMTCMD,TRTAB
         EXEC CICS LINK PROGRAM('DFHEMTA') COMMAREA(CEMTPRMS)          X
               LENGTH(20)
         CLC   CEMTCMD(5),=C' CEMT'
         BE    P#XEMT@3
         CLC   CEMTCMD(4),=C'CEMT'
         BE    P#XEMT@3
         MVC   NEWCMD,CEMTCMD
         LA    4,NEWCMD+5
         NI    CMDSW,X'FF'-NOERASE
         ST    13,REG13
         LA    13,SAVEAREA
         L     15,=V(CMDS)
         AIF   (&MVS).MVSXC1
         BALR  14,15
         AGO   .MVSXC2
.MVSXC1  ANOP
         BASR  14,15
.MVSXC2  ANOP
         L     13,REG13
         B     P#XEMT@4
P#XEMT@3 EQU   *
         CLI   CEMTLOOP,C'N'
         BNE   P#XEMT@2
         NI    CMDSW,X'FF'-NOERASE
P#XEMT@4 EQU   *
         L     15,=V(DISPLAY)
         BR    15
CEMTCMDL DC    H'70'
CEMTX    DC    X'80'
CEMTL    DC    H'1'
TRTAB    EQU   *
TR00#0F  DC    X'400102030405060708090A0B0C0D0E0F'
TR10#1F  DC    X'101112131415161718191A1B1C1D1E1F'
TR20#2F  DC    X'202122232425262728292A2B2C2D2E2F'
TR30#3F  DC    X'303132333435363738393A3B3C3D3E3F'
TR40#4F  DC    X'404142434445464748494A4B4C4D4E4F'
TR50#5F  DC    X'505152535455565758595A5B5C5D5E5F'
TR60#6F  DC    X'606162636465666768696A6B6C406E6F'
TR70#7F  DC    X'707172737475767778797A7B7C7D7E7F'
TR80#8F  DC    X'808182838485868788898A8B8C8D8E8F'
TR90#9F  DC    X'909192939495969798999A9B9C9D9E9F'
TRA0#AF  DC    X'A0A1A2A3A4A5A6A7A8A9AAABACADAEAF'
TRB0#BF  DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'
TRC0#CF  DC    X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'
TRD0#DF  DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'
TRE0#EF  DC    X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'
TRF0#FF  DC    X'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF'
CEMTD    DS    X
         SPACE 4
         LTORG
         EJECT
         MEND
         MACRO
         FRED7
TP08T95  CSECT
         USING DFHTCADS,TCACBAR
         USING TP08T95,7
         LTORG
         MEND
DFHEISTG DSECT
         FRED1
         FRED
         FRED2
         FRED3
         FRED4
         FRED5
         FRED6
         FRED8
         FRED9
         FRED7
         END
