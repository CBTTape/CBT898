*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
*                                                                     *
*        Title:    'UNIT SPECIFICATION FOR VSAM DATASETS'             *
*        System:   N/A                                                *
*        Module:   VRIDCAMS                                           *
*        Program:  VRIDCAMS                                           *
*        Function: This is a preprocessor for "IDCAMS" statements. It *
*                  allows a unit name to be specified for the         *
*                  volume(s) that a VSAM cluster is to be defined on. *
*                  The program traps a "UNIT" parameter and invokes   *
*                  the "DASDSPCE" program, (identified by the literal *
*                  '+RETDET+' at 10th byte of parameter,) to build a  *
*                  table of candidate volumes from which the volumes  *
*                  with the highest free extents are then substituted *
*                  and passed to "IDCAMS" to do the actual file       *
*                  allocations. The returned parameters are bubble    *
*                  sorted upon their return from DASDSPCE.            *
*                                                                     *
*                  The SYSIN dataset is read and output to a          *
*                  dynamically allocated "SYSOUT" dataset with the    *
*                  conversions. This "SYSOUT" dataset is then         *
*                  reallocated as the "SYSIN" dataset prior to        *
*                  loading and invoking the "IDCAMS" program from     *
*                  within this program.                               *
*                                                                     *
*                  Syntax:                                            *
*                     UNIT(cccccccc,nn)                               *
*                                                                     *
*                     where cccccccc - the unit type, eg. SYSDA, PERM *
*                                    - wildcarded volser, eg.PRM2*    *
*                                      (the '*' is optional but       *
*                                      recommended for documentation  *
*                                      purposes).                     *
*                                    - device string using '.' as the *
*                                      wildcard last character, eg.   *
*                                      'D8.'.                         *
*                           nn       - the number of volumes you want *
*                                      the dataset on.                *
*                     NOTE - No space is permitted between the "UNIT" *
*                            and the left bracket.                    *
*                                                                     *
*                     Ex.                                             *
*                                                                     *
*                       Input:                                        *
*                           UNIT(WRK2*,) TRACKS(1) -                  *
*                                                                     *
*                       Output:                                       *
*                           VOLUMES( /*    UNIT(WRK2*,3)    */    -   *
*                                   WRK205 /* NNNN LARGEST    */  -   *
*                                   WRK202 /* NNNN LARGEST    */  -   *
*                                   WRK204 /* NNNN LARGEST    */  -   *
*                                  )                              -   *
*                           TRACKS(1)                             -   *
*                                                                     *
*        Parameters: In batch, you may pass a parameter of 'LIST' to  *
*                    generate a conversion listing to the SYSPRINT    *
*                    DD.                                              *
*                                                                     *
*        Notes:    Program is not re-entrant.                         *
*        Author:   A. Kara (ASYSTS P/L).                              *
*
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
*        PRINT OFF
*        COPY  @MACROS              COMMON MACROS
*        PRINT ON
VRIDCAMS KICKOFF (R12,R11),WORKAREA,WORKAREL,LIST=NO,HELP=NO
         LR    R7,R1                ADDRESS OF PARAMETER
         L     R7,0(R7)             LOAD ADDRESS OR PARAMETER
         LH    R9,0(R7)             LOAD LENGTH OF PARAMETER
         LTR   R9,R9                Q. IS PARAMETER LENGTH ZERO
         BZ    NOPARAM                 Y. GO PROCESS 'SYSIN'
OKCONT#1 DS    0H
         LA    R7,2(R7)             POINT PAST PARAMETER LENGTH
         CLC   0(4,R7),=C'LIST'     Q. LIST ON
         BE    PRINTON                 N. BYPASS
         CLC   0(4,R7),=C'TEST'     Q. IN TEST MODE
         BNE   NOPARAM                 N. BYPASS
         MVI   TRACE,C'Y'           TURN TRACE ON FLAG
         B     NOPARAM              BYPASS
PRINTON  DS    0H
         MVI   TRACE,C'P'           TURN TRACE ON FLAG
NOPARAM  DS    0H
                                                                SPACE 1
*---------------------------------------------------------------------*
*   TEST IF SYSOUT ALLOCATED                                          *
*---------------------------------------------------------------------*
         LA    R10,SVC99WRK            POINT TO SVC 99 WORK AREA
         ADYN  MF=E,ACTION=INFO,BASE=R10,DD=SYSIN,                     X
               PARMT=PARM,DSN=LINE
         LTR   R15,R15                 Q. ALLOCATE OK
         BZ    TESTOUTP                   Y. GO TEST SYSIN DATASET
OPERERR1 DS    0H
WTO1     WTO   'MISSING SYSIN DD STATEMENT - RCODE 12.',               *
               ROUTCDE=(2,12),DESC=(7)
         MVC   LINE(37),=C'MISSING SYSIN DD STATEMENT - RCODE 12'
*        TPUT  LINE,79,EDIT,WAIT,,BREAKIN,HIGHP
         B     EXITPR12                EXIT WITH ERROR
TESTOUTP DS    0H
                                                                SPACE 1
*---------------------------------------------------------------------*
CODE1    ADYN  ACTION=ALLOC,DD=SYSOUT,DSNR=YES,                        X
               DISP=(NEW,DELETE,DELETE),SPACE=(TRK,(20,5)),            X
               RECFM=FB,LRECL=80,BLKSIZE=80,                           X
               REUSE=YES,                                              X
               PARMT=DATA,         <----- CHANGE FOR LOCATION          X
               BASE=R10,                                               X
               UNIT=SYSDA,                                             X
               VOLR=YES,                                               X
               MF=E                <----- CHANGE FOR LOCATION
                                                                SPACE 1
         LTR   R15,R15                 Q. ALLOCATE OK
         BZ    OPENFILS                   Y. GO OPEN FILES
         ST    R0,DWORK8
         HEXCHMAC DWORK8,WTO2+43,4
         ST    R15,DWORK8
         HEXCHMAC DWORK8,WTO2+58,4
WTO2     WTO   'ERROR ALLOCATING SYSOUT DATASET R0=........ , R15=.....*
               ...     ',                                              *
               ROUTCDE=(2,12),DESC=(7)
         MVC   LINE(31),=C'ERROR ALLOCATING SYSOUT DATASET'
*        TPUT  LINE,79,EDIT,WAIT,,BREAKIN,HIGHP            <-----
         B     EXITPR12                EXIT WITH ERROR
                                                                SPACE 1
*---------------------------------------------------------------------*
OPENFILS DS    0H
         OPEN  (SYSIN,(INPUT))         OPEN INPUT FILE
         OPEN  (SYSOUT,(OUTPUT))       OPEN PRINTFILE
                                                                SPACE 1
         CLI   TRACE,C'P'              Q. PRINT
         BNE   READLOOP                   N. BYPASS
         OPEN  (SYSPRINT,(OUTPUT))     OPEN PRINTFILE
         MVC   LINE(25),=C'1VRIDCAMS CONVERSION LIST'
         PUT   SYSPRINT,LINE
         MVC   LINE,SPACES             INITIALISE LINE
         MVI   LINE,C'0'               SKIP 2 LINES INDICATOR
         PUT   SYSPRINT,LINE
         MVI   LINE,C' '               SKIP 2 LINES INDICATOR
                                                                SPACE 1
READLOOP DS    0H
         GET   SYSIN,INPUT             GET INPUT RECORD
         LR    R7,R1                   POINT TO SOURCE
         LA    R9,72                   LOAD LOOP COUNTER
         LA    R8,LINE                 POINT TO START OF LINE
*        TPUT  (R7),79,EDIT,WAIT,,BREAKIN,HIGHP            <-----
                                                                SPACE 1
LINELOOP DS    0H
         CLC   0(2,R7),=C'/*'          Q. START OF COMMENT
         BNE   NOTCOMS                    N. BYPASS
         MVI   COMTON,C'Y'             SET COMMENT ON FLAG
         MVC   0(2,R8),0(R7)           MOVE COMMENT START INDICATOR
         LA    R7,2(R7)                BUMP SOURCE POINTER
         LA    R8,2(R8)                BUMP DESTINATION POINTER
         BCT   R9,NEXTCOM1             PROCESS NEXT COMMENT CHAR
         B     ENDLINE                 GOTO END OF LINE
NEXTCOM1 DS    0H
         BCT   R9,LINELOOP             LOOOP TILL END
         B     ENDLINE                 GOTO END OF LINE
NOTCOMS  DS    0H
         CLC   0(2,R7),=C'*/'          Q. END OF COMMENT
         BNE   NOTCOME                    N. BYPASS
         MVI   COMTON,C'N'             SET COMMENT ON OFF
         MVC   0(2,R8),0(R7)           MOVE COMMENT END INDICATOR
         LA    R7,2(R7)                BUMP SOURCE POINTER
         LA    R8,2(R8)                BUMP DESTINATION POINTER
         BCT   R9,NEXTCOM2             PROCESS NEXT COMMENT CHAR
         B     ENDLINE                 GOTO END OF LINE
NEXTCOM2 DS    0H
         BCT   R9,LINELOOP             LOOOP TILL END
         B     ENDLINE                 GOTO END OF LINE
NOTCOME  DS    0H
         CLI   COMTON,C'Y'             Q. COMMENTS ON
         BE    NEXTCHAR                   Y. GET NEXT CHARACTER
         CLC   0(6,R7),=C' UNIT('      Q. UNITS INDICATOR
         BNE   NEXTCHAR                   N. GET NEXT CHARACTER
LEADSPC1 DS    0H
         CLI   1(R7),C' '              Q. LEADING SPACE
         BNE   SPACENF1                   N. PROCESS PARAMETER
         MVC   0(1,R8),0(R7)           MOVE COMMENT END INDICATOR
         LA    R7,1(R7)                BUMP SOURCE POINTER
         LA    R8,1(R8)                BUMP SOURCE POINTER
         BCT   R9,LEADSPC1             PROCESS NEXT CHAR
         B     ENDLINE                 GOTO END OF LINE
SPACENF1 DS    0H
         LA    R2,72                   LOAD LOOP COUNTER
         SR    R2,R9                   SUBTARCT # CHARS PROCESSED
         BCTR  R2,0                    RELATIVE LENGTH
         EX    R2,QSPACES              Q. ARE THEY SPACES
         BE    BLANKPRE                   Y. BLANK PREFIX
         MVI   5(R8),C'-'              MOVE CONTINUATION CHARACTER
         BAL   R14,PUTLINE             GO WRITE THE NEW
BLANKPRE DS    0H
         LA    R8,LINE+10              POSITION DESTINATION POINTER
         MVC   0(19,R8),=C'VOLUMES(  /*  UNIT('
         LA    R8,19(R8)               POINT PAST LITERAL
         LA    R7,6(R7)                POINT PAST UNIT PARAMETER
         SH    R9,=H'6'                DEC LOOP COUNTER ACCORDINGLY
         LA    R4,PRGPARM              UNIT POINTER
         MVC   PRGPARM,SPACES          CLEAR UNIT DESTINATION
         MVC   UNIT#(2),=C'1 '         INITIALISE NUMBER OF UNITS
         XR    R5,R5                   INITIALISE CHARACTER LENGTH
UNITLOOP DS    0H
         CLI   0(R7),C')'              Q. UNIT TERMINATOR
         BE    ENDUNIT                    Y. EXIT LOOP
         CLI   0(R7),C','              Q. UNIT COUNTER
         BNE   NEXTUCHR                   N. PROCESS NEXT CHARACTER
         MVC   0(1,R8),0(R7)           MOVE THE CHARACTER
         LA    R7,1(R7)                BUMP SOURCE POINTER
         LA    R8,1(R8)                BUMP SOURCE POINTER
         BCTR  R9,0                    POINT PAST COMMA
LEADSPC2 DS    0H
         CLI   1(R7),C' '              Q. LEADING SPACE
         BNE   SPACENF2                   N. PROCESS PARAMETER
         MVC   0(1,R8),0(R7)           MOVE COMMENT END INDICATOR
         LA    R7,1(R7)                BUMP SOURCE POINTER
         LA    R8,1(R8)                BUMP SOURCE POINTER
         BCT   R9,LEADSPC2             PROCESS NEXT CHAR
         B     ENDLINE                 GOTO END OF LINE
SPACENF2 DS    0H
         LA    R4,UNIT#                UNIT COUNTER POINTER
         XR    R5,R5                   INITIALISE CHARACTER LENGTH
         B     UNITCTR                 EXIT LOOP
NEXTUCHR DS    0H
         CLI   0(R7),C' '              Q. TRAILING SPACE
         BE    BYPWCRD                    Y. GET NEXT CHARACTER
         CLI   0(R7),C'*'              Q. WILDCARD CHARACTER
         BE    BYPWCRD                    Y. BYPASS WIDL CHAR MOVE
         MVC   0(1,R4),0(R7)           MOVE THE CHARACTER
         LA    R4,1(R4)                POINT PAST UNIT CHARACTER
         LA    R5,1(R5)                BUMP UNIT LENGTH COUNTER
         STH   R5,UNITL                STORE UNIT CHARACTER LENGTH
BYPWCRD  DS    0H
         MVC   0(1,R8),0(R7)           MOVE THE CHARACTER
         LA    R8,1(R8)                BUMP DESTINATION POINTER
         LA    R7,1(R7)                BUMP SOURCE POINTER
         BCT   R9,UNITLOOP             PROCESS NEXT COMMENT CHAR
UNITCTR  DS    0H
         CLI   0(R7),C' '              Q. TRAILING SPACE
         BE    SPACEF3                    Y. GET NEXT CHARACTER
         CLI   0(R7),C')'              Q. UNIT TERMINATOR
         BE    ENDUNIT                    Y. EXIT LOOP
         MVC   0(1,R4),0(R7)           MOVE TO UNIT COUNTER
         LA    R4,1(R4)                BUMP UNIT POINTER (OUTPUT)
         LA    R5,1(R5)                BUMP UNIT POINTER CHAR COUNTER
SPACEF3  DS    0H
         MVC   0(1,R8),0(R7)           MOVE THE CHARACTER
         LA    R7,1(R7)                BUMP SOURCE POINTER
         LA    R8,1(R8)                BUMP DESTINATION POINTER
         BCT   R9,UNITCTR              PROCESS NEXT COMMENT CHAR
ENDUNIT  DS    0H
         MVC   0(1,R8),0(R7)           MOVE THE CHARACTER
         LA    R7,1(R7)                BUMP SOURCE POINTER
         LA    R8,1(R8)                BUMP DESTINATION POINTER
         LTR   R5,R5                   Q. UNIT COUNT SUPPLIED
         BNZ   EXPUNIT#                   Y. CONVERT UNIT NUMBER
         LA    R5,1                    SET UNIT COUNTER
EXPUNIT# DS    0H
         CLC   UNIT#(2),=C'1 '         Q. UNIT COUNTER SUPPLIED
         BE    FIXUNIT#                   N. NEED TO SHUFFLE
         CH    R5,=H'1'                Q. TWO BYTES SUPPLIED
         BH    UNIT#MVD                   Y. NO NEED TO SHUFFLE
FIXUNIT# DS    0H
         MVC   UNIT#+1(1),UNIT#        MOVE DECIMAL BYTE TO UNITS
         MVI   UNIT#,C'0'              INIT DECIMAL BYTE
UNIT#MVD DS    0H
         PACK  DWORK8(8),UNIT#(2)      PACK UNIT COUNTER
         CVB   R5,DWORK8               CONVERT TO DECIMAL
         STH   R5,UNIT#                STORE UNIT COUNTER
         MVC   5(2,R8),=C'*/'          MOVE DELIMITER
         MVI   LINE+64,C'-'            MOVE CONTINUATION CHARACTER
         BAL   R14,PUTLINE             GO AND WRITE A LINE
*
         STM   R0,R15,SAVEREG1         STORE REGISTERS
*---------------------------------------------------------------------* ---*
* The following section invokes DASDSPCE to return the Volumes with   * ---*
* the most free space satisfying the 'UNIT' criteria as designated by * ---*
* the syntax for the DASDSPCE parameters...                           * ---*
*---------------------------------------------------------------------* ---*
         LH    R1,UNITL                LOAD UNIT LENGTH
         STH   R1,PRGPARML             STORE PARAMETER 1 LENGTS
         LA    R1,PRGPARML             LOAD PARAMETER LIST ADDRESS
         O     R1,=X'80000000'         SET LAST PARAMETER INDICATOR
         MVC   PRGRDATA(08),=C'+RETDET+' MOVE PROGRAMS IDENTIFIER
         ST    R1,DWORK8               SAVE POINTER TO PARMLIST
         LA    R1,DWORK8               LOAD PARMLIST POINTER ADDRESS
         LOAD  EP=DASDSPCE             LOAD DASDSPCE PROGRAM
         LR    R15,R0                  LOAD ENTRY POINT OF PROGRAM
         LA    R1,DWORK8               LOAD PARMLIST POINTER ADDRESS
         BALR  R14,R15                 CALL 'DASDSPCE'
         ST    R15,DWORK8              SAVE RETURN REGISTER
         DELETE EP=DASDSPCE            REMOVE DASDSPCE
         L     R15,DWORK8              RESTORE REGISTERS
*---------------------------------------------------------------------* ---*
*
         BAL   R14,SORTTAB             GO AND SORT THE TABLE
         LTR   R15,R15                 Q. ANY PARAMETERS PASSED
         BNZ   EXITPROG                   N. EXIT PROGRAM
*
         LH    R10,PRGRDATA            LOAD PARAMETER 2 LENGTH
         LA    R7,PRGRDATA+2           POINT PAST LENGTH
         USING PRGVOL,R7               ESTABLISH ADDRESABILITY
         LH    R9,UNIT#                LOAD UNIT COUNTER
UNIT#LOP DS    0H
         LTR   R10,R10                 Q. AVAILABLE PARAMETER
         BNZ   MOREPARM                   Y. PROCESS PARAMETER
         MVC   LINE+10(49),=C'/*  INSUFFICIENT VOLUMES TO COVER UNIT PAR
               RAM.  */'
         MVI   LINE+64,C'-'            MOVE CONTINUATION CHARACTER
         BAL   R14,PUTLINE             GO PUT THE LINE
         B     ENDVOLMV                GO PROCESS SUFFIX
MOREPARM DS    0H
         LA    R8,LINE+18              DESTINATION ADDRESS
         MVC   0(6,R8),PRGVOL          MOVE VOLSER
         MVC   8(2,R8),=C'/*'          MOVE COMMENT START
         MVC   12(5,R8),PRGCYL2        MOVE LARGEST SPACE
         MVC   18(8,R8),=C'LARGEST,'   MOVE LITERAL
         MVC   27(5,R8),PRGCYL1        MOVE LARGEST FREE
         MVC   33(9,R8),=C'FREE   */'  MOVE COMMENT END
         MVI   LINE+64,C'-'            MOVE CONTINUATION CHARACTER
         BAL   R14,PUTLINE             GO PUT THE LINE
         LA    R7,PRGENTL(R7)          POINT TO NEXT TABLE ENTRY
         BCTR  R10,0                   DECREMENT AVAILABLE PARM CTR
         BCT   R9,UNIT#LOP             LOOP TILL END
         DROP  R7                      KILL ADDRESABILITY
ENDVOLMV DS    0H
         MVI   LINE+17,C')'            MOVE CLOSING BRACKET
         MVI   LINE+64,C'-'            MOVE CONTINUATION CHARACTER
         BAL   R14,PUTLINE             GO PUT THE LINE
         LM    R0,R15,SAVEREG1         RESTORE REGISTERS
         LA    R8,LINE+15              DESTINATION ADDRESS
         LA    R5,72                   LOAD LINE LIMIT
         SR    R5,R9                   SUBTRACT DATA NOT MOVED
         LTR   R5,R5                   Q. TEST LENGTH
         BNP   READLOOP                   N. NONE GET NEXT LINE
SUFLOOP  DS    0H
         CLI   0(R7),C'-'              Q. CONTINUATION CHARACTER
         BE    ENDSUFLP                   Y. EXIT LOOP
         CLI   0(R7),C'+'              Q. CONTINUATION CHARACTER
         BE    ENDSUFLP                   Y. EXIT LOOP
         MVC   0(1,R8),0(R7)           MOVE CHARACTER
         LA    R7,1(R7)                BUMP SOURCE POINTER
         LA    R8,1(R8)                BUMP DESTINATION POINTER
         BCT   R9,SUFLOOP              LOOP TILL END
         B     ENDLINE                 END REACHED
ENDSUFLP DS    0H
         BCTR  R5,0                    RELATIVE LENGTH
         EX    R5,QSPACES              Q. ARE THEY SPACES
         BE    READLOOP                   Y. GET NEXT LINE
         MVI   LINE+64,C'-'            MOVE CONTINUATION CHARACTER
         B     ENDLINE                 GO WRITE LINE
NEXTCHAR DS    0H
         MVC   0(1,R8),0(R7)           MOVE CHARACTER
         LA    R7,1(R7)                BUMP SOURCE POINTER
         LA    R8,1(R8)                BUMP DESTINATION POINTER
         BCT   R9,LINELOOP             LOOOP TILL END
                                                                SPACE 1
ENDLINE  DS    0H
         BAL   R14,PUTLINE             GO PUT THE LINE
         B     READLOOP                GO PROCESS NEXT LINE
                                                                SPACE 1
ENDFILE  DS    0H
         CLOSE SYSIN                   CLOSE INPUT FILE
         CLOSE (SYSOUT,REREAD)         CLOSE OUTPUT DISK FILE
         FREEPOOL SYSOUT               FREE OUTPUT DISK BUFFER
                                                                SPACE 1
         CLI   TRACE,C'P'              Q. PRINT
         BNE   REALLOC                    N. BYPASS
         MVC   LINE,SPACES             INITIALISE LINE
         MVC   LINE(43),=C'0VRIDCAMS CONVERSION LIST END *************'
         PUT   SYSPRINT,LINE
         CLOSE SYSPRINT                CLOSE OUTPUT DISK FILE
                                                                SPACE 1
*---------------------------------------------------------------------*
REALLOC  DS    0H
         MVC   YDD(8),=CL8'SYSIN'
         MVI   YDISP,$OLD
         ADYN  MF=E,ACTION=ALLOC,BASE=R10,DSN=YDSN,DD=SYSIN,           X
               UNIT=????,                                              X
               VOLSER=??????,                                          X
               REUSE=Y,                                                X
               PARMT=DATA
                                                                SPACE 1
*---------------------------------------------------------------------*
CIDCAMS  DS    0H
         CLI   TRACE,C'Y'              Q. TRACE ON
         BE    EXITPROG                   Y. BYPASS IDCAMS CALL
         LOAD  EP=IDCAMS               LOAD IDCAMS ENTRY POINT
         LR    R15,R0                  LOAD ENTRY POINT
         XR    R1,R1                   INITIALISE PARAMETER LIST ADR
         BALR  R14,R15                 CALL ROUTINE
         STH   R15,ECODE               STORE RETURN CODE FOR EXIT
EXITPROG DS    0H
         LH    R15,ECODE               LOAD IDCAMS RETURN CODE
         RACKOFF RC=(R15)              EXIT PROGRAM WITH IDCAMS RCODE
EXITPR12 DS    0H
         RACKOFF RC=12                 EXIT PROGRAM WITH 12 RETURN CODE
                                                                SPACE 1
*---------------------------------------------------------------------* ---*
PUTLINE  DS    0H
         STM   R0,R15,SAVEREG2         STORE REGISTERS
         CLI   TRACE,C'N'              Q. TRACE ON
         BNE   CONT#100                   N. BYPASS TPUT
         TPUT  LINE,79,EDIT,WAIT,,BREAKIN,HIGHP
CONT#100 DS    0H
         CLI   TRACE,C'P'              Q. PRINT
         BNE   CONT#110                   N. BYPASS TPUT
         PUT   SYSPRINT,LINE
CONT#110 DS    0H
         PUT   SYSOUT,LINE             WRITE A LINE
         MVC   LINE,SPACES             CLEAR OUTPUT LINE
         LM    R0,R15,SAVEREG2         RESTORE REGISTERS
         BR    R14                     RETURN TO CALLER
                                                                SPACE 1
*---------------------------------------------------------------------* ---*
* Sort table passed back from DASDSPCE routine                        * ---*
*---------------------------------------------------------------------* ---*
SORTTAB  DS    0H
         STM   R0,R14,SAVEREG2         STORE REGISTERS
         XC    DWORK8,DWORK8           INITIALISE PACKED AREA
         MVC   DWORK8+6(2),PRGRDATA    MOVE PACKED COUNTER
         CVB   R10,DWORK8              LOAD PARAMETER 2 # TABLES
         STH   R10,PRGRDATA            SAVE CONVERTED # TABLES
                                                                SPACE 1
         LTR   R10,R10                 Q. ANY PARAMETERS RETURNED
         BNZ   CONT#220                   N. BYPASS ERROR
         MVC   LINE(60),=C'*** ERROR *** NO VOLUMES RETURNED FOR UNIT PA
               ARAMETER PASSED.'
         CLI   TRACE,C'N'              Q. TRACE ON
         BNE   CONT#200                   N. BYPASS TPUT
         TPUT  LINE,79,EDIT,WAIT,,BREAKIN,HIGHP
CONT#200 DS    0H
         CLI   TRACE,C'P'              Q. PRINT
         BNE   CONT#210                   N. BYPASS TPUT
         PUT   SYSPRINT,LINE
CONT#210 DS    0H
         LA    R15,20                  SET ERROR CODE
         STH   R15,ECODE               SAVE ERROR CODE FOR EXIT
         B     SORTTABQ                EXIT WITH ERROR
                                                                SPACE 1
CONT#220 DS    0H
         B     OUTLOOP2                BRANCH TO OUTER LOOP
OUTLOOP1 DS    0H
         LR    R9,R10                  LOAD LOOP COUNTER
         LA    R7,PRGRDATA+2           POINT PAST LENGTH
INLOOP1  DS    0H
         CLC   6(4,R7),PRGENTL+6(R7)     Q. FIRST HIGHER THAN NEXT
         BH    NEXTTBE                      Y. NEXT COMPARE
         MVC   INPUT(PRGENTL),0(R7)      MOVE 1 TO SAVEAREA
         MVC   0(PRGENTL,R7),PRGENTL(R7) MOVE VOL 2 TO 1
         MVC   PRGENTL(PRGENTL,R7),INPUT MOVE 1 TO SAVEAREA
NEXTTBE  DS    0H
         LA    R7,PRGENTL(R7)          POINT TO NEXT TABLE ENTRY
         BCT   R9,INLOOP1              LOOP TILL END
OUTLOOP2 DS    0H
         BCT   R10,OUTLOOP1            LOOP TILL END
         XR    R15,R15                 SET ZERO RETURN CODE
SORTTABQ DS    0H
         LM    R0,R14,SAVEREG2         RESTORE REGISTERS
         BR    R14                     RETURN TO CALLER
                                                                SPACE 1
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
MOVEREST MVC   0(0,R8),0(R7)           MOVE DATA
QSPACES  CLC   LINE(0),SPACES          DATA ALL SPACES
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
         LTORG
*---------------------------------------------------------------------* ---*
DWORK8   DS    D                      DOUBLE WORD WORK AREA
UNIT#    DS    H                      NUMBER OF UNITS REQUESTED
UNITL    DS    H                      UNIT PARAMETER LENGTH
ECODE    DS    H                      RETURN CODE FROM IDCAMS
SWAPIN   DC    C'N'                   SWAP SYSIN DATASET FLAG
COMTON   DC    C'N'                   COMMENT ON FLAG
TRACE    DC    C'N'                   TRACE FLAG
INPUT    DC    CL80' '
SYSIN    DCB   DDNAME=SYSIN,                                           X
               DSORG=PS,                                               X
               MACRF=(GM),                                             X
               EODAD=ENDFILE
SYSOUT   DCB   DDNAME=SYSOUT,                                          X
               DSORG=PS,                                               X
               MACRF=(PM)
SYSPRINT DCB   DDNAME=SYSPRINT,                                        X
               DSORG=PS,                                               X
               RECFM=FBA,LRECL=133,BLKSIZE=6251,                       X
               MACRF=(PM)
LINE     DC    CL80' '
SPACES   DC    CL256' '
DATA1    ADYN  ACTION=ALLOC,DD=SYSOUT,                                 X
               DISP=(NEW,DELETE,DELETE),SPACE=(TRK,(10,5)),            X
               RECFM=FB,LRECL=80,BLKSIZE=6160,                         X
               REUSE=YES,          <----- DATA COMMENT ONLY            X
               PARMT=DATA,         <----- CHANGE FOR LOCATION          X
               DATA=VARIABLE,      <----- REQUIRED FOR DATA            X
               BASE=R10,           <----- DATA COMMENT ONLY            X
               DSNR=YES,           <----- DATA COMMENT ONLY            X
               VOLR=YES,           <----- DATA COMMENT ONLY            X
               MF=L                <----- CHANGE FOR LOCATION
                                                                SPACE 1
*---------------------------------------------------------------------* ---*
* Variable data                                                       * ---*
*---------------------------------------------------------------------* ---*
WORKAREA DSECT
         DS    18F                    REGISTER SAVE AREA ON ENTRY
SAVEREG1 DS    18F                    SUB RTN 1 REGISTER SAVE AREA
SAVEREG2 DS    18F                    SUB RTN 2 REGISTER SAVE AREA
                                                                SPACE 1
SVC99WRK DS    CL400
                                                                SPACE 1
PRGDCAM$ DS    0F                        DESIGNED TO SIMULATE THE
PRGPARML DS    H                            FORMAT OF PARAMETER ENTRY
PRGPARM  DS    CL8                          LENGTH + PARAMETER
PRGRDATA DS    CL16002                   VRIDCAMS RETURN DATA
         ORG   PRGRDATA
PRG#ENT  DS    H                         NUMBER OF RETURNED ENTRIES
PRGVOL   DC    CL6' '                    VOLUME
PRGCYL1  DC    CL5' '                    FREE CYLYNDERS
PRGCYL2  DC    CL5' '                    LARGEST FREE CYLINDER
*ILLER   DC    CL2' '    <------ FILLER USED TO PAD OUT DATA
PRGENTL  EQU   *-PRGVOL                  TABLE ENTRY LENGTH
         ORG
WORKAREL EQU   *-WORKAREA
*---------------------------------------------------------------------*
ADYNIBM  ADYN  DATA=IBM
         END
