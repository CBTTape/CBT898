X1       KICKOFF
         EXTRACT TIOTADDR,FIELDS=(TIOT) EXTRACT THE ADDRESS OF TIOT
         L     R4,TIOTADDR               ADDR FIRST ENTRY
         USING TIOT1,R4
         USING IHADCB,R3
TIOT010  DS    0H
         SR    R7,R7
         IC    R7,TIOELNGH             GET LENGTH OF TIOT ENTRY
         LTR   R7,R7                   AT END OF TIOT?
         BZ    TIOT090                 YES - EXIT
         MVC   DCBDDNAM,TIOEDDNM
         MVC   DDNAME,TIOEDDNM         KEEP DDNAME
         BAL   R14,VALID100            IS THIS A VALID ENTRY ?
         LTR   R15,R15
         BNZ   TIOT050                 NO - GET NEXT ENTRY
         ICM   R1,7,TIOEJFCB           R1 = JFCB TOKEN
         BAL   R14,JFCB100             GET DATASET NAME
         MVC   FDSN,0(R1)              SAVE FOR LATER DISPLAY
         MVC   FDSN6,0(R1)             SAVE DSN FOR LATER DISPLAY
         LR    R2,R1                   SAVE PTR TO DSN
*
         LA    R13,RACSAVE             LOAD A SAVE AREA FOR ROUTER CALL
         RACROUTE REQUEST=AUTH,                                        X
               ATTR=READ,                                              X
               ENTITY=((R2)),                                          X
               LOG=NOSTAT,                                             X
               RACFIND=NO,                                             X
               RELEASE=1.8,                                            X
               VOLSER=VOLUME,                                          X
               WORKA=RACWORK,                                          X
               MF=(E,RACROTE)
         LTR   R15,R15                 ARE YOU AUTHORISED ?
         BZ    TIOT025                 YES  - CONTINUE
         LA    R1,FNDMSG6              NO-DISPLAY DSN AND NOT AUTH MSG
         BAL   R14,DISPL100
         B     TIOT050                 GET NEXT TIOT ENTRY
TIOT025  DS    0H
         OPEN  (MYDCB,(INPUT))
         BLDL  MYDCB,BLDLIST           FOUND IN THIS ENTRY ?
         LR    R9,R15                  SAVE RETURN CODE
         CLOSE MYDCB
         LTR   R9,R9
         BNZ   TIOT050                 NO - KEEP GOING
*        WTO 'FOUND '                  YES - DISPLAY RESULTS
         SR    R2,R2                   GET CORRECT OFFSET INTO LIST
         IC    R2,K
         MH    R2,=H'20'               R2 = K * 20 = TIOTE OFFSET
         AR    R4,R2                   R4 = ADDRESS TIOTE
         ICM   R1,7,TIOEJFCB           R1 = JFCB TOKEN
         BAL   R14,JFCB100             GET DATASET NAME
         MVC   FDSN,0(R1)              SAVE DSN FOR LATER DISPLAY
         OC    PGMFLAG,SCAN1ST         SET FINISH FLAG IF NOT SCAN1ST
         LA    R1,FNDMSG4
         BAL   R14,DISPL100
         OC    FOUND,FOUNDYES          SET FOUND = 1 ==> FOUND MEMBER
TIOT050  DS 0H
         SR    R7,R7
         IC    R7,TIOELNGH             GET LENGTH OF TIOT ENTRY
         LTR   R7,R7                   AT END OF TIOT?
         BZ    TIOT090
         AR    R4,R7                   PT TO NEXT TIOT ENTRY
         CLI   TIOEDDNM,C' '           IS THIS A CONCATENATION ?
         BNE   TIOT010                 NO. PROCESS NEW DDNAME
         LTR   R9,R9                   DID BLDL FIND IT IN CONCAT DS?
         BNZ   TIOT050                NO - SKIP TO NEXT NON BL. DDNAME
         TM    PGMFLAG,FINISH          CONTINUE SEARCHING TIOT  ?
         BO    TIOT090                    NO
*                                      YES. PROCESS CONCATENATION
         LR    R1,R2                   RELOAD PTR TO DSN
         BAL   R14,SCANDS100           SCAN DATASETNAME
         B     TIOT050
TIOT090  PR
*
*****************************************************************
* VALIDATE TIOT ENTRY
* INPUT:  TIOT ALREADY MAPPED
* OUTPUT: R15 = 0 ==> VALID ENTRY
*         R15 = 4 ==> NOT A VALID ENTRY
*         FDSN - SAVE DSN FOR LATER PRINTING
*
*****************************************************************
VALID100 DS    0H
         BAKR  R14,0
         TM    TIOESTTA,TIOSLTYP       FREED TIOT ENTRY ?
         BO    VALID190                YES. SKIP TIOT FREE SPACE
         CLI   TIOELINK,X'0'           IS IT A REAL DATASET?
         BNE   VALID190                NO. SKIP IT
         SR    R2,R2
         ICM   R2,7,TIOEFSRT           GET UCB ADDR
         LTR   R2,R2                   IS THERE A UCB ?
         BZ    VALID190                NO => DUMMY ALLOCATION
         USING UCBOB,R2                MAP UCB
         MVC   VOLUME,UCBVOLI          GET VOLSER
         DROP R2
*
*----------------------------------------------------------------
* GET THE DATASET NAME FROM THE JFCB
*----------------------------------------------------------------
         ICM   R1,7,TIOEJFCB           R1 = JFCB TOKEN
         BAL   R14,JFCB100             GET DATASET NAME
         MVC   FDSN,0(R1)              SAVE DSN FOR LATER DISPLAY
*
*----------------------------------------------------------------
* IS THE DATASET PARTITIONED ?
*----------------------------------------------------------------
         LA    R1,VOLUME               DSNAME AND VOLSER REQD TO :
         LA    R0,FDSN
         BAL   R14,VTOC100             CHECK DSORG (FROM VTOC)
         LTR   R15,R15                 IS IT PARTITIONED ?
         BNZ   VALID190                NO. SKIP IT
         SR    R15,R15                 YES. SET RC = 0 => DS OK.
         PR
VALID190 DS    0H
         LA    R15,4                   SET RC = 4 => ENTRY NOT VALID
         PR
*
******************************************************************
* GET VTOC
*
* R0 = PTR TO DSNAME
* R1 = PTR TO VOLUME
* R15 = 0 => PARTITIONED
* R15 = 8 => NOT PARTITIONED
******************************************************************
VTOC100  DS    0H
         BAKR  R14,0
         ST    R0,OBCAMLST+4           PUT DSNAME PTR IN CAMLST
         MVC   VOLUME,0(R1)            PUT VOLUME
         OBTAIN OBCAMLST               GET VTOC ENTRY
         LTR   R15,R15                 DATASET IN VTOC ?
         BZ    VTOC110                 YES. BRANCH
         ABEND 2,DUMP
VTOC110  DS 0H
         LA    R2,LOCAREA-44           GET ADDR OF VTOC ENTRY
         USING FMT1,R2                 MAP ENTRY
         LA    R15,0                   SET RC
         TM    DS1DSORG,DS1DSGPO       IS IT PARTITIONED ?
         BO    VTOC190
         LA    R15,8                   NO - SET RC
VTOC190  PR
*
*******************************************************************
* GET DSN FROM JFCB
* INPUT:  R9 = ADDRESS OF TIOT
*         R1 = JFCB TOKEN
* OUTPUT: R1 = ADDRESS OF DSN
*******************************************************************
JFCB100  DS    0H
         BAKR  R14,0
         LA    R8,EPA
         ST    R8,SWEPAPTR
         USING ZB505,R8
         XC    SWAEPA,SWAEPA
         STCM  R1,B'0111',SWVA
         SWAREQ FCODE=RL,EPA=SWEPAPTR,MF=(E,SWAPARMS),UNAUTH=YES
         LTR   R15,R15
         BZ    JFCB190
         ABEND 1,DUMP
JFCB190  DS    0H
*        TPUT  =CL23'RETURN FROM JFCB.......',23
         L     R1,SWBLKPTR             GET JFCB ADDR
         SR    R15,R15
         PR
********************************************************************
* DISPLAY RESULTS
* INPUT: R1 CONTAINS ADDRESS OF LINE TO BE DISPLAYED
* OUTPUT: LINE DISPLAYED
********************************************************************
DISPL100  DS 0H
         BAKR  R14,0
         LR    R6,R1
         L     R5,UPTADDR              GET UPT ADDR
         L     R4,ECTADDR              GET ECT ADDR
         XC    IOPLADS,IOPLADS         CLEAR PUTLINE WORK AREA
         XC    ECBADS,ECBADS           CLEAR PUTLINE WORK AREA
         PUTLINE    PARM=PUTBLOK,UPT=(R5),ECT=(R4),ECB=ECBADS,         X
               OUTPUT=((R6),TERM,SINGLE,DATA),MF=(E,IOPLADS)
         LTR   R15,R15
         BZ    DISPL190
         ABEND 5,DUMP
DISPL190 PR
********************************************************************
*     END OF SUBROUTINES
********************************************************************
*
********************************************************************
*     DCB FOR ALLOCATION
********************************************************************
MYDCBLEN EQU   *-MYDCB
SAVEDCB  DC    (MYDCBLEN)X'00'
*******************************************
*  BLDL LIST
*******************************************
BLDADDR  DC    A(BLDLIST)
         DS    0F
BLDLIST  DC    X'0001'
         DC    X'000E'
MEMBER   DC    CL8' '
         DS    XL3
K        DS    X        CONCATENATION NUMBER
Z        DS    X        WHERE SYSTEM FOUND THE ENTY
*******************************************
* STORAGE FOR REGISTERS IN CALLED PROGRAM
* AND MISCELLANEOUS DATA AREAS
*******************************************
SWEPAPTR DS    F                       USED BY SWAREQ MACRO
EPA      DS    CL20                    USED BY SWAREQ MACRO
SWAPARMS SWAREQ MF=L                   USED BY SWAREQ MACRO
TIOTADDR DS    A                       ADDRESS OF TIOT
OBCAMLST CAMLST SEARCH,0,VOLUME,LOCAREA  VTOC
LOCAREA  DS    265C                    CAMLST WORK AREA
VOLUME   DC    CL6' '
PGMFLAG  DC    X'0'                    PGM RUN FLAGS
FINISH   EQU   X'80'                   WHEN SET PGM SHOULD FINISH
*                                      PGMFLAG=00 => KEEP GOING
*                                      PGMFLAG=80 => FINISH
SCAN1ST  DC    X'80'                   USER ONLY WANTS 1ST OCCURANCE
FOUND    DC    X'00'                   DID YOU FIND THE MEMBER ?
FOUNDYES DC    X'80'                   DID YOU FIND THE MEMBER ?
ZERO     EQU   X'00'
ONE      DC    F'1'
BLANKS   DC    CL12' '
*
RACROTE  RACROUTE REQUEST=AUTH,                                        X
               CLASS='DATASET',                                        X
               WORKA=*-*,                                              X
               MF=L
*
RACSAVE  DS    18F
RACWORK  DS    512C
FNDMSG1  DC    AL2(FNDMSG1L),AL2(0)
         DC    C'SCAN4 V2.0: LOOKING FOR: '
FMEM     DC    CL8' '
FALL     DC    C'                '
FNDMSG1L EQU   *-FNDMSG1
FALLTXT  DC    C' ALL OCCURRANCES'
FNDMSG2  DC    AL2(FNDMSG2L),AL2(0)
         DC    C'DDNAME    DATASET NAME '
FNDMSG2L EQU   *-FNDMSG2
FNDMSG3  DC    AL2(FNDMSG3L),AL2(0)
         DC    C'------    ------------ '
FNDMSG3L EQU   *-FNDMSG3
FNDMSG4  DC    AL2(FNDMSG4L),AL2(0)
DDNAME   DC    CL8' '
         DC    CL2' '
FDSN     DC    CL44' '
FNDMSG4L EQU   *-FNDMSG4
FNDMSG5  DC    AL2(FNDMSG5L),AL2(0)
         DC    C'MEMBER NOT FOUND'
FNDMSG5L EQU   *-FNDMSG5
FNDMSG6  DC    AL2(FNDMSG6L),AL2(0)
FDSN6    DC    CL44' '
         DC    C'...NOT AUTHORISED TO SEARCH LIBRARY'
FNDMSG6L EQU   *-FNDMSG6
FNDMSG7  DC    AL2(FNDMSG7L),AL2(0)
         DC    C'MEMBER NOT FOUND '
FNDMSG7L EQU   *-FNDMSG7
ECBADS   DS    F'0'                   SPACE FOR THE EVENT CONTROL BLOCK
PUTBLOK  PUTLINE    MF=L              LIST FORM OF THE PUTLINE MACRO
*                                     INSTRUCTION. THIS EXPANDS INTO A
*                                     PUTLINE PARAMETER BLOCK.
IOPLADS  DC    4F'0'                  SPACE FOR THE INPUT/OUTPUT
ERASE    DC    X'27F5F3'           ERASE WRITE COMMAND
ECB      DS    A                   ECB FOR PARSE
ANS      DS    A                   ANSWER AREA FOR PARSE
CPPLPTR  DS    A                   CPPL ADDRESS
UPTADDR  DS    F                       ADDR OF USERS UPT
ECTADDR  DS    F                       ADDR OF USERS ECT
PPLAREA  DC    (PPLLEN)X'0'
***********************************************************************
* SCANDS DEFINITIONS (FOR DYNALLOC)                                   *
***********************************************************************
ALLRBP   DC    X'80',AL3(ALLRB)
*
ALLRB    DS    0F
ALLLEN   DC    AL1(20)
ALLVERB  DC    X'01'                  OPTION:ALLOCATION
ALLFLG1  DC    H'0'
ALLERRCD DC    H'0'
ALLINFO  DC    H'0'
ALLTXTP  DC    A(ALLTXTS)
         DC    F'0'
ALLFLG2  DC    F'0'
*
ALLTXTS  DC    A(ALLTXT1)
         DC    A(ALLTXT2)
         DC    X'80',AL3(ALLTXT3)        TURN ON HIGH ORDER BIT TO END
*                                      PARM LIST
ALLTXT1  DS    0F                      DDNAME TEXT UNIT
         DC    XL2'01',XL2'01',AL2(8)  KEY,#,LENGTH
ALLTXTDD DC    CL8'##MYDD#'            DDNAME
*
ALLTXT2  DS    0F                      DSNAME TEXT UNIT
         DC    XL2'02',XL2'01',AL2(44) KEY,#,LENGTH
ALLTXTDS DS    CL44                    DSNAME
*
ALLTXT3  DS    0F                      DISP TEXT UNIT
         DC    XL2'04',XL2'01',XL2'01',X'08' KEY,#,LENGTH,DISP=SHR
*
MYDCBLN# EQU   *-##MYDCB#
         EJECT
***********************************************************************
*              DE-ALLOCATE RB                                         *
***********************************************************************
         DS    0F
DALRBP   DC    X'80',AL3(DALRB)
*
DALRB    DS    0F
DALLEN   DC    AL1(20)
DALVERB  DC    X'02'                  OPTION:DEALLOCATE
DALFLG1  DC    H'0'
DALERRCD DC    H'0'
DALINFO  DC    H'0'
DALTXTP  DC    A(DALTXTS)
         DC    F'0'
DALFLG2  DC    F'0'
*
DALTXTS  DC    X'80',AL3(DALTXT1)
*
DALTXT1  DS    0F                      DDNAME TEXT UNIT
         DC    XL2'01',XL2'01',AL2(8)  KEY,#,LENGTH
         DC    CL8'##MYDD#'            DDNAME
*
         LTORG
***********************************************************************
* PARSE CONTROL LIST                                                  *
***********************************************************************
PCL      IKJPARM DSECT=PDL         START THE PARAMETER CONTROL LIST
*
MEMBNAME IKJIDENT '$$FRED',FIRST=ANY,OTHER=ANY,                        *
               PROMPT='MEMBER NAME',MAXLNTH=8,                         *
               HELP='WHAT MEMBER DO YOU WISH TO LOOK FOR?'
SCANPARM IKJKEYWD
         IKJNAME 'ALL'
         IKJENDP
         EJECT
*******************************************************************
*     MAP REQUIRED DSECTS
*******************************************************************
         CVT DSECT=YES
         IEFJESCT
         IHACDE
         IHALPDE
         IEFZB505
         REGEQU
         DCBD DSORG=PS
FMT1     DSECT
         IECSDSL1 1
         IEFUCBOB
         IKJCPPL
         IKJPPL                    PARSE PARAMETER LIST
PPLLEN   EQU   *-PPL
LLT      DSECT
LLTHEAD  DS    0F
LLTID    DS    CL4
LLTCOUNT DS    XL4
LLTDSLTH DS    XL1
LLTDSN   DS    CL44
*
LPAT     DSECT
LPATID   DS  CL4
LPATCNT  DS  XL4
LPATNTRY DS 0CL45
LPATDSLN DS  X
LPATDSN  DS  CL44
         IEFTIOT1
         END
 SCAN4 ISFLPA
