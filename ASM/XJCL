***********************************************************************
*                                                                     *
*    Title:    'EXTRACT JCL FROM SDSF OUTPUT'                         *
*    System:   N/A                                                    *
*    Module:   XJCL                                                   *
*    Program:  XJCL                                                   *
*    Function: The purpose of this program is to extract the original *
*              JCL submitted from an edit session of SDSD held        *
*              output.                                                *
*                                                                     *
*              Note, the program cannot extract in-stream data. If    *
*              it is required, suggest the lines be identified and    *
*              excluded prior to issuing of this command.             *
*                                                                     *
*              Parameter of 'P' will also include expanded and        *
*              substituted procedure lines with 'XX' and '/X'         *
*              respectively.                                          *
*                                                                     *
*              Has it's own built in tutorial. Member XJCLH000....    *
*                                                                     *
*    Notes:    Program is re-entrant                                  *
*    Author:   ASYSTS Pty. Ltd. (Alex Kara)                           *
*                                                                     *
***********************************************************************
*         PRINT OFF
*         COPY  @MACROS                 COMMON MACROS
*         PRINT ON
***********************************************************************
                                                                SPACE 1
XJCL     KICKOFF (R12),WORKAREA,WORKAREL
                                                                SPACE 1
*---------------------------------------------------------------------*
*   Initialise environment                                            *
*---------------------------------------------------------------------*
         ISPEXEC MF=E,INIT=Y           INIT ISPF INTERFACE
         ISPVDEFX LIST=NO,FORMAT=CHAR,MF=E,                            +
               INM=(STATUS),ANM=STATUS,LEN=4096
         ISPVDEFX LIST=NO,FORMAT=CHAR,MF=E,                            +
               INM=(LINE#),ANM=LINE#,LEN=6
         ISPVDEFX LIST=NO,FORMAT=CHAR,MF=E,                            +
               INM=(RANGE),ANM=RANGE,LEN=5
         ISPVDEFX LIST=NO,FORMAT=CHAR,MF=E,                            +
               INM=(SHIFT),ANM=SHIFT,LEN=2
         ISPVDEFX LIST=NO,FORMAT=CHAR,MF=E,                            +
               INM=(XSTAT),ANM=XSTAT,LEN=2
         ISPVDEFX LIST=NO,FORMAT=CHAR,MF=E,                            +
               INM=(GC009),ANM=STATUS,LEN=79
                                                                SPACE 1
         ISPEXEC 'CONTROL ERRORS RETURN'
*        ISPEXEC 'CONTROL ERRORS CANCEL'
         ISPEXEC 'ISREDIT MACRO (GC009)' IDENTYFY AS MACRO
         CLI   STATUS,C'?'             Q. HELP CALLED
         BNE   SETSTAT                    N. CONTINUE
         LA    R2,XJCLH000             LOAD SCREEN POINTER
         LA    R3,XJCSZ100             LOAD SCREEN LENGTH
         TPUT  (R2),(R3),NOEDIT,NOWAIT,,BREAKIN,HIGHP
         TGET  STATUS,79,ASIS,WAIT     GET REPLY
         ISPEXEC 'CONTROL DISPLAY REFRESH' REFRESH SCREEN AFTER FULLSCR
         B     EXITPR00                EXIT PROGRAM
                                                                SPACE 1
SETSTAT  DS    0H
         MVC   RANGE,=C'10 12'         MOVE INITIAL SCAN RANGE
         MVC   SHIFT,=C'10'            MOVE INITIAL SHIFT VALUE
         MVC   PROCSI(2),STATUS        MOVE PROCEDURE INCLUDE FLAG
         ISPEXEC 'ISREDIT (STATUS) = USER_STATE'
         ISPEXEC 'ISREDIT CURSOR = 1 0'
         ISPEXEC 'ISREDIT (LINE#) = LINENUM .ZLAST'
         PACK  DWORK8(8),LINE#(6)      PACK LAST LINE NUMBER
         CVB   R9,DWORK8                  AND USE AS LOOP COUNTER
         LA    R8,1                    INITIALISE LINE NUMBER POINTER
LOOP1    DS    0H
         UNPACK R8,6,LINE#,MF=E        CONVERT TO CHARACTER
         ISPEXEC 'ISREDIT (XSTAT) = XSTATUS &&LINE#'
         CLI   XSTAT,C'X'              Q. LINE EXCLUDED
         BNE   NEXTLINE                   N. GO BUMP POINTER
         ISPEXEC 'ISREDIT SHIFT ) &&LINE# 10'
NEXTLINE DS    0H
         LA    R8,1(R8)                BUMP LINE NUMBER
         BCT   R9,LOOP1                LOOP TILL END
                                                                SPACE 1
         ISPEXEC 'ISREDIT X " //" &&RANGE ALL'
         LTR   R15,R15                 Q. ANY FOUND
         BZ    RANGEOK                    Y. RANGE IS OK
         MVC   RANGE,=C'11 13'         MOVE REVISED SCAN RANGE
         MVC   SHIFT,=C'11'            MOVE INITIAL SHIFT VALUE
         ISPEXEC 'ISREDIT X " //" &&RANGE ALL'
         LTR   R15,R15                 Q. ANY FOUND
         BZ    RANGEOK                    Y. RANGE IS OK
         MVC   STATUS(79),SPACES       INITIALISE MESSAGE AREA
         MVC   STATUS(24),=C'No JCL statements found.'
         B     EXITPR00                PREMATURE EXIT
RANGEOK  DS    0H
         CLI   PROCSI,C'P'             Q. INCLUDE PROCEDURE STATEMENTS
         BNE   OMITPROC                   N. BYPASS
         ISPEXEC 'ISREDIT X " X/" &&RANGE ALL'
         ISPEXEC 'ISREDIT X " XX" &&RANGE ALL'
OMITPROC DS    0H
         ISPEXEC 'ISREDIT DELETE ALL NX'
         ISPEXEC 'ISREDIT RESET'
                                                                SPACE 1
         ISPEXEC 'ISREDIT CURSOR = 1 0'
         ISPEXEC 'ISREDIT (LINE#) = LINENUM .ZLAST'
         PACK  DWORK8(8),LINE#(6)      PACK LAST LINE NUMBER
         CVB   R9,DWORK8                  AND USE AS LOOP COUNTER
         LA    R8,1                    INITIALISE LINE NUMBER POINTER
LOOP2    DS    0H
         UNPACK R8,6,LINE#,MF=E        CONVERT TO CHARACTER
         ISPEXEC 'ISREDIT (XSTAT) = XSTATUS &&LINE#'
         ISPEXEC 'ISREDIT SHIFT ( &&LINE# &&SHIFT'
         LA    R8,1(R8)                BUMP LINE NUMBER
         BCT   R9,LOOP2                LOOP TILL END
                                                                SPACE 1
         ISPEXEC 'ISREDIT CURSOR = 1 0' TOP OF SCREEN
                                                                SPACE 1
         MVC   STATUS(79),SPACES       INITIALISE MESSAGE AREA
         MVC   STATUS(38),=C'You may need to change the job card...'
EXITPR00 DS    0H
         ISPEXEC 'ISREDIT USER_STATE = (STATUS)'
         ISPEXEC 'SETMSG MSG(GC009)'
         RACKOFF RC=00                 EXIT PROGRAM WITH 12 RETURN CODE
                                                                SPACE 1
*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*
         LTORG
*---------------------------------------------------------------------* ---*
SPACES   DC    CL256' '
         COPY  XJCLH000                HELP SCREEN
                                                                SPACE 1
*---------------------------------------------------------------------* ---*
WORKAREA DSECT
         DS    18F                     REGISTER SAVE AREA ETC...
DWORK8   DS    D                       DOUBLE WORD WORK FIELD
                                                                SPACE 1
         UNPACK   MF=L                 LIST FORMAT OF UNPACK
         ISPEXEC  MF=L,INIT=Y          LIST FORMAT OF ISPINIT
         ISPVDEFX MF=L                 LIST FORMAT OF ISPVDEFX
                                                                SPACE 1
RANGE    DC    CL5'10 12'              COLUMN RANGE
SHIFT    DC    CL5'10'                 COLUMN SHIFT
XSTAT    DS    CL2' '                  EXCLUDE STATUS
PROCSI   DS    CL1' '                  INCLUDE PROCEDURE STATEMENTS
SSUB     DS    CL1' '                  SHOW SUBSTITUTIONS
LINE#    DC    CL6' '                  LINE NUMBER
STATUS   DS    CL4096                  REQUIRES 1380 BYTES
WORKAREL EQU   *-WORKAREA
*---------------------------------------------------------------------* ---*
         END
