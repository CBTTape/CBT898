//TSGAKA JOB ,'AL-CDMP1XX',MSGCLASS=V,CLASS=A,                          JOB12599
//       NOTIFY=&SYSUID,REGION=4096K
//*      REGION=4096K
//*
//*
//*    JOB TO ASSEMBLE AND LINK ASSEMBLER SOURCE
//*
//*
//ASM      EXEC  PGM=ASMA90,REGION=1024K,
//         PARM='DECK,NOOBJECT,LIST,ALIGN,NOXREF'
//SYSLIB   DD DISP=SHR,DSN=TSGAK.MACLIB,
//            DCB=BLKSIZE=27920
//         DD DISP=SHR,DSN=SYS1.MACLIB
//*        DD DISP=SHR,DSN=SYS1.AMODGEN
//         DD DISP=SHR,DSN=SYS1.MODGEN
//         DD DISP=SHR,DSN=TSGAK.ASM
//         DD DISP=SHR,DSN=CICS170.MACLIB
//         DD DISP=SHR,DSN=CICS170.SOURCE
//SYSUT1   DD UNIT=SYSALLDA,SPACE=(1700,(900,900))
//SYSUT2   DD UNIT=SYSALLDA,SPACE=(1700,(900,900))
//SYSUT3   DD UNIT=SYSALLDA,SPACE=(1700,(900,900))
//SYSLIN   DD DUMMY
//SYSPUNCH DD DISP=(,PASS),UNIT=SYSALLDA,SPACE=(CYL,(5,5,0)),
//      DCB=(BLKSIZE=400),DSN=&LOADSET
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
***********************************************************************
*                                                                     *
*  Title:    INVENTORY/PRINT OF CICS DUMPS                            *
*  System:   CICSDUMP 2.0.0                                           *
*  Module:   CDMP1XX                                                  *
*  Program:  CDMP1XX                                                  *
*  Function: This program has two basic functions:                    *
*            1. Prepare an inventory of dumps on the allocated dump   *
*               dataset. This function is pertformed, if no           *
*               parameters are passed using the SYSIN dataset.        *
*                                                                     *
*            2. Extract selected dump using details reported from     *
*               function 1 above. This function is invoked by passing *
*               1 or more parameters via the SYSIN dataset.           *
*                                                                     *
*            Parameter format (Different format to 3XX):              *
*             byte  1 -  4 : Task id or "ALL "                        *
*                   5 -  8 : Aben code or "ALL "                      *
*                   9 - 14 : start time format 'HHMMSS'               *
*                  15 - 20 : End time format 'HHMMSS'. (Should be     *
*                            at least 1 second greater than start     *
*                            time.)                                   *
*                  21 - 26 : Start date format 'DDMMYY'.              *
*                  27 - 32 : End date format 'DDMMYY'.                *
*                  33 - 36 : Number of dumps to print from matches.   *
*                            (should be "0001".)                      *
*                  37 - 44 : Program name or leave blank for all      *
*                            programs.                                *
*             Eg1. M25DASRA1334441334451603951603950001MSO25D         *
*             Eg2. ALL ASRA0800002400001603951603950010               *
*             Eg3. TR#1ALL 0800002400001603951603950003PROGTR#1       *
*                                                                     *
*            Files:                                                   *
*             SYSIN   - Input parameters (selected dumps)             *
*                       Forces inventory only without data.           *
*             UT1     - CICS dump dataset.                            *
*             UT2     - Extracted dump to be used as input to the     *
*                       CICS dump formatting program DFHDUP.          *
*                       Allocate as DUMMY for function 1.             *
*             UT3     - Temporary dataset of inventory of dumps to    *
*                       be used to create selection ISPF table.       *
*                       Allocate as DUMMY for function 2.             *
*             SYSPRINT- SDSF output of UT2.                           *
*                                                                     *
*  Author:   A. Kara.                                                 *
*                                                                     *
***********************************************************************
***********************************************************************
CDMP1XX  KICKOFF (R13,R12),AMODE=24,RMODE=24
#MAXALLW EQU   30 ******TO DETERMINE MAX ENTRIES WHICH MAY BE REQUESTED
#MAXLALL EQU   60 ******TO DETERMINE MAX LINES PER PRINT PAGE
BEGIN    DS    0H
         LA    R6,INREC           SET REG 12 AS I/O POINTER FOR DUMPS
         LA    R8,INREC           SET REG 8 AS I/O POINTER FOR CARDS
         USING REQTASK,RB         USE REQUEST TABLE DSECT
         USING INTASK,R8          USE REQUEST TABLE DSECT
         USING DCRECLEN,R6        USE DFHDCRDS DSECT
         TIME  DEC                GET CURRENT DATE/TIME
         ST    R0,TIME            SAVE CURRENT TIME
         ST    R1,DATE            SAVE CURRENT DATE
         MVO   TIME(5),TIME(4)    DEL THOUSANDS
         UNPK  HEADDT,DATE        PUT JULIAN DATE IN HEADER
         OI    HEADDT+3,X'F0'     MAKE DATE NUMERIC
         UNPK  WORK,TIME(5)       MAKE TIME CHARS
         MVC   HEADTM(2),WORK+1   MOVE HOURS TO HEADER
         MVC   HEADTM+3(2),WORK+3 MOVE MINUTES TO HEADER
         MVC   HEADTM+6(2),WORK+5 MOVE SECONDS TO HEADER
         MVC   HEADTM+9(2),WORK+7 MOVE HUNDREDS TO HEADER
         OPEN  (CARD,(INPUT))     SELECTION CRITERIA
         OPEN  (OUTPUT,(OUTPUT))  SELECTED DUMPS
         OPEN  (PRINTER,(OUTPUT)) SEL/DET/REQ DUMP STATS
         OPEN  (INPUT,(INPUT))    DUMP FILE FROM CICS
         OPEN  (INVENTRY,(OUTPUT)) OPEN INVENTORY OUTPUT
         RDJFCB (INPUT)           GET FILE INFO ON CICS DUMP FILE
         LA    RA,INJFCB          POINT TO JFCB
         MVC   HEADDSN,JFCBDSNM-INFMJFCB(10)  MOVE CICS DUMP FILE DSN
         L     RB,=A(TABLE)       POINT TO SAVE SELECTION TABLE
         L     R9,#MAXENT         SET MAXIMUN SELECTIONS ALLOWED
         SR    RA,RA              CLEAR REG 10
         BAL   RE,PUTHDR          GO PRINT HEADER LINES
VERSION  DS    0H
*        MVI   HIGHDATE,C'2'      MOVE 2 HIGHDATE ID
*        AP    HIGHYEAR,=P'100'   ADD 100 TO GET EX.285 FOR 1985
COMP     GET   CARD,INREC         READ REQUESTED DUMPS
         MVC   REQTASK,INTASK     SAVE SELECTED TASK
         MVC   REQABEND,INABEND   SAVE SELECTED ABEND CODE
         MVC   REQPROG,INPROG     SAVE SELECTED PROGRAM NAME
         CLC   INBTIME,BLANKS     IS REQ BEGIN TIME ENTERED
         BNE   ZAP1               ...YES, USE REQ BEGIN TIME
         MVC   INBTIME,ZEROS      ...NO, USE ZEROS AS REQ BEGIN TIME
ZAP1     OC    INBTIME,ZEROS      ENSURE NUMERIC BEGIN TIME
         PACK  REQBTIME,INBTIME   SAVE REQ BEGIN TIME
         CLC   INETIME,BLANKS     IS REQ END TIME ENTERED
         BNE   ZAP2               ...YES, USE REQ END TIME
         MVC   INETIME,=C'999999' ...NO, USE HIGH VALUE END TIME
ZAP2     OC    INETIME,ZEROS      ENSURE NUMERIC END TIME
         PACK  REQETIME,INETIME   SAVE REQ END TIME
         CLC   INBDATE,BLANKS     IS REQ BEGIN DATE ENTERED
         BNE   ZAP3               ...YES, USE REQ BEGIN DATE
         MVC   INBDATE,ZEROS      ...NO, USE LOW VALUES BEGIN DATE
         PACK  QUES,ZEROS         INITIALISE QUESTION
         B     ZAP4               BYPASS JULIAN DATE CONVERSION
ZAP3     OC    INBDATE,ZEROS      ENSURE NUMERIC BEGIN DATE
         MVC   QUES,INBDATE       MOVE BEGIN DATE
         BAL   RE,CONVDATE        GO CONVERT TO JULIAN
ZAP4     ZAP   REQBDATE,QUES      SAVE JULIAN BEGIN DATE
         OI    REQBDATE+3,X'0F'   ENSURE PROPER SIGN
         CLC   INEDATE,BLANKS     IS REQUESTED END DATE ENTERED
         BNE   ZAP5               ...YES, USE REQ END DATE
         MVC   INEDATE,HIGHDATE   ...NO, USE HIGH DATE
         PACK  QUES,HIGHDATE      SET END DATE TO HIGH DATE
         B     ZAP6               BYPASS JULIAN DATE CONVERSION
ZAP5     OC    INEDATE,ZEROS      ENSURE NUMERIC END DATE
         MVC   QUES,INEDATE       MOVE END DATE
         BAL   RE,CONVDATE        GO CONVERT TO JULIAN
ZAP6     ZAP   REQEDATE,QUES      SAVE JULIAN END DATE
         OI    REQEDATE+3,X'0F'   ENSURE PROPER SIGN
         ZAP   REQNUM,=P'9999'    SET DEAFULT TO ASSUME HIGH LIMIT
         CLC   INNUM,BLANKS       WAS NO OF DUMPS REQ BLANKS
         BE    ZAP7               ...YES, ASSUME HIGH LIMIT
         OC    INNUM,ZEROS        ENSURE PROPER SIGN
         PACK  REQNUM,INNUM       INIT NUMBER OF DUMPS REQUESTED
         OI    REQNUM+3,X'0F'     ENSURE PROPER SIGN
         B     ZAP7
ZAP7     PACK  REQSEL,ZEROS       INIT NUMBER OF DUMPS SELECTED
         ZAP   DWORD,REQBTIME     ADJUST REQUESTED BEGIN TIME
         MP    DWORD,=P'10'       FOR THOUSANDS
         ZAP   REQBTIME,DWORD     STORE ADJUSTED BEGIN TIME
         ZAP   DWORD,REQETIME     ADJUST REQUESTED END TIME
         MP    DWORD,=P'10'       FOR THOUSANDS
         ZAP   REQETIME,DWORD     STORE ADJUSTED END TIME
         LA    RB,#REQLEN(RB)     INCREMENT TABLE
         LA    RA,1(RA)           COUNT NUMBER OF REQUESTS
         BCT   R9,COMP            LOOP UNTIL TABLE IS FULL
EOJCARD  ST    RA,#MAXREQ         SAVE NUMBER OF REQUESTS
READ     DS    0H
         BAL   RE,GETFILE         READ CICS DUMP FILE
         CLC   DCIDRC,=C'IDRECORD' Dump header
         BNE   NOTDMPHD           ...No, bypass
         CLI   DCIRTSI,X'10'      IS THIS DUMP HEADER
         BE    SEARCH             ...YES, SEARCH FOR REQUEST
         MVC   MESSAGE(07),=C'TYPE - '
         MVC   MESSAGE+7(23),=C'SUPERVISOR SYSTEM DUMP '
         CLI   DCIRTSI,X'42'      IS THIS SUPREVISOR DUMP HEADER
         BE    SEARCHS            ...YES, SEARCH FOR REQUEST
         MVC   MESSAGE+7(23),=C'PARTITIONED SYSTEM DUMP'
         CLI   DCIRTSI,X'43'      IS THIS PARTITIONED DUMP HEADER
         BE    SEARCHS            ...YES, SEARCH FOR REQUEST
         MVC   MESSAGE+7(23),=C'FORMATTED SYSTEM DUMP  '
         CLI   DCIRTSI,X'41'      IS THIS FORMATTED DUMP HEADER
         BE    SEARCHS            ...YES, SEARCH FOR REQUEST
NOTDMPHD DS    0H
         CLI   PICK,X'01'         HAS THIS DUMP BEEN REQUESTED
         BNE   READ               ...NO, CONTINUE TO READ CICSDUMP FILE
         BAL   RE,PUTFILE         ...YES, WRITE DUMP RECORD TO SEL FILE
         B     READ               GO READ AGAIN
SEARCH   MVI   PICK,X'00'         CLEAR SELECTD SWITCH
         L     RB,=A(TABLE)       POINT TO SELECT TABLE
         L     R9,#MAXREQ         SET MAX SELECTIONS
         MVC   DETRAN,DCTASKID    MOVE TASK TO PRINT
         MVC   DECODE,DCDUMPC     MOVE ABEND TO PRINT
         MVC   COMPSECT,DCTIME    GET TIME OF DUMP
         MVO   COMPSECT,COMPSECT(3) DELETE THOUSANDS
         UNPK  DEBTIME,COMPSECT   MOVE TIME TO PRINT
         UNPK  DEBDATE,DCDATE     MOVE DATE TO PRINT
         OI    DEBTIME+5,X'F0'    ENSURE PROPER SIGN
         OI    DEBDATE+5,X'F0'    ENSURE PROPER SIGN
*---------------------------------------------------------------------*
*        BAL   RE,GETFILE         GO GET NEXT RECORD
         MVC   MESSAGE(07),=C'PROG - '
*        MVC   MESSAGE+7(07),INREC+59 PROGRAM NAME FROM LINE 2
*        MVC   MESSAGE+7(08),=C'12345678'    <=======
*        MVI   MESSCNT,C' '       RIPPLE CLEAR
*        MVC   MESSCNT+1(61),MESSCNT
*---------------------------------------------------------------------*
LOOP1    DS    0H
         LTR   R9,R9              IS REG 9 ZERO
         BZ    TESTEOF            ...YES, FORMAT THIS DUMP
         CLC   REQTASK,=C'ALL '   SELECT ALL TASKS?
         BE    LOOP2              ...YES, CHECK ABEND CODE
         CLC   REQTASK,DCTASKID   SELECT THIS TASK?
         BNE   LOOPX              ...NO, INCREMENT SEL TABLE
LOOP2    CLC   REQABEND,=C'ALL '  SELECT ALL ABEND CODES?
         BE    LOOP3              ...YES, CHECK DATE
         CLC   REQABEND,DCDUMPC   SELECT THIS ABEND CODE?
         BNE   LOOPX              ...NO, INCREMENT SEL TABLE
LOOP3    DS    0H
         CLC   REQPROG,SPACES     Q. SELECT ALL PROGRAMS
         BE    LOOP4                 Y. CHECK DATE
*---\|/---------------------------------------------------------------*
    MVC  TARGET(8),REQPROG
    MVI  TARGET+8,C'-'
    MVC  TARGET+9(8),MESSAGE+7
    PUT   PRINTER,TARGET
*---/|\---------------------------------------------------------------*
         CLC   REQPROG,MESSAGE+7  Q. IS THIS THE REQUESTED PROGRAM
         BNE   LOOPX                 N. BYPASS THIS SELECTION
LOOP4    CP    DCDATE,REQBDATE    SELECT THIS DATE?
         BL    LOOPX              ...NO, INCREMENT SEL TABLE
         CP    DCDATE,REQEDATE    SELECT THIS DATE?
         BH    LOOPX              ...NO, INCREMENT SEL TABLE
         CP    DCTIME,REQBTIME    SELECT THIS TIME?
         BL    LOOPX              ...NO, INCREMENT SEL TABLE
         CP    DCTIME,REQETIME    SELECT THIS TIME?
         BH    LOOPX              ...NO, INCREMENT SEL TABLE
         MVI   PICK,X'01'         SET TO SELECT THIS DUMP
         AP    REQSEL,=P'1'       INCREMENT NUMBER SELECTED
         MVC   MESSAGE,=CL15'MATCHED      ' SET TO SHOW DUMP MATCHED
         CP    REQSEL,REQNUM      COMPARE SELECTION WITH NO. REQSTED
         BH    TESTEOF            ...GT, INCREMENT SEL TABLE
         MVC   MESSAGE,=CL15'SELECTED <===' SET TO SHOW DUMP SELECTED
         PUT   OUTPUT,INREC       PUT FIRST RECORD
         BAL   RE,PUTFILE         GO WRITE TO DUMP FILE (2ND RECORD)
         B     TESTEOF            GO PRINT DUMP HEADER
LOOPX    LA    RB,#REQLEN(RB)     INCR TABLE POINTER
         BCT   R9,LOOP1           GO CHECK AGAIN
TESTEOF  EQU   *
         CLC   DEBDATE,COMPDATE   IS DATE LESS THAN SAVE DATE
         BL    EOJ                ...YES, READ NO MORE
         MVC   COMPDATE,DEBDATE   ...NO, UPDATE SAVE DATE
         BAL   RE,PUTPRT          GO PUT PRINT LINE
         B     READ               READ NEXT DUMP RECORD
*---------------------------------------------------------------------*
SEARCHS  MVI   PICK,X'00'         CLEAR SELECTD SWITCH
         L     RB,=A(TABLE)       POINT TO SELECT TABLE
         L     R9,#MAXREQ         SET MAX SELECTIONS
*---------------------------------------------------------------------*
         MVC   DETRAN,=C'SYSD'    MOVE SYSTEM DUMP-ID TO PRINT
         MVC   DECODE,SPACES      MOVE SPACES TO CODE TO PRINT
         MVC   COMPSECT,DCTIME    GET TIME OF DUMP
         MVO   COMPSECT,COMPSECT(3) DELETE THOUSANDS
         UNPK  DEBTIME,COMPSECT   MOVE TIME TO PRINT
         UNPK  DEBDATE,DCDATE     MOVE DATE TO PRINT
         OI    DEBTIME+5,X'F0'    ENSURE PROPER SIGN
         OI    DEBDATE+5,X'F0'    ENSURE PROPER SIGN
*---------------------------------------------------------------------*
*        BAL   RE,GETFILE         GO GET NEXT RECORD
*        MVC   DECODE,INREC+55    MOVE ABEND TO PRINT
*---------------------------------------------------------------------*
SLOOP1   DS    0H
         LTR   R9,R9              IS REG 9 ZERO
         BZ    STESTEOF           ...YES, FORMAT THIS DUMP
         CLC   REQTASK,=C'SYSD'   SELECT ALL TASKS?
         BE    SLOOP3             ...YES, CHECK ABEND CODE
         CLC   REQTASK,DCTASKID   SELECT THIS TASK?
         BNE   SLOOPX             ...NO, INCREMENT SEL TABLE
SLOOP2   CLC   REQABEND,=C'ALL '  SELECT ALL ABEND CODES?
         BE    SLOOP3             ...YES, CHECK DATE
         CLC   REQABEND,DECODE    SELECT THIS ABEND CODE?
         BNE   SLOOPX             ...NO, INCREMENT SEL TABLE
SLOOP3   DS    0H
         CP    DCDATE,REQBDATE    SELECT THIS DATE?
         BL    SLOOPX             ...NO, INCREMENT SEL TABLE
         CP    DCDATE,REQEDATE    SELECT THIS DATE?
         BH    SLOOPX             ...NO, INCREMENT SEL TABLE
         CP    DCTIME,REQBTIME    SELECT THIS TIME?
         BL    SLOOPX             ...NO, INCREMENT SEL TABLE
         CP    DCTIME,REQETIME    SELECT THIS TIME?
         BH    SLOOPX             ...NO, INCREMENT SEL TABLE
         MVI   PICK,X'01'         SET TO SELECT THIS DUMP
         AP    REQSEL,=P'1'       INCREMENT NUMBER SELECTED
         MVC   MESSAGE,=CL15'MATCHED      ' SET TO SHOW DUMP MATCHED
         CP    REQSEL,REQNUM      COMPARE SELECTION WITH NO. REQSTED
         BH    STESTEOF           ...GT, INCREMENT SEL TABLE
         MVC   MESSAGE,=CL15'SELECTED <===' SET TO SHOW DUMP SELECTED
         PUT   OUTPUT,INREC       PUT FIRST RECORD
         BAL   RE,PUTFILE         GO WRITE TO DUMP FILE (2ND RECORD)
         B     STESTEOF           GO PRINT DUMP HEADER
SLOOPX   LA    RB,#REQLEN(RB)     INCR TABLE POINTER
         BCT   R9,SLOOP1          GO CHECK AGAIN
STESTEOF EQU   *
         CLC   DEBDATE,COMPDATE   IS DATE LESS THAN SAVE DATE
         BL    EOJ                ...YES, READ NO MORE
         MVC   COMPDATE,DEBDATE   ...NO, UPDATE SAVE DATE
         BAL   RE,PUTPRT          GO PUT PRINT LINE
         B     READ               READ NEXT DUMP RECORD
EOJ      DS    0H
         L     RB,=A(TABLE)       POINT TO BOGINNING OF REQ TABLE
         L     R9,#MAXREQ         SET MAXIMUM NUMBER OF REQUESTS
EOJLOOP  LTR   R9,R9              IS REG 9 ZEROS?
         BZ    EOJEND             ...YES, THROUGH PRINTING REQS
         MVC   MESSAGE(18),=CL15'<= INPUT PARAMETER'
         MVI   MESSCNT,C' '       RIPPLE CLEAR
         MVC   MESSCNT+1(61),MESSCNT
         MVC   DETRAN,REQTASK     MOVE REQUESTED TASK
         MVC   DECODE,REQABEND    MOVE REQUESTED ABEND CODE
         MVO   REQBTIME,REQBTIME(L'REQBTIME-1) ADJUST DEL THOUSANDS
         MVO   REQETIME,REQETIME(L'REQETIME-1) ADJUST DEL THOUSANDS
         OI    REQBTIME+(L'REQBTIME-1),X'0F' ENSURE SIGN
         OI    REQETIME+(L'REQETIME-1),X'0F' ENSURE SIGN
         OI    REQBDATE+(L'REQBDATE-1),X'0F' ENSURE SIGN
         OI    REQEDATE+(L'REQEDATE-1),X'0F' ENSURE SIGN
         OI    REQNUM+(L'REQNUM-1),X'0F' ENSURE SIGN
         OI    REQSEL+(L'REQSEL-1),X'0F' ENSURE SIGN
         UNPK  DEBTIME,REQBTIME   MOVE REQUESTED BEGIN TIME
         UNPK  DEETIME,REQETIME   MOVE REQUESTED END TIME
         UNPK  DEBDATE,REQBDATE   MOVE REQUESTED BEGIN DATE
         UNPK  DEEDATE,REQEDATE   MOVE REQUESTED END DATE
         UNPK  DENUM,REQNUM       MOVE REQUESTED MAX NO OF DUMPS
         UNPK  DESEL,REQSEL       MOVE NUMBER OF DUMPS ENCOUTERED
         BAL   RE,PUTPRT          GO PRINT REQUEST
         LA    RB,#REQLEN(RB)     INCR TABLE POINTER
         BCT   R9,EOJLOOP         LOOP UNTIL FINISHED
*---------------------------------------------------------------------*
EOJEND   CLOSE INPUT              **CICS DUMP FILE **
         CLOSE CARD               **DUMP SELECTIONS**
         CLOSE OUTPUT             **SELECTED DUMPS **
         CLOSE PRINTER            **PRINTED REPORTS**
         CLOSE INVENTRY           CLOSE PRINTER
EXITPROG RACKOFF RC=0             RETURN TO CALLER
*=====================================================================*
GETFILEH DS    F
GETFILE  ST    RE,GETFILEH        SAVE RETURN ADDR
         GET   INPUT,INREC        READ NEXT RECORD
         L     RE,GETFILEH        RESTORE REG 14
         BR    RE                 GO BACK
GETERRHR DS    F
DCBABEX  MVI   3(R1),X'04'
GETERR   MVI   GETFLAG,C'E'       SET GET ERROR FLAG
         BR    RE                 GO BACK
GETERRA  DC    F'0'
PUTFILEH DS    F
PUTFILE  ST    RE,PUTFILEH        SAVE RETURN ADDR
         PUT   OUTPUT,INREC       WRITE DUMP RECORD
         L     RE,PUTFILEH        RESTORE REG 14
         BR    RE                 GO BACK
PUTPRTHR DS    F
PUTPRT   ST    RE,PUTPRTHR        SAVE RETURN ADDR
         PUT   PRINTER,DETAIL     WRITE DUMP RECORD
         CLC   #MAXREQ,=F'0'      Q. ANY SELECTION PARAMETER
         BNE   CONT#200              N. BYPASS CLOSE
         PUT   INVENTRY,DETAIL    WRITE DUMP RECORD TO INVENTORY
CONT#200 DS    0H
         MVC   DETAIL+1(132),DETAIL CLEAR PRINT LINE
         LA    R5,1(R5)           INCR LINE COUNT
         C     R5,#MAXLINE        CHECK FOR PAGE OVERFLOW
         BL    PUTPRTBY           ...NO, BYPASS HEADER
         BAL   RE,PUTHDR          GO DO HEADER PRINT
PUTPRTBY L     RE,PUTPRTHR        RESTORE REG 14
         BR    RE                 GO BACK
PUTHDRHR DS    F
PUTHDR   ST    RE,PUTHDRHR        SAVE RETURN ADDR
         PUT   PRINTER,HEADER
         PUT   PRINTER,HEADER2
         PUT   PRINTER,HEADER3
         PUT   PRINTER,DETAIL     FOR BLANK LINE AFTER HEADER LINES
         CLC   #MAXREQ,=F'0'      Q. ANY SELECTION PARAMETER
         BNE   CONT#300              N. BYPASS CLOSE
         PUT   INVENTRY,HEADER
         PUT   INVENTRY,HEADER2
         PUT   INVENTRY,HEADER3
         PUT   INVENTRY,DETAIL    FOR BLANK LINE AFTER HEADER LINES
CONT#300 DS    0H
         LH    R5,=H'4'           INCR LINE COUNT FOR HEADER LINES
         L     RE,PUTHDRHR        RESTORE REG 14
         BR    RE                 GO BACK
CONVDATH DS    F
CONVDATE ST    RE,CONVDATH        SAVE RETURN ADDR
         PACK  DAY,QUES(2)        GET DAY
         PACK  MONTH,QUES+2(2)    GET MONTH
         PACK  YEAR,QUES+4(2)     GET YEAR
         LA    R3,DATETAB         POINT TO DAYS TABLE
         DP    YEAR,=P'4'         DIVIDE YEAR BY 4
         CP    YEAREM,=P'0'       IS IT EVENLY DIVISIBLE
         BNE   BYLEAP             ...NO, NOT LEAP YEAR
         LA    R3,DATETABL        ...YES, POINT TO LEAP YEAR DAYS TABLE
BYLEAP   PACK  QUES,QUES+4(2)     PACK YEAR
         AP    QUES,HIGHYEAR      ADD 100 TO GET EX.185 FOR 1985
         MP    QUES,=P'1000'      SHIFT YEAR LEFT 3 POS
         ZAP   DWORD,MONTH        GET MONTH
         CVB   R4,DWORD           PUT MONTH NUMBER IN REC
         BCTR  R4,0               DECR MONTHS BY 1
         LTR   R4,R4              IS RESULTING MONTH 0
         BZ    NOMORMTH           ...YES, MUST BE JANUARY
CONVLOOP AP    QUES,0(2,R3)       START ACCUMULATING DAYS
         LA    R3,2(R3)           BUMP TO NEXT MONTH
         BCT   R4,CONVLOOP        DECR NUMBER OF MONTHS
NOMORMTH AP    QUES,DAY           MONTHS COMPLETED ADD DAYS
         UNPK  ANSW,QUES          SAVE RESULTING JULIAN
         OI    ANSW+5,X'F0'       ENSURE PROPER SIGN
         L     RE,CONVDATH        RESTORE RETURN
         BR    RE                 GO BACK
         LTORG
************* C O N S T A N T S ********************
DWORD    DC    D'0'
HIGHDATE DC    C'199365'          HIGH DATE FOR DEFAULT END DATE
HIGHYEAR DC    P'100'             GET EX.185 FOR 1985
#MAXENT  DC    A(#MAXALLW)
#MAXREQ  DC    A(0)
#MAXLINE DC    A(#MAXLALL)
TARGET   DC    CL80' '
PICK     DC    X'00'
QUES     DC    CL6' '
ANSW     DC    CL6' '
MONTH    DC    PL2'0'
DAY      DC    PL2'0'
YEAR     DS    0CL3
         DS    CL2
YEAREM   DS    CL1
TIME     DS    F
         DC    X'0F'
DATE     DS    F
WORK     DS    CL9
SPROG    DS    CL8                PROGRAM TO MATCH ON
ZEROS    DC    C'000000'
BLANKS   DC    CL80' '
COMPSECT DS    CL4
COMPDATE DC    C'000000'
GETFLAG  DS    CL1
DATETAB  DS    0CL24              NON LEAP YEAR TABLE
         DC    P'31'              J
         DC    P'28'              F
         DC    P'31'              M
         DC    P'30'              A
         DC    P'31'              M
         DC    P'30'              J
         DC    P'31'              J
         DC    P'31'              A
         DC    P'30'              S
         DC    P'31'              O
         DC    P'30'              N
         DC    P'31'              D
DATETABL DS    0CL24              LEAP YEAR TABLE
         DC    P'31'              J
         DC    P'29'              F
         DC    P'31'              M
         DC    P'30'              A
         DC    P'31'              M
         DC    P'30'              J
         DC    P'31'              J
         DC    P'31'              A
         DC    P'30'              S
         DC    P'31'              O
         DC    P'30'              N
         DC    P'31'              D
HEADER   DS    0CL133
         DC    C'1'
         DC    C'CICS DUMP REQUEST AS OF '
HEADDT   DC    CL5' '
         DC    C'  TIME '
HEADTM   DC    C'  :  :  :  '
         DC    CL5' '
         DC    C'DSN='
HEADDSN  DC    CL44' '
         DC    CL32' '
HEADER2  DS    0CL133
         DC    C' '
         DC    C'TASK CODE BEG TM  END TM BEG DTE END DTE '
         DC    C' NO.REQ NO.FND REMARKS'
         DC    CL75' '
HEADER3  DS    0CL133
         DC    C' '
         DC    C'---- ---- ------  ------ ------- ------- '
         DC    C' ------ ------ ------------------------------------'
         DC    CL40' '
DETAIL   DS    0CL133
PRTCHAR  DC    C' '
DETRAN   DC    CL4' '
         DC    CL1' '
DECODE   DC    CL4' '
         DC    CL1' '
DEBTIME  DC    CL6' '
         DC    CL1' '
DEETIME  DC    CL6' '
         DC    CL2' '
DEBDATE  DC    CL6' '
         DC    CL2' '
DEEDATE  DC    CL6' '
         DC    CL2' '
DENUM    DC    CL6' '
         DC    CL2' '
DESEL    DC    CL6' '
         DC    CL1' '
MESSAGE  DC    CL15' '
MESSCNT  DC    CL62' '
CARD     DCB   DSORG=PS,MACRF=GM,EODAD=EOJCARD,DDNAME=SYSIN
INPUT    DCB   DSORG=PS,MACRF=GM,EODAD=EOJ,DDNAME=UT1,EXLST=LSTA,      X
               SYNAD=GETERR
OUTPUT   DCB   DSORG=PS,MACRF=PM,DDNAME=UT2
PRINTER  DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,RECFM=FBA,LRECL=133
PRINTER1 DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRNT1,RECFM=FBA,LRECL=133
INVENTRY DCB   DSORG=PS,MACRF=PM,DDNAME=UT3,RECFM=FB,LRECL=133,        X
               BLKSIZE=19019
LSTA     DS    0F
         DC    X'07'
         DC    AL3(INJFCB)
         DC    X'80'
INJFCB   DS    0F
         DS    CL176
         DS    0D
         IEFJFCBN LIST=NO
SPACES   DC    CL256' '
LINE#    DC    F'0'
INREC    DS    CL32760
TABLE    DC    32CL(#MAXALLW)' '
         COPY  CRDS170
         DSECT
INTASK   DS    CL4
INABEND  DS    CL4
INBTIME  DS    CL6
INETIME  DS    CL6
INBDATE  DS    CL6
INEDATE  DS    CL6
INNUM    DS    PL4
INPROG   DS    CL8
         DSECT
REQTASK  DS    CL4
REQABEND DS    CL4
REQBTIME DS    CL4
REQETIME DS    CL4
REQBDATE DS    CL4
REQEDATE DS    CL4
REQNUM   DS    PL4
REQSEL   DS    PL4
REQPROG  DS    CL8
#REQLEN  EQU   *-REQTASK
         END
/*
//*
//LKED     EXEC PGM=IEWL,COND=(5,LT),
//         PARM='MAP,LET,LIST,AMODE=24'
//SYSUT1   DD UNIT=SYSALLDA,SPACE=(1024,(100,10))
//SYSLMOD  DD DISP=SHR,DSN=TSGAK.LOADLIB(CDMP1XX)
//SYSPRINT DD SYSOUT=*
//SYSLIB   DD DISP=SHR,DSN=TSGAK.LOADLIB,
//            DCB=BLKSIZE=27920
//         DD DISP=SHR,DSN=TSGAK.LOADLIB
//SYSLIN   DD DISP=(OLD,DELETE),DSN=&LOADSET
//         DD DDNAME=SYSIN
