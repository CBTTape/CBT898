)ATTR
 _ type(INPUT) color(red)   intens(high)   hilite(uscore)
 + type(text)  color(blue)  intens(low)    skip(on)
 $ type(output) color(green) intens(high)
 @ type(text) color(yellow) intens(high)
 ~ type(text) color(BLUE) intens(low) hilite(uscore)
 ?   type(OUTPUT) intens(NON)
 ! AREA(DYNAMIC)
 Y TYPE(CHAR) COLOR(YELLOW) hilite(reverse)
 y TYPE(CHAR)    COLOR(YELLOW)
 b TYPE(CHAR)    COLOR(BLUE)
 g TYPE(CHAR)    COLOR(GREEN)
 w TYPE(CHAR)    COLOR(WHITE)
)BODY EXPAND(\\) SMSG(POPUPMSG) LMSG(POPUPMSG)
@&ZTIME\-\< DB2 Reorg Parameter Entry >\-\
@&SID@===>_ZCMD
@
+Please enter@&OPER1  +from@LIST+option for$SSID+:  Utilid:_REORID  +
$Z+
+Listname  :_REORLDEF+  Enter name,@*+for list or@/+to create/modify list.
+Reuse     :_Z  +       !DYNA1,SHAD1     !          +Log:_Z  +!DYNA2,SHAD2 !
+SHR level :_REORSHRL + !DYNA3,SHAD3                           !
+            Deadline:_Z      +!DYNA0,SHAD0                                    !
+            Drain wait:_Z   +  Retry:_Z  +Retry delay:_Z   +
+            Mappingtable:_REORMDBN+._REORMTSP          +   Maxro:  _Z    +
+            Drain:_Z      + Longlog:_Z       + Delay:_Z   +Timeout:_Z    +
+Offposlim :_Z  +(num)  Indreflimit:_Z   +(num)  Reportonly:_Z  +!DYNAA,SHADA !
+Fastswitch:_Z  +       !DYNA9,SHAD9                           !
+Sortdata  :_Z  +       !DYNA4,SHAD4                           !
+Sortkeys  :_Z  +       !DYNA5,SHAD5                           !
+Statistics:_Z  +       !DYNA8,SHAD8                           !
+  Update  :_REORUPDT  +!DYNA6,SHAD6                           !
+  History :_REORHIST  +!DYNA7,SHAD7                           !
+  Sample  :_Z  +       Numeric percentage (optional)
+Templates -            For template names: (those marked with%o+are optional)
+  PunchDDN:_REORPDDN+ %o+Enter name,@*+for list or@/+to create/modify template.
+  CopyDDn :_REORCDDN+ %o+Enter name,@*+for list or@/+to create/modify template.
+  Recovery:_REORRDDN+ %o+Enter name,@*+for list or@/+to create/modify template.
)INIT
 &SID   = &ZSYSID
 &DYNA0 = 'None or Current(with further input to follow)'
 &SHAD0 = 'ybbbbbbbybbbbbbbwwwwwwwwwwwwwwwwwwwwwwwwwwwwb'
 &DYNA1 = 'Yes or No'
 &SHAD1 = 'ybbbbbbyb'
 &DYNA2 = &DYNA1
 &SHAD2 = &SHAD1
 &DYNA3 = 'Change, Reference or None'
 &SHAD3 = 'ybbbbbbbybbbbbbbbbbbbybbb'
 &DYNA4 = &DYNA1
 &SHAD4 = &SHAD1
 &DYNA5 = &DYNA1
 &SHAD5 = &SHAD1
 &DYNA6 = 'ALl, ACcesspath, SPace or NOne'
 &SHAD6 = 'yybbbyybbbbbbbbbbyybbbbbbbyybb'
 &DYNA7 = &DYNA6
 &SHAD7 = &SHAD6
 &DYNA8 = &DYNA1
 &SHAD8 = &SHAD1
 &DYNA9 = &DYNA1
 &SHAD9 = &SHAD1
 &DYNAA = &DYNA1
 &SHADA = &SHAD1
 &GC001 = 'Valid values are specified to the right of the field.'
 &GC002 = 'Valid values are: Defer, numeric integer or blank'
 &GC003 = 'Valid values are: Writers, All or blank'
 &GC004 = 'Valid values are: Continue, Drain, Term or blank'
 &GC005 = 'Combined with value of Update invalid. +
          Valid values are: ACcesspath, NOne.'
 &GC006 = 'Combined with value of Update invalid. +
          Valid values are: SPace, NOne.'
 &GC007 = 'Combined with value of Update invalid. +
          Valid values are: NOne.'
 &GC008 = 'Valid values are numeric integer or blank'
 &GC009D= 'Valid values are: Abend or Term'
 .ZVARS = '( +
            POPUPMSG +
            REORRUSE REORLOG +
            REORDEAD +
            REORDRAW REORRETR REORRETD +
            REORMXRO REORDRAN REORLLOG REORDLAY REORTOUT +
            REOROFFL REORINDR REORREPO +
            REORFSWC REORSDAT REORSKEY +
            REORSTAT REORSPCT +
           )'

 IF (&UTILLIB = &Z)
    .ATTR (REORID)   = 'TYPE(OUTPUT) INTENS(NON)'
    .ATTR (REORLDEF) = 'TYPE(OUTPUT) INTENS(NON)'
)REINIT
REFRESH(REORUPDT,REORHIST,REORRUSE,REORSHRL,REORSDAT,REORSKEY,REORREPO,
        REORDEAD,REORMXRO,REORDRAN,REORLLOG,REORDLAY,REORTOUT)
)PROC
&XXX = TRUNC(&ZCMD,3)
IF (&XXX ¬= DEB,DEF,'?')
 IF (&UTILLIB ¬= &Z) VER(&REORID,NB)
 IF (&REORLDEF ¬= '*','/')
   IF (&UTILLIB ¬= &Z) VER(&REORLDEF,NB,NAME)
   &REORRUSE = TRANS(TRUNC(&REORRUSE,1) Y,YES N,NO *,*)
   VER(&REORRUSE,LIST,YES,NO,MSG=GC001)
   &REORLOG  = TRANS(TRUNC(&REORLOG,1) Y,YES N,NO *,*)
   VER(&REORLOG,NB,LIST,NO,YES,MSG=GC001)
   &REORSHRL  = TRANS(TRUNC(&REORSHRL,1) N,NONE C,CHANGE R,REFERENCE *,*)
   VER(&REORSHRL,NB,LIST,NONE,CHANGE,REFERENCE,MSG=GC001)
   IF (&REORSHRL = CHANGE,REFERENCE)
      &X1    = 'For SHR level &REORSHRL, valid'
      &GC008 = '&X1 values are: None or Current'
      &REORDEAD = TRANS(TRUNC(&REORDEAD,1) C,CURRENT N,NONE *,*)
      VER(&REORDEAD,NB,LIST,CURRENT,NONE,MSG=GC008)
      &X2    = 'For Deadline "&REORDEAD", valid'
      &GC009 = '&X2 values are: Timestamp or Date'
      &GC009A= '&X2 values are: ''+'' or ''-''.'
      &GC009B= '&X2 values are: Years, MONths, Days, Hours, MINutes, +
                           Seconds or MICroseconds'
      &GC009C= 'For Deadline &REORDEAD, must be non-blank numeric'
   IF (&REORSHRL = CHANGE)
      &GC009E= 'For SHR level CHANGE, must be in the range 0-1800'
      &GC009F= 'For SHR level CHANGE, must be in the range 0-255'
      &GC009G= 'For SHR level CHANGE, must be in the range 1-1800'
      &GC009H= 'For SHR level CHANGE, must define Mappingtable'
      VER(&REORDRAW,RANGE,0,1800,MSG=GC009E)
      VER(&REORRETR,RANGE,0,255,MSG=GC009F)
      If (&REORRETR ¬= &Z)
         VER(&REORRETD,RANGE,1,1800,MSG=GC009G)
      VER(&REORMDBN,NB,MSG=GC009H)
      VER(&REORMTSP,NB,MSG=GC009H)
      &REORMXRO = TRANS(TRUNC(&REORMXRO,1) D,DEFER *,*)
      IF (&REORMXRO ¬= DEFER)
         VER(&REORMXRO,NUM,MSG=GC002)
      &REORDRAN = TRANS(TRUNC(&REORDRAN,1) W,WRITERS A,ALL *,*)
         VER(&REORDRAN,LIST,WRITERS,ALL,MSG=GC003)
      &REORLLOG = TRANS(TRUNC(&REORLLOG,1) C,CONTINUE T,TERM D,DRAIN *,*)
         VER(&REORLLOG,LIST,CONTINUE,TERM,DRAIN,MSG=GC004)
      VER(&REORDLAY,NUM)
      &REORTOUT = TRANS(TRUNC(&REORTOUT,1) A,ABEND T,TERM *,*)
         VER(&REORTOUT,LIST,ABEND,TERM,MSG=GC004)
   VER(&REOROFFL,NUM,MSG=GC008)
   VER(&REORINDR,NUM,MSG=GC008)
   &REORREPO = TRANS(TRUNC(&REORREPO,1) Y,YES N,NO *,*)
   VER(&REORREPO,NB,LIST,YES,NO)
   &REORFSWC = TRANS(TRUNC(&REORFSWC,1) Y,YES N,NO *,*)
   VER(&REORFSWC,NB,LIST,YES,NO,MSG=GC001)
   &REORSDAT = TRANS(TRUNC(&REORSDAT,1) Y,YES N,NO *,*)
   VER(&REORSDAT,NB,LIST,YES,NO,MSG=GC001)
   &REORSKEY = TRANS(TRUNC(&REORSKEY,1) Y,YES N,NO *,*)
   VER(&REORSKEY,NB,LIST,YES,NO,MSG=GC001)
   &REORSTAT = TRANS(TRUNC(&REORSTAT,1) Y,YES N,NO *,*)
   VER(&REORSTAT,NB,LIST,YES,NO,MSG=GC001)
   IF (&REORSTAT = YES)
      &REORUPDT = TRANS(TRUNC(&REORUPDT,2) AL,ALL AC,ACCESSPATH SP,SPACE
                 NO,NONE *,*)
      VER(&REORUPDT,NB,LIST,ALL,ACCESSPATH,SPACE,NONE,MSG=GC001)
      &REORHIST = TRANS(TRUNC(&REORHIST,2) AL,ALL AC,ACCESSPATH SP,SPACE
                 NO,NONE *,*)
      VER(&REORHIST,NB,LIST,ALL,ACCESSPATH,SPACE,NONE,MSG=GC001)
      IF (&REORUPDT = ACCESSPATH)
        VER(&REORHIST,LIST,ACCESSPATH,NONE,MSG=GC005)
      IF (&REORUPDT = SPACE)
        VER(&REORHIST,LIST,SPACE,NONE,MSG=GC006)
      IF (&REORUPDT = NONE)
        VER(&REORHIST,LIST,NONE,MSG=GC007)
      VER(&REORSPCT,NUM)
   IF (&REORPDDN ¬= '*','/')
     VER(&REORPDDN,NAME)
   IF (&REORCDDN ¬= '*','/')
     VER(&REORCDDN,NAME)
   IF (&REORRDDN ¬= '*','/')
     VER(&REORRDDN,NAME)
)END
