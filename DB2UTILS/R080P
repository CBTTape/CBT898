)ATTR
 _ type(INPUT) color(red)   intens(high)   hilite(uscore)
 + type(text)  color(blue)  intens(low)    skip(on)
 $ type(output) color(green) intens(high)
 @ type(text) color(yellow) intens(high)
 ~ type(text) color(BLUE) intens(low) hilite(uscore)
 ?   type(OUTPUT) intens(NON)
 ! AREA(DYNAMIC)
 Y TYPE(CHAR) COLOR(YELLOW) hilite(reverse)
 y TYPE(CHAR)    COLOR(YELLOW)
 b TYPE(CHAR)    COLOR(BLUE)
)BODY EXPAND(\\) SMSG(POPUPMSG) LMSG(POPUPMSG)
@&ZTIME\-\< DB2 Check Data Parameter Entry >\-\
@&SID@===>_ZCMD
@
+Please enter@&OPER1  +from@TABLESPACE+option for$SSID+: Utilid:_CHKDID  +
+
+Tablespace:_CHKDDBNM+._CHKDTSPC+Part:_Z   +(optional)
+Scope     :_Z      +   !DYNA1,SHAD1                           !
+Auxerror  :_CHKDAUXE  +!DYNA2,SHAD2                           !
+Delete    :_Z  +       !DYNA3,SHAD3                           !
+Log       :_Z  +       !DYNA4,SHAD4                           !
+Exceptions:_Z  +       !DYNA5,SHAD5                           !
+ERRDDN    :_CHKDEDDN+  Enter name,@*+for list or@/+to create/modify template.
+WORKDDN   :_CHKDWDDN+  Enter name,@*+for list or@/+to create/modify template.
+Sortdevt  :_CHKDDEVT+  Enter valid device type (or@*+for a selection list).
+Sortnum   :_Z +        !DYNA6,SHAD6                           !
?Z+
)INIT
 &SID   = &ZSYSID
 &DYNA1 = 'ALl, AUxonly, PEnding or REfonly'
 &SHAD1 = 'yybbbyybbbbbbbyybbbbbbbbbyybbbbb'
 &DYNA2 = 'Invalidate or Report'
 &SHAD2 = 'ybbbbbbbbbbbbbybbbbb'
 &DYNA3 = 'Yes or No'
 &SHAD3 = 'ybbbbbbyb'
 &DYNA4 = &DYNA3
 &SHAD4 = &SHAD3
 &DYNA5 = 'Numeric or  (blank)'
 &SHAD5 = 'bbbbbbbbbbbYbbbbbbb'
 &DYNA6 = &DYNA5
 &SHAD6 = &SHAD5
 .ZVARS = '( +
            CHKDPART +
            CHKDSCOP CHKDDELT CHKDLOG CHKDEXCP +
            CHKDSRTN +
            POPUPMSG +
           )'

 &GC001 = 'Valid values are specified to the right of the field.'
 &GC002 = 'Combined with value of Delete invalid. +
          Valid values are: Yes or No.'
)REINIT
 REFRESH(CHKDSCOP,CHKDAUXE,CHKDDELT,CHKDLOG)
)PROC
 &XXX = TRUNC(&ZCMD,3)
 IF (&XXX ¬= DEB,DEF,'?')
   VER(&CHKDID,NB)
   VER(&CHKDDBNM,NB,NAME)
   VER(&CHKDTSPC,NB)
   VER(&CHKDPART,NUM)
   &CHKDSCOP = TRANS(TRUNC(&CHKDSCOP,2) AL,ALL AU,AUXONLY PE,PENDING
               RE,REFONLY *,*)
   VER(&CHKDSCOP,LIST,ALL,AUXONLY,PENDING,REFONLY,MSG=GC001)
   &CHKDAUXE = TRANS(TRUNC(&CHKDAUXE,1) I,INVALIDATE R,REPORT *,*)
   VER(&CHKDAUXE,LIST,INVALIDATE,REPORT,MSG=GC001)
   &CHKDDELT = TRANS(TRUNC(&CHKDDELT,1) Y,YES N,NO *,*)
   VER(&CHKDDELT,LIST,YES,NO,MSG=GC001)
   IF (&CHKDDELT = YES)
      &CHKDLOG = TRANS(TRUNC(&CHKDLOG,1) Y,YES N,NO *,*)
      VER(&CHKDLOG,LIST,YES,NO,MSG=GC002)
   IF (&CHKDWDDN ¬= '*','/')
     VER(&CHKDWDDN,NB,NAME)
   IF (&CHKDDEVT ¬= '*')
     VER(&CHKDDEVT,NB)
   VER(&CHKDSRTN,NUM)
)END
