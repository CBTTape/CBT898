/******************************** REXX ********************************/
/*--------------------------------------------------------------------*/
/*  Process PERFormance Query parameter entry                         */
/*--------------------------------------------------------------------*/
Arg oper1,templib,tempsdef,debug
    Address ISPEXEC

    cactn = "RETURN"
/*  cactn = "CANCEL"                                                  */
    "CONTROL ERRORS" cactn

    "VGET (perfqv,panelv,ssid,sqlid) SHARED"
    "VGET ("perfqv panelv" nexto) SHARED"

    process_matrix = ' ',
        'TSNRS=TSNRS:TABLESPACE:RUNSTATS:R0RUNSTS:J231         ',
        'IXNRS=IXNRS:INDEXSPACE:RUNSTATS:R0RUNSTS:J231         ',
        'TS10RR=TS10RR:TABLESPACE:REORG:R0REORG(TL):J701       ',
        'IXLLPD=IXLLPD:INDEXSPACE:REORG:R0REORG(IL):J701       ',
        'TSWLSS=TSWLSS:::(NOJ01):JX01                          ',
        ' '
    perfctl1 = 'PQ'Time('s')
    excl_list= "AND DBNAME NOT IN ('DSNDB06','DSNDB07','DSHADOW')"
/*
ts10rr='/'
*/
perfq_scr1:
    zcmd=
    "DISPLAY PANEL(&PANEL140) CURSOR(&csr1) CSRPOS(&csrp1)"
    If rc /= 0 Then Do
        "VPUT ("perfqv") SHARED"
        gc009 = oper1 "entry panel abandoned."
        "SETMSG MSG(GC009)"
        Return 9
    End
    If zcmd='?' Then Do
        x=helpdrvr(helptab '16 /OPEN')
        Signal perfq_scr1
    End
    If zcmd='DEBUG' Then Interpret r0debug(debug,perfq_scr1)
    If Substr(zcmd,1,3)='DEF' Then Do
        x=R0site$('perf');"VGET (defvars) SHARED";"VGET ("defvars") SHARED"
        Signal perfq_scr1;End

    uproc_string = process_matrix
    Do While uproc_string /= ''
        Parse VAR uproc_string xxx uproc_string
        Parse VAR xxx oper2 '=' label ':' ldeftype,
            ':' perfsubr ':' sub_x ':' jcl_t .
        Parse VAR sub_x sub_x '(' ulact ')'
        Interpret 'act =' oper2
        If act = '' Then Iterate
        Interpret oper2 '='
        Interpret 'x='label'_process()'
        If x = 0 & sub_x /= '' Then Do
            gc009 = 'Enter' perfsubr' parameters to supplement "'oper1'"',
                    'processing.'
            "SETMSG MSG(GC009)"
            Interpret 'x='sub_x'(perfsubr,,templib,tempsdef,,ulact)'
        End
        If x > 0 Then Leave
        nexto = R0cstrng(nexto,'JXXX',jcl_t)
        "VGET (perfid) SHARED"
        "VPUT ("perfqv",ldeftype,nexto,ulact) SHARED"
        Return 0
    End
    Signal perfq_scr1

/*--------------------------------------------------------------------*/
/*  Process Table Space with No RunStats                              */
/*--------------------------------------------------------------------*/
tsnrs_process:
    sqlstmt = "SELECT DBNAME,NAME FROM SYSIBM.SYSTABLESPACE",
              "WHERE NACTIVEF = - 1",
              "AND DBNAME LIKE '"perfdblk"'" excl_list
    sqlretf = ':dbname,:name'
    Return r0perflk(sqlstmt,sqlretf,perfctl1,perfdblk,,,,debug)

/*--------------------------------------------------------------------*/
/*  Process INdex with No RunStats                                    */
/*--------------------------------------------------------------------*/
ixnrs_process:
    sqlstmt = "SELECT DBNAME,INDEXSPACE,CREATOR,NAME,TBCREATOR,TBNAME",
              "FROM SYSIBM.SYSINDEXES",
              "WHERE SPACEF = - 1",
              "AND DBNAME LIKE '"perfdblk"'" excl_list
    sqlretf = ':dbname,:v1,:v2,:name,:v4,:v5'
    sqlretf = ':dbname,:name,:v1,:v2,:v4,:v5'
    Return r0perflk(sqlstmt,sqlretf,perfctl1,perfdblk,,,,debug)

/*--------------------------------------------------------------------*/
/*  Process Table spaces with more than 10 percent relocated rows     */
/*--------------------------------------------------------------------*/
ts10rr_process:
    sqlstmt = "SELECT DBNAME,TSNAME",
              "FROM SYSIBM.SYSTABLEPART",
              "WHERE DBNAME LIKE '"perfdblk"'" excl_list,
              "AND CARDF > 0",
              "AND ((NEARINDREF + FARINDREF) * 100 / CARDF )  >" tspct
    sqlretf = ':dbname,:name'
    Return r0perflk(sqlstmt,sqlretf,perfctl1,perfdblk,,,,debug)

/*--------------------------------------------------------------------*/
/*  Process Indexes with a large leaf page distance                   */
/*--------------------------------------------------------------------*/
ixllpd_process:
    sqlstmt = "SELECT DBNAME,INDEXSPACE,CREATOR,NAME",
              "FROM SYSIBM.SYSINDEXES , SYSIBM.SYSINDEXPART",
              "WHERE DBNAME LIKE '"perfdblk"'" excl_list,
              "AND NLEAF > 0",
              "AND IXNAME    = NAME",
              "AND IXCREATOR = CREATOR",
              "AND (LEAFFAR / NLEAF) * 100 > 10"
    sqlretf = ':dbname,:v1,:v2,:name'
    Return r0perflk(sqlstmt,sqlretf,perfctl1,perfdblk,,,,debug)

/*--------------------------------------------------------------------*/
/*  Process Table spaces with locking size = 'S' (table space locking)*/
/*--------------------------------------------------------------------*/
tswlss_process:
    sqlstmt = "SELECT DBNAME,NAME,LOCKRULE,NTABLES",
              "FROM SYSIBM.SYSTABLESPACE",
              "WHERE LOCKRULE = 'S'"
    sqlretf = ':dbname,:name,:t1,:t2'
    gc009 = "The following table spaces have locking size = 'S'.",
            "DB2 will use table space locking when accessing a table",
            "in the table space.  You probably only want locking",
            "rule = 'S' for read-only tables or tables that are",
            "accessed by only one user (or batch job) at a time.",
            "Consider changing the locking size to 'A' (any",
            "locking). You may select all (with an *) or individuals",
            "and JCL with ALTER SQL statements will be generated",
            "for your submission.",
            ""
    "SETMSG MSG(GC009)"
    f1 = 'Lock size'
    f2 = 'No. Tables'
    nexto = 'JCL(JC,JXXX)'
    Return r0perflk(sqlstmt,sqlretf,perfctl1,perfdblk,'R141TP',f1,f2,debug)

