/******************************** REXX ********************************/
/*--------------------------------------------------------------------*/
/*  Process REORG parameter entry                                     */
/*--------------------------------------------------------------------*/
Arg oper1,utillib,templib,tempsdef,debug,ulact
    Address ISPEXEC

    cactn = "RETURN"
/*  cactn = "CANCEL"                                                  */
    "CONTROL ERRORS" cactn

    "VGET (reorgv,panelv,ssid,sqlid,rotl,rots,roil,roix,nexto) SHARED"
    xx = rotl rots roil roix nexto
    "VGET ("reorgv panelv") SHARED"
    table = 'RO'Time('s')

/*--------------------------------------------------------------------*/
/*  Called from Preformance Query ?                                   */
/*--------------------------------------------------------------------*/
    If ulact /= '' Then Do
        If ulact = 'TL' Then x=reorg_tls1()
        Else                 x=reorg_ils1()
        If x=0 Then Signal Return0
        Else Return 9
    End

    If xx/='' Then "CONTROL NONDISPL ENTER"
reorg_scr1:
    zcmd =
    "DISPLAY PANEL(&PANEL70) CURSOR(&csr1) CSRPOS(&csrp1)"
    If zcmd='DEBUG' Then Interpret r0debug(debug,reorg_scr1)
    If Substr(zcmd,1,3)='DEF' Then Do
        x=R0site$('reorgv_1');"VGET (defvars) SHARED";"VGET ("defvars") SHARED"
        Signal reorg_scr1;End

    If rc /= 0 Then Do
        "VPUT ("reorgv") SHARED"
        gc009 = oper1 "entry panel abandoned."
        "SETMSG MSG(GC009)"
        csr1=;csrp1=
        Return 9
    End
    If zcmd='?' Then Do
        x=helpdrvr(helptab '8  /OPEN')
        Signal reorg_scr1
    End
    csr1=;csrp1=
    genolist = 'OFF'
    Parse VAR zcmd cmd parm1

    Select
        When rotl /= '' Then Do
            oper1=Word(oper1,1) 'TS'
            rotl=;ulact='TL'
            x = reorg_tls1();If x=0 Then Signal Return0
        End
        When rots /= '' Then Do
            oper1=Word(oper1,1) 'TS'
            rots=;ulact='TS'
            x = reorg_tss1();If x=0 Then Signal Return0
        End
        When roil /= '' Then Do
            oper1=Word(oper1,1) 'IX'
            roil=;ulact='IL'
            x = reorg_ils1();If x=0 Then Signal Return0
        End
        When roix /= '' Then Do
            oper1=Word(oper1,1) 'IX'
            roix=;ulact='IX'
            x=reorg_ixs1();If x=0 Then Signal Return0
        End
        Otherwise NOP
    End

    Signal reorg_scr1

Return0:
    dranspec=;deadlin1=;deadlin2=;deadlin3=;deadlin4=
    mapping1=;mapping2=;mapping3=;mapping4=
    report=
    If Word(oper1,2) = 'TS' Then Do
        If reoroffl /= '' Then report = report || 'OFFPOSLIMIT' reoroffl' '
        If reorindr /= '' Then report = report || 'INDREFLIMIT' reorindr' '
    End
    Else,
        If reorleaf /= '' Then report = report || 'LEAFDISTLIMIT' reorleaf' '
    If reorrepo = 'YES' Then report = report || 'REPORTONLY'

    If reorshrl /= 'NONE' Then Do
        If reorshrl = 'CHANGE' Then Do
            If reordraw /= '' Then dranspec = dranspec ' DRAIN WAIT' reordraw
            If reorretr /= '' Then dranspec = dranspec ' RETRY' reorretr
            If reorretd /= '' Then dranspec = dranspec ' RETRY DELAY' reorretd
            #deadlin = #deadlin || dranspec
            i=0;xx='DEADLINE'
            Do while #deadlin /= ''
                i=i+1;ll=55-Length(xx)
                Interpret "deadlin"i" = xx R0wordat(#deadlin,ll,'L')"
                xx='   '
                #deadlin = R0wordat(#deadlin,ll,'T')
            End

            mapping  = reormdbn'.'reormtsp
            If reormxro /= '' Then mapping  = mapping  ' MAXRO' reormxro
            If reordran /= '' Then mapping  = mapping  ' DRAIN' reordran
            If reorllog /= '' Then mapping  = mapping  ' LONGLOG' reorllog
            If reordlay /= '' Then mapping  = mapping  ' DELAY' reordlay
            If reortout /= '' Then mapping  = mapping  ' TIMEOUT' reortout
            i=0;xx='MAPPINGTABLE'
            Do while mapping /= ''
                i=i+1;ll=55-Length(xx)
                Interpret "mapping"i" = xx R0wordat(mapping,ll,'L')"
                xx='   '
                mapping = R0wordat(mapping,ll,'T')
            End
        End
    End
    "VPUT ("reorgv" deadlin1 deadlin2 deadlin3 deadlin4",
           "mapping1 mapping2 mapping3 mapping4 report",
           "rotl rots roil roix",
           "tspace partno nexto genolist ulact) SHARED"
    Return 0

/*--------------------------------------------------------------------*/
/* REORG database from LISTDEF                                        */
/*--------------------------------------------------------------------*/
reorg_tls1:
    zcmd =
    "DISPLAY PANEL(&PANEL71) CURSOR(&csr1) CSRPOS(&csrp1)"
    If zcmd='DEBUG' Then Interpret r0debug(debug,reorg_tls1)
    If Substr(zcmd,1,3)='DEF' Then Do
        x=R0site$('reorgv');"VGET (defvars) SHARED";"VGET ("defvars") SHARED"
        Signal reorg_tls1;End

    csr1=;csrp1=
    If rc /= 0 Then Do
        gc009 = oper1 "from LIST entry panel abandoned."
         "SETMSG MSG(GC009)"
        Return 9
    End
    If zcmd='?' Then Do
        x=helpdrvr(helptab '8A /OPEN')
        Signal reorg_tls1
    End

    ret_scr=0
    x=reorg_ver_list('Database');If ret_scr Then Signal reorg_tls1

    x=reorg_ver_common();If ret_scr Then Signal reorg_tls1

    genolist='ON';nexto='JCL(JC,J10,J20,J70)'

    Return 0

/*--------------------------------------------------------------------*/
/* REORG database from TableSpace                                     */
/*--------------------------------------------------------------------*/
reorg_tss1:
    zcmd =
    "DISPLAY PANEL(&PANEL72) CURSOR(&csr1) CSRPOS(&csrp1)"
    If zcmd='DEBUG' Then Interpret r0debug(debug,reorg_tss1)
    If Substr(zcmd,1,3)='DEF' Then Do
        x=R0site$('reorgv');"VGET (defvars) SHARED";"VGET ("defvars") SHARED"
        Signal reorg_tss1;End

    csr1=;csrp1=
    If rc /= 0 Then Do
        gc009 = oper1 "FROM TABLE name entry panel abandoned."
         "SETMSG MSG(GC009)"
        Return 9
    End
    If zcmd='?' Then Do
        x=helpdrvr(helptab '8B /OPEN')
        Signal reorg_tss1
    End

    ret_scr = 0
/*--------------------------------------------------------------------*/
/*  If tablespace has not been validated or has changed, do it.       */
/*--------------------------------------------------------------------*/
    If r_table_ts /= reordbnm || reortspc || reorpart Then,
        If R0valtsp('TS',reordbnm,reortspc,reorpart) Then Do
            csr1 = 'REORDBNM'
            Signal reorg_tss1
        End
    r_table_ts = reordbnm || reortspc || reorpart

    x = reorg_ver_common()
    If ret_scr Then Signal reorg_tss1

    tspace = reordbnm'.'reortspc
    If reorpart = '' Then partno=
    Else partno = 'PART' reorpart +0 'FORCEROLLUP YES'

    nexto    = 'JCL(JC,J20,J70)'

    Return 0

/*--------------------------------------------------------------------*/
/* REORG Index from LISTDEF                                           */
/*--------------------------------------------------------------------*/
reorg_ils1:
    zcmd =
    "DISPLAY PANEL(&PANEL73) CURSOR(&csr1) CSRPOS(&csrp1)"
    If zcmd='DEBUG' Then Interpret r0debug(debug,reorg_tls1)
    If Substr(zcmd,1,3)='DEF' Then Do
        x=R0site$('reorgv');"VGET (defvars) SHARED";"VGET ("defvars") SHARED"
        Signal reorg_tls1;End

    csr1=;csrp1=
    If rc /= 0 Then Do
        gc009 = oper1 "from LIST entry panel abandoned."
         "SETMSG MSG(GC009)"
        Return 9
    End
    If zcmd='?' Then Do
        x=helpdrvr(helptab '8A /OPEN')
        Signal reorg_ils1
    End

    ret_scr=0
    x=reorg_ver_list('Index');If ret_scr Then Signal reorg_ils1

    x=reorg_ver_common();If ret_scr Then Signal reorg_ils1

    genolist='ON';nexto='JCL(JC,J10,J20,J70)'

    Return 0

/*--------------------------------------------------------------------*/
/* REORG Index from Index                                             */
/*--------------------------------------------------------------------*/
reorg_ixs1:
    zcmd =
    "DISPLAY PANEL(&PANEL74) CURSOR(&csr1) CSRPOS(&csrp1)"
    If zcmd='DEBUG' Then Interpret r0debug(debug,reorg_ixs1)
    If Substr(zcmd,1,3)='DEF' Then Do
        x=R0site$('reorgv');"VGET (defvars) SHARED";"VGET ("defvars") SHARED"
        Signal reorg_ixs1;End

    csr1=;csrp1=
    If rc /= 0 Then Do
        gc009 = oper1 "FROM TABLE name entry panel abandoned."
         "SETMSG MSG(GC009)"
        Return 9
    End
    If zcmd='?' Then Do
        x=helpdrvr(helptab '8B /OPEN')
        Signal reorg_ixs1
    End

    ret_scr = 0

/*--------------------------------------------------------------------*/
/*  If Index has not been validated or has changed, do it.            */
/*--------------------------------------------------------------------*/
    If r_table_ix /= reorcrea || reorindx || reorpart Then Do
        If R0valtsp('RB',reorcrea,reorindx,reorpart) Then Do
            csr1 = 'REORCREA'
            Signal reorg_ixs1
        End
        r_table_ix = reorcrea || reorindx || reorpart
    End

    x = reorg_ver_common()
    If ret_scr Then Signal reorg_ixs1

    If reorpart = '' Then partno =
    Else                  partno = 'PART' reorpart +0

    Return 0

/*--------------------------------------------------------------------*/
/*  Common REORG field verifications:                                 */
/*--------------------------------------------------------------------*/
reorg_ver_list:
    If utillib = '' Then Return 0
    gc009 = 'Listdef processing for REORG' Arg(1)'.'
    If reorldef = '*' Then Do
        "SETMSG MSG(GC009)"
        x = R0listm(table,utillib)
        If Datatype(x) = 'CHAR' Then reorldef = x
        ret_scr = 1
    End
    Else If reorldef = '/' Then Do
             "SETMSG MSG(GC009)"
             x = r0ldef(utillib,'reorldef')
             If Datatype(x) = 'CHAR' Then reorldef = x
             ret_scr = 1
         End
    If Sysdsn("'"utillib"("reorldef")'") /= 'OK' Then Do
        gc009 = Sysdsn("'"utillib"("reorldef")'")
        csr1 = 'REORLDEF'
        "SETMSG MSG(GC009)"
        ret_scr = 1
    End
    Return 0

/*--------------------------------------------------------------------*/
/*  Verify common fields                                              */
/*--------------------------------------------------------------------*/
reorg_ver_common:
    Call test_ddn_list
    If ret_scr Then Return 4

    deadlin=
    If reorshrl = 'NONE' Then Signal test_ddn_list
    If reordead /= 'CURRENT' Then Signal SHR_level_CHANGE
/*--------------------------------------------------------------------*/
/*  If Deadline = CURRENT then pop up duration expression panel.      */
/*--------------------------------------------------------------------*/
dur_ex_scr1:
    zcmd=
    zwinttl  = 'Deadline Durations'
    "ADDPOP ROW(8) COLUMN(8)"
    "DISPLAY PANEL(&PANEL75) CURSOR(&csr1) CSRPOS(&csrp1)"
    rc1 = rc
    "REMPOP"
    If zcmd='DEBUG' Then Interpret r0debug(debug,dur_ex_scr1)
    If Substr(zcmd,1,3)='DEF' Then Do
        x=R0site$('reorgv');"VGET (defvars) SHARED";"VGET ("defvars") SHARED"
        gc009 = 'Default values changed. Returning for verificatiom.'
        "SETMSG MSG(GC009)"
        ret_scr = 1
        csr1='ZCMD';Return 9;
    End

    If rc1 /= 0 Then Do
        ret_scr=1
        gc009 = 'Deadline CURRENT parameter entry screen abandoned.'
        "SETMSG MSG(GC009)"
        csr1='REORDEAD'
        Return 9
    End
    deadlin = reordead reorcurt
    Do i=1 To 7
        Interpret "sign=reorsig"i
        If sign = '' Then Iterate
        Interpret "valu=reorval"i";dura=reordur"i
        If Index(' 'deadlin' ',' 'dura' ') > 0 Then Do
            gc009 = 'Duration "'dura'" already used.'
            "SETMSG MSG(GC009)"
            csr1 = 'REORDUR'i
            Signal dur_ex_scr1
        End
        deadlin = deadlin sign valu dura
    End

    If deadlin = reordead reorcurt Then Do
        gc009 = "No deadline duration specifications entered."
        "SETMSG MSG(GC009)"
        Signal dur_ex_scr1
    End
    If #deadlin /= deadlin Then Do
        #deadlin = deadlin
        gc009 = "Hit [ENTER] to verify parameters or change as required."
        "SETMSG MSG(GC009)"
        Signal dur_ex_scr1
    End
/*--------------------------------------------------------------------*/
/*  If SHR level=CHANGE, have to verify MAPPINGTABLE.                 */
/*--------------------------------------------------------------------*/
SHR_level_CHANGE:
    If r_table_mt /= reormdbn || reormtsp Then Do
        sqlstmt = "SELECT DBNAME,TSNAME",
                 "FROM SYSIBM.SYSTABLES",
                 "WHERE CREATOR = '"reormdbn"'",
                 "AND   NAME   = '"reormtsp"'"
        sqlretf = ':database,:tspace'
        "VPUT (sqlstmt,sqlretf) SHARED"
        x  = R0dsnrx('On')
        xx = R0dsnrx('Ex',1)
        x  = R0dsnrx('Off')
        If xx /= 0 Then Do
            gc009 = '"'reormdbn'.'reormtsp'" table not found on "',
                    ssid'", RC = 'xx'.'
             "SETMSG MSG(GC009)"
            csr1 = 'REORMDBN'
            ret_scr=1
        End
        Else r_table_mt = reormdbn || reormtsp
    End
    If ret_scr Then Return 4
/*--------------------------------------------------------------------*/
/*  Test all the DDNs for * or / values                               */
/*--------------------------------------------------------------------*/
test_ddn_list:
    ddnused = 'P,C,R'
    x = Msg('Off')
    Do WHile ddnused /= ''
        Parse VAR ddnused ddn ',' ddnused
        Interpret 'xxx = REOR'ddn'DDN'
        If xxx = '' Then Iterate
        If xxx = '*' | xxx = '/' Then Do
            Select
                When ddn = 'C' Then yyy = 'COPYDDN'
                When ddn = 'R' Then yyy = 'RECOVERYDDN'
                When ddn = 'P' Then yyy = 'PUNCHDDN'
                Otherwise           yyy = '????DDN'
            End
            Interpret 'REOR'ddn'DDN = reorg_templates(yyy,xxx)'
            Interpret 'xxx = REOR'ddn'DDN'
        End
        If Sysdsn("'"tempsdef"("Strip(xxx)")'") /= 'OK' Then,
            If Sysdsn("'"templib"("Strip(xxx)")'") /= 'OK' Then Do
                csr1 = 'REOR'ddn'DDN'
                ddnused=
                gc009 = 'Template not found. Please correct and hit',
                        '[ENTER].'
                "SETMSG MSG(GC009)"
                ret_scr=1
            End
    End

    Return 0
/*--------------------------------------------------------------------*/
/*  Comon template testing routine                                    */
/*--------------------------------------------------------------------*/
reorg_templates: Arg v1,v2
    xxx = '?'
    If v2 = '*' Then Do
        gc009 = 'Template processing for REORG' v1'.'
        "SETMSG MSG(GC009)"
        x = R0listm(table,tempsdef,'$TTY','ND')
        x = R0listm(table,templib,'$TTY',,'EXIST')
        If Datatype(x) = 'CHAR' Then Parse VAR x xxx .
        ret_scr = 1
    End
    Else If v2 = '/' Then Do
             xmsg = 'REORG' v1
             x = R0templ(templib,tempsdef,xmsg,v1)
             If Datatype(x) = 'CHAR' Then xxx = x
             ret_scr = 1
         End

    Return xxx
