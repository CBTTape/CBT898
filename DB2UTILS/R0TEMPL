/******************************** REXX ********************************/
/*--------------------------------------------------------------------*/
/*  Process TEMPLATE data                                             */
/*--------------------------------------------------------------------*/
Parse Arg templib,tempsdef,xmsg,debug
    Address ISPEXEC

    cactn = "RETURN"
/*  cactn = "CANCEL"                                                  */
    "CONTROL ERRORS" cactn
    table   = 'TM'Time('s')
    "VGET (panelv,tempv) SHARED";"VGET ("panelv") SHARED"
    "VGET ("tempv") PROFILE"
    xmsg=Msg('Off')
template_process:
    templat# = Arg(4)
    template =
    gc009 = 'Template processing for' xmsg
    "SETMSG MSG(GC009)"
    edt='DASD';Call edtlist;Parse VAR edtlist +8 dasdlist +8 edtlist
    dasdlist=Strip(dasdlist)
    Do While edtlist /= ''
        Parse VAR edtlist xx +8 edtlist
        dasdlist=dasdlist Strip(xx)
    End
    edt='TAPE';Call edtlist;Parse VAR edtlist +8 tapelist +8 edtlist
    tapelist=Strip(tapelist)
    Do While edtlist /= ''
        Parse VAR edtlist xx +8 edtlist
        tapelist=tapelist Strip(xx)
    End

temp_scr1:
    zcmd =
    "DISPLAY PANEL(&PANEL14) CURSOR(&csr1) CSRPOS(&csrp1)"
    If zcmd='DEBUG' Then Interpret r0debug(debug,temp_scr1)
    If Substr(zcmd,1,3)='DEF' Then Do
        x=R0site$('tempv');"VGET (defvars) SHARED";"VGET ("defvars") SHARED"
        Signal temp_scr1;End

    csr1=;csrp1=
    If rc /= 0 Then Do
        "VPUT ("tempv") PROFILE"
        If Arg(4) /= '' Then Return template
        gc009 = "TEMPLATE entry panel abandoned."
        "SETMSG MSG(GC009)"
        Return 9
    End
    If zcmd='?' Then Do
        x=helpdrvr(helptab '14 /OPEN')
        Signal temp_scr1
    End

    Parse VAR zcmd cmd parm1
    cmd3 = Substr(cmd,1,3)
    If cmd3 = 'DEF' Then Do
        xx = R0site$(tempv)
        Interpret "Parse var xx" tempv
        Signal temp_scr1
    End
    If tempddty = '*' | tempddty = '?' Then Do
        zwinttl  = 'DB2 Template Types'
        "ADDPOP ROW(7) COLUMN(26)"
        "DISPLAY PANEL(&PANEL14P)"
        rc1 = rc
        "REMPOP"
        If rc1 = 0 Then tempddty = popval
        Signal temp_scr1
    End
    If template = '*' Then Do
        template =
        x = R0listm(table,tempsdef,'$TTY','ND')
        x = R0listm(table,templib,'$TTY',,'EXIST')
        If Datatype(x) = 'CHAR' & x /= '?' Then Call pop_from_member
        Signal temp_scr1
    End
    If Index(resename,' 'template' ') > 0 Then Do
        gc009 = '"'template'" reserved name. Please choose another.'
        "SETMSG MSG(GC009)"
        csr1 = 'TEMPLATE'
        Signal temp_scr1
    End
    If tempunit = '?' Then Do
        tempunit = R0edtl(,12,11)
        Signal temp_scr1
    End
    If Wordpos(tempunit,dasdlist tapelist)=0 Then Do
        gc009 = tempunit 'unit name not valid. Valid names are:',
        'DASD >' dasdlist' <, Tape >' Space(tapelist)' <.',
        'Hit [ENTER] with value as "?" to get a selection list.'
        "SETMSG MSG(GC009)"
        csr1 = 'TEMPUNIT'
        tempunit = '?'
        Signal temp_scr1
    End
    If Wordpos(tempunit,tapelist)>0 Then usetape='Y';Else usetape='N'
    If usetape = 'Y' Then,
        If Sysdsn("'"tempdcb"'") /= 'OK' Then Do
            gc009 = "'"tempdcb"'" Sysdsn("'"tempdcb"'")
            "SETMSG MSG(GC009)"
            csr1 = 'TEMPDCB'
            Signal temp_scr1
        End

    If tempact /= '' Then Do
        If Sysdsn("'"templib"'") /= 'OK' Then Do
            Address TSO "ALLOC DA('"templib"') TRACKS NEW CATALOG",
                "RECFM(F B) LRECL(80) BLKSIZE(0) SPACE(45,15)",
                "DIR(20) UNIT(SYSALLDA)"
            Address TSO "FREE  DA('"templib"')"
        End
    End

/*--------------------------------------------------------------------*/
/*  Build member contents                                             */
/*--------------------------------------------------------------------*/
    i = 0
    Drop linet.
    x = xlt('  TEMPLATE' template       )
    x = xlt('           DSN('tempdsn')' )
    x = xlt('           DISP ('tempdis1','tempdis2','tempdis3')' )
    x = xlt('           UNIT' tempunit  )
    If usetape = 'N' Then,
        x = xlt('           SPACE ('tempspa1','tempspa2')' tempspty  )
    Else Do
        x = xlt('           STACK' tempstck   )
        x = xlt('           VOLCNT' tempvcnt  )
        x = xlt('           TRTCH ' temptrtc  )
        x = xlt('           MODELDCB' tempdcb )
    End
    linet.0  = i

/*--------------------------------------------------------------------*/
/*  ACtion member update options                                      */
/*--------------------------------------------------------------------*/
    edit  =
    membu =
    Select
        When tempact = 'C' Then Do
            dd = 'UL'Time('s')
            Address TSO "ALLOC F("dd") DA('"templib"("template")')",
                "SHR REU"
            Address TSO "EXECIO * DISKW "dd" (STEM linet. FINIS"
            Address TSO "FREE  F("dd")"
            x = R0stats(templib"("template")")
            gc009 = 'Member "'template'" updated.'
            "SETMSG MSG(GC009)"
            edit  = '/'
            membu = '/'
        End
/*   No appends
        When tempact = 'A' Then Do
            dd = 'UL'Time('s')
            Drop line.
            Address TSO "ALLOC F("dd") DA('"templib"("template")')",
                "SHR REU"
            If Sysdsn("'"templib"("template"'") /= 'OK' Then Do
                line.1 = '  LISTDEF' template
                line.0 = 1
            End
            Else Address TSO "EXECIO * DISKR "dd" (STEM line. FINIS)"
            Address TSO "EXECIO * DISKW "dd" (STEM line. OPEN)"
            Address TSO "EXECIO * DISKW "dd" (STEM linet. FINIS"
            Address TSO "FREE  F("dd")"
            x = R0stats(templib"("template")")
            gc009 = 'Details appended to existin member "'template'".'
            edit  = '/'
            membu = '/'
        End
*/
        Otherwise NOP
    End
    tempact =

/*--------------------------------------------------------------------*/
/*  If a new template has been created, update the $TTY member with   */
/*  the new template type description. The 3rd. non blank parameter   */
/*  to "list_members" indicates return of table without displaying.   */
/*--------------------------------------------------------------------*/
    If membu = '/' Then Do
        x = R0listm(table,templib,'$TTY','NO-Display')
        member = template
        "TBSCAN &TABLE ARGLIST(MEMBER)"
        tty = tempddty
        "TBMOD &TABLE"
        Address TSO "ALLOC F(ISPFILE) DA('"templib"') SHR REU"
        "FTOPEN"
        "FTINCL  R014S"
        "FTCLOSE NAME($TTY)"
        Address TSO "FREE  F(ISPFILE)"
        "TBEND &TABLE"
    End
    If edit = '/' Then Do
        "EDIT DATASET('&templib(&TEMPLATE)')"
        "SETMSG MSG(GC009)"
        edit =
        Signal temp_scr1
    End

    Return 0

/*--------------------------------------------------------------------*/
/* Populate fields from member selection                              */
/*--------------------------------------------------------------------*/
pop_from_member:
    Parse VAR x template tempddty
    If Sysdsn("'"templib"("template")'") = 'OK' Then,
        Address TSO "ALLOC F("dd") DA('"templib"("template")')  SHR REU"
    Else,
        Address TSO "ALLOC F("dd") DA('"tempsdef"("template")')  SHR REU"
    Address TSO "EXECIO * DISKR "dd" (STEM line. FINIS"
    Address TSO "FREE  F("dd")"
    string =
    Do j=1 To line.0
        string = string Strip(line.j)
    End
    Parse VAR string 'DSN(' tempdsn ')'
    Parse VAR string 'DISP (' tempdis1 ',' tempdis2 ',' tempdis3 ')'
    Parse VAR string 'UNIT' tempunit 'STACK' tempstck .
    If Wordpos(tempunit,tapelist)>0 Then usetape='Y';Else usetape='N'
    If usetape = 'N' Then Do
        Parse VAR string 'SPACE ('tempspa1 ',' tempspa2 ')' tempspty .
    End
    Parse VAR string 'VOLCNT' tempvcnt .
    Parse VAR string 'TRTCH ' temptrtc .
    Parse VAR string 'MODELDCB ' tempdcb .

    Return 0

/*--------------------------------------------------------------------*/
/* Build template stem variable                                       */
/*--------------------------------------------------------------------*/
xlt: i=i+1;linet.i = Arg(1);Return 0
