*
**       TITLE:    TSO/CICS CROSS-MEMORY MODULE
**       SYSTEM:   ISPF/MONITOR 1.0.0
**       MODULE:   CICSXEST
**       PROGRAM:  CICSXMEM
**       FUNCTION: TO INTERCEPT ANY ABENDS THAT MAY BE ENCOUNTERED WHEN
**                 TRYING TO ACCESS THE CICS ADDRESS SPACE THRU CROSS-
**                 MEMORY.
**                 SET UP BY ISSUING THE "ESTAE" MACRO IMMEDIATELY
**                 BEFORE ENTERING KEY ZERO AND CHANGING AUTHORISATION
**                 INDEX.
**                 TURNED OFF IMMEDIATELY AFTER DATA HAS BEEN MOVED
**                 AND RETURNING TO PROBLEM STATE SO THAT NORMAL
**                 PROGRAM LOGIC BUGS ARE NOT INTERCEPTED.
**
**                 THE MAIN ABENDS THAT THIS MODULE INTERCEPS ARE:
**                    0C4 - ADDRESS SPACE NOT AVAILABLE TO THE REGION
**                          BEING MONITORED
**                    ??? - THE ABEND CODE FOR AN ADDRESS SPACE BEING
**                          UNAVAILABLE DUE TO BEING SWAPPED OUT.
**                 THE MAIN FUNCTION IS TO INTERCEPT THE SWAPPED OUT
**                 CONDITION, ISSUE A "WAIT" (STIMER) AND TRY AGAIN AT
**                 A LATER INTERVAL, HOPING CICS HAS FORCED A SWAP IN.
**
**       AUTHOR:   A. KARA
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
CICSXEST CSECT
*        PRINT NOGEN
         LR    R2,R15                   R1 SET AS BASE
         USING CICSXEST,R2              BASE REGISTER
         USING COMMONA,R10              ADDRESABILITY TO COMMON AREA
START    DS    0H
         LM    R10,R13,12(R15)          RESTORE REGISTERS FROM "BASES1"
         B     MOVEERR                  BYPASS R10 - R13 SAVE AREA
BASES#1  DS    4F
*---------------------------------------------------------------------*
MOVEERR  DS    0H
         STM   R0,R13,BASES#2           STORE REGISTERS INTO "BASES2"
*---------------------------------------------------------------------*
*                                                                     *
*        CONTROL GETS HERE IF THE AN ABEND OCCURED DURING A MOVE      *
*        FROM SECONDARY TO PRIMARY. USUALLY CAUSED BY AN ADDRESS      *
*        EXCEPTION ERROR.                                             *
*                                                                     *
*---------------------------------------------------------------------*
         CL    R0,=F'12'                  Q. SDWA CREATED BY RTM2
         BE    MESTAER2                      N. DO NOT RETRY
*---------------------------------------------------------------------*
* SDWA OK.
*---------------------------------------------------------------------*
         LR    R9,R1
         USING SDWA,R9                    SDWA MAPPING
         TM    SDWAERRD,SDWACLUP          Q. IS RETRY POSSIBLE
         BNZ   NORETRY2                      N. DO NOT RETRY
*        BNZ   NORETRY1                      N. DO NOT RETRY
*---------------------------------------------------------------------*
*                                                                     *
*        DECIDE WHETHER OR NOT WE CAN RETRY. RETRY IS ONLY ALLOWED    *
*        FOR 0CX SYSTEM ABENDS.                                       *
*                                                                     *
*---------------------------------------------------------------------*
         L     R3,SDWAABCC                LOAD USER/SYSTEM ABEND CODE
         SRL   R3,12                      MOVE OUT USER CODE.
         STCM  R3,3,SYSRCODE              EXTRACT SYSTEM RETURN CODE.
         NC    SYSRCODE(2),=X'0FFF'       ISOLATE RETURN CODE.
         CLI   SYSRCODE,X'00'             CHECK FOR SYSTEM
         BNE   NORETRY1                      ABEND 0CX.
         TM    SYSRCODE+1,X'C0'                 AND IF NO =
         BNO   NORETRY1                            NO RETRY
         B     CONT#10                    BYPASS
NORETRY1 DS    0H
         XC    RETRY,RETRY                CANCEL NO OF RETRIES LEFT
         B     NORETRY2                  <=======
CONT#10  DS    0H
*---------------------------------------------------------------------*
*   PERFORM A DUMMY RETRY. USED TO CLEAR WORK AREAS BEFORE PHYSICAL   *
*   RETRY.                                                            *
*---------------------------------------------------------------------*
         LA    R0,MESTAER
         LA    R15,4
         CLC   TARGETX(6),=C'DUMPIT'     Q. DUMP REQUESTED
         BE    DUMPIT1                      N. GO ISSUE DUMP MACRO
         SETRP FRESDWA=YES,RC=4,RETADDR=MESTAER,DUMP=NO
         B     RETURN1                   BUPASS DUMP RETRY
DUMPIT1  DS    0H
         SETRP FRESDWA=YES,RC=4,RETADDR=MESTAER,DUMP=YES
RETURN1  DS    0H
         BR    R14                       RETURN
NORETRY2 DS    0H
         CLC   TARGETX(6),=C'DUMPIT'     Q. DUMP REQUESTED
         BE    DUMPIT2                      N. GO ISSUE DUMP MACRO
         SETRP WKAREA=(R9),RC=0,DUMP=NO
         B     RETURN2                   BUPASS DUMP RETRY
DUMPIT2  DS    0H
         SETRP WKAREA=(R9),RC=0,DUMP=YES
RETURN2  DS    0H
         LA    R15,MESTAER               ADDRESABILITY BY R15
MESTAER  DS    0F
         LM    R0,R13,8(R15)             RESTORE REGISTERS
         B     MESTAER2
BASES#2  DS    14F
MESTAER2 DS    0H
*---------------------------------------------------------------------*
         MODESET KEY=ZERO               SUPERVISOR STATE
         XR    R1,R1                    CLEAR REGISTER
         ICM   R1,B'0011',PRIMASID      GET PRIMARY ASID
         SSAR  R1                       SET SECONDARY BACK TO PRIMARY
         L     R0,PRIMAX                GET PRIMARY AX
         AXSET AX=(0)
         MODESET KEY=NZERO              PROBLEM STATE
         STAX  DEFER=NO                 TURN ATTENTION INTERRUPT ON
*---------------------------------------------------------------------*
         CLC   RETRY(2),=H'0'           Q. HAD ALL RETRIES BEEN MADE
         BNH   THATSIT                     Y. SIGNAL ERROR
         ESTAE 0                        TURN ESTAE OFF (RETRY ON AGAIN)
         LH    R1,RETRY                    N. DECREMENT RETRY
         BCTR  R1,0                           BY 1
         STH   R1,RETRY                       AND SAVE
         STIMER WAIT,DINTVL=WTIME       WAIT 5/100 OF A SEC
         L     R1,RETRYADR              LOAD RETRY ADDRESS
         BR    R1                       BRANCH TO RETRY ADDRESS
THATSIT  DS    0H
         MVI   RCODE,C'8'               SET ERROR RETURN CODE
RETMAIN1 DS    0H
         L     R1,RETNADRS              LOAD RETURN ADDRESS
         BR    R1                       BRANCH TO RETURN ADDRESS
*=====================================================================*
*---------------------------------------------------------------------*
         LTORG
*---------------------------------------------------------------------*
WTIME    DS    0D
         DC    C'00000005'             WAIT TIME INTERVAL 1/500 SEC.
SYSRCODE DS    F
COMMONA  DSECT
         COPY CICSXCAR
         PUSH PRINT
         PRINT NOGEN
*
         IHASDWA DSECT=YES          ENTRY : SDWA
*
         POP PRINT
         END
