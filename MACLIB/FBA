         MACRO
&NAME    FBA   &SBA,&ADR,&LIST=YES,&HELP=NO
         PUSH  PRINT
         AIF   ('&LIST'(1,1) NE 'N').A$XX
         PRINT NOGEN
.A$XX    ANOP
         AIF   ('&HELP'(1,1) EQ 'Y').A$HELP
*---------------------------------------------------------------------*
* For a more comprehensive description of the 'FBA' parameter         *
* and use pass parameter 'HELP=Yes'.                                  *
*---------------------------------------------------------------------*
         AGO .A$HELPE
.A$HELP  ANOP
*---------------------------------------------------------------------*
* Find Buffer Address. Returns the row/col as two two byte variables  *
* from a three byte "SBA" address variable.                           *
*                                                                     *
*   Parameters:                                                       *
*       1. 3270 buffer address where the first two bytes are:         *
*          b. "row" = X'rr'                                           *
*          c. "col" = X'cc'                                           *
*          This adrees may be passed in a register                    *
*       2. Return address of variable where the first two halfwords:  *
*          a. "row" = X'00rr'                                         *
*          b. "col" = X'00cc'                                         *
*          If this parameter is missing, the "row" and "col" values   *
*          will be returned in registers R0 and R1 respectively.      *
*          this adrees may be passed in a register                    *
*       3. LIST=Yes/No, generate macro expansion statements.          *
*       4. HELP=Yes/No, generate help details.                        *
*                                                                     *
*   Processing logic:                                                 *
*       The 6 low order bits of the two bytes are joined to provide   *
*       a 12-bit address. This address is divided by the col length   *
*       to give a relative (to 0) row and col address. 1 is added to  *
*       each to give actual value.                                    *
*                                                                     *
*---------------------------------------------------------------------*
.A$HELPE ANOP
         AIF   (T'&SBA EQ 'O').E1
         AIF   (T'&NAME EQ 'O').A$00
&NAME    DS    0H
.A$00    ANOP
         LCLC  &VTYPE,&#SBA1,&#SBA2,&#ADR1,&#ADR2
         LCLB  &FBAFST1
&FBANM   SETC  'FBA'.'&SYSNDX'         SET "INDEX"
         AIF   ('&SBA'(1,1) EQ '(').A$01
&#SBA1   SETC  '&SBA'
&#SBA2   SETC  '&SBA+1'
         AGO   .A$02
.A$01    ANOP
&#SBA1   SETC  '0(&SBA(1))'
&#SBA2   SETC  '1(&SBA(1))'
.A$02    ANOP
         AIF   (T'&ADR EQ 'O').A$04
         AIF   ('&ADR'(1,1) EQ '(').A$03
&#ADR1   SETC  '&ADR'
&#ADR2   SETC  '&ADR+2'
         AGO   .A$04
.A$03    ANOP
&#ADR1   SETC  '0(&ADR(1))'
&#ADR2   SETC  '2(&ADR(1))'
.A$04    ANOP
.*--------------------------------------------------------------------*
         XR    R14,R14           CLEAR WORK REG
         XR    R15,R15           CLEAR WORK REG
         AIF   ('&SBA'(1,4) EQ '(R14').A$06
         AIF   ('&SBA'(1,3) EQ '(14').A$06
.A$05    ANOP
         IC    R14,&#SBA1        GET FIRST BYTE OF CSR ADDRESS
         IC    R15,&#SBA2        GET SECOND BYTE OF CSR ADDRESS
         AGO   .A$07
.A$06    ANOP
         IC    R15,&#SBA2        GET SECOND BYTE OF CSR ADDRESS
         IC    R14,&#SBA1        GET FIRST BYTE OF CSR ADDRESS
.A$07    ANOP
         SLL   R14,26            CHOP OFF TOP 26 BITS
         SRL   R14,26            LEAVE ONLY LOW SIX BITS
         SLL   R15,26            CHOP OFF TOP 26 BITS
         SLDL  R14,6             PUT LOW SIX BITS OF EACH BYTE TOGETHER
         SRDL  R14,32            SET UP FOR DIVIDE
         LA    R1,80             SET THE DIVISOR
         D     R14,=F'80'        DIVIDE CSR POSITION BY LINE LENGTH
         LA    R14,1(R14)        MAKE COL REL TO 1 NOT ZERO
         LA    R15,1(R15)        MAKE ROW REL TO 1 NOT ZERO
         AIF   (T'&ADR EQ 'O').A$88
         STH   R15,&#ADR1        STORE ROW POINTER
         STH   R14,&#ADR2        STORE COLUMN POINTER
         AGO   .MEXIT
.A$88    ANOP
         LR    R0,R15            RETURN ROW IN R0
         LR    R1,R14            RETURN COL IN R1
.*--------------------------------------------------------------------*
.MEXIT   ANOP
         POP   PRINT
         MEXIT
.E1      MNOTE 8,'"FBA" REQUIRES A SOURCE ADDRESS.'
         MEND
