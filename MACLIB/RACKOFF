         MACRO                                                          RAC00010
&NAME    RACKOFF &RC=0,&LIST=NO,&R1=,&HELP=NO                           RAC00020
         AIF   ('&HELP'(1,1) EQ 'Y').A$HELP
*---------------------------------------------------------------------*
* For a more comprehensive description of the 'RACKOFF' parameter     *
* and it's use, pass parameter 'HELP=Yes'.                            *
*---------------------------------------------------------------------*
         AGO .A$HELPE
.A$HELP  ANOP
*---------------------------------------------------------------------*
* Parameters:                                                         *
*                                                                     *
*        RC=n       - Numeric return code (default = 0)               *
*                             - or -                                  *
*                     RC=(R15) if R15 contains the return code        *
*        LIST=Y/N   - Generate code from macro expansion (def = NO)   *
*        HELP=Y/N   - Display this help box (def = Yes)               *
*        R1=PASS    - 'PASS' infers that R1 contains return parameter *
*                     value to the caller and is to remain as is. Any *
*                     other value will include R1 in the register     *
*                     restoration command 'LM  R14,R12,....'          *
*---------------------------------------------------------------------*
.A$HELPE ANOP
         PUSH  PRINT
         AIF   ('&LIST'(1,1) NE 'N').A$XX
         PRINT NOGEN
.A$XX    ANOP
         AIF   (T'&NAME EQ 'O').NONAME
&NAME    DS    0H                                                       RAC00020
.NONAME  ANOP
         GBLC  &R,&GETMADR,&GETMADL,&SAVREGS
&KO1STR  SETB 0                             TURN 1ST TIME THRU OFF
         AIF   (T'&GETMADL EQ 'O').A$10     NON-R BYPASS
         AIF   (T'&R1 EQ 'O').A$00          DO NOT PASS R1
         AIF   ('&R1' NE 'PASS').A$00       IF R1¬=PASS DO NOT PASS R1
         LR    &R.3,&R.1                    SAVE REGISTER 1 IN CASE
.A$00    ANOP
         LR    &R.1,&R.13                   LOAD GETMAINED AREA ADDRESS
         LR    &R.2,&R.15                   SAVE REGISTER 15 IN CASE
.A$10    ANOP
         L     &R.13,4(&R.13)               LOAD CALLERS SAVEAREA @     RAC00040
         AIF   (T'&GETMADL EQ 'O').A$20     NON-R BYPASS
*        FREEMAIN R,LV=&GETMADL,A=(1)
         FREEMAIN R,LV=&GETMADL,A=(1)
.A$20    ANOP
         AIF   (T'&R1 EQ 'O').A$21          DO NOT PASS R1
         AIF   ('&R1' NE 'PASS').A$21       IF R1¬=PASS DO NOT PASS R1
         LR    &R.1,&R.3                    RESTORE R1
.A$21    ANOP
         AIF   ('&RC' EQ '(R15)').SPEC      R15 CONTAINS RC             RAC00050
         AIF   ('&RC' EQ '(15)').SPEC R15 CONTAINS RC                   RAC00060
         AIF   (T'&R1 EQ 'O').A$22          DO NOT PASS R1
         AIF   ('&R1' NE 'PASS').A$22       IF R1¬=PASS DO NOT PASS R1
         LM    &R.14,&R.0,12(&R.13)         RESTORE REGISTERS 14-0      RAC00070
*                                           LEAVE R1 AS IS
         LM    &R.2,&R.12,28(&R.13)         RESTORE REGISTERS 2-12      RAC00070
         AGO   .A$23                                                    RAC00090
.A$22    ANOP
         LM    &R.14,&R.12,12(&R.13)        RESTORE REGISTERS 14-12     RAC00070
.A$23    ANOP
         LA    &R.15,&RC                    SET RETURN CODE             RAC00080
         AGO   .RET1                                                    RAC00090
.SPEC    ANOP                                                           RAC00100
         AIF   (T'&GETMADL EQ 'O').A$30     NON-R BYPASS
         LR    &R.15,&R.2                   RESTORE R15 FROM ABOVE SAVE RAC00100
.A$30    ANOP
         L     &R.14,12(&R.13)              RESTORE R14                 RAC00100
         AIF   (T'&R1 EQ 'O').A$32          DO NOT PASS R1
         AIF   ('&R1' NE 'PASS').A$32       IF R1¬=PASS DO NOT PASS R1
         L     &R.0,20(&R.13)               RESTORE REGISTER 0          RAC00110
*                                           LEAVE R1 AS IS
         LM    &R.2,&R.12,28(&R.13)         RESTORE REGISTERS 2-12      RAC00110
         AGO   .RET1                                                    RAC00090
.A$32    ANOP
         LM    &R.0,&R.12,20(&R.13)         RESTORE REGISTERS 0-12      RAC00110
.RET1    ANOP                                                           RAC00120
.*--------------------------------------------------------------------*
.* The next line does horrible things with 31 bit addressing.         *
.*       MVI   12(&R.13),X'FF'              SET TRACE BITS ON           RAC00120
.*--------------------------------------------------------------------*
         BR    &R.14                        RETURN                      RAC00130
         POP   PRINT
*---------------------------------------------------------------------*
         MEXIT
.*--------------------------------------------------------------------*
.E1      POP   PRINT
         MNOTE 8,'MACRO KICKOFF MUST BE USED WITH THIS MACRO.'
         MEXIT
.*--------------------------------------------------------------------*
         MEND                                                           KIC00710
