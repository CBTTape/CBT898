         MACRO
&NAME    SBA   &OUT,&ROW,&COL,&MF=,&LIST=YES,&HELP=NO
         PUSH  PRINT
         AIF   ('&LIST'(1,1) NE 'N').A$XX
         PRINT NOGEN
.A$XX    ANOP
         AIF   ('&HELP'(1,1) EQ 'Y').A$HELP
*---------------------------------------------------------------------*
* For a more comprehensive description of the 'SBA' parameter         *
* and use pass parameter 'HELP=Yes'.                                  *
*---------------------------------------------------------------------*
         AGO .A$HELPE
.A$HELP  ANOP
*---------------------------------------------------------------------*
* Macro to set the first 3 bytes of a variable to "SBA" and the HEX   *
* address of row and column from the decimal row/col values.          *
*                                                                     *
* Returns X'11RRCC' where x'RR' x'CC' are the screen addresses.       *
*                                                                     *
*   Parameters:                                                       *
*     Format (A) -                                                    *
*       1. Destination address                                        *
*       2. Source parameter:                                          *
*          a. Format 1:                                               *
*              i) col number (digits rr)                              *
*             ii) row number (digits cc)                              *
*          b. format 2:                                               *
*              i) variable name where the row is contained in the     *
*                 first half-word and the col in the second           *
*                 (x'00rr00cc'). may use register for addressing      *
*       3. Col number                                                 *
*       4. MF=L/E for re-entrant programs.                            *
*       5. LIST=..  Generate macro statements (Yes/No, YES the        *
*                   default).                                         *
*       6. HELP=..  Generate this help detail (Yes/No, YES the        *
*                   default).                                         *
*                                                                     *
*     Format (b) - Ascertained from missing parameter # 3.            *
*       1. Destination variable.                                      *
*       2. Source variable with 2 contiguous halfwords containing     *
*          row number and column number.                              *
*       3. MF=L/E for re-entrant programs.                            *
*       4. LIST=..  Generate macro statements (Yes/No, YES the        *
*                   default).                                         *
*       5. HELP=..  Generate this help detail (Yes/No, YES the        *
*                   default).                                         *
*                                                                     *
* NOTE:                                                               *
*       For re-entrant programs, MF=L, only the 'MF' parameter is     *
*       required.                                                     *
*                                                                     *
*---------------------------------------------------------------------*
.A$HELPE ANOP
&NAME    DS    0H
         GBLC  &SBANAME
         GBLB  &SBAFST1,&SBAFST2
         LCLC  &#OUT,&#ROW
         LCLC  &TRDATA,&TRROW,&TRCOL,&TRBAL,&TRBYPAS
.*--------------------------------------------------------------------*
         GBLC  &REGSAVR,&REGSMCR
         GBLB  &REGSFLG,&REGDFLG
         AIF   (&REGSFLG).A$RS
&REGSAVR SETC  'GB'.'&SYSNDX'.'#'
&REGSMCR SETC  'SBA'
&REGSFLG SETB  1
.A$RS    ANOP
.*--------------------------------------------------------------------*
         AIF   (&SBAFST1).A$00
&SBANAME SETC  'SBA'.'&SYSNDX'
&SBAFST1 SETB  1
.*--------------------------------------------------------------------*
.A$00    ANOP
         AIF   ('&MF' EQ 'L').A$04
         AIF   (T'&OUT EQ 'O').E1
         AIF   (T'&ROW EQ 'O').E2
         AIF   ('&OUT'(1,1) EQ '(').A$01
&#OUT1   SETC  '&OUT'
         AGO   .A$02
.A$01    ANOP
&#OUT1   SETC  '0(&OUT(1))'
.A$02    ANOP
         AIF   (T'&ROW EQ 'O').A$04
         AIF   ('&ROW'(1,1) EQ '(').A$03
&#ROW1   SETC  '&ROW'
&#ROW2   SETC  '&ROW+2'
         AGO   .A$04
.A$03    ANOP
&#ROW1   SETC  '0(&ROW(1))'
&#ROW2   SETC  '2(&ROW(1))'
.A$04    ANOP
.*--------------------------------------------------------------------*
&TRDATA  SETC  '&SBANAME'.'1'
&TRROW   SETC  '&SBANAME'.'2'
&TRCOL   SETC  '&SBANAME'.'3'
&TRBAL   SETC  '&SBANAME'.'4'
&TRBYPAS SETC  '&SBANAME'.'5'
         AIF   ('&MF' EQ 'L').RENT2
         AIF   (&SBAFST2).A$99
&SBAFST2 SETB  1
         B     &TRBYPAS
&TRDATA  DC    X'40C1C2C3C4C5C6C7C8C94A4B4C4D4E4F'  1 TO 16
         DC    X'50D1D2D3D4D5D6D7D8D95A5B5C5D5E5F' 17 TO 32
         DC    X'6061E2E3E4E5E6E7E8E96A6B6C6D6E6F' 33 TO 48
         DC    X'F0F1F2F3F4F5F6F7F8F97A7B7C7D7E7F' 49 TO 64
         AIF   ('&MF' EQ 'E').RENT3
.*--------------------------------------------------------------------*
.*  RE-ENTRANT FORM                                                   *
.*--------------------------------------------------------------------*
.RENT2   ANOP
.*--------------------------------------------------------------------*
.*    IF GLOBAL REGISTER SAVE AREA DEFINED, BYPASS                    *
.*--------------------------------------------------------------------*
         AIF   (&REGDFLG).A$RD
&REGDFLG SETB  1
&REGSAVR DS    16F                     REGISTER SAVE AREA
.A$RD    ANOP
.*--------------------------------------------------------------------*
&TRROW   DS    H
&TRCOL   DS    H
         AIF   ('&MF' EQ 'L').MEND1
.RENT3   ANOP
&TRBAL   DS    0H
         LH    R3,&TRROW                LOAD R3 WITH ROW #
         BCTR  R3,0                     DECREMENT ROW # BY 1
         LH    R4,&TRCOL                LOAD R4 WITH COLUMN #
         BCTR  R4,0                     DECREMENT COLUMN # BY 1
         MH    R3,=H'80'                MULTIPLY ROWS BY COLUMN LIMIT
         AR    R3,R4                    RESULT IN R3
         LH    R5,=H'64'                LOAD TABLE LENGTH
         XR    R2,R2                    CLEAR R2
         DR    R2,R5                    DIVIDE RELATIVE DISP BY 64
         LA    R5,&TRDATA               START OF TABLE
         AR    R5,R3                    R3 ROW DISPALCEMENT IN TABLE
         LA    R6,&TRDATA
         AR    R6,R2                    R2 COL DIPLACEMENT IN TABLE
         BR    R14                      RETURN
&TRBYPAS DS    0H
.A$99    ANOP
         STM   R14,R12,&REGSAVR         SAVE REGISTERS
         AIF   (T'&COL EQ 'O').VART1    SUPPLIED 3RD. PARAMETER
         MVC   &TRROW.(2),=H'&ROW'      STORE ROW POINTER
         MVC   &TRCOL.(2),=H'&COL'      STORE COLUMN POINTER
         AGO   .CONT1
.VART1   ANOP                           MISSING 3RD PARM - VAR ADDR
         MVC   &TRROW.(2),&#ROW1        STORE ROW POINTER
         MVC   &TRCOL.(2),&#ROW2        STORE COLUMN POINTER
.CONT1   ANOP
         BAL   R14,&TRBAL               BRANCH AND LINK TO ROUTINE
         MVC   &OUT.(1),0(R5)           SET ROW ADDRESS
         MVC   &OUT.+1(1),0(R6)         SET COLUMN ADDRESS
         LM    R14,R12,&REGSAVR         RESTORE REGISTERS
         AGO   .MEND1
.*--------------------------------------------------------------------*
.E1      MNOTE 12,'SBA REQUIRES AN OUT DATASET'
         AGO   .MEND1
.E2      MNOTE 12,'SBA REQUIRES A LINE NUMBER'
         AGO   .MEND1
.E3      MNOTE 12,'SBA REQUIRES A COLUMN NUMBER'
         AGO   .MEND1
.E4      MNOTE 12,'SBA REQUIRES LINE IN RANGE 1 TO 24'
         AGO   .MEND1
.E5      MNOTE 12,'SBA REQUIRES COLUMN RANGE 1 TO 80'
         AGO   .MEND1
.*--------------------------------------------------------------------*
.MEND1   ANOP
         POP PRINT
         MEXIT
         MEND
